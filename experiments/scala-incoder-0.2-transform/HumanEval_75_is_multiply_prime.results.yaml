language: scala
name: HumanEval_75_is_multiply_prime
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isMultiplyPrime = a <= primesCount\n\
    \        primes.takeWhile(x => x <= a).forall(x => a % x == 0)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp250etvx6.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794282
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa8sm2bkj.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p != 0).forall(p => a % p == 0) && isPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo8b4ud_a.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesSet = primes.toSet\n        val isPrime = primes.forall(x => a % x ==\
    \ 0)\n        val isMultiplyPrime = primes.forall(x => a % x == 0 && isPrime)\n\
    \        isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1s3hw5_f.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr57yukcb.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount\
    \ = primes.size\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimeCount = isPrime.size\n        val isPrimeSum = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isPrimeSumCount = isPrimeSum.size\n      \
    \  val isPrimeSumSum = mutable.ArrayBuffer(false, false, false, false)\n     \
    \   val isPrimeSumSumCount = isPrimeSumSum.size\n        val isPrimeSumSumSum\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isPrimeSumSumSumCount\
    \ = isPrimeSumSumSum.size\n        val isPrimeSumSumSumSum = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isPrimeSumSumSumSumCount = isPrimeSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSum = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimeSumSumSumSumSumCount = isPrimeSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSum = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimeSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSum = mutable.ArrayBuffer(false, false,\
    \ false, false)\n        val isPrimeSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSum = isPrimeSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSum = isPrimeSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSumSum = isPrimeSumSumSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpau5a1a8s.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpau5a1a8s.scala:32:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeSumSumSumSumSumSumSumSumSum\e[0m = isPrimeSumSumSumSumSumSumSumSumSumSum.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeSumSumSumSumSumSumSumSumSum is already defined as \e\
    [33mvalue\e[0m \e[35misPrimeSumSumSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpau5a1a8s.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpau5a1a8s.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpau5a1a8s.scala:16:25 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeSum\e[0m = mutable.ArrayBuffer(\e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e\
    [0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-exp"
  stdout: ''
  timestamp: 1659794283
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primesCount\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrime = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimePrimeCount = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr4mecso5.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpr4mecso5.scala:33:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m\
    \ \e[36misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount is\
    \ already defined as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpr4mecso5.scala:12:21 ------------------------\e[0m\e[0m\n\
    \e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpr4mecso5.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpr4mecso5.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpr4me"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(x => a % x == 0)\n        val isMultiplyPrime = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime2 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime3 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime4 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime5 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime6 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime7 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime8 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime9 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime10 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime11 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime12 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime13 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime14 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime15 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime16 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime17 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime18 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime19 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime20 = primes.exists(x\
    \ => a % x == 0 && a % x == 0)\n        val isMultiplyPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7701ex4c.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7701ex4c.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp7701ex4c.scala:35:5 ---------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659794282
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Boolean]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxefzwa9a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr57yukcb.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.takeWhile(p => a % p == 0).length == primes.length\n      \
    \  val isMultiplication = isPrime && a % primes.last == 0\n        val isMultiplyPrime\
    \ = isMultiplication && isPrime\n        isMultiplyPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvhj2fw_d.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979088
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime2 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime3 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime4\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime5 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime6 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime7 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime8\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime9 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime10 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime11 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime12 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime13\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime14 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime15 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime16 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime17 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime18\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime19 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime20 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime21 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime22 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime23\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime24 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime25 = primes.\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4wdridk5.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp4wdridk5.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e[31m2\e\
    [0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e\
    [31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e\
    [0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m,\
    \ \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e\
    [31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4wdridk5.scala:39:5\
    \ ---------------------\e[0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime27 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime28\
    \ = mut\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpuiyam17s.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuiyam17s.scala:16:31 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Fo"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9h8m75y5.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9h8m75y5.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp9h8m75y5.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m "
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = a % primes.head == 0\n    \
    \    val isMultiplyPrime = primes.takeWhile(p => p < a).forall(p => a % p == 0)\n\
    \        primes.takeWhile(p => p < a).forall(p => a % p == 0) && isMultiplyPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoqg6t73l.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn41xx_pp.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrime = mutable.Set[Long]()\n        val\
    \ isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyljw43w5.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyljw43w5.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36misMultiplyPrimePrimePrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0misMultiplyPrimePrimePrime is already defined as \e[33mvalue\e[0m\
    \ \e[35misMultiplyPrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyljw43w5.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrime\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpyljw43w5.scala:29:12 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpyljw43w5.scala:31:12 ---------------------------\e[0m\e[0m\n\e\
    [31m31 |\e[0m        \e[33mval\e[0m \e[36misMultipl"
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn41xx_pp.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa8sm2bkj.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplication\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiply\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpv6wxe6zl.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv6wxe6zl.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv6wxe6zl.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpv6wxe6zl.scala:14:31 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplication\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv6wxe6zl.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv6wxe6zl.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m1"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmplo2sloco.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmplo2sloco.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.contains(a) && primes.forall(p => a % p == 0)\n        isPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp75kq6e0x.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmplo2sloco.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmplo2sloco.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmplo2sloco.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmplo2sloco.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9h8m75y5.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9h8m75y5.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp9h8m75y5.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m "
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpltm6d7jv.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpltm6d7jv.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesSet = primes.toSet\n        val isPrime = primes.forall(x => a % x ==\
    \ 0)\n        val isMultiplyPrime = primes.forall(x => a % x == 0 && primesSet.contains(x)\
    \ && isPrime)\n        isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptqrw3yig.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime27 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime28\
    \ = mut\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpuiyam17s.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuiyam17s.scala:16:31 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Fo"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn41xx_pp.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrime = mutable.Set[Long]()\n        val\
    \ isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvigwvbvh.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvigwvbvh.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36misMultiplyPrimePrimePrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0misMultiplyPrimePrimePrime is already defined as \e[33mvalue\e[0m\
    \ \e[35misMultiplyPrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvigwvbvh.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrime\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpvigwvbvh.scala:29:12 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvigwvbvh.scala:32:12 ---------------------------\e[0m\e[0m\n\e\
    [31m32 |\e[0m        \e[33mval\e[0m \e[36misMultipl"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p == 0).length == 1\n        primes.takeWhile(p\
    \ => a % p == 0).length == 3 && isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3_uua3wh.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrime = mutable.Set[Long]()\n        val\
    \ isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyljw43w5.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyljw43w5.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36misMultiplyPrimePrimePrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0misMultiplyPrimePrimePrime is already defined as \e[33mvalue\e[0m\
    \ \e[35misMultiplyPrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyljw43w5.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrime\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpyljw43w5.scala:29:12 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpyljw43w5.scala:31:12 ---------------------------\e[0m\e[0m\n\e\
    [31m31 |\e[0m        \e[33mval\e[0m \e[36misMultipl"
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount <= 2\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr8w47v_j.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979088
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplication\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplying\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMulti\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) ==\
    \ (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp56tzlclv.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp56tzlclv.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp56tzlclv.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp56tzlclv.scala:14:31 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplication\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp56tzlclv.scala:15:28 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplying\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp56tzlclv.scala:16:33 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.length\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjr046nwd.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjr046nwd.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjr046nwd.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count\n        val isMultiplyPrime = primes.takeWhile(p\
    \ => p < a).forall(p => a % p == 0)\n        primes.takeWhile(p => p < a).forall(p\
    \ => a % p == 0)\n        isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph7ibpdqz.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979088
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp964y7a5v.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp964y7a5v.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp964y7a5v.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime29 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime31\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime37 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime41 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime43 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime47\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime51 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime53 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime59 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime61\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime67 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime71 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime73 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime79\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime81 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime83 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime89 = mutable.ArrayBuffer.empty[Boolean]\n        val isMulti\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwwjngmqw.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwwjngmqw.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwwjngmqw.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpwwjngmqw.scala:14:30 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwwjngmqw.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpwwjngmqw.scala:16:31 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                             "
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p\
    \ == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p\
    \ => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p\
    \ == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n \
    \       primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p\
    \ == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p\
    \ => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p\
    \ == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n \
    \       primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p\
    \ == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p\
    \ => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p\
    \ == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n \
    \       primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3waj3ga6.scala:33:25 ---------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        primes.takeWhile(\n\e[31m\e[31m   |\e[0m    \
    \                     ^\e[0m\n\e[31m   |\e[0m                         expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp3waj3ga6.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e[31m2\e[0m,\
    \ \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e\
    [0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m,\
    \ \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e\
    [31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e\
    [0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m                    \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isMultiplyPrime = a % primes.exists(x\
    \ => x == a)\n        if (isMultiplyPrime) {\n            true\n        } else\
    \ {\n            false\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppa1nr3lo.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.takeWhile(p => a % p == 0).length == primes.length\n      \
    \  val isMultiplyPrime = primes.takeWhile(p => a % p == 0).forall(p => a % p ==\
    \ 0)\n        val isMultiplyPrime2 = primes.takeWhile(p => a % p == 0).forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime3 = primes.takeWhile(p => a % p ==\
    \ 0).forall(p => a % p == 0)\n        val isMultiplyPrime4 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime5 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime6 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime7 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime8 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime9 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime10 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime11 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime12 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime13 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime14 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime15 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi6up1y_i.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi6up1y_i.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpi6up1y_i.scala:29:5 ---------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(true, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpiat0wyq9.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiat0wyq9.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpiat0wyq9.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mtrue\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse"
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmplo2sloco.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmplo2sloco.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n\
    \        if (isMultiplyPrime) {\n            val lastPrime = primes.last\n   \
    \         val isPrime = primes.exists(p => a % p.equals(0))\n            if (isPrime)\
    \ {\n                val lastPrimeIndex = primes.lastIndex\n                val\
    \ lastPrimeIndex = primes.lastIndex\n                val isPrime = primes.exists(p\
    \ => a % p.equals(0))\n                if (isPrime) {\n                    val\
    \ lastPrimeIndex = primes.lastIndex\n                    val lastPrimeIndex =\
    \ primes.lastIndex\n                    val isPrime = primes.exists(p => a % p.equals(0))\n\
    \                    if (isPrime) {\n                        val lastPrimeIndex\
    \ = primes.lastIndex\n                        val lastPrimeIndex = primes.lastIndex\n\
    \                        val isPrime = primes.exists(p => a % p.equals(0))\n \
    \                       if (isPrime) {\n                            val lastPrimeIndex\
    \ = primes.lastIndex\n                            val lastPrimeIndex = primes.lastIndex\n\
    \                            val isPrime = primes.exists(p => a % p.equals(0))\n\
    \                            if (isPrime) {\n                                val\
    \ lastPrimeIndex = primes.lastIndex\n                                val lastPrimeIndex\
    \ = primes.lastIndex\n                                val isPrime = primes.exists(p\
    \ => a % p.equals(0))\n                                if (isPrime) {\n      \
    \                              val lastPrimeIndex = primes.lastIndex\n       \
    \                             val lastPrimeIndex = primes.lastIndex\n        \
    \                            val isPrime = primes.exists(p => a % p.equals(0))\n\
    \                                    if (isPrime) {\n                        \
    \                val lastPrimeIndex = primes.lastIndex\n                     \
    \                   val lastPrimeIndex = primes.lastIndex\n                  \
    \                      val isPrime = primes.exists(p => a % p.equals(0))\n   \
    \                                     if (isPrime) {\n                       \
    \                     val lastPrimeIndex = primes.lastIndex\n                \
    \                            val lastPrimeIndex = primes.lastIndex\n         \
    \                                   val isPrime = primes.exists(p => a % p.equals(0))\n\
    \                                            if (isPrime) {\n                \
    \                                val lastPrimeIndex = primes.lastIndex\n     \
    \                                           val lastPrimeIndex = primes.lastIndex\n\
    \                                                val isPrime = primes.exists(p\
    \ => a % p.equals(0))\n                                                if (isPrime)\
    \ {\n                                                    val lastPrimeIndex =\
    \ primes.lastIndex\n                                                    val lastPri\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcykl354u.scala:57:4 ----------------------------\e\
    [0m\e[0m\n\e[31m57 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcykl354u.scala:72:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m72 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpcykl354u.scala:12:21 ------------------------\e[0m\e[0m\n\
    \e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcykl354u.scala:20:20\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                \e[33mval\e\
    [0m \e[36mlastPrimeIndex\e[0m = primes.lastIndex\n\e[31m\e[31m   |\e[0m      \
    \          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mlastPrimeIndex\
    \ is already defined as \e[33mvalue\e[0m \e[35mlastPrimeIndex\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcykl354u.scala:24:24\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m                    \e\
    [33mval\e[0m \e[36mlastPrimeIndex\e[0m = primes.lastIndex\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mlastPrimeIndex is already defined as \e[33mvalue\e[0m \e[35mlastPrimeIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcykl354u.sc"
  stdout: ''
  timestamp: 1659979095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplication = a % 3 == 0\n\
    \        val isMultiplyPrime = primes.forall(p => a % p == 0)\n        val isMultiplyPrime2\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplyPrime3 = primes.forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime4 = primes.forall(p => a % p == 0)\n\
    \        val isMultiplyPrime5 = primes.forall(p => a % p == 0)\n        val isMultiplyPrime6\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplyPrime7 = primes.forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime8 = primes.forall(p => a % p == 0)\n\
    \        val isMultiplyPrime9 = primes.forall(p => a % p == 0)\n        val isMultiplyPrime10\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplyPrime11 = primes.forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime12 = primes.forall(p => a % p ==\
    \ 0)\n        val isMultiplyPrime13 = primes.forall(p => a % p == 0)\n       \
    \ val isMultiplyPrime14 = primes.forall(p => a % p == 0)\n        val isMultiplyPrime15\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplyPrime16 = primes.forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime17 = primes.forall(p => a % p ==\
    \ 0)\n        val isMultiplyPrime18 = primes.forall(p => a % p == 0)\n       \
    \ val isMultiplyPrime19 = primes.forall(p => a % p == 0)\n        val isMultiplyPrime20\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplyPrime21 = primes.forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime22 = primes.forall(\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpwoaets52.scala:36:46 ---------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime22\e[0m =\
    \ primes.forall(\n\e[31m\e[31m   |\e[0m                                      \
    \        ^\e[0m\n\e[31m   |\e[0m                                       expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpwoaets52.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e[31m2\e[0m,\
    \ \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e\
    [0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m,\
    \ \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e\
    [31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e\
    [0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m                    \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwoaets52.scala:37:5 ---------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659979098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr57yukcb.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount <= 3\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpadbvlflt.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpltm6d7jv.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpltm6d7jv.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = primes.filter(_ < a).forall(a\
    \ => a % _ == 0)\n        val isMultiplyPrime = isPrime && primes.forall(a =>\
    \ a % a == 0)\n        isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsealxk9b.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979096
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime31 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime37 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime41\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime43 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime47 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime51\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime53 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime59 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime61\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime67 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime71 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime73\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime79 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime81 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime83\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime89 = mutable.ListBuffer[Boolean]()\n\
    \        val isMulti\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpai5sab6h.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpai5sab6h.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpai5sab6h.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpai5sab6h.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpai5sab6h.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpai5sab6h.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val n = a / 3\n\
    \        for(i <- 2 to n by 2){\n            if((a % i) == 0){\n             \
    \   primes += i\n            }\n        }\n        primes.contains(a)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzzlohj70.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpzzlohj70.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpltm6d7jv.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpltm6d7jv.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val n = a\n    \
    \    for(i <- 2 to n by 2){\n            if(n%i==0){\n                primes +=\
    \ i\n            }\n        }\n        primes.contains(a) && primes.size == 3\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg0sl03d1.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpg0sl03d1.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.length\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjr046nwd.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjr046nwd.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjr046nwd.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Boolean]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxefzwa9a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9h8m75y5.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9h8m75y5.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp9h8m75y5.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m "
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime27 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime28\
    \ = mut\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpuiyam17s.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuiyam17s.scala:16:31 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Fo"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa8sm2bkj.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isMultiplyPrime = a % primes(primesCount\
    \ - 1) != 0\n        primes.clear()\n        primesCount\n        isMultiplyPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt8hn1er7.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a) \n        val isMultiplyPrime = primes.takeWhile(_\
    \ < a).forall(a % _ == 0)\n        primesCount > 0 && !isMultiplyPrime\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp1b0of1a.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9h8m75y5.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9h8m75y5.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp9h8m75y5.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m "
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        if (primesCount < 3) {\n        \
    \    return false\n        }\n        val isPrime = primes.takeWhile(_ > a).forall(a\
    \ % _ == 0)\n        return isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2o2gpzlt.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a).length\n        val isMultiplyPrime = primes.count(_\
    \ < a) == primesCount\n        isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdprplgn.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplication\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiply\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpv6wxe6zl.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv6wxe6zl.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv6wxe6zl.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpv6wxe6zl.scala:14:31 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplication\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv6wxe6zl.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv6wxe6zl.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m1"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer(false, false, false, false)\n        val \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpik7i6lc2.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpik7i6lc2.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpik7i6lc2.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpik7i6lc2.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpik7i6lc2.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e["
  stdout: ''
  timestamp: 1659979101
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = primes.takeWhile(x => a % x == 0).length\
    \ == primesCount\n        isPrime\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpowy7poef.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(a % _ == 0)\n        val isMultiplication = isPrime\
    \ && a < 100\n        isMultiplication\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphrgh530u.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = a <= 100\n        val isMultiplyPrime\
    \ = primes.exists(p => p <= a && a % p == 0)\n        if (isPrime && isMultiplyPrime)\
    \ {\n            true\n        } else {\n            false\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpukr_1iwn.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a) \n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7yyoi_z2.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n      \
    \  primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n        isPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4pznx9_v.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9h8m75y5.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9h8m75y5.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp9h8m75y5.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m "
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = primes.takeWhile(x => a % x\
    \ == 0).size == primesCount\n        isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr6qnbvz2.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.length\n        val isMultiplyPrime = a % primes(primesCount)\
    \ == 0\n        if (isMultiplyPrime) {\n            primes.takeWhile(p => a %\
    \ p != 0).forall(p => primes.takeWhile(p => a % p != 0).forall(p => a % p != 0))\n\
    \        }\n        return isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2c7og15k.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979100
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = primes.takeWhile(x => a % x\
    \ == 0).length == primesCount\n        isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp79e9jyu_.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpltm6d7jv.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpltm6d7jv.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a)\n        primesCount <= 3\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgr9d78rq.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9h8m75y5.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9h8m75y5.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp9h8m75y5.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m "
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount <= 3\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpadbvlflt.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime27 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime28\
    \ = mut\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpuiyam17s.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuiyam17s.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuiyam17s.scala:16:31 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Fo"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val n = a\n    \
    \    val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime = true\n\
    \        val isMultiplyPrime = true\n        val isMultiplyPrime2 = true\n   \
    \     val isMultiplyPrime3 = true\n        val isMultiplyPrime4 = true\n     \
    \   val isMultiplyPrime5 = true\n        val isMultiplyPrime6 = true\n       \
    \ val isMultiplyPrime7 = true\n        val isMultiplyPrime8 = true\n        val\
    \ isMultiplyPrime9 = true\n        val isMultiplyPrime10 = true\n        val isMultiplyPrime11\
    \ = true\n        val isMultiplyPrime12 = true\n        val isMultiplyPrime13\
    \ = true\n        val isMultiplyPrime14 = true\n        val isMultiplyPrime15\
    \ = true\n        val isMultiplyPrime16 = true\n        val isMultiplyPrime17\
    \ = true\n        val isMultiplyPrime18 = true\n        val isMultiplyPrime19\
    \ = true\n        val isMultiplyPrime20 = true\n        val isMultiplyPrime21\
    \ = true\n        val isMultiplyPrime22 = true\n        val isMultiplyPrime23\
    \ = true\n        val isMultiplyPrime24 = true\n        val isMultiplyPrime25\
    \ = true\n        val isMultiplyPrime26 = true\n        val isMultiplyPrime27\
    \ = true\n        val isMultiplyPrime28 = true\n        val isMultiplyPrime29\
    \ = true\n        val isMultiplyPrime30 = true\n        val isMultiplyPrime31\
    \ = true\n        val isMultiplyPrime32 = true\n        val isMultiplyPrime33\
    \ = true\n        val isMultiplyPrime34 = true\n        val isMultiplyPrime35\
    \ = true\n        val isMultiplyPrime36 = true\n        val isMultiplyPrime37\
    \ = true\n        val isMultiplyPrime38 = true\n        val isMultiplyPrime39\
    \ = true\n        val isMultiplyPrime40 = true\n        val isMultiplyPrime41\
    \ = true\n        val isMultiplyPrime42 = true\n        val isMultiplyPrime43\
    \ = true\n        val isMultiplyPrime44 = true\n        val isMultiplyPrime45\
    \ = true\n        val isMultiplyPrime46 = true\n        val isMultiplyPrime47\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp290p5m0b.scala:63:4 ----------------------------\e\
    [0m\e[0m\n\e[31m63 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp290p5m0b.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp290p5m0b.scala:14:27\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  \
    \ |\e[0m                           ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp290p5m0b.scala:63:5 ---------------------\e[0m\e[0m\n\e[31m63\
    \ |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:  \
    \  Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659979102
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer.empty[Long]\n        val primesSet\
    \ = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n        val\
    \ isPrimeSet = mutable.Set[Long]()\n        val isPrimeSet2 = mutable.Set[Long]()\n\
    \        val isPrimeSet3 = mutable.Set[Long]()\n        val isPrimeSet4 = mutable.Set[Long]()\n\
    \        val isPrimeSet5 = mutable.Set[Long]()\n        val isPrimeSet6 = mutable.Set[Long]()\n\
    \        val isPrimeSet7 = mutable.Set[Long]()\n        val isPrimeSet8 = mutable.Set[Long]()\n\
    \        val isPrimeSet9 = mutable.Set[Long]()\n        val isPrimeSet10 = mutable.Set[Long]()\n\
    \        val isPrimeSet11 = mutable.Set[Long]()\n        val isPrimeSet12 = mutable.Set[Long]()\n\
    \        val isPrimeSet13 = mutable.Set[Long]()\n        val isPrimeSet14 = mutable.Set[Long]()\n\
    \        val isPrimeSet15 = mutable.Set[Long]()\n        val isPrimeSet16 = mutable.Set[Long]()\n\
    \        val isPrimeSet17 = mutable.Set[Long]()\n        val isPrimeSet18 = mutable.Set[Long]()\n\
    \        val isPrimeSet19 = mutable.Set[Long]()\n        val isPrimeSet20 = mutable.Set[Long]()\n\
    \        val isPrimeSet21 = mutable.Set[Long]()\n        val isPrimeSet22 = mutable.Set[Long]()\n\
    \        val isPrimeSet23 = mutable.Set[Long]()\n        val isPrimeSet24 = mutable.Set[Long]()\n\
    \        val isPrimeSet25 = mutable.Set[Long]()\n        val isPrimeSet26 = mutable.Set[Long]()\n\
    \        val isPrimeSet27 = mutable.Set[Long]()\n        val isPrimeSet28 = mutable.Set[Long]()\n\
    \        val isPrimeSet29 = mutable.Set[Long]()\n        val isPrimeSet30 = mutable.Set[Long]()\n\
    \        val is\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpktf4vk5u.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpktf4vk5u.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpktf4vk5u.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpktf4vk5u.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpktf4vk5u.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpktf4vk5u.scala:16:26\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659979106
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p == 0).length == primes.length\n        primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps3wjoe9_.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979102
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p == 0).length == primes.length\n        primes.takeWhile(p\
    \ => a % p == 0).length == 3 && isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp39tqvstb.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979102
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Long]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime4 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Long]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime7 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Long]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime10 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Long]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime13 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Long]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime16 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Long]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime19 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Long]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime22 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Long]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime25 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Long]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime28 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpto671hxe.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpto671hxe.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpto671hxe.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpto671hxe.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpto671hxe.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpto671hxe.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m       "
  stdout: ''
  timestamp: 1659979106
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9h8m75y5.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9h8m75y5.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp9h8m75y5.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9h8m75y5.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m "
  stdout: ''
  timestamp: 1659979093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount <= 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfk3xzx7w.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979103
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a) \n        primesCount <= 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg0_e4d53.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979104
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Boolean]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxefzwa9a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.takeWhile(_ < a).forall(a % _ == 0)\n        primes.takeWhile(_\
    \ < a).forall(a % _ == 0) && isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyip1sm3r.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979105
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isMultiplyPrime = a % primes(primesCount\
    \ - 1) != 0\n        if (isMultiplyPrime) {\n            val isPrime = primes.exists(p\
    \ => a % p == 0)\n            if (isPrime) {\n                val isPrime2 = primes.exists(p\
    \ => a % p == 0)\n                if (isPrime2) {\n                    val isPrime3\
    \ = primes.exists(p => a % p == 0)\n                    if (isPrime3) {\n    \
    \                    val isPrime4 = primes.exists(p => a % p == 0)\n         \
    \               if (isPrime4) {\n                            val isPrime5 = primes.exists(p\
    \ => a % p == 0)\n                            if (isPrime5) {\n              \
    \                  val isPrime6 = primes.exists(p => a % p == 0)\n           \
    \                     if (isPrime6) {\n                                    val\
    \ isPrime7 = primes.exists(p => a % p == 0)\n                                \
    \    if (isPrime7) {\n                                        val isPrime8 = primes.exists(p\
    \ => a % p == 0)\n                                        if (isPrime8) {\n  \
    \                                          val isPrime9 = primes.exists(p => a\
    \ % p == 0)\n                                            if (isPrime9) {\n   \
    \                                             val isPrime10 = primes.exists(p\
    \ => a % p == 0)\n                                                if (isPrime10)\
    \ {\n                                                    val isPrime11 = primes.exists(p\
    \ => a % p == 0)\n                                                    if (isPrime11)\
    \ {\n                                                        val isPrime12 = primes.exists(p\
    \ => a % p == 0)\n                                                        if (isPrime12)\
    \ {\n                                                            val isPrime13\
    \ = primes.exists(p => a % p == 0)\n                                         \
    \                   if (isPrime13) {\n                                       \
    \                         val isPrime14 = primes.exists(p => a % p == 0)\n   \
    \                                                             if (isPrime14) {\n\
    \                                                                    val isPrime15\
    \ = primes.exists(p => a % p == 0)\n                                         \
    \                           if (isPrime15) {\n                               \
    \                                         val isPrime16 = primes.exists(p => a\
    \ % p == 0)\n                                                                \
    \        if (isPrime16) {\n                                                  \
    \          val isPrime17 = primes.exists(p => a % p == 0)\n                  \
    \                                          if (isPrime17) {\n                \
    \                                                val isPrime18 = primes.exists(p\
    \ => a \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplyvr2stj.scala:51:4 ----------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplyvr2stj.scala:66:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m66 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmplyvr2stj.scala:12:21 ------------------------\e[0m\e[0m\n\
    \e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[33m\e[33m-- Warning: /tmp/tmplyvr2stj.scala:52:4\
    \ ----------------------------------------\e[0m\e[0m\n\e[33m52 |\e[0m    \e[33mdef\e\
    [0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e[0m[\e[35mString\e[0m]) = {\n\
    \e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m    Line is indented too far to\
    \ the left, or a `}` is missing\n1 warning found\n3 errors found\n"
  stdout: ''
  timestamp: 1659979106
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr6dpx3ax.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979105
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.takeWhile(p => a % p == 0).length == 1\n        primes.takeWhile(p\
    \ => a % p == 0).length == 3 && isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnnkyquo6.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979105
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer(false, false, false, false)\n        val \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpik7i6lc2.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpik7i6lc2.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpik7i6lc2.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpik7i6lc2.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpik7i6lc2.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e["
  stdout: ''
  timestamp: 1659979101
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(_ % a == 0)\n        val isMultiplication = a % 3 ==\
    \ 0\n        isPrime && isMultiplication\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp939v9l52.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979105
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount\
    \ = primes.length\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimeCount = isPrime.length\n        val isPrimePrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isPrimePrimeCount\
    \ = isPrimePrime.length\n        val isPrimePrimePrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isPrimePrimePrimeCount = isPrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrime = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimePrimePrimePrimeCount = isPrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrime = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimePrimePrimePrimePrimeCount = isPrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrime = isPrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimeCount = isPrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = isPrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeCount = isPrimePrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = isPrimePrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeCount = isPrimePrimePrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = isPrimePrimePrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeCount = isPrimePrimePrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpeoihl3qf.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpeoihl3qf.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimePrimePrimePrimePrime\e[0m = isPrimePrimePrimePrimePrimePrimePrimePrime.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimePrimePrime\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpeoihl3qf.scala:31:12 ---------------------------\e[0m\e[0m\n\e[31m31\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimePrimeCount\e\
    [0m = isPrimePrimePrimePrimePrimePrimePrimePrime.length\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimePrimePrimeCount is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimePrimePrimeCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpeoihl3qf.scala:12:21 ------------------------\e[0m\e[0m\n\
    \e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeoihl3qf.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuf"
  stdout: ''
  timestamp: 1659979108
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7)\n        val primesCount\
    \ = primes.size\n        val isPrime = mutable.ListBuffer(false, false, false,\
    \ false)\n        val isPrimeCount = isPrime.size\n        val isMultiplyPrime\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrimeCount\
    \ = isMultiplyPrime.size\n        val isMultiplyPrimePrime = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrimePrimeCount = isMultiplyPrimePrime.size\n\
    \        val isMultiplyPrimePrimePrime = mutable.ListBuffer(false, false, false,\
    \ false)\n        val isMultiplyPrimePrimePrimeCount = isMultiplyPrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrime = mutable.ListBuffer(false, false,\
    \ false, false)\n        val isMultiplyPrimePrimePrimePrimeCount = isMultiplyPrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrime = mutable.ListBuffer(false, false,\
    \ false, false)\n        val isMultiplyPrimePrimePrimePrimePrimeCount = isMultiplyPrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpygi7c8o2.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrimePrime\e\
    [0m = isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime.size\n\e[31m\e[31m  \
    \ |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrimePrime\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpygi7c8o2.scala:31:12 ---------------------------\e[0m\e[0m\n\e[31m31\
    \ |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = isMultiplyPrimePrimePrimePrimePrimePrime\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpygi7c8o2.scala:12:21 ------------------------\e[0m\e[0m\n\
    \e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpygi7c8o2.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      "
  stdout: ''
  timestamp: 1659979107
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(a % _ == 0)\n        val isMultiplyPrime = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime2 = primes.exists(a % _ == 0)\n      \
    \  val isMultiplyPrime3 = primes.exists(a % _ == 0)\n        val isMultiplyPrime4\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime5 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime6 = primes.exists(a % _ == 0)\n      \
    \  val isMultiplyPrime7 = primes.exists(a % _ == 0)\n        val isMultiplyPrime8\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime9 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime10 = primes.exists(a % _ == 0)\n     \
    \   val isMultiplyPrime11 = primes.exists(a % _ == 0)\n        val isMultiplyPrime12\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime13 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime14 = primes.exists(a % _ == 0)\n     \
    \   val isMultiplyPrime15 = primes.exists(a % _ == 0)\n        val isMultiplyPrime16\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime17 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime18 = primes.exists(a % _ == 0)\n     \
    \   val isMultiplyPrime19 = primes.exists(a % _ == 0)\n        val isMultiplyPrime20\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime21 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime22 = primes.exists(a % _ == 0)\n     \
    \   val isMultiplyPrime23 = primes.exists(a % _ == 0)\n        val isMultiplyPrime24\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime25 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime26 = primes.exists(a % _ == 0)\n\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) ==\
    \ (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn7lnwu7m.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn7lnwu7m.scala:41:5\
    \ ---------------------\e[0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979108
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Boolean]()\n        val isMultiply\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3y5962m8.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3y5962m8.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3y5962m8.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3y5962m8.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp3y5962m8.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp3y5962m8.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                               No"
  stdout: ''
  timestamp: 1659979108
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count\n        val isMultiplyPrime = primes.takeWhile(x\
    \ => x <= a).forall(x => a % x == 0)\n        primesCount <= 3 && isMultiplyPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyv7lpia0.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979106
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Boolean]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxefzwa9a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count\n        val isPrime = primes.exists(x => a % x ==\
    \ 0)\n        val isMultiplyPrime = primes.exists(x => a % x == 0 && isPrime)\n\
    \        isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdxj37bio.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979106
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount <= 2\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ph03slc.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979105
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa8sm2bkj.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpltm6d7jv.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpltm6d7jv.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime31 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime37 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime41\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime43 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime47 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime51\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime53 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime59 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime61\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime67 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime71 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime73\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime79 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime81 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime83\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime89 = mutable.ListBuffer[Boolean]()\n\
    \        val isMulti\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpai5sab6h.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpai5sab6h.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpai5sab6h.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpai5sab6h.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpai5sab6h.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpai5sab6h.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659979099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ListBuffer(true, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer(false, false, false, false)\n        val \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp949jva4e.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp949jva4e.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp949jva4e.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer(\e[31mtrue\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp949jva4e.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp949jva4e.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[3"
  stdout: ''
  timestamp: 1659979108
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp964y7a5v.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp964y7a5v.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp964y7a5v.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpltm6d7jv.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpltm6d7jv.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpltm6d7jv.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a) \n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7yyoi_z2.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Boolean]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxefzwa9a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr57yukcb.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val n = a\n    \
    \    val isPrime = true\n        for (i <- 2 to n by 2) {\n            if (n %\
    \ i == 0) {\n                isPrime = false\n                break\n        \
    \    }\n        }\n        if (isPrime) {\n            primes += n\n        }\n\
    \        primes.forall(p => isMultiplyPrime(p))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5xz0mavk.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5xz0mavk.scala:15:23 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp5xz0mavk.scala:17:24\
    \ -----------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                isPrime\
    \ = \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Reassignment to val isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp5xz0mavk.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659979108
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount < 3 && primesCount >\
    \ 0\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplvfmo19e.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979106
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isPrimeSet2 = mutable.Set[Long]()\n        val isPrimeSet3 = mutable.Set[Long]()\n\
    \        val isPrimeSet4 = mutable.Set[Long]()\n        val isPrimeSet5 = mutable.Set[Long]()\n\
    \        val isPrimeSet6 = mutable.Set[Long]()\n        val isPrimeSet7 = mutable.Set[Long]()\n\
    \        val isPrimeSet8 = mutable.Set[Long]()\n        val isPrimeSet9 = mutable.Set[Long]()\n\
    \        val isPrimeSet10 = mutable.Set[Long]()\n        val isPrimeSet11 = mutable.Set[Long]()\n\
    \        val isPrimeSet12 = mutable.Set[Long]()\n        val isPrimeSet13 = mutable.Set[Long]()\n\
    \        val isPrimeSet14 = mutable.Set[Long]()\n        val isPrimeSet15 = mutable.Set[Long]()\n\
    \        val isPrimeSet16 = mutable.Set[Long]()\n        val isPrimeSet17 = mutable.Set[Long]()\n\
    \        val isPrimeSet18 = mutable.Set[Long]()\n        val isPrimeSet19 = mutable.Set[Long]()\n\
    \        val isPrimeSet20 = mutable.Set[Long]()\n        val isPrimeSet21 = mutable.Set[Long]()\n\
    \        val isPrimeSet22 = mutable.Set[Long]()\n        val isPrimeSet23 = mutable.Set[Long]()\n\
    \        val isPrimeSet24 = mutable.Set[Long]()\n        val isPrimeSet25 = mutable.Set[Long]()\n\
    \        val isPrimeSet26 = mutable.Set[Long]()\n        val isPrimeSet27 = mutable.Set[Long]()\n\
    \        val isPrimeSet28 = mutable.Set[Long]()\n        val isPrimeSet29 = mutable.Set[Long]()\n\
    \        val isPrimeSet30 = mutable.Set[Long]()\n        val isPri\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp21zr6nir.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp21zr6nir.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp21zr6nir.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp21zr6nir.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp21zr6nir.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp21zr6nir.scala:16:26\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation"
  stdout: ''
  timestamp: 1659979109
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.takeWhile(_ < a).forall(a % _ == 0)\n        isPrime\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2rwzky5q.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979108
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet\
    \ = primes.toSet\n        val isMultiplicationPrime = a % primes.forall(p => primesSet.contains(p))\n\
    \        isMultiplicationPrime\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6sfwytf0.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979108
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesSet = primes.toSet\n        val isPrime = primes.exists(a % _ == 0)\n\
    \        val isMultiplyPrime = primes.exists(a => primesSet.contains(a * a))\n\
    \        isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsh9ndmd.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979108
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmplo2sloco.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmplo2sloco.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmplo2sloco.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmplo2sloco.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmplo2sloco.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo2sloco.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmplo2sloco.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659979092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn41xx_pp.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphuqyk2gw.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979108

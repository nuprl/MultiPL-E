name: HumanEval_54_same_chars
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Check if two words have the same characters.\n    // >>> sameChars((\"eabcdzzzz\"\
  ), (\"dddzzzzzzzddeddabc\"))\n    // (true)\n    // >>> sameChars((\"abcd\"), (\"\
  dddddddabc\"))\n    // (true)\n    // >>> sameChars((\"dddddddabc\"), (\"abcd\"\
  ))\n    // (true)\n    // >>> sameChars((\"eabcd\"), (\"dddddddabc\"))\n    // (false)\n\
  \    // >>> sameChars((\"abcd\"), (\"dddddddabce\"))\n    // (false)\n    // >>>\
  \ sameChars((\"eabcdzzzz\"), (\"dddzzzzzzzddddabc\"))\n    // (false)\n    def sameChars(s0\
  \ : String, s1 : String) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sameChars((\"eabcdzzzz\"\
  ), (\"dddzzzzzzzddeddabc\")) == (true));\n    assert(sameChars((\"abcd\"), (\"dddddddabc\"\
  )) == (true));\n    assert(sameChars((\"dddddddabc\"), (\"abcd\")) == (true));\n\
  \    assert(sameChars((\"eabcd\"), (\"dddddddabc\")) == (false));\n    assert(sameChars((\"\
  abcd\"), (\"dddddddabcf\")) == (false));\n    assert(sameChars((\"eabcdzzzz\"),\
  \ (\"dddzzzzzzzddddabc\")) == (false));\n    assert(sameChars((\"aabb\"), (\"aaccc\"\
  )) == (false));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

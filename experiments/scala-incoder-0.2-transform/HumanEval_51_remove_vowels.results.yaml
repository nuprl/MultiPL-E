language: scala
name: HumanEval_51_remove_vowels
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = \"\"\n        for(i <- 0 until text.length){\n         \
    \   val c = text.charAt(i)\n            if(c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u'){\n                result += c\n            }\n       \
    \ }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpphqs3gq1.scala:27)\n\tat Problem.main(tmpphqs3gq1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793735
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793612
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var newText = text\n        val vowels = \"aeiouAEIOU\"\n        val\
    \ vowelsSet = scala.collection.mutable.Set[Char](vowels)\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorNext = vowelsSetIterator.next\n\
    \        while(vowelsSetIteratorNext.isDefined) {\n            newText = newText.replaceAll(vowelsSetIteratorNext.get.toString(),\
    \ \"\")\n            vowelsSetIterator = vowelsSet.iterator\n            vowelsSetIteratorNext\
    \ = vowelsSetIterator.next\n        }\n        newText\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuxb0s5z.scala:18:59\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet\e\
    [0m = scala.collection.mutable.Set[\e[35mChar\e[0m](vowels)\n\e[31m\e[31m   |\e\
    [0m                                                           ^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                             Found:    (vowels :\
    \ String)\n\e[31m   |\e[0m                                             Required:\
    \ Char\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcuxb0s5z.scala:21:36\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mwhile\e[0m(vowelsSetIteratorNext.isDefined)\
    \ {\n\e[31m\e[31m   |\e[0m              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m              value isDefined is not a member of Char\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpcuxb0s5z.scala:22:63 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            newText = newText.replaceAll(vowelsSetIteratorNext.get.toString(),\
    \ \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                                    \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \               value get is not a member of Char\n\e[31m\e[31m-- [E052] Type\
    \ Error: /tmp/tmpcuxb0s5z.scala:23:30 -----------------------------\e[0m\e[0m\n\
    \e[31m23 |\e[0m            vowelsSetIterator = vowelsSet.iterator\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val vowelsSetIterator\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpcuxb0s5z.scala:24:34 -----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            vowelsSetIteratorNext = vowelsSetIterator.next\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val vowelsSetIteratorNext\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\".toSet\n        val result = text.filterNot(vowels.contains)\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793612
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var newText = \"\"\n        for (i <- 0 until text.length){\n       \
    \     if (text.charAt(i) == 'a' || text.charAt(i) == 'e' || text.charAt(i) ==\
    \ 'i' || text.charAt(i) == 'o' || text.charAt(i) == 'u'){\n                newText\
    \ += text.charAt(i)\n            }\n        }\n        return newText\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppm4hztke.scala:26)\n\tat Problem.main(tmppm4hztke.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793618
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\".toSet\n        val result = text.filter(x\
    \ => !vowels.contains(x))\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793612
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\".toCharArray\n        val result = text.filter(c\
    \ => !vowels.contains(c))\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result\
    \ = new StringBuilder\n        for (c <- text) {\n            if (vowels.contains(c))\
    \ {\n                result.append(c)\n            } else {\n                result.append(\"\
    \ \")\n            }\n        }\n        return result.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\"\
    )));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6mww2kcx.scala:19:32\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (vowels.contains(c))\
    \ {\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e\
    [0m                                Found:    (c : Char)\n\e[31m   |\e[0m     \
    \                           Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793734
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result\
    \ = text.filter(x => !vowels.contains(x))\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7pm_4s3g.scala:17:55\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mresult\e\
    [0m = text.filter(\e[36mx\e[0m => !vowels.contains(x))\n\e[31m\e[31m   |\e[0m\
    \                                                       ^\e[0m\n\e[31m   |\e[0m\
    \                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val newText = text.filterNot(vowels.contains)\n\
    \        newText\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793612
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793612
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\".toCharArray\n        val result = new StringBuilder\n\
    \        for (i <- 0 until text.length)\n            if (vowels(i) != text.charAt(i))\n\
    \                result.append(text.charAt(i))\n        return result.toString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArrayIndexOutOfBoundsException: Index 10 out of bounds for length\
    \ 10\n\tat Problem$.removeVowels$$anonfun$1(tmpz_nj9se5.scala:19)\n\tat scala.runtime.java8.JFunction1$mcVI$sp.apply(JFunction1$mcVI$sp.scala:18)\n\
    \tat scala.collection.immutable.Range.foreach(Range.scala:190)\n\tat Problem$.removeVowels(tmpz_nj9se5.scala:20)\n\
    \tat Problem$.main(tmpz_nj9se5.scala:25)\n\tat Problem.main(tmpz_nj9se5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793618
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793612
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result\
    \ = text.filterNot(vowels.contains)\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcvf45tux.scala:17:36\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mresult\e\
    [0m = text.filterNot(vowels.contains)\n\e[31m\e[31m   |\e[0m                 \
    \                   ^\e[0m\n\e[31m   |\e[0m                                  \
    \  Found:    (elem : Char)\n\e[31m   |\e[0m                                  \
    \  Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793611
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\".toSet\n        val result = text.filterNot(vowels.contains)\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var newText : String = \"\"\n        for(i <- 0 until text.length){\n\
    \            if(text.charAt(i) == 'a' || text.charAt(i) == 'e' || text.charAt(i)\
    \ == 'i' || text.charAt(i) == 'o' || text.charAt(i) == 'u'){\n               \
    \ newText += text.charAt(i)\n            }\n        }\n        return newText\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpaavmz3ms.scala:26)\n\tat Problem.main(tmpaavmz3ms.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793612
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (i\
    \ <- 0 until text.length) {\n            val c = text.charAt(i)\n            if\
    \ (vowels.contains(c)) {\n                result += c\n            }\n       \
    \ }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_0kak4s0.scala:28)\n\tat Problem.main(tmp_0kak4s0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var vowels = \"aeiouAEIOU\"\n        var newText = \"\"\n        for\
    \ (i <- 0 until text.length) {\n            if (vowels.contains(text.charAt(i)))\
    \ {\n                newText += text.charAt(i)\n            }\n        }\n   \
    \     return newText\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkl6jb9pq.scala:27)\n\tat Problem.main(tmpkl6jb9pq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793629
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793612

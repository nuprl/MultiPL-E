language: scala
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l).fill(2l).map(x => x + (x % n)).takeWhile(x => x <\
    \ n)\n        primes.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi0iqrw1n.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m).fill(\e[31m2l\e[0m).map(\e[36mx\e[0m => x + (x % n)).takeWhile(\e\
    [36mx\e[0m => x < n)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805903
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeIter\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter2 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter3 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter4\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter5 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter6 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter7\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter8 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter9 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter10\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter11 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter12 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter13\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter14 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter15 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter16\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter17 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter18 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter19\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter20 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter21 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter22\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter23 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter24 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter25\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter26 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter27 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter28\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter29\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwhdqku5t.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhdqku5t.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhdqku5t.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhdqku5t.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhdqku5t.scala:13:26\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeIter\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m                          ^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpwhdqku5t.scala:14:27 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.ListBuffer[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                           Not found: mutable\n\e["
  stdout: ''
  timestamp: 1659805746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwf7n2qoc.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpwf7n2qoc.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwf7n2qoc.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805693
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        var i = 2\n\
    \        while (i < n) {\n            if (isPrime(i)) {\n                factors\
    \ += i\n                primes += i\n                isPrime += true\n       \
    \     }\n            i += 1\n        }\n        val largestPrime = primes.max\n\
    \        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpilhfakyd.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpilhfakyd.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpilhfakyd.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805904
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var largestPrimeFactor = Long.MaxValue\n    \
    \    var currentPrime = 1\n        while (n > 0) {\n            if (n % currentPrime\
    \ == 0) {\n                factors += currentPrime\n                n /= currentPrime\n\
    \            } else {\n                currentPrime += 1\n            }\n    \
    \    }\n        factors.toList.sortWith(_ < _).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_7l503io.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp_7l503io.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                n /= currentPrime\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a\
    \ member of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factor = 2\n        while (factor\
    \ <= n) {\n            if (n % factor == 0) {\n                primes += factor\n\
    \                n /= factor\n            }\n            else {\n            \
    \    factor += 1\n            }\n        }\n        primes.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd0lhgrak.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpd0lhgrak.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805727
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ != 0)\n        val\
    \ isPrimeIter2 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ == 0)\n\
    \        val isPrimeIter3 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ == 1)\n        val isPrimeIter4 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ == 2)\n        val isPrimeIter5 = Iterator.iterate(n)(_ *\
    \ _).takeWhile(_ > 1).filter(_ % _ == 3)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 4)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 5)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 6)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 7)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 8)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 9)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 10)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 11)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 12)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 13)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 14)\n        val is\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5u5rz8v_.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5u5rz8v_.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5u5rz8v_.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5u5rz8v_.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error:\
    \ /tmp/tmp5u5rz8v_.scala:13:46 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                              ^^^^^\e[0m\n\e[31m   |\e\
    [0m                                 Wrong number of parameters, expected: 1\n\e\
    [31m\e[31m-- [E086] Syntax Error: /tmp/tmp5u5rz8v_.scala:13:77 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                            "
  stdout: ''
  timestamp: 1659805906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) \n        val factors = mutable.ArrayBuffer(2l)\n\
    \        for(i <- 2l to n by 2l) {\n            val isPrime = true\n         \
    \   for(j <- 2l to i by 2l) {\n                if(i % j == 0) isPrime = false\n\
    \            }\n            if(isPrime) primes += i\n            for(j <- 2l to\
    \ i by 2l) {\n                if(i % j != 0) factors += j\n            }\n   \
    \     }\n        primes.max\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjdv8_cb4.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) \n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjdv8_cb4.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpjdv8_cb4.scala:15:39 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                \e[33mif\e[0m(i % j == \e[31m0\e[0m)\
    \ isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m                          \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                               Reassignment\
    \ to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659805904
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ largestPrime = mutable.Set[Long]()\n        val largestPrimeFactor = mutable.Set[Long]()\n\
    \        val largestPrimeFactors = mutable.Set[Long]()\n        val largestPrimeFactorsCount\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCounts = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMax = mutable.Set[Long]()\n        val largestPrimeFactorsCountMaxs\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCountMaxMax = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxs = mutable.Set[Long]()\n        val\
    \ largestPrimeFactorsCountMaxMaxMax = mutable.Set[Long]()\n        val largestPrimeFactorsCountMaxMaxMaxs\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCountMaxMaxMaxMax = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxs = mutable.Set[Long]()\n   \
    \     val largestPrimeFactorsCountMaxMaxMaxMaxMax = mutable.Set[Long]()\n    \
    \    val largestPrimeFactorsCountMaxMaxMaxMaxMaxs = mutable.Set[Long]()\n    \
    \    val largestPrimeFactorsCountMaxMaxMaxMaxMaxMax = mutable.Set[Long]()\n  \
    \      val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxs = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMax = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMaxs = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMaxMax = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMaxMaxs = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMaxMaxMax = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMaxMaxMaxs = \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpuvc6x_5o.scala:34:66 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMaxMaxMaxs\e\
    [0m = \n\e[31m\e[31m   |\e[0m                                                \
    \                  ^\e[0m\n\e[31m   |\e[0m                                   \
    \    expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpuvc6x_5o.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpuvc6x_5o.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuvc6x_5o.scala:12:27 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mlargestPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuvc6x_5o.scala:13:33 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactor\e[0m\
    \ = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Er"
  stdout: ''
  timestamp: 1659805906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val maxFactor = mutable.Long.MaxValue\n \
    \       for(i <- 2 to n/2) {\n            if(n%i == 0) {\n                factors.add(i)\n\
    \                n /= i\n            }\n        }\n        factors.toList.sortWith(_\
    \ < _).last\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbjge1v2h.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpbjge1v2h.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmaxFactor\e[0m = mutable.Long.MaxValue\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpbjge1v2h.scala:12:22 --------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n/\e[31m2\e[0m)\
    \ {\n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    Long\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbjge1v2h.scala:15:18\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e\
    [31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ /= is not a member of Long - did you mean n.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659805906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(n)(n => n % 2 == 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2\
    \ != 0).iterator\n        val isPrimeIter2 = Iterator.iterate(n)(n => n % 2 ==\
    \ 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2 != 0).iterator\n        val isPrimeIter3\
    \ = Iterator.iterate(n)(n => n % 2 == 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2\
    \ != 0).iterator\n        val isPrimeIter4 = Iterator.iterate(n)(n => n % 2 ==\
    \ 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2 != 0).iterator\n        val isPrimeIter5\
    \ = Iterator.iterate(n)(n => n % 2 == 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2\
    \ != 0).iterator\n        val isPrimeIter6 = Iterator.iterate(n)(n => n % 2 ==\
    \ 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2 != 0).iterator\n        val isPrimeIter7\
    \ = Iterator.iterate(n)(n => n % 2 == 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2\
    \ != 0).iterator\n        val isPrimeIter8 = Iterator.iterate(n)(n => n % 2 ==\
    \ 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2 != 0).iterator\n        val isPrimeIter9\
    \ = Iterator.iterate(n)(n => n % 2 == 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2\
    \ != 0).iterator\n        val isPrimeIter10 = Iterator.iterate(n)(n => n % 2 ==\
    \ 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2 != 0).iterator\n        val isPrimeIter11\
    \ = Iterator.iterate(n)(n => n % 2 == 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2\
    \ != 0).iterator\n        val isPrimeIter12 = Iterator.iterate(n)(n => n % 2 ==\
    \ 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2 != 0).iterator\n        val isPrimeIter13\
    \ = Iterator.iterate(n)(n => n % 2 == 0).takeWhile(_ % 2 != 0).dropWhile(_ % 2\
    \ != 0).iterator\n        val isPrimeIter14 = Iterator.iterate(n)(n => n % 2 ==\
    \ 0).takeWhile(_ % 2 != 0).dropWhile\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc8qss8gq.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpc8qss8gq.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpc8qss8gq.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpc8qss8gq.scala:13:51 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(\e\
    [36mn\e[0m => n % \e[31m2\e[0m == \e[31m0\e[0m).takeWhile(_ % \e[31m2\e[0m !=\
    \ \e[31m0\e[0m).dropWhile(_ % \e[31m2\e[0m != \e[31m0\e[0m).iterator\n\e[31m\e\
    [31m   |\e[0m                                                   ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                                   Found:    Boolean\n\
    \e[31m   |\e[0m                                                   Required: Long\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc8qss8gq.scala:14:52\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e\
    [0m = Iterator.iterate(n)(\e[36mn\e[0m => n % \e[31m2\e[0m == \e[31m0\e[0m).takeWhile(_\
    \ % \e[31m2\e[0m"
  stdout: ''
  timestamp: 1659805906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) ++ (2l to n by 2l) filter { p => n % p != 0 }\n  \
    \      primes.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt2_b5j_y.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) ++ (\e[31m2l\e[0m to n by \e[31m2l\e[0m) filter { \e[36mp\e[0m =>\
    \ n % p != \e[31m0\e[0m }\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659805903
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n     \
    \   val isPrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePri\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbc9m39y1.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbc9m39y1.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbc9m39y1.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbc9m39y1.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpbc9m39y1.scala:13:23 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misFactor\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e\
    [0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpbc9m39y1.scala:14:28 ------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            No"
  stdout: ''
  timestamp: 1659805905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = Long.MinValue\n        var maxFactorPrime = Long.MinValue\n        var primeFactors\
    \ = mutable.ListBuffer[Long]()\n        var isPrime = true\n        for (i <-\
    \ 2 to n by 2) {\n            if (n % i == 0) {\n                isPrime = false\n\
    \                break\n            }\n        }\n        if (isPrime) {\n   \
    \         primeFactors += n\n        }\n        for (i <- 3 to n by 2) {\n   \
    \         if (n % i == 0) {\n                isPrime = false\n               \
    \ break\n            }\n        }\n        if (isPrime) {\n            primeFactors\
    \ += n\n        }\n        for (i <- 5 to n by 2) {\n            if (n % i ==\
    \ 0) {\n                isPrime = false\n                break\n            }\n\
    \        }\n        if (isPrime) {\n            primeFactors += n\n        }\n\
    \        for (i <- 7 to n by 2) {\n            if (n % i == 0) {\n           \
    \     isPrime = false\n                break\n            }\n        }\n     \
    \   if (isPrime) {\n            primeFactors += n\n        }\n        for (i <-\
    \ 11 to n by 2) {\n            if (n % i == 0) {\n                isPrime = false\n\
    \                break\n            }\n        }\n        if (isPrime) {\n   \
    \         primeFactors += n\n        }\n        for (i <- 13 to n by 2) {\n  \
    \          if (n % i == 0) {\n                isPrime = false\n              \
    \  break\n            }\n        }\n        if (isPrime) {\n            primeFactors\
    \ += n\n        }\n        for (i <- 17 to n by 2) {\n            if (n % i ==\
    \ 0) {\n                isPrime = false\n                break\n            }\n\
    \        }\n        if (isPrime) {\n            primeFactors += n\n        }\n\
    \        for (i <- 19 to n by 2) {\n            if (n % i == 0) {\n          \
    \      isPrime = false\n                break\n            }\n        }\n    \
    \    if (isPrime) {\n            primeFactors += n\n        }\n        for (i\
    \ <- 21 to n by 2) {\n            if (n % i == 0) {\n                isPrime =\
    \ false\n                break\n            }\n        }\n        if (isPrime)\
    \ {\n            primeFactors += n\n        }\n        for (i <- 23 to n by 2)\
    \ {\n            if (n % i == 0) {\n                isPrime = false\n        \
    \        break\n            }\n        }\n        if (isPrime) {\n           \
    \ primeFactors += n\n        }\n        for (i <- 29 to n by 2) {\n          \
    \  if (n % i == 0) {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if (isPrime) {\n            primeFactors +=\
    \ n\n        }\n        for (i <- 31 to n by 2) {\n            if (n % i == 0)\
    \ {\n                isPrime = false\n                break\n            }\n \
    \       }\n        if (isPrime) {\n            primeFactors += n\n        }\n\
    \        for (i <- 37 to \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpjqi_yt_b.scala:122:23 --------------------------\e\
    [0m\e[0m\n\e[31m122 |\e[0m        \e[33mfor\e[0m (i <- \e[31m37\e[0m to \n\e[31m\e\
    [31m    |\e[0m                       ^\e[0m\n\e[31m    |\e[0m                \
    \       expression expected but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m\
    \    |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpjqi_yt_b.scala:12:27 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjqi_yt_b.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqi_yt_b.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjqi_yt_b.scala:23:23\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m3\e[0m to n by \e[31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                \
    \       ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\e\
    [31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjqi_yt_b.scala:26:16 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                break\n\e[3"
  stdout: ''
  timestamp: 1659805906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i ==\
    \ 0){\n                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphf45_g9_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphf45_g9_.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 2 to n by 2) {\n           \
    \ if (n % i == 0) {\n                factors += i\n            }\n        }\n\
    \        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu0ixxinj.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpu0ixxinj.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter2 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter3 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter6 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter9 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter10\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter11 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter12 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter13\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter14 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter15 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter18 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter21 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter22\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter23 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter24 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter25\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter26 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter27 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter28\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter29\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplc2smpzg.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmplc2smpzg.scala:13:26 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       "
  stdout: ''
  timestamp: 1659805703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ maxFactor = mutable.Set[Long]()\n        val maxFactors = mutable.Set[Long]()\n\
    \        val maxPrime = mutable.Set[Long]()\n        val maxPrimes = mutable.Set[Long]()\n\
    \        val maxPrimeFactor = mutable.Set[Long]()\n        val maxPrimeFactors\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimes = mutable.Set[Long]()\n\
    \        val maxPrimeFactorsOfPrimeOfPrimes = mutable.Set[Long]()\n        val\
    \ maxPrimeFactorsOfPrimeOfPrimeOfPrimes = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimeOfPrimeOfPrimeOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimeOfPrimeOfPrimeOfPrimeOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPrimeOfPri\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp14391n0f.scala:27:4 ----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp14391n0f.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp14391n0f.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp14391n0f.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxFactor\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp14391n0f.scala:13:25\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp14391n0f.scala:14:23\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m    \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation availabl"
  stdout: ''
  timestamp: 1659805906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val largestPrime = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactor\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n     \
    \   val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n     \
    \   val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n     \
    \   val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n     \
    \   val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n     \
    \   val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val largestPrimeFactorIndex = mutable.Array\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp6jj41cqo.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorIndex\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mlargestPrimeFactorIndex is already defined as \e[33mvalue\e[0m \e[35mlargestPrimeFactorIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp6jj41cqo.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorIndex\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlargestPrimeFactorIndex is already defined as \e[33mvalue\e\
    [0m \e[35mlargestPrimeFactorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp6jj41cqo.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorIndex\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mlargestPrimeFactorIndex is already defined as \e[33mvalue\e[0m \e[35mlargestPrimeFactorIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp6jj41cqo.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorIndex\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlargestPrimeFactorIndex is already defined as \e[33mvalue\e\
    [0m \e[35mlargestPrimeFactorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must a"
  stdout: ''
  timestamp: 1659805906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ largestPrime = mutable.Set[Long]()\n        val largestPrimeFactor = mutable.Set[Long]()\n\
    \        val largestPrimeFactors = mutable.Set[Long]()\n        val largestPrimeFactorsCount\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCounts = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMax = mutable.Set[Long]()\n        val largestPrimeFactorsCountMaxs\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCountMaxMax = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxs = mutable.Set[Long]()\n        val\
    \ largestPrimeFactorsCountMaxMaxMax = mutable.Set[Long]()\n        val largestPrimeFactorsCountMaxMaxMaxs\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCountMaxMaxMaxMax = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxs = mutable.Set[Long]()\n   \
    \     val largestPrimeFactorsCountMaxMaxMaxMaxMax = mutable.Set[Long]()\n    \
    \    val largestPrimeFactorsCountMaxMaxMaxMaxMaxs = mutable.Set[Long]()\n    \
    \    val largestPrimeFactorsCountMaxMaxMaxMaxMaxMax = mutable.Set[Long]()\n  \
    \      val largestPrimeFactorsCountMaxMaxMaxMaxMaxMax = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxs = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMax = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMaxs = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMaxMax = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMaxMaxs = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCountMaxMaxMaxMaxMaxMaxMaxMaxMax = mutable.Set\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmom839b6.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorsCountMaxMaxMaxMaxMaxMax\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlargestPrimeFactorsCountMaxMaxMaxMaxMaxMax is already defined\
    \ as \e[33mvalue\e[0m \e[35mlargestPrimeFactorsCountMaxMaxMaxMaxMaxMax\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpmom839b6.scala:10:21 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpmom839b6.scala:11:22 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpmom839b6.scala:12:27 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mlargestPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpmom839b6.scala:13:33 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactor\e[0m\
    \ = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Not\
    \ found: mutable\n\e[31m   |\e[0m"
  stdout: ''
  timestamp: 1659805905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxFactor = mutable.ArrayBuffer.empty[Long]\n        val maxFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxPrimeFactors = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ maxPrimeFactorsIndex = mutable.ArrayBuffer.empty[Long]\n        val maxPrimeFactorsIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpt598f8tq.scala:41:11 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpt598f8tq.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeFactorsIndex\e[0m\
    \ = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorsIndex is already defined as \e[33mvalue\e[0m\
    \ \e[35mmaxPrimeFactorsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpt598f8tq.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeFactorsIndex\e[0m\
    \ = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorsIndex is already defined as \e[33mvalue\e[0m\
    \ \e[35mmaxPrimeFactorsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpt598f8tq.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeFactorsIndex\e[0m\
    \ = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorsIndex is already defined as \e[33mvalue\e[0m\
    \ \e[35mmaxPrimeFactorsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpt598f8tq.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeFactorsIndex\e[0m\
    \ = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e["
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val maxFactor = n / 2\n        while(n > 1) {\n\
    \            val factor = 2\n            while(factor <= maxFactor) {\n      \
    \          if(n % factor == 0) {\n                    factors += factor\n    \
    \                n /= factor\n                }\n                factor += 1\n\
    \            }\n        }\n        factors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmporkb0i_k.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmporkb0i_k.scala:17:22 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                    n /= factor\n\e[31m\e[31m   |\e[0m\
    \                    ^^^^\e[0m\n\e[31m   |\e[0m                   value /= is\
    \ not a member of Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmporkb0i_k.scala:19:23 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m                factor += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m             \
    \   ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               value += is not a member of\
    \ Int - did you mean factor.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter2 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter3 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter6 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter9 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter10\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter11 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter12 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter13\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter14 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter15 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter18 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter21 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter22\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter23 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter24 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter25\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter26 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter27 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter28\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter29\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplc2smpzg.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmplc2smpzg.scala:13:26 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       "
  stdout: ''
  timestamp: 1659805703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        var maxFactor = Long.MaxValue\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpubr2gne1.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpubr2gne1.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0misPrime is already defined as \e[33mvalue\e[0m \e[35misPrime\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpubr2gne1.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrime is already defined as \e[33mvalue\e[0m \e[35misPrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpubr2gne1.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrime is already defined as \e[33mvalue\e[0m \e[35misPrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpubr2gne1.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrime is already defined as \e[33mvalue\e[0m \e[35misPrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplev"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        factors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwj7cfe80.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpwj7cfe80.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwj7cfe80.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val maxFactor = mutable.Long.MaxValue\n        val maxFactors = mutable.HashSet[Long]()\n\
    \        val primeFactors = mutable.HashMap[Long, Long]()\n        val primeFactorsCount\
    \ = mutable.HashMap[Long, Long]()\n        val primeFactorsCount2 = mutable.HashMap[Long,\
    \ Long]()\n        val primeFactorsCount3 = mutable.HashMap[Long, Long]()\n  \
    \      val primeFactorsCount4 = mutable.HashMap[Long, Long]()\n        val primeFactorsCount5\
    \ = mutable.HashMap[Long, Long]()\n        val primeFactorsCount6 = mutable.HashMap[Long,\
    \ Long]()\n        val primeFactorsCount7 = mutable.HashMap[Long, Long]()\n  \
    \      val primeFactorsCount8 = mutable.HashMap[Long, Long]()\n        val primeFactorsCount9\
    \ = mutable.HashMap[Long, Long]()\n        val primeFactorsCount10 = mutable.HashMap[Long,\
    \ Long]()\n        val primeFactorsCount11 = mutable.HashMap[Long, Long]()\n \
    \       val primeFactorsCount12 = mutable.HashMap[Long, Long]()\n        val primeFactorsCount13\
    \ = mutable.HashMap[Long, Long]()\n        val primeFactorsCount14 = mutable.HashMap[Long,\
    \ Long]()\n        val primeFactorsCount15 = mutable.HashMap[Long, Long]()\n \
    \       val primeFactorsCount16 = mutable.HashMap[Long, Long]()\n        val primeFactorsCount17\
    \ = mutable.HashMap[Long, Long]()\n        val primeFactorsCount18 = mutable.HashMap[Long,\
    \ Long]()\n        val primeFactorsCount19 = mutable.HashMap[Long, Long]()\n \
    \       val primeFactorsCount20 = mutable.HashMap[Long, Long]()\n        val primeFactorsCount21\
    \ = mutable.HashMap[Long, Long]()\n        val primeFactorsCount22 = mutable.HashMap[Long,\
    \ Long]()\n        val primeFactorsCount23 = mutable.HashMap[Long, Long]()\n \
    \       val primeFactorsCount24 = mutable.HashMap[Long, Long]()\n        val primeFactorsCount25\
    \ = mutable.HashMap[Long, Long]()\n        val primeFactorsCount26 = \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpyjzbvtch.scala:40:33 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \e[36mprimeFactorsCount26\e[0m\
    \ = \n\e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e\
    [0m                                 expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyjzbvtch.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyjzbvtch.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyjzbvtch.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxFactor\e[0m = mutable.Long.MaxValue\n\e[31m\e[31m   |\e[0m            \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyjzbvtch.scala:13:25\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxFactors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyjzbvtch.scala:14:27\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) ++ (2l to n.toInt)\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val largestPrime = primes.last\n        primes.takeWhile(p => p < n).foreach\
    \ { p =>\n            val factor = (n / p).toInt\n            factors += factor\n\
    \            if (factor > largestPrime) {\n                largestPrime = factor\n\
    \            }\n        }\n        largestPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo6pv477f.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) ++ (\e[31m2l\e[0m to n.toInt)\n\e[31m\e[31m   |\e[0m            \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo6pv477f.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val maxFactor = mutable.Long.MaxValue\n \
    \       val maxFactorIndex = -1\n        val maxFactorPrime = mutable.Long.MaxValue\n\
    \        val maxFactorPrimeIndex = -1\n        for (i <- 2 to n) {\n         \
    \   if (n % i == 0) {\n                val factorPrime = i / n\n             \
    \   if (factorPrime > maxFactorPrime) {\n                    maxFactorPrime =\
    \ factorPrime\n                    maxFactorPrimeIndex = i\n                }\n\
    \                if (factorPrime > maxFactor) {\n                    maxFactor\
    \ = factorPrime\n                    maxFactorIndex = i\n                }\n \
    \               factors += i\n            }\n        }\n        if (factors.size\
    \ == 1) {\n            return factors.head\n        }\n        if (maxFactorPrimeIndex\
    \ == -1) {\n            return maxFactor\n        }\n        if (maxFactorIndex\
    \ == -1) {\n            return maxFactorPrime\n        }\n        if (maxFactorPrimeIndex\
    \ < maxFactorIndex) {\n            return maxFactorPrime\n        } else {\n \
    \           return maxFactorIndex\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb4477t_3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpb4477t_3.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmaxFactor\e[0m = mutable.Long.MaxValue\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpb4477t_3.scala:13:29 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mmaxFactorPrime\e[0m = mutable.Long.MaxValue\n\
    \e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                             Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpb4477t_3.scala:15:23 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpb4477t_3.scala:19:35\
    \ -----------------------------\e[0m\e[0m\n\e[31m19 |\e[0m                   \
    \ maxFactorPrime = factorPrime\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Reassignment to val maxFactorPrime\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpb4477t_3.scala:20:40 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m      "
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuvoo1hz5.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpuvoo1hz5.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        var factor = 2l\n        while (factor <\
    \ n) {\n            if (n % factor == 0) {\n                primes += factor\n\
    \                n /= factor\n            } else {\n                factor +=\
    \ 1\n            }\n        }\n        primes.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0o4gj6cz.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp0o4gj6cz.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                primes += i\n       \
    \         n /= i\n            }\n            i += 1\n        }\n        primes.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6dcbbeso.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp6dcbbeso.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6dcbbeso.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ == 0).iterator\n        val isPrimeIter2 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ == 1).iterator\n        val isPrimeIter3 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 2).iterator\n        val isPrimeIter4\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ == 3).iterator\n\
    \        val isPrimeIter5 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ == 4).iterator\n        val isPrimeIter6 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ == 5).iterator\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 6).iterator\n        val isPrimeIter8\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ == 7).iterator\n\
    \        val isPrimeIter9 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ == 8).iterator\n        val isPrimeIter10 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ == 9).iterator\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 10).iterator\n        val isPrimeIter12\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ == 11).iterator\n\
    \        val isPrimeIter13 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ == 12).iterator\n        val isPrimeIter14 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ == 13).iterator\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 14).iterator\n        val isPrimeIter16\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ == 15\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7s5kkcuq.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7s5kkcuq.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7s5kkcuq.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp7s5kkcuq.scala:12:46\
    \ ---------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_ * _).takeWhile(_ > \e[31m1\e\
    [0m).filter(_ % _ == \e[31m0\e[0m).iterator\n\e[31m\e[31m   |\e[0m           \
    \                                   ^^^^^\e[0m\n\e[31m   |\e[0m              \
    \                   Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086]\
    \ Syntax Error: /tmp/tmp7s5kkcuq.scala:12:77 ---------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).iterator\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \                   ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                         \
    \        Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmp7s5kkcuq.scala:13:47 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m1\e[0m).iter"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuvoo1hz5.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpuvoo1hz5.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var largestPrimeFactor\
    \ = 0\n        var largestPrimeFactorIndex = 0\n        var isPrime = true\n \
    \       var isPrimeIndex = 0\n        var isPrimeFactor = true\n        var isPrimeFactorIndex\
    \ = 0\n        var isPrimeFactor2 = true\n        var isPrimeFactor2Index = 0\n\
    \        var isPrimeFactor3 = true\n        var isPrimeFactor3Index = 0\n    \
    \    var isPrimeFactor4 = true\n        var isPrimeFactor4Index = 0\n        var\
    \ isPrimeFactor5 = true\n        var isPrimeFactor5Index = 0\n        var isPrimeFactor6\
    \ = true\n        var isPrimeFactor6Index = 0\n        var isPrimeFactor7 = true\n\
    \        var isPrimeFactor7Index = 0\n        var isPrimeFactor8 = true\n    \
    \    var isPrimeFactor8Index = 0\n        var isPrimeFactor9 = true\n        var\
    \ isPrimeFactor9Index = 0\n        var isPrimeFactor10 = true\n        var isPrimeFactor10Index\
    \ = 0\n        var isPrimeFactor11 = true\n        var isPrimeFactor11Index =\
    \ 0\n        var isPrimeFactor12 = true\n        var isPrimeFactor12Index = 0\n\
    \        var isPrimeFactor13 = true\n        var isPrimeFactor13Index = 0\n  \
    \      var isPrimeFactor14 = true\n        var isPrimeFactor14Index = 0\n    \
    \    var isPrimeFactor15 = true\n        var isPrimeFactor15Index = 0\n      \
    \  var isPrimeFactor16 = true\n        var isPrimeFactor16Index = 0\n        var\
    \ isPrimeFactor17 = true\n        var isPrimeFactor17Index = 0\n        var isPrimeFactor18\
    \ = true\n        var isPrimeFactor18Index = 0\n        var isPrimeFactor19 =\
    \ true\n        var isPrimeFactor19Index = 0\n        var isPrimeFactor20 = true\n\
    \        var isPrimeFactor20Index = 0\n        var isPrimeFactor21 = true\n  \
    \      var isPrimeFactor21Index = 0\n        var isPrimeFactor22 = true\n    \
    \    var isPrimeFactor22Index = 0\n        var isPrimeFactor23 = true\n      \
    \  var isPrimeFactor23Index = 0\n        var isPrimeFactor24 = true\n        var\
    \ isPrimeFactor24Index = 0\n        var isPrimeFactor25 = true\n        var isPrimeFactor25Index\
    \ = 0\n        var isPrimeFactor26 = true\n        var isPrimeFactor26Index =\
    \ 0\n        var isPrimeFactor27 = true\n        var isPrimeFactor27Index = 0\n\
    \        var isPrimeFactor28 = true\n        var isPrimeFactor28Index = 0\n  \
    \      var isPrimeFactor29 = true\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7fzrvkt6.scala:71:5\
    \ ---------------------\e[0m\e[0m\n\e[31m71 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n/2) {\n            if(n%i\
    \ == 0) {\n                factors += i\n                n /= i\n            }\n\
    \        }\n        if(n > 1) {\n            factors += n\n        }\n       \
    \ factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphfsx4boc.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphfsx4boc.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n/\e[31m2\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m \
    \                     Found:    Long\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphfsx4boc.scala:14:18\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                n /= i\n\e\
    [31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ /= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val isPrime = mutable.HashSet[Boolean]()\n        val isPrimeIter = Iterator.iterate(n)(_\
    \ => true).takeWhile(_ => true)\n        val isPrimeIter2 = Iterator.iterate(n)(_\
    \ => false).takeWhile(_ => true)\n        val isPrimeIter3 = Iterator.iterate(n)(_\
    \ => true).takeWhile(_ => false)\n        val isPrimeIter4 = Iterator.iterate(n)(_\
    \ => false).takeWhile(_ => false)\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ => true).takeWhile(_ => false)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ => false).takeWhile(_ => false)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ => true).takeWhile(_ => false)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ => false).takeWhile(_ => false)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ => true).takeWhile(_ => false)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ => false).takeWhile(_ => false)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ => true).takeWhile(_ => false)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ => false).takeWhile(_ => false)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ => true).takeWhile(_ => false)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ => false).takeWhile(_ => false)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ => true).takeWhile(_ => false)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ => false).takeWhile(_ => false)\n        val isPrimeIter17 = Iterator.iterate(n)(_\
    \ => true).takeWhile(_ => false)\n        val isPrimeIter18 = Iterator.iterate(n)(_\
    \ => false).takeWhile(_ => false)\n        val isPrimeIter19 = Iterator.iterate(n)(_\
    \ => true\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyqebp5tr.scala:32:4 ----------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyqebp5tr.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyqebp5tr.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyqebp5tr.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.HashSet[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyqebp5tr.scala:13:51\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e\
    [0m = Iterator.iterate(n)(_ => \e[31mtrue\e[0m).takeWhile(_ => \e[31mtrue\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                   ^^^^\e\
    [0m\n\e[31m   |\e[0m                                              Found:    (\e\
    [31mtrue\e[0m : Boolean)\n\e[31m   |\e[0m                                    \
    \          Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpyqebp5tr.scala:14:52 --------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = It"
  stdout: ''
  timestamp: 1660010239
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        val i = 2\n        while (primes.size < n)\
    \ {\n            if (n % primes.last == 0) {\n                primes += i\n  \
    \          }\n            i += 1\n        }\n        primes.last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpavsjc5_g.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpavsjc5_g.scala:16:14 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp826c9f8s.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp826c9f8s.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp826c9f8s.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp826c9f8s.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp826c9f8s.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp826c9f8s.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n by 2)\n            if(n%i\
    \ == 0)\n                factors += i\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoj_g_1f_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpoj_g_1f_.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 0)\n        val isPrimeIter2 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ == 0)\n        val isPrimeIter3 = Iterator.iterate(n)(_ +\
    \ 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter4 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter17 = Iterator.iterate(n)(_\
    \ + \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp60daffn2.scala:28:51 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter17\e[0m = Iterator.iterate(n)(_\
    \ + \n\e[31m\e[31m   |\e[0m                                                  \
    \ ^\e[0m\n\e[31m   |\e[0m                                       expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp60daffn2.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp60daffn2.scala:11:22 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmp60daffn2.scala:12:78 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp60daffn2.scala:13:79\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_\
    \ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                 \
    \                                                              ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                               "
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n > 1) {\n    \
    \        factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbhgnt1gb.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        var i = 2l\n        while (i < n) {\n   \
    \         if (n % i == 0) {\n                primes += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        primes.lastOption.getOrElse(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4euyetly.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp4euyetly.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxFactor = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 2 to n){\n            val factor = (n / i).toInt\n         \
    \   if(factor > 1){\n                factors += factor\n                if(factor\
    \ > maxFactor.last){\n                    maxFactor = factor\n               \
    \ }\n            }\n        }\n        if(maxFactor.last > 1){\n            factors\
    \ += maxFactor.last\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_puineji.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_puineji.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmaxFactor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp_puineji.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp_puineji.scala:17:30 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                    maxFactor = factor\n\e[31m\e[31m\
    \   |\e[0m                    ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \             Reassignment to val maxFactor\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp826c9f8s.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp826c9f8s.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter2 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter3 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter6 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter9 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter10\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter11 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter12 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter13\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter14 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter15 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter18 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter21 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter22\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter23 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter24 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter25\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter26 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter27 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter28\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter29\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplc2smpzg.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmplc2smpzg.scala:13:26 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       "
  stdout: ''
  timestamp: 1659805703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.Set[Long]()\n  \
    \      val isPrimeIter = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ != 0)\n        val isPrimeIter2 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ == 0)\n        val isPrimeIter3 = Iterator.iterate(n)(_ +\
    \ 2).takeWhile(_ <= n).filter(_ % _ == 1)\n        val isPrimeIter4 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 2)\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 3)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 4)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 5)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 6)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 7)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 8)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 9)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 10)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 11)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 12)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 13)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 14)\n        val isPrimeIter17 = Iterator.iterate(n)(_\
    \ + 2).\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp683i23gr.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp683i23gr.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp683i23gr.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmp683i23gr.scala:12:78 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp683i23gr.scala:13:79\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_\
    \ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                 \
    \                                                              ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                 Wrong number of parameters, expected:\
    \ 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp683i23gr.scala:14:79 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter3\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter("
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factor = 2\n        while (factor\
    \ <= n) {\n            if (n % factor == 0) {\n                primes += factor\n\
    \                n /= factor\n            } else {\n                factor +=\
    \ 1\n            }\n        }\n        primes.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppdidivtz.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmppdidivtz.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i ==\
    \ 0){\n                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphf45_g9_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphf45_g9_.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter2 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter3 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter6 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter9 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter10\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter11 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter12 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter13\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter14 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter15 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter18 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter21 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter22\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter23 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter24 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter25\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter26 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter27 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter28\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter29\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplc2smpzg.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmplc2smpzg.scala:13:26 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       "
  stdout: ''
  timestamp: 1659805703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n     \
    \   val isPrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.Array\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpa7neg2ct.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimePrimeFactor is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimePrimeFactor\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpa7neg2ct.scala:29:12 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimePrimePrime\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpa7neg2ct.scala:32:12 ---------------------------\e[0m\e[0m\n\e[31m32\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m = mutable.Array\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimePrimePrimeFactor is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpa7neg2ct.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e["
  stdout: ''
  timestamp: 1660010244
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to n by 2)\n         \
    \   if(!isPrime(i))\n                factors += i\n        factors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5iasrlrw.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp5iasrlrw.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5iasrlrw.scala:12:16\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m            \e[33mif\e[0m(!isPrime(i))\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010246
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        factors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwj7cfe80.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpwj7cfe80.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwj7cfe80.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        val factors = mutable.ArrayBuffer(2l)\n \
    \       val isPrime = mutable.ArrayBuffer(false)\n        val isFactor = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor = mutable.ArrayBuffer(false)\n        val isPrimePrime\
    \ = mutable.ArrayBuffer(false)\n        val isPrimePrimeFactor = mutable.ArrayBuffer(false)\n\
    \        val isPrimePrimePrime = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimeFactor\
    \ = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimePrime = mutable.ArrayBuffer(false)\n\
    \        val isPrimePrimePrimePrimeFactor = mutable.ArrayBuffer(false)\n     \
    \   val isPrimePrimePrimePrimePrime = mutable.ArrayBuffer(false)\n        val\
    \ isPrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer(false)\n        val\
    \ isPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimePrimePrimePrimeFactor\
    \ = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = mutable.ArrayBuffer(false)\n        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ArrayBuffer(\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpg5wbcm5v.scala:33:87 ---------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.ArrayBuffer(\n\e[31m\e[31m   |\e[0m                            \
    \                                                           ^\e[0m\n\e[31m   |\e\
    [0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg5wbcm5v.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg5wbcm5v.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg5wbcm5v.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg5wbcm5v.scala:13:23\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misFactor\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m)\n\e[31m\e[31m   |\e\
    [0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- ["
  stdout: ''
  timestamp: 1660010247
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n > 1) {\n    \
    \        factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbhgnt1gb.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactors = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimes = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsPrimes = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactors = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimes = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimeFactors = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimeFactorsPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimeFactorsPrimes = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactors = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactors = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactorsPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactorsPrimes = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactor = \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpy9klnrln.scala:32:75 ---------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactor\e\
    [0m = \n\e[31m\e[31m   |\e[0m                                                \
    \                           ^\e[0m\n\e[31m   |\e[0m                          \
    \             expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpy9klnrln.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactor\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactor is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpy9klnrln.scala:29:12 ---------------------------\e[0m\e[0m\n\e\
    [31m29 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactors\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactors is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimeFactorsPrimeFactorsPrimeFactorsPrimeFactors\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpy9klnrln.scala:10:21 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not fo"
  stdout: ''
  timestamp: 1660010249
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n > 1) {\n    \
    \        factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbhgnt1gb.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by 2)\n        \
    \    if (n % i == 0)\n                factors += i\n        factors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgg_ju38l.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpgg_ju38l.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010248
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val primes = mutable.Set[Long]()\n        val\
    \ isPrime = mutable.Set[Boolean]()\n        val isPrimeIter = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ != 0)\n        val isPrimeIter2 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 0)\n        val isPrimeIter3 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 1)\n        val isPrimeIter4 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 2)\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 3)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 4)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 5)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 6)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 7)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 8)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 9)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 10)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 11)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 12)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 13)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 14)\n        val isPrimeIter\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpw246pwlw.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw246pwlw.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw246pwlw.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw246pwlw.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpw246pwlw.scala:13:46\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_ * _).takeWhile(_ > \e[31m1\e\
    [0m).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                    \
    \                          ^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \          Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmpw246pwlw.scala:13:77 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \          ^^^"
  stdout: ''
  timestamp: 1660010248
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        val factors = mutable.ArrayBuffer(2)\n   \
    \     val isPrime = true\n        var i = 2\n        while (i < n && isPrime)\
    \ {\n            val isPrime = n % i == 0\n            if (isPrime) {\n      \
    \          primes += i\n                factors += i\n            }\n        \
    \    i += 1\n        }\n        val largestPrime = primes.max\n        val largestFactor\
    \ = factors.max\n        if (largestPrime == largestFactor) {\n            return\
    \ largestPrime\n        } else {\n            return largestFactor\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb38stu0m.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpb38stu0m.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010244
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxPrimeFactor\
    \ = Long.MinValue\n        var maxPrimeFactorIndex = -1\n        var maxPrimeFactorIndex2\
    \ = -1\n        var maxPrimeFactorIndex3 = -1\n        var maxPrimeFactorIndex4\
    \ = -1\n        var maxPrimeFactorIndex5 = -1\n        var maxPrimeFactorIndex6\
    \ = -1\n        var maxPrimeFactorIndex7 = -1\n        var maxPrimeFactorIndex8\
    \ = -1\n        var maxPrimeFactorIndex9 = -1\n        var maxPrimeFactorIndex10\
    \ = -1\n        var maxPrimeFactorIndex11 = -1\n        var maxPrimeFactorIndex12\
    \ = -1\n        var maxPrimeFactorIndex13 = -1\n        var maxPrimeFactorIndex14\
    \ = -1\n        var maxPrimeFactorIndex15 = -1\n        var maxPrimeFactorIndex16\
    \ = -1\n        var maxPrimeFactorIndex17 = -1\n        var maxPrimeFactorIndex18\
    \ = -1\n        var maxPrimeFactorIndex19 = -1\n        var maxPrimeFactorIndex20\
    \ = -1\n        var maxPrimeFactorIndex21 = -1\n        var maxPrimeFactorIndex22\
    \ = -1\n        var maxPrimeFactorIndex23 = -1\n        var maxPrimeFactorIndex24\
    \ = -1\n        var maxPrimeFactorIndex25 = -1\n        var maxPrimeFactorIndex26\
    \ = -1\n        var maxPrimeFactorIndex27 = -1\n        var maxPrimeFactorIndex28\
    \ = -1\n        var maxPrimeFactorIndex29 = -1\n        var maxPrimeFactorIndex30\
    \ = -1\n        var maxPrimeFactorIndex31 = -1\n        var maxPrimeFactorIndex32\
    \ = -1\n        var maxPrimeFactorIndex33 = -1\n        var maxPrimeFactorIndex34\
    \ = -1\n        var maxPrimeFactorIndex35 = -1\n        var maxPrimeFactorIndex36\
    \ = -1\n        var maxPrimeFactorIndex37 = -1\n        var maxPrimeFactorIndex38\
    \ = -1\n        var maxPrimeFactorIndex39 = -1\n        var maxPrimeFactorIndex40\
    \ = -1\n        var maxPrimeFactorIndex41 = -1\n        var maxPrimeFactorIndex42\
    \ = -1\n        var maxPrimeFactorIndex43 = -1\n        var maxPrimeFactorIndex44\
    \ = -1\n        var maxPrimeFactorIndex45 = -1\n        var maxPrimeFactorIndex46\
    \ = -1\n        var maxPrimeFactorIndex47 = -1\n        var maxPrimeFactorIndex48\
    \ = -1\n        var maxPrimeFactorIndex49 = -1\n        var maxPrimeFactorIndex50\
    \ = -1\n        var maxPrimeFactorIndex51 = -1\n        var maxPrimeFactorIndex52\
    \ = -1\n        var maxPrimeFactorIndex53 = -1\n        var maxPrimeFactorIndex54\
    \ = -1\n        var maxPrimeFactorIndex55\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpsnar7ca1.scala:66:4 ----------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpsnar7ca1.scala:66:5 ---------------------\e[0m\e[0m\n\e[31m66 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010247
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n      \
    \  val isPrimeIter = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_ > 1).filter(_\
    \ % _ == 0).iterator\n        val isPrimeIter2 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ < n).filter(_ > 1).filter(_ % _ == 0).iterator\n        val isPrimeIter3 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ < n).filter(_ > 1).filter(_ % _ == 0).iterator\n        val\
    \ isPrimeIter4 = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_ > 1).filter(_\
    \ % _ == 0).iterator\n        val isPrimeIter5 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ < n).filter(_ > 1).filter(_ % _ == 0).iterator\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ < n).filter(_ > 1).filter(_ % _ == 0).iterator\n        val\
    \ isPrimeIter7 = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_ > 1).filter(_\
    \ % _ == 0).iterator\n        val isPrimeIter8 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ < n).filter(_ > 1).filter(_ % _ == 0).iterator\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ < n).filter(_ > 1).filter(_ % _ == 0).iterator\n        val\
    \ isPrimeIter10 = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_ > 1).filter(_\
    \ % _ == 0).iterator\n        val isPrimeIter11 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ < n).filter(_ > 1).filter(_ % _ == 0).iterator\n        val isPrimeIter12 =\
    \ Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_ > 1).filter(_ % _ == 0).iterator\n\
    \        val isPrimeIter13 = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_\
    \ > 1).filter(_ % _ == 0).iterator\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ < n).filter(_ > 1).filter(_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpq20t75yv.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq20t75yv.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq20t75yv.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpq20t75yv.scala:12:46\
    \ ---------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_\
    \ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).iterator\n\e[31m\e[31m   |\e[0m\
    \                                              ^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                              Wrong number of parameters, expected: 1\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmpq20t75yv.scala:12:91 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ < n).filter(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).iterator\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                                   ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \                        Wrong number of parameters, expected: 1\n\e[31m\e[31m--\
    \ [E086] Syntax Error: /tmp/tmpq20t75yv.scala:13:47 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ < n).filter(_ > \e["
  stdout: ''
  timestamp: 1660010250
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.Set[Long]()\n  \
    \      for (i <- 2 to n by 2)\n            if (isPrime(i))\n                factors\
    \ += i\n            else\n                isPrime += i\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzrik4tnh.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzrik4tnh.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpzrik4tnh.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010248
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val isPrime = mutable.HashSet[Boolean]()\n        val maxFactor = mutable.HashMap[Long,\
    \ Long]()\n        val maxFactors = mutable.HashMap[Long, Long]()\n        val\
    \ maxPrime = mutable.HashMap[Long, Long]()\n        val maxPrimes = mutable.HashMap[Long,\
    \ Long]()\n        val maxIsPrime = mutable.HashMap[Long, Boolean]()\n       \
    \ val maxIsPrimes = mutable.HashMap[Long, Boolean]()\n        val maxPrimeFactor\
    \ = mutable.HashMap[Long, Long]()\n        val maxPrimeFactors = mutable.HashMap[Long,\
    \ Long]()\n        val maxPrimeFactorsPrime = mutable.HashMap[Long, Long]()\n\
    \        val maxPrimeFactorsPrimes = mutable.HashMap[Long, Long]()\n        val\
    \ maxPrimeFactorsPrimePrime = mutable.HashMap[Long, Long]()\n        val maxPrimeFactorsPrimePrimes\
    \ = mutable.HashMap[Long, Long]()\n        val maxPrimeFactorsPrimePrimePrime\
    \ = mutable.HashMap[Long, Long]()\n        val maxPrimeFactorsPrimePrimePrimes\
    \ = mutable.HashMap[Long, Long]()\n        val maxPrimeFactorsPrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Long]()\n        val maxPrimeFactorsPrimePrimePrimePrimes\
    \ = mutable.HashMap[Long, Long]()\n        val maxPrimeFactorsPrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Long]()\n        val maxPrimeFactorsPrimePrimePrimePrimePrimes\
    \ = mutable.HashMap[Long, Long]()\n        val maxPrimeFactorsPrimePrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Long]()\n        val maxPrimeFactorsPrimePrimePrimePrimePrimes\
    \ = mutable.HashMap[Long, Long]()\n        val maxPrimeFactorsPrimePrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Long]()\n        val maxPrimeFactorsPrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7khusgfz.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7khusgfz.scala:32:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxPrimeFactorsPrimePrimePrimePrimePrimes\e[0m = mutable.HashMap[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorsPrimePrimePrimePrimePrimes is already defined\
    \ as \e[33mvalue\e[0m \e[35mmaxPrimeFactorsPrimePrimePrimePrimePrimes\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp7khusgfz.scala:33:12 ---------------------------\e[0m\e[0m\n\e[31m33\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeFactorsPrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.HashMap[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorsPrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35mmaxPrimeFactorsPrimePrimePrimePrimePrimePrime\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp7khusgfz.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp7khusgfz.scala:11:21 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m        "
  stdout: ''
  timestamp: 1660010248
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp826c9f8s.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp826c9f8s.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i==0){\n\
    \                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu9mcsoqh.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpu9mcsoqh.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010247
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ % _ != 0)\n       \
    \ val isPrimeIter2 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ %\
    \ _ == 0)\n        val isPrimeIter3 = Iterator.iterate(2l)(_ + 2l).takeWhile(_\
    \ < n).filter(_ % _ == 0)\n        val isPrimeIter4 = Iterator.iterate(2l)(_ +\
    \ 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter5 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter7 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter9 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter10 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter11 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter13 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter14 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter15 = Iterator.iterate(2l)(_\
    \ + 2l).take\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp63lzou9p.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp63lzou9p.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp63lzou9p.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmp63lzou9p.scala:13:79 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ < n).filter(_ % _ != \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                       ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \            Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmp63lzou9p.scala:14:80 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ < n).filter(_ % _ == \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \             Wrong number of parameters, expec"
  stdout: ''
  timestamp: 1660010249
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        var largestPrimeFactor = Long.MaxValue\n\
    \        var currentPrime = 1\n        while (n > 1) {\n            if (n % currentPrime\
    \ == 0) {\n                factors += currentPrime\n                n /= currentPrime\n\
    \            } else {\n                currentPrime += 1\n            }\n    \
    \    }\n        factors.foreach(x => largestPrimeFactor = math.max(largestPrimeFactor,\
    \ x))\n        largestPrimeFactor\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc_57y6lw.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpc_57y6lw.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                n /= currentPrime\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a\
    \ member of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010249
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_\
    \ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _\
    \ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_\
    \ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_\
    \ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _\
    \ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_\
    \ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_\
    \ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _\
    \ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_\
    \ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_\
    \ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _\
    \ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_\
    \ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_\
    \ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _\
    \ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_\
    \ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_\
    \ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _\
    \ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_\
    \ > 1).filter(_\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpnt1sf4ii.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnt1sf4ii.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnt1sf4ii.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnt1sf4ii.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E081] Type Error:\
    \ /tmp/tmpnt1sf4ii.scala:13:1539 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).dropWhile(_ %\
    \ _ == \e[31m0\e[0m).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).takeWhile(_\
    \ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).takeWhile(_ > \e[31m1\e[0m).filter(_\
    \ % _ == \e[31m0\e[0m).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).takeWhile(_\
    \ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).takeWhile(_ > \e[31m1\e[0m).filter(_\
    \ % _ == \e[31m0\e[0m).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).takeWhile(_\
    \ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e["
  stdout: ''
  timestamp: 1660010251
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx_l9fykh.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpx_l9fykh.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx_l9fykh.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010249
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = 0\n        var maxFactorIndex = 0\n        var isPrime = true\n        var\
    \ isPrimeIndex = 0\n        var isPrime2 = true\n        var isPrime2Index = 0\n\
    \        var isPrime3 = true\n        var isPrime3Index = 0\n        var isPrime4\
    \ = true\n        var isPrime4Index = 0\n        var isPrime5 = true\n       \
    \ var isPrime5Index = 0\n        var isPrime6 = true\n        var isPrime6Index\
    \ = 0\n        var isPrime7 = true\n        var isPrime7Index = 0\n        var\
    \ isPrime8 = true\n        var isPrime8Index = 0\n        var isPrime9 = true\n\
    \        var isPrime9Index = 0\n        var isPrime10 = true\n        var isPrime10Index\
    \ = 0\n        var isPrime11 = true\n        var isPrime11Index = 0\n        var\
    \ isPrime12 = true\n        var isPrime12Index = 0\n        var isPrime13 = true\n\
    \        var isPrime13Index = 0\n        var isPrime14 = true\n        var isPrime14Index\
    \ = 0\n        var isPrime15 = true\n        var isPrime15Index = 0\n        var\
    \ isPrime16 = true\n        var isPrime16Index = 0\n        var isPrime17 = true\n\
    \        var isPrime17Index = 0\n        var isPrime18 = true\n        var isPrime18Index\
    \ = 0\n        var isPrime19 = true\n        var isPrime19Index = 0\n        var\
    \ isPrime20 = true\n        var isPrime20Index = 0\n        var isPrime21 = true\n\
    \        var isPrime21Index = 0\n        var isPrime22 = true\n        var isPrime22Index\
    \ = 0\n        var isPrime23 = true\n        var isPrime23Index = 0\n        var\
    \ isPrime24 = true\n        var isPrime24Index = 0\n        var isPrime25 = true\n\
    \        var isPrime25Index = 0\n        var isPrime26 = true\n        var isPrime26Index\
    \ = 0\n        var isPrime27 = true\n        var isPrime27Index = 0\n        var\
    \ isPrime28 = true\n        var isPrime28Index = 0\n        var isPrime29 = true\n\
    \        var isPrime29Index = 0\n        var isPrime30 = true\n        var isPrime30Index\
    \ = 0\n        var isPrime31 = true\n        var isPrime31Index = 0\n        var\
    \ isPrime32 = true\n        var isPrime32Index = 0\n        var isPrime33 = true\n\
    \        var isPrime33Index = 0\n        var isPrime34 = true\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1uwg29bh.scala:79:5\
    \ ---------------------\e[0m\e[0m\n\e[31m79 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010249
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val primes = mutable.Set[Long]()\n        val\
    \ isPrime = mutable.Set[Boolean]()\n        val isPrimeIter = mutable.Set[Boolean]()\n\
    \        val isPrimeIter2 = mutable.Set[Boolean]()\n        val isPrimeIter3 =\
    \ mutable.Set[Boolean]()\n        val isPrimeIter4 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter5 = mutable.Set[Boolean]()\n        val isPrimeIter6 =\
    \ mutable.Set[Boolean]()\n        val isPrimeIter7 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter8 = mutable.Set[Boolean]()\n        val isPrimeIter9 =\
    \ mutable.Set[Boolean]()\n        val isPrimeIter10 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter11 = mutable.Set[Boolean]()\n        val isPrimeIter12\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter13 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter14 = mutable.Set[Boolean]()\n        val isPrimeIter15\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter16 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter17 = mutable.Set[Boolean]()\n        val isPrimeIter18\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter19 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter20 = mutable.Set[Boolean]()\n        val isPrimeIter21\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter22 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter23 = mutable.Set[Boolean]()\n        val isPrimeIter24\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter25 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter26 = mutable.Set[Boolean]()\n        val isPrimeIter27\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter28 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter29 = mutable.Set[Boolean]()\n        val isPrimeIter30\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk02hnsvs.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:13:26\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeIter\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                          ^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpk02hnsvs.scala:14:27 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.Set[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer ex"
  stdout: ''
  timestamp: 1660010249
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        factors += 2\n        factors +=\
    \ 3\n        factors += 5\n        factors += 7\n        factors += 11\n     \
    \   factors += 13\n        factors += 17\n        factors += 19\n        factors\
    \ += 23\n        factors += 29\n        factors += 31\n        factors += 37\n\
    \        factors += 41\n        factors += 43\n        factors += 47\n       \
    \ factors += 53\n        factors += 59\n        factors += 61\n        factors\
    \ += 67\n        factors += 71\n        factors += 73\n        factors += 79\n\
    \        factors += 83\n        factors += 89\n        factors += 97\n       \
    \ factors += 101\n        factors += 103\n        factors += 107\n        factors\
    \ += 109\n        factors += 113\n        factors += 127\n        factors += 131\n\
    \        factors += 137\n        factors += 139\n        factors += 147\n    \
    \    factors += 151\n        factors += 157\n        factors += 163\n        factors\
    \ += 167\n        factors += 173\n        factors += 179\n        factors += 181\n\
    \        factors += 191\n        factors += 193\n        factors += 197\n    \
    \    factors += 199\n        factors += 211\n        factors += 223\n        factors\
    \ += 227\n        factors += 229\n        factors += 233\n        factors += 239\n\
    \        factors += 241\n        factors += 247\n        factors += 249\n    \
    \    factors += 251\n        factors += 257\n        factors += 263\n        factors\
    \ += 269\n        factors += 271\n        factors += 277\n        factors += 281\n\
    \        factors += 283\n        factors += 293\n        factors += 307\n    \
    \    factors += 311\n        factors += 313\n        factors += 317\n        factors\
    \ += 323\n        factors += 329\n        factors += 331\n        factors += 337\n\
    \        factors += 347\n        factors += 349\n        factors += 353\n    \
    \    factors += 359\n        factors += 363\n        factors += 369\n        factors\
    \ += 373\n        factors += 379\n        factors += 383\n        factors += 389\n\
    \        factors += 395\n        factors += 401\n        factors += 409\n    \
    \    factors += 419\n        factors += 421\n        factors += 431\n        factors\
    \ += 433\n        factors += 439\n        factors += 443\n        factors += 449\n\
    \        factors += 457\n        factors += 461\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv6gyn310.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010244
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        var factor = 2\n        while (factor <= n)\
    \ {\n            if (n % factor == 0) {\n                primes += factor\n  \
    \              n /= factor\n            }\n            else {\n              \
    \  factor += 1\n            }\n        }\n        primes.last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpji0u4qoz.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpji0u4qoz.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010248
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ isPrime = mutable.Set[Boolean]()\n        val isFactor = mutable.Set[Boolean]()\n\
    \        val isPrimeFactor = mutable.Set[Boolean]()\n        val isPrimePrime\
    \ = mutable.Set[Boolean]()\n        val isPrimePrimeFactor = mutable.Set[Boolean]()\n\
    \        val isPrimePrimePrime = mutable.Set[Boolean]()\n        val isPrimePrimePrimeFactor\
    \ = mutable.Set[Boolean]()\n        val isPrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isPrimePrimePrimePrimeFactor = mutable.Set[Boolean]()\n        val\
    \ isPrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n        val isPrimePrimePrimePrimePrimeFactor\
    \ = mutable.Set[Boolean]()\n        val isPrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.Set[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.Set[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.Set[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.Set[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.Set[Boolean]()\n\
    \        val isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4iavedj1.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4iavedj1.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4iavedj1.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4iavedj1.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4iavedj1.scala:13:23\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misFactor\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4iavedj1.scala:14:28\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeFactor\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanat"
  stdout: ''
  timestamp: 1660010249
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrime = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 2 to n by 2) {\n            if (n % i == 0) {\n           \
    \     primes += i\n                if (primes.size > largestPrime.size) {\n  \
    \                  largestPrime += primes.last\n                }\n          \
    \      primes -= i\n            }\n        }\n        largestPrime.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp859g50t_.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp859g50t_.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlargestPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp859g50t_.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010250
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factor = 2\n        while (factor\
    \ <= n) {\n            if (n % factor == 0) {\n                primes += factor\n\
    \                n /= factor\n            }\n            else {\n            \
    \    factor += 1\n            }\n        }\n        primes.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd0lhgrak.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpd0lhgrak.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805727
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        var isPrimeTrue\
    \ = false\n        var isPrimeFalse = false\n        var isPrimeTrue2 = false\n\
    \        var isPrimeFalse2 = false\n        var isPrimeTrue3 = false\n       \
    \ var isPrimeFalse3 = false\n        var isPrimeTrue4 = false\n        var isPrimeFalse4\
    \ = false\n        var isPrimeTrue5 = false\n        var isPrimeFalse5 = false\n\
    \        var isPrimeTrue6 = false\n        var isPrimeFalse6 = false\n       \
    \ var isPrimeTrue7 = false\n        var isPrimeFalse7 = false\n        var isPrimeTrue8\
    \ = false\n        var isPrimeFalse8 = false\n        var isPrimeTrue9 = false\n\
    \        var isPrimeFalse9 = false\n        var isPrimeTrue10 = false\n      \
    \  var isPrimeFalse10 = false\n        var isPrimeTrue11 = false\n        var\
    \ isPrimeFalse11 = false\n        var isPrimeTrue12 = false\n        var isPrimeFalse12\
    \ = false\n        var isPrimeTrue13 = false\n        var isPrimeFalse13 = false\n\
    \        var isPrimeTrue14 = false\n        var isPrimeFalse14 = false\n     \
    \   var isPrimeTrue15 = false\n        var isPrimeFalse15 = false\n        var\
    \ isPrimeTrue16 = false\n        var isPrimeFalse16 = false\n        var isPrimeTrue17\
    \ = false\n        var isPrimeFalse17 = false\n        var isPrimeTrue18 = false\n\
    \        var isPrimeFalse18 = false\n        var isPrimeTrue19 = false\n     \
    \   var isPrimeFalse19 = false\n        var isPrimeTrue20 = false\n        var\
    \ isPrimeFalse20 = false\n        var isPrimeTrue21 = false\n        var isPrimeFalse21\
    \ = false\n        var isPrimeTrue22 = false\n        var isPrimeFalse22 = false\n\
    \        var isPrimeTrue23 = false\n        var isPrimeFalse23 = false\n     \
    \   var isPrimeTrue24 = false\n        var isPrimeFalse24 = false\n        var\
    \ isPrimeTrue25 = false\n        var isPrimeFalse25 = false\n        var isPrimeTrue26\
    \ = false\n        var isPrimeFalse26 = false\n        var isPrimeTrue27 = false\n\
    \        var isPrimeFalse27 = false\n        var isPrimeTrue28 = false\n     \
    \   var isPrimeFalse28 = false\n        var isPrimeTrue29 = false\n        var\
    \ isPrimeFalse29 = false\n        var isPrimeTrue30 = false\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo0t_gaxg.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpo0t_gaxg.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpo0t_gaxg.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpo0t_gaxg.scala:72:5 ---------------------\e\
    [0m\e[0m\n\e[31m72 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010251
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val i = 2l\n        while (i <= n / i) {\n\
    \            if (n % i == 0) {\n                factors += i\n               \
    \ n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpirkx7xau.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpirkx7xau.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpirkx7xau.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010258
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        var i = 2l\n        while(i <= n){\n    \
    \        if(n % i == 0){\n                primes += i\n                n /= i\n\
    \            }\n            i += 1\n        }\n        primes.last\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw5yjaoye.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpw5yjaoye.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010257
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime3\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime4 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime6\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime7 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime8 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime9\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime10 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime12\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime15\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime16 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime18\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime19 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime20 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime21\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime22 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime24\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime25 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime27\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime28 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime29 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime30\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime31 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime32 = mutable.ArrayBuffer.empty[Boolean]\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpibjjkfai.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpibjjkfai.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpibjjkfai.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpibjjkfai.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpibjjkfai.scala:14:23 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpibjjkfai.scala:15:23 ------------------------\e\
    [0m\e"
  stdout: ''
  timestamp: 1660010256
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factor = 2\n        while (factor\
    \ <= n) {\n            if (n % factor == 0) {\n                primes += factor\n\
    \                n /= factor\n            }\n            factor += 1\n       \
    \ }\n        primes.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpunrouy_7.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpunrouy_7.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010258
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx_l9fykh.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpx_l9fykh.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx_l9fykh.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010249
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        var factor = 2\n        while (factor <= n) {\n\
    \            if (n % factor == 0) {\n                primes.add(factor)\n    \
    \            n /= factor\n            }\n            else {\n                factor\
    \ += 1\n            }\n        }\n        primes.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb7cbw5d.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpxb7cbw5d.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010258
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        var i = 2\n\
    \        while (i <= n / i) {\n            if (n % i == 0) {\n               \
    \ factors += i\n                primes += i\n                isPrime += true\n\
    \            }\n            i += 1\n        }\n        val largestPrime = primes.max\n\
    \        val largestPrimeFactor = factors.max\n        val largestPrimeFactorIsPrime\
    \ = isPrime.contains(largestPrimeFactor)\n        if (largestPrimeFactorIsPrime)\
    \ {\n            largestPrimeFactor\n        } else {\n            largestPrimeFactor\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_y5wioz5.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_y5wioz5.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_y5wioz5.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010254
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = 0\n        var maxFactorIndex = 0\n        var isPrime = true\n        var\
    \ isPrimeIndex = 0\n        var isPrimeFactor = true\n        var isPrimeFactorIndex\
    \ = 0\n        var isPrimeFactor2 = true\n        var isPrimeFactor2Index = 0\n\
    \        var isPrimeFactor3 = true\n        var isPrimeFactor3Index = 0\n    \
    \    var isPrimeFactor4 = true\n        var isPrimeFactor4Index = 0\n        var\
    \ isPrimeFactor5 = true\n        var isPrimeFactor5Index = 0\n        var isPrimeFactor6\
    \ = true\n        var isPrimeFactor6Index = 0\n        var isPrimeFactor7 = true\n\
    \        var isPrimeFactor7Index = 0\n        var isPrimeFactor8 = true\n    \
    \    var isPrimeFactor8Index = 0\n        var isPrimeFactor9 = true\n        var\
    \ isPrimeFactor9Index = 0\n        var isPrimeFactor10 = true\n        var isPrimeFactor10Index\
    \ = 0\n        var isPrimeFactor11 = true\n        var isPrimeFactor11Index =\
    \ 0\n        var isPrimeFactor12 = true\n        var isPrimeFactor12Index = 0\n\
    \        var isPrimeFactor13 = true\n        var isPrimeFactor13Index = 0\n  \
    \      var isPrimeFactor14 = true\n        var isPrimeFactor14Index = 0\n    \
    \    var isPrimeFactor15 = true\n        var isPrimeFactor15Index = 0\n      \
    \  var isPrimeFactor16 = true\n        var isPrimeFactor16Index = 0\n        var\
    \ isPrimeFactor17 = true\n        var isPrimeFactor17Index = 0\n        var isPrimeFactor18\
    \ = true\n        var isPrimeFactor18Index = 0\n        var isPrimeFactor19 =\
    \ true\n        var isPrimeFactor19Index = 0\n        var isPrimeFactor20 = true\n\
    \        var isPrimeFactor20Index = 0\n        var isPrimeFactor21 = true\n  \
    \      var isPrimeFactor21Index = 0\n        var isPrimeFactor22 = true\n    \
    \    var isPrimeFactor22Index = 0\n        var isPrimeFactor23 = true\n      \
    \  var isPrimeFactor23Index = 0\n        var isPrimeFactor24 = true\n        var\
    \ isPrimeFactor24Index = 0\n        var isPrimeFactor25 = true\n        var isPrimeFactor25Index\
    \ = 0\n        var isPrimeFactor26 = true\n        var isPrimeFactor26Index =\
    \ 0\n        var isPrimeFactor27 = true\n        var isPrimeFactor27Index = 0\n\
    \        var isPrimeFactor28 = true\n        var isPrimeFactor28Index = 0\n  \
    \      var isPrimeFactor29 = true\n        var isPrimeFactor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptjs1ahgk.scala:72:4 ----------------------------\e\
    [0m\e[0m\n\e[31m72 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmptjs1ahgk.scala:72:5 ---------------------\e[0m\e[0m\n\e[31m72 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010259
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n > 1) {\n    \
    \        factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpar8v3tnx.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpar8v3tnx.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010260
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i\
    \ == 0){\n                factors += i\n                n /= i\n            }\n\
    \        }\n        factors.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiwoxdr4o.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpiwoxdr4o.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpiwoxdr4o.scala:14:18\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                n /= i\n\e\
    [31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ /= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010261
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var factor = 2\n        while(factor <= n) {\n\
    \            if(n % factor == 0) {\n                factors += factor\n      \
    \          n /= factor\n            }\n            else {\n                factor\
    \ += 1\n            }\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7quf9zns.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp7quf9zns.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010260
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = Long.MinValue\n        var maxFactorIndex = 0\n        var isPrime = true\n\
    \        var primeFactors = mutable.ArrayBuffer.empty[Long]\n        for (i <-\
    \ 2 to n by 2) {\n            if (n % i == 0) {\n                isPrime = false\n\
    \                break\n            }\n        }\n        if (isPrime) {\n   \
    \         primeFactors = primeFactors :+ n\n        }\n        for (i <- primeFactors.indices)\
    \ {\n            if (primeFactors(i) > maxFactor) {\n                maxFactor\
    \ = primeFactors(i)\n                maxFactorIndex = i\n            }\n     \
    \   }\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp81xkm8kt.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mprimeFactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp81xkm8kt.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp81xkm8kt.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010261
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        for(i <- 2 to n by 2)\n            if(!factors.contains(i)\
    \ && n % i == 0)\n                factors += i\n        factors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpliiudzmu.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpliiudzmu.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010260
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var maxFactor = 0\n        for(i <- 2 to n/2)\
    \ {\n            if(n%i == 0) {\n                factors.add(i)\n            \
    \    maxFactor = i\n            }\n        }\n        if(maxFactor == 0) maxFactor\
    \ = n\n        factors.max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_4e0uzro.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp_4e0uzro.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n/\e[31m2\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m \
    \                     Found:    Long\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_4e0uzro.scala:18:39\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mif\e[0m(maxFactor\
    \ == \e[31m0\e[0m) maxFactor = n\n\e[31m\e[31m   |\e[0m                      \
    \                 ^\e[0m\n\e[31m   |\e[0m                                    \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                                    \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010261
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6qbzyik0.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp6qbzyik0.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6qbzyik0.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010262
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0))\n\
    \        val isPrimeIterIter = Iterator.iterate(isPrime)(x => primes.append(x))\n\
    \        val isPrimeIterIterIter = Iterator.iterate(primes)(x => isPrime.append(x))\n\
    \        val isPrimeIterIterIterIter = Iterator.iterate(isPrime)(x => primes.append(x))\n\
    \        val isPrimeIterIterIterIterIter = Iterator.iterate(primes)(x => isPrime.append(x))\n\
    \        val isPrimeIterIterIterIterIterIter = Iterator.iterate(isPrime)(x =>\
    \ primes.append(x))\n        val isPrimeIterIterIterIterIterIterIterIter = Iterator.iterate(primes)(x\
    \ => isPrime.append(x))\n        val isPrimeIterIterIterIterIterIterIterIter =\
    \ Iterator.iterate(isPrime)(x => primes.append(x))\n        val isPrimeIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(primes)(x => isPrime.append(x))\n        val isPrimeIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrime)(x => primes.append(x))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(primes)(x => isPrime.append(x))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrime)(x => primes.append(x))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(primes)(x => isPrime.append(x))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrime)(x => primes.append(x))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(primes)(x => isPrime.append(x))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrime)(x => primes.append(x))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iter\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp1bq2fi4o.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.iterate(isPrime)(\e[36mx\e[0m => primes.append(x))\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIter is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIter\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp1bq2fi4o.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.iterate(primes)(\e[36mx\e[0m => isPrime.append(x))\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIterIterIterIter is\
    \ already defined as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp1bq2fi4o.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.iterate(primes)(\e[36mx\e[0m => isPrime.append(x))\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter\
    \ is already defined as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Er"
  stdout: ''
  timestamp: 1660010261
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val isPrime = mutable.HashSet[Boolean]()\n        val isPrimeIter = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ < n).filter(_ % _ == 0).iterator\n        val isPrimeIter2\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_ % _ != 0).iterator\n\
    \        val isPrimeIter3 = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_\
    \ % _ == 0).iterator\n        val isPrimeIter4 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ < n).filter(_ % _ != 0).iterator\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ < n).filter(_ % _ == 0).iterator\n        val isPrimeIter6\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_ % _ != 0).iterator\n\
    \        val isPrimeIter7 = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_\
    \ % _ == 0).iterator\n        val isPrimeIter8 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ < n).filter(_ % _ != 0).iterator\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ < n).filter(_ % _ == 0).iterator\n        val isPrimeIter10\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_ % _ != 0).iterator\n\
    \        val isPrimeIter11 = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_\
    \ % _ == 0).iterator\n        val isPrimeIter12 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ < n).filter(_ % _ != 0).iterator\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ < n).filter(_ % _ == 0).iterator\n        val isPrimeIter14\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_ % _ != 0).iterator\n\
    \        val isPrimeIter15 = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_\
    \ % _ == 0).iterator\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpv4rkc3qb.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4rkc3qb.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4rkc3qb.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4rkc3qb.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.HashSet[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpv4rkc3qb.scala:13:46\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_ * _).takeWhile(_ < n).filter(_\
    \ % _ == \e[31m0\e[0m).iterator\n\e[31m\e[31m   |\e[0m                       \
    \                       ^^^^^\e[0m\n\e[31m   |\e[0m                          \
    \       Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmpv4rkc3qb.scala:13:77 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ < n).filter(_ % _ == \e[31m0\e[0m).iterator\n\e[31m\e[31m \
    \  |\e[0m                                                                    "
  stdout: ''
  timestamp: 1660010262
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val i = 2\n        while (i <= n / i) {\n\
    \            if (n % i == 0) {\n                factors += i\n               \
    \ n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxmtdjyr0.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpxmtdjyr0.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxmtdjyr0.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010261
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i\
    \ == 0){\n                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp44fh5t89.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp44fh5t89.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010262
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val primes = mutable.Set[Long]()\n        val\
    \ maxFactor = mutable.Set[Long]()\n        val maxFactors = mutable.Set[Long]()\n\
    \        val maxPrimes = mutable.Set[Long]()\n        val maxPrimeFactors = mutable.Set[Long]()\n\
    \        val maxPrimeFactorsOfPrimes = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimesOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimesOfPrimesOfPrimes =\
    \ mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimesOfPrimesOfPrimesOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimesOfPrimesOfPrimesOfPrimesOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorsOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimesOfPrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactors\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp41n12x6a.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp41n12x6a.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp41n12x6a.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp41n12x6a.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxFactor\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp41n12x6a.scala:13:25\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp41n12x6a.scala:14:24\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxPrimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation avail"
  stdout: ''
  timestamp: 1660010262
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        for (i <- 2 to n by 2) {\n            if (n % i == 0) {\n           \
    \     factors += i\n                isPrime += true\n            }\n        }\n\
    \        if (isPrime.nonEmpty) {\n            factors.max\n        } else {\n\
    \            n\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpazscdktz.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpazscdktz.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpazscdktz.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010262
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i < n) {\n     \
    \       if (n % i == 0) {\n                primes += i\n                n /= i\n\
    \            }\n            i += 1\n        }\n        primes.max\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0tg1z9iv.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp0tg1z9iv.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010263
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter2\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter3 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter4 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter5\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter6 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter7 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter8\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter10 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter11\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter12 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter13 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter14\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter15 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter16 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter17\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter18 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter19 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter20\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter21 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter22 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter23\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter24 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter25 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter26\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter27 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter28 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter29\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val is\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj5ui_g6w.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj5ui_g6w.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj5ui_g6w.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpj5ui_g6w.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpj5ui_g6w.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpj5ui_g6w.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m     "
  stdout: ''
  timestamp: 1660010264
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuvoo1hz5.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpuvoo1hz5.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe1tac955.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpe1tac955.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe1tac955.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010265
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var largestPrimeFactor = 0\n        for(i <-\
    \ 2 to n by 2){\n            if(n%i == 0){\n                factors.add(i)\n \
    \           }\n        }\n        while(factors.size > 0){\n            largestPrimeFactor\
    \ = factors.max\n            factors.remove(largestPrimeFactor)\n        }\n \
    \       largestPrimeFactor\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp15k2ptz4.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp15k2ptz4.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010267
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        val i = 2\n        while (i < n && primes.contains(i))\
    \ {\n            val prime = primes.last\n            primes += prime\n      \
    \      i += 1\n        }\n        primes.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptzc3ljg4.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmptzc3ljg4.scala:15:14 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010268
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n > 1) {\n    \
    \        factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbhgnt1gb.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val primes = mutable.Set[Long]()\n        val\
    \ isPrime = mutable.Set[Boolean]()\n        val isPrimeIter = mutable.Set[Boolean]()\n\
    \        val isPrimeIter2 = mutable.Set[Boolean]()\n        val isPrimeIter3 =\
    \ mutable.Set[Boolean]()\n        val isPrimeIter4 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter5 = mutable.Set[Boolean]()\n        val isPrimeIter6 =\
    \ mutable.Set[Boolean]()\n        val isPrimeIter7 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter8 = mutable.Set[Boolean]()\n        val isPrimeIter9 =\
    \ mutable.Set[Boolean]()\n        val isPrimeIter10 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter11 = mutable.Set[Boolean]()\n        val isPrimeIter12\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter13 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter14 = mutable.Set[Boolean]()\n        val isPrimeIter15\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter16 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter17 = mutable.Set[Boolean]()\n        val isPrimeIter18\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter19 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter20 = mutable.Set[Boolean]()\n        val isPrimeIter21\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter22 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter23 = mutable.Set[Boolean]()\n        val isPrimeIter24\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter25 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter26 = mutable.Set[Boolean]()\n        val isPrimeIter27\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter28 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter29 = mutable.Set[Boolean]()\n        val isPrimeIter30\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk02hnsvs.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:13:26\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeIter\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                          ^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpk02hnsvs.scala:14:27 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.Set[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer ex"
  stdout: ''
  timestamp: 1660010249
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to n by 2){\n        \
    \    if(n%i == 0){\n                factors += i\n            }\n        }\n \
    \       factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4c773hx3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp4c773hx3.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010270
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ maxFactor = mutable.Set[Long]()\n        val maxFactors = mutable.Set[Long]()\n\
    \        val maxPrime = mutable.Set[Long]()\n        val maxPrimes = mutable.Set[Long]()\n\
    \        val maxPrimeFactor = mutable.Set[Long]()\n        val maxPrimeFactors\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorPrime = mutable.Set[Long]()\n\
    \        val maxPrimeFactorPrimes = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrime\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimes = mutable.Set[Long]()\n\
    \        val maxPrimeFactorPrimePrimePrime = mutable.Set[Long]()\n        val\
    \ maxPrimeFactorPrimePrimePrimes = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val maxPrimeFactorPrimePrimePrimePrime = mutable.Set[Long]()\n      \
    \  val maxPrimeFactorPrimePrimePrimePrimes = mutable.Set[Long]()\n        val\
    \ maxPrimeFactorPrimePrimePrimePrimePrime = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrimePrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrimePrime =\
    \ mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrimePrimes =\
    \ mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val maxPrimeFactorPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val maxPrimeFactorPrimePrimePrimePrimePrime = mutable.Set[Long]()\n \
    \       val maxPrimeFactorPrimePrimePrimePrimePrimes = mutable.Set[Long]\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmhu77zsr.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeFactorPrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorPrimePrimePrimePrime is already defined as \e\
    [33mvalue\e[0m \e[35mmaxPrimeFactorPrimePrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmhu77zsr.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxPrimeFactorPrimePrimePrimePrimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorPrimePrimePrimePrimes is already defined as\
    \ \e[33mvalue\e[0m \e[35mmaxPrimeFactorPrimePrimePrimePrimes\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmhu77zsr.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxPrimeFactorPrimePrimePrimePrimePrime\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorPrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35mmaxPrimeFactorPrimePrimePrimePrimePrime\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpmhu77zsr.scala:31:12 ---------------------------\e[0m\e[0m\n\e[31m31\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeFactorPrimePrimePrimePrimePrimes\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorPrimePrimePrimePrimePrimes is already defined\
    \ as"
  stdout: ''
  timestamp: 1660010271
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val maxFactor = mutable.Long.MaxValue\n        val maxPrime = mutable.Long.MaxValue\n\
    \        val maxFactorPrime = mutable.Long.MaxValue\n        val maxPrimePrime\
    \ = mutable.Long.MaxValue\n        val maxPrimePrimePrime = mutable.Long.MaxValue\n\
    \        val maxPrimePrimePrimePrime = mutable.Long.MaxValue\n        val maxPrimePrimePrimePrimePrime\
    \ = mutable.Long.MaxValue\n        val maxPrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n\
    \        val maxPrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n     \
    \   val maxPrimePrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n     \
    \   val maxPrimePrimePrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n\
    \        val maxPrimePrimePrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n\
    \        val maxPrimePrimePrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n\
    \        val maxPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n\
    \        val maxPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n\
    \        val maxPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n\
    \        val maxPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n\
    \        val maxPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n\
    \        val maxPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n\
    \        val maxPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Long.MaxValue\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx8mvz2rl.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.Long.MaxValue\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimePrimePrimePrimePrimePrime is already defined as \e\
    [33mvalue\e[0m \e[35mmaxPrimePrimePrimePrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx8mvz2rl.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxPrimePrimePrimePrimePrimePrimePrimePrime\e[0m = mutable.Long.MaxValue\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimePrimePrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35mmaxPrimePrimePrimePrimePrimePrimePrimePrime\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpx8mvz2rl.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxPrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.Long.MaxValue\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimePrimePrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35mmaxPrimePrimePrimePrimePrimePrimePrimePrime\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpx8mvz2rl.scala:27:12 ---------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.Long.MaxValue\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimePrim"
  stdout: ''
  timestamp: 1660010271
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        var factor = 2\n        while (n > 1) {\n\
    \            if (n % factor == 0) {\n                factors += factor\n     \
    \           n /= factor\n            } else {\n                factor += 1\n \
    \           }\n        }\n        factors.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprpsr00i5.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmprpsr00i5.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010270
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n != 1) factors\
    \ += n\n        factors.max\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk7cjzpuc.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpk7cjzpuc.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpk7cjzpuc.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010271
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxPrime\
    \ = 1\n        var maxFactor = 1\n        var maxFactorPrime = 1\n        var\
    \ maxFactorPrimePrime = 1\n        var maxFactorPrimePrimePrime = 1\n        var\
    \ maxFactorPrimePrimePrimePrime = 1\n        var maxFactorPrimePrimePrimePrimePrime\
    \ = 1\n        var maxFactorPrimePrimePrimePrimePrimePrime = 1\n        var maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 1\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 1\n   \
    \     var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 1\n       \
    \ var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 1\n        var\
    \ maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 1\n        var\
    \ maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 1\n     \
    \   var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 1\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 1\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 1\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 1\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 1\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 1\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 1\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 1\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 1\n        var maxFactorPrimePrimePri\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphmmk1s2c.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphmmk1s2c.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e[0m = \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmphmmk1s2c.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmphmmk1s2c.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined "
  stdout: ''
  timestamp: 1660010272
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while(i <= n /\
    \ i) {\n            if(n % i == 0) {\n                factors += i\n         \
    \       n /= i\n            }\n            i += 1\n        }\n        if(n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj71xqo9n.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj71xqo9n.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj71xqo9n.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010274
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var largestPrimeFactor\
    \ = 0\n        var primeFactors = mutable.ArrayBuffer.empty[Long]\n        var\
    \ isPrime = true\n        var isPrimeIter = Iterator.continually(isPrime)\n  \
    \      var isPrimeIter2 = Iterator.continually(isPrime)\n        var isPrimeIter3\
    \ = Iterator.continually(isPrime)\n        var isPrimeIter4 = Iterator.continually(isPrime)\n\
    \        var isPrimeIter5 = Iterator.continually(isPrime)\n        var isPrimeIter6\
    \ = Iterator.continually(isPrime)\n        var isPrimeIter7 = Iterator.continually(isPrime)\n\
    \        var isPrimeIter8 = Iterator.continually(isPrime)\n        var isPrimeIter9\
    \ = Iterator.continually(isPrime)\n        var isPrimeIter10 = Iterator.continually(isPrime)\n\
    \        var isPrimeIter11 = Iterator.continually(isPrime)\n        var isPrimeIter12\
    \ = Iterator.continually(isPrime)\n        var isPrimeIter13 = Iterator.continually(isPrime)\n\
    \        var isPrimeIter14 = Iterator.continually(isPrime)\n        var isPrimeIter15\
    \ = Iterator.continually(isPrime)\n        var isPrimeIter16 = Iterator.continually(isPrime)\n\
    \        var isPrimeIter17 = Iterator.continually(isPrime)\n        var isPrimeIter18\
    \ = Iterator.continually(isPrime)\n        var isPrimeIter19 = Iterator.continually(isPrime)\n\
    \        var isPrimeIter20 = Iterator.continually(isPrime)\n        var isPrimeIter21\
    \ = Iterator.continually(isPrime)\n        var isPrimeIter22 = Iterator.continually(isPrime)\n\
    \        var isPrimeIter23 = Iterator.continually(isPrime)\n        var isPrimeIter24\
    \ = Iterator.continually(isPrime)\n        var isPrimeIter25 = Iterator.continually(isPrime)\n\
    \        var isPrimeIter26 = Iterator.continually(isPrime)\n        var isPrimeIter27\
    \ = Iterator.continually(isPrime)\n        var isPrimeIter28 = Iterator.continually(isPrime)\n\
    \        var isPrimeIter29 = Iterator.continually(isPrime)\n        var isPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0e2ko3jn.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0e2ko3jn.scala:11:27\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mvar\e[0m \e\
    [36mprimeFactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                           ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp0e2ko3jn.scala:43:5 ---------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:  \
    \  Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010273
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 2 to n by 2) {\n           \
    \ if (n % i == 0) {\n                factors += i\n            }\n        }\n\
    \        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu0ixxinj.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpu0ixxinj.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = Long.MinValue\n        var maxFactorPrime = 0\n        var maxFactorPrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrime = 0\n        var\
    \ maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n    \
    \    var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n   \
    \     var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp73t2w6qj.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp73t2w6qj.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp73t2w6qj.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp73t2w6qj.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp"
  stdout: ''
  timestamp: 1660010273
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        var i = 2\n        while (i <= n / i) {\n\
    \            if (n % i == 0) {\n                factors += i\n               \
    \ n /= i\n            }\n            i += 1\n        }\n        if (n > 1) {\n\
    \            factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqjwc6yri.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpqjwc6yri.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010272
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIndex = mutable.ArrayBuffer.empty[Int]\n        val isPrimeIndexIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n  \
    \      val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n    \
    \    val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n      \
    \  val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n        val isPrimeIndexIndexIndexIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeIndexIndexIndexIndex =\
    \ mutable.ArrayBuffer.empty[Int]\n        val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n  \
    \      val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n    \
    \    val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n      \
    \  val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n        val isPrimeIndexIndexIndexIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeIndexIndexIndexIndex =\
    \ mutable.ArrayBuffer.empty[Int]\n        val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n  \
    \      val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n    \
    \    val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n      \
    \  val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n        val isPrimeIndexIndexIndexIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeIndexIndexIndexIndex =\
    \ mutable.ArrayBuffer.empty[Int]\n        val isPrimeIndexIndexIndexIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPri\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp97g6_tyh.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp97g6_tyh.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIndexIndexIndexIndex\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIndexIndexIndexIndex is already defined as \e[33mvalue\e\
    [0m \e[35misPrimeIndexIndexIndexIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp97g6_tyh.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36misPrimeIndexIndexIndexIndex\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0misPrimeIndexIndexIndexIndex is already defined as \e[33mvalue\e[0m \e\
    [35misPrimeIndexIndexIndexIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp97g6_tyh.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36misPrimeIndexIndexIndexIndex\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0misPrimeIndexIndexIndexIndex is already defined as \e[33mvalue\e[0m \e\
    [35misPrimeIndexIndexIndexIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp97g6_tyh.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36misPrimeIndexIndexIndexIndex\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       "
  stdout: ''
  timestamp: 1660010272
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n != 1)\
    \ factors += n\n        factors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiu82yyx_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpiu82yyx_.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010274
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2l\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                primes += i\n       \
    \         n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            primes += n\n        }\n        primes.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyqodvu1d.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpyqodvu1d.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyqodvu1d.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010275
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe1tac955.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpe1tac955.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe1tac955.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010265
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var factor = 2\n        while (n > 1) {\n   \
    \         if (n % factor == 0) {\n                factors += factor\n        \
    \        n /= factor\n            } else {\n                factor += 1\n    \
    \        }\n        }\n        factors.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph2b8vwh5.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmph2b8vwh5.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010273
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var largestPrimeFactor = 0\n        var currentPrime\
    \ = 1\n        var currentFactor = 1\n        var isPrime = true\n        for(i\
    \ <- 2 to n by 2){\n            isPrime = true\n            for(j <- 2 to i by\
    \ 2){\n                if(i % j == 0){\n                    isPrime = false\n\
    \                    break\n                }\n            }\n            if(isPrime){\n\
    \                factors += i\n                if(factors.size > largestPrimeFactor){\n\
    \                    largestPrimeFactor = factors.size\n                }\n  \
    \          }\n        }\n        largestPrimeFactor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgpnzra8v.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpgpnzra8v.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgpnzra8v.scala:20:20\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                    break\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010274
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        var maxPrime = 0\n        for(i <-\
    \ 2 to n){\n            val isPrime = true\n            for(j <- 2 to i){\n  \
    \              if(i % j == 0){\n                    isPrime = false\n        \
    \            break\n                }\n            }\n            if(isPrime){\n\
    \                primes += i\n                if(primes.last > maxPrime){\n  \
    \                  maxPrime = primes.last\n                }\n            }\n\
    \        }\n        maxPrime\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjj2oucl6.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpjj2oucl6.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpjj2oucl6.scala:16:28 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                    isPrime = \e[31mfalse\e[0m\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \             Reassignment to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpjj2oucl6.scala:17:20 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m                    break\n\e[31m\e[31m   |\e[0m         \
    \           ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010275
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val isPrime = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ != 0)\n        val isPrimeIter2 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ == 0)\n        val isPrimeIter3 = Iterator.iterate(n)(_ +\
    \ 2).takeWhile(_ <= n).filter(_ % _ == 1)\n        val isPrimeIter4 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 2)\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 3)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 4)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 5)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 6)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 7)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 8)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 9)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 10)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 11)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 12)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 13)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 14)\n        val isPrimeIter17 = Iterator.iterate(n)(_\
    \ + \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9t22xkq4.scala:28:51 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter17\e[0m = Iterator.iterate(n)(_\
    \ + \n\e[31m\e[31m   |\e[0m                                                  \
    \ ^\e[0m\n\e[31m   |\e[0m                                       expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9t22xkq4.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp9t22xkq4.scala:11:22 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.HashSet[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmp9t22xkq4.scala:12:78 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp9t22xkq4.scala:13:79\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_\
    \ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                 \
    \                                                              ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                 Wrong number o"
  stdout: ''
  timestamp: 1660010276
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by 2)\n        \
    \    if (n % i == 0)\n                factors += i\n        factors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgg_ju38l.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpgg_ju38l.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010248
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6qbzyik0.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp6qbzyik0.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6qbzyik0.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010262
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i\
    \ == 0){\n                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr_73ndmi.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpr_73ndmi.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010274
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by 2) {\n      \
    \      if (n % i == 0) {\n                factors += i\n            }\n      \
    \  }\n        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprwfiks4d.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprwfiks4d.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010276
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = 0\n        var maxFactorIndex = 0\n        var isPrime = true\n        var\
    \ primeFactors = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by\
    \ 2) {\n            if (n % i == 0) {\n                isPrime = false\n     \
    \           break\n            }\n        }\n        if (isPrime) {\n        \
    \    primeFactors = primeFactors :+ n\n        }\n        for (i <- 2 to n by\
    \ 2) {\n            if (n % i == 0) {\n                val factor = (n / i).toInt\n\
    \                if (factor > maxFactor) {\n                    maxFactor = factor\n\
    \                    maxFactorIndex = i\n                }\n            }\n  \
    \      }\n        if (maxFactorIndex > 0) {\n            primeFactors = primeFactors\
    \ :+ maxFactorIndex\n        }\n        primeFactors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5wfcmkij.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mprimeFactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5wfcmkij.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5wfcmkij.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5wfcmkij.scala:23:23\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to n by \e[31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                \
    \       ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\e\
    [31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010276
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxFactor = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        var i = 2\n        while(i <= n && primes.size < primeFactors.size) {\n\
    \            val isPrimeCheck = n % i == 0\n            if(isPrimeCheck) {\n \
    \               primes += i\n                isPrime += isPrimeCheck\n       \
    \     }\n            val factorCheck = i / primes.last\n            if(factorCheck\
    \ > maxFactor.last) {\n                maxFactor.last <- factorCheck\n       \
    \         factors += factorCheck\n            }\n            i += 1\n        }\n\
    \        if(primes.size == primeFactors.size) {\n            factors.last\n  \
    \      } else {\n            factors.last\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpgn76im1f.scala:24:31 -----------------------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                maxFactor.last <- factorCheck\n\e[31m\e\
    [31m   |\e[0m                               ^^\e[0m\n\e[31m   |\e[0m         \
    \                      end of statement expected but '<-' found\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgn76im1f.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpgn76im1f.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmaxFactor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpgn76im1f.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgn76im1f.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgn76im1f.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35m"
  stdout: ''
  timestamp: 1660010274
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by 2) {\n      \
    \      if (n % i == 0) {\n                factors += i\n            }\n      \
    \  }\n        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprwfiks4d.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprwfiks4d.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010276
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n > 1) {\n    \
    \        factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbhgnt1gb.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) ++ (2l to n by 2l) filter (_ % _ == 0)\n        val\
    \ largestPrime = primes.max\n        largestPrime match {\n            case 2l\
    \ => n\n            case _ => largestPrimeFactor(largestPrime / 2)\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn5us5bi5.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) ++ (\e[31m2l\e[0m to n by \e[31m2l\e[0m) filter (_ % _ == \e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010276
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val\
    \ isPrimeIter2 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _ ==\
    \ 0)\n        val isPrimeIter3 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 0)\n        val isPrimeIter4 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ == 0)\n        val isPrimeIter5 = Iterator.iterate(n)(_ +\
    \ 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val is\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5wdl8mn_.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5wdl8mn_.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5wdl8mn_.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5wdl8mn_.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error:\
    \ /tmp/tmp5wdl8mn_.scala:13:78 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp5wdl8mn_.scala:14:79\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_\
    \ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m    "
  stdout: ''
  timestamp: 1660010281
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i <= n / 2) {\n\
    \            if (n % i == 0) {\n                primes += i\n                n\
    \ /= i\n            }\n            i += 1\n        }\n        primes.last\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphezq0lgx.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmphezq0lgx.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010282
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp826c9f8s.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp826c9f8s.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter = Iterator.iterate(n)(n => n % 2 == 0).takeWhile(n =>\
    \ n != 1).iterator\n        val isPrimeIter2 = Iterator.iterate(n)(n => n % 2\
    \ == 0).takeWhile(n => n != 1).iterator\n        val isPrimeIter3 = Iterator.iterate(n)(n\
    \ => n % 2 == 0).takeWhile(n => n != 1).iterator\n        val isPrimeIter4 = Iterator.iterate(n)(n\
    \ => n % 2 == 0).takeWhile(n => n != 1).iterator\n        val isPrimeIter5 = Iterator.iterate(n)(n\
    \ => n % 2 == 0).takeWhile(n => n != 1).iterator\n        val isPrimeIter6 = Iterator.iterate(n)(n\
    \ => n % 2 == 0).takeWhile(n => n != 1).iterator\n        val isPrimeIter7 = Iterator.iterate(n)(n\
    \ => n % 2 == 0).takeWhile(n => n != 1).iterator\n        val isPrimeIter8 = Iterator.iterate(n)(n\
    \ => n % 2 == 0).takeWhile(n => n != 1).iterator\n        val isPrimeIter9 = Iterator.iterate(n)(n\
    \ => n % 2 == 0).takeWhile(n => n != 1).iterator\n        val isPrimeIter10 =\
    \ Iterator.iterate(n)(n => n % 2 == 0).takeWhile(n => n != 1).iterator\n     \
    \   val isPrimeIter11 = Iterator.iterate(n)(n => n % 2 == 0).takeWhile(n => n\
    \ != 1).iterator\n        val isPrimeIter12 = Iterator.iterate(n)(n => n % 2 ==\
    \ 0).takeWhile(n => n != 1).iterator\n        val isPrimeIter13 = Iterator.iterate(n)(n\
    \ => n % 2 == 0).takeWhile(n => n != 1).iterator\n        val isPrimeIter14 =\
    \ Iterator.iterate(n)(n => n % 2 == 0).takeWhile(n => n != 1).iterator\n     \
    \   val isPrimeIter15 = Iterator.iterate(n)(n => n % 2 == 0).takeWhile(n => n\
    \ != 1).iterator\n        val isPrimeIter16 = Iterator.iterate(n)(n => n % 2 ==\
    \ 0).takeWhile(n => n != 1).iterator\n        val isPrimeIter17 = Iterator.iterate(n)(n\
    \ => n % 2 == 0).takeWhile(n => n != 1).iterator\n        val is\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpekm5eot_.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpekm5eot_.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpekm5eot_.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpekm5eot_.scala:12:51\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e\
    [0m = Iterator.iterate(n)(\e[36mn\e[0m => n % \e[31m2\e[0m == \e[31m0\e[0m).takeWhile(\e\
    [36mn\e[0m => n != \e[31m1\e[0m).iterator\n\e[31m\e[31m   |\e[0m             \
    \                                      ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                                             Found:    Boolean\n\e[31m   |\e\
    [0m                                                   Required: Long\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpekm5eot_.scala:13:52 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(\e\
    [36mn\e[0m => n % \e[31m2\e[0m == \e[31m0\e[0m).takeWhile(\e[36mn\e[0m => n !=\
    \ \e[31m1\e[0m).iterator\n\e[31m\e[31m   |\e[0m                              \
    \                      ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \                              Found:    Boolean\n\e[31m   |\e[0m            \
    \                       "
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxPrime\
    \ = 0\n        var maxFactor = 0\n        var maxFactorPrime = 0\n        var\
    \ maxFactorPrimePrime = 0\n        var maxFactorPrimePrimePrime = 0\n        var\
    \ maxFactorPrimePrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 0\n   \
    \     var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n       \
    \ var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n        var\
    \ maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n        var\
    \ maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n     \
    \   var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPri\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp062styt_.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp062styt_.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp062styt_.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp062styt_.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35m\n\e[31m   |\e[0m  maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\n\
    \e[31m   |\e[0m\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1660010282
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuvoo1hz5.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpuvoo1hz5.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        val factors = mutable.ArrayBuffer(2)\n   \
    \     val isPrime = mutable.ArrayBuffer(true)\n        val isPrimeIter = Iterator.continually(isPrime)\n\
    \        val isPrimeIter2 = Iterator.continually(isPrime)\n        val isPrimeIter3\
    \ = Iterator.continually(isPrime)\n        val isPrimeIter4 = Iterator.continually(isPrime)\n\
    \        val isPrimeIter5 = Iterator.continually(isPrime)\n        val isPrimeIter6\
    \ = Iterator.continually(isPrime)\n        val isPrimeIter7 = Iterator.continually(isPrime)\n\
    \        val isPrimeIter8 = Iterator.continually(isPrime)\n        val isPrimeIter9\
    \ = Iterator.continually(isPrime)\n        val isPrimeIter10 = Iterator.continually(isPrime)\n\
    \        val isPrimeIter11 = Iterator.continually(isPrime)\n        val isPrimeIter12\
    \ = Iterator.continually(isPrime)\n        val isPrimeIter13 = Iterator.continually(isPrime)\n\
    \        val isPrimeIter14 = Iterator.continually(isPrime)\n        val isPrimeIter15\
    \ = Iterator.continually(isPrime)\n        val isPrimeIter16 = Iterator.continually(isPrime)\n\
    \        val isPrimeIter17 = Iterator.continually(isPrime)\n        val isPrimeIter18\
    \ = Iterator.continually(isPrime)\n        val isPrimeIter19 = Iterator.continually(isPrime)\n\
    \        val isPrimeIter20 = Iterator.continually(isPrime)\n        val isPrimeIter21\
    \ = Iterator.continually(isPrime)\n        val isPrimeIter22 = Iterator.continually(isPrime)\n\
    \        val isPrimeIter23 = Iterator.continually(isPrime)\n        val isPrimeIter24\
    \ = Iterator.continually(isPrime)\n        val isPrimeIter25 = Iterator.continually(isPrime)\n\
    \        val isPrimeIter26 = Iterator.continually(isPrime)\n        val isPrimeIter27\
    \ = Iterator.continually(isPrime)\n        val isPrimeIter\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxd3ggxgw.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxd3ggxgw.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxd3ggxgw.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxd3ggxgw.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mtrue\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxd3ggxgw.scala:41:5\
    \ ---------------------\e[0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1660010282
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i <= n / 2) {\n\
    \            if (n % i == 0) {\n                primes += i\n                n\
    \ /= i\n            }\n            i += 1\n        }\n        primes.last\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphezq0lgx.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmphezq0lgx.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010282
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(n)(n => n % 2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0l).drop(2l).takeWhile(n\
    \ => n % 2l != 0l).drop(2l).takeWhile(n => n % 2l != 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt_7t8f1m.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt_7t8f1m.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt_7t8f1m.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt_7t8f1m.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpt_7t8f1m.scala:13:93 --------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(\e\
    [36mn\e[0m => n % \e[31m2l\e[0m).takeWhile(\e[36mn\e[0m => n % \e[31m2l\e[0m !=\
    \ \e[31m0l\e[0m).drop(\e[31m2l\e[0m).takeWhile(\e[36mn\e[0m => n % \e[31m2l\e\
    [0m != \e[31m0l\e[0m).drop(\e[31m2l\e[0m).takeWhile(\e[36mn\e[0m => n % \e[31m2l\e\
    [0m != \e[31m0l\e[0m).drop(\e[31m2l\e[0m).takeWhile(\e[36mn\e[0m => n % \e[31m2l\e\
    [0m != \e[31m0l\e[0m).drop(\e[31m2l\e[0m).takeWhile(\e[36mn\e[0m => n % \e[31m2l\e\
    [0m != \e[31m0l\e[0m).drop(\e[31m2l\e[0m).takeWhile(\e[36mn\e[0m => n % \e[31m2l\e\
    [0m != \e[31m0l\e[0m).drop(\e[31m2l\e[0m).takeWhile(\e[36mn\e[0m => n % \e[31m2l\e\
    [0m != \e["
  stdout: ''
  timestamp: 1660010288
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val i = 2\n        while(i <= n/i) {\n  \
    \          if(n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        factors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq9dpdjom.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpq9dpdjom.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpq9dpdjom.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010284
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        for(i <- 2 to n by 2)\n            if(n % i ==\
    \ 0)\n                factors += i\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu3y0ihok.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpu3y0ihok.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010284
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by 2) {\n      \
    \      if (n % i == 0) {\n                factors += i\n            }\n      \
    \  }\n        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprwfiks4d.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprwfiks4d.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010276
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <= n).filter(_ % _ != 0)\n      \
    \  val isPrimeIter2 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <= n).filter(_\
    \ % _ == 0)\n        val isPrimeIter3 = Iterator.iterate(2l)(_ + 2l).takeWhile(_\
    \ <= n).filter(_ % _ == 0)\n        val isPrimeIter4 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter5 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter7 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter9 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter10 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter11 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter13 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter14 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter15 = Iterator.iterate(2l)(_\
    \ + 2l).take\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc0vec616.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpc0vec616.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpc0vec616.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmpc0vec616.scala:13:80 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ <= n).filter(_ % _ != \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \             Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmpc0vec616.scala:14:81 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                         ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \              Wrong number of parameters, e"
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        var largestPrimeFactor = Long.MaxValue\n\
    \        var currentPrime = 1\n        while (n > 1) {\n            if (factors.contains(n))\
    \ {\n                largestPrimeFactor = n\n                break\n         \
    \   }\n            factors += n\n            currentPrime += 1\n            while\
    \ (n % currentPrime == 0) {\n                n /= currentPrime\n             \
    \   factors += n\n            }\n        }\n        largestPrimeFactor\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9f4yek5m.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp9f4yek5m.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9f4yek5m.scala:21:18 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                n /= currentPrime\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a\
    \ member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010285
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 2\n        while (i <= n / i) {\n            if (n % i == 0)\
    \ {\n                factors += i\n                primes += i\n            }\n\
    \            i += 1\n        }\n        val largestPrime = primes.max\n      \
    \  factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzdy13i6t.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzdy13i6t.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010281
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6qbzyik0.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp6qbzyik0.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6qbzyik0.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010262
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuvoo1hz5.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpuvoo1hz5.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i\
    \ == 0){\n                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr_73ndmi.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpr_73ndmi.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010274
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for (d <- 2 to n by 2) {\n           \
    \ if (n % d == 0) {\n                factors += d\n                n /= d\n  \
    \          }\n        }\n        factors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5wss15y4.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp5wss15y4.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5wss15y4.scala:14:18\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                n /= d\n\e\
    [31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ /= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val n = n.toInt\n        val i = 2\n        while (i <= n / i) {\n    \
    \        if (n % i == 0) {\n                factors += i\n                primes\
    \ += i\n            }\n            i += 1\n        }\n        val largestPrime\
    \ = primes.max\n        factors.find(n => n % n == 0) match {\n            case\
    \ Some(factor) => factor\n            case None => largestPrime\n        }\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8xm7lysf.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp8xm7lysf.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmp8xm7lysf.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = n.toInt\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp8xm7lysf.scala:19:14 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean i.!=?\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8xm7lysf.scala:23:33\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m            \e[33mcase\e\
    [0m Some(factor) => factor\n\e[31m\e[31m   |\e[0m                            \
    \     ^^^^^^\e[0m\n\e[31m   |\e[0m                                 Not found:\
    \ factor\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1660010285
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 0)\n        val isPrimeIter2 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ != 0)\n        val isPrimeIter3 = Iterator.iterate(n)(_ +\
    \ 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter4 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter17 = Iterator.iterate(n)(_\
    \ + \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpbl9nlzw8.scala:28:51 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter17\e[0m = Iterator.iterate(n)(_\
    \ + \n\e[31m\e[31m   |\e[0m                                                  \
    \ ^\e[0m\n\e[31m   |\e[0m                                       expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpbl9nlzw8.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpbl9nlzw8.scala:11:22 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmpbl9nlzw8.scala:12:78 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpbl9nlzw8.scala:13:79\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_\
    \ <= n).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                 \
    \                                                              ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                               "
  stdout: ''
  timestamp: 1660010287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by 2) {\n      \
    \      if (n % i == 0) {\n                factors += i\n            }\n      \
    \  }\n        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprwfiks4d.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprwfiks4d.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010276
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i ==\
    \ 0){\n                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphf45_g9_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphf45_g9_.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val i = 2\n        while (i <= n / i) {\n\
    \            if (n % i == 0) {\n                factors += i\n               \
    \ n /= i\n            }\n            i += 1\n        }\n        if (n > 1) {\n\
    \            factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphryazv6f.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmphryazv6f.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphryazv6f.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while(i <= n /\
    \ i) {\n            if(n%i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6411dt61.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp6411dt61.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010287
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = 2 // Start with 2\n        var maxFactorPrime = true // Start with true\n\
    \        var factor = 2\n        while (maxFactorPrime && factor <= n) {\n   \
    \         if (n % factor == 0) {\n                maxFactor = factor\n       \
    \         maxFactorPrime = false\n            }\n            factor += 1\n   \
    \     }\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf41cadvn.scala:23)\n\tat Problem.main(tmpf41cadvn.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuvoo1hz5.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpuvoo1hz5.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val largestPrime = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactor\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCountMax = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCountMaxIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n   \
    \     val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCountMaxIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n   \
    \     val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCountMaxIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n   \
    \     val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCountMaxIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n   \
    \     val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCountMaxIndex = mutable.ArrayBuffer.empty[Long]\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkpk2dft_.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimeFactorsCountMaxIndex\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mprimeFactorsCountMaxIndex is already defined as \e[33mvalue\e[0m \e\
    [35mprimeFactorsCountMaxIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkpk2dft_.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mprimeFactorsCountMaxIndex\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mprimeFactorsCountMaxIndex is already defined as \e[33mvalue\e[0m \e\
    [35mprimeFactorsCountMaxIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkpk2dft_.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mprimeFactorsCountMaxIndex\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mprimeFactorsCountMaxIndex is already defined as \e[33mvalue\e[0m \e\
    [35mprimeFactorsCountMaxIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkpk2dft_.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mprimeFactorsCountMaxIndex\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mprimeFactorsCountMaxIndex is already defined as \e[33mvalue\e[0m \e\
    [35mprimeFactorsCountMaxIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNot"
  stdout: ''
  timestamp: 1660010288
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ == 0).iterator\n\
    \        val isPrimeIter2 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ == 1).iterator\n        val isPrimeIter3 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ == 2).iterator\n        val isPrimeIter4 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 3).iterator\n        val isPrimeIter5\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ == 4).iterator\n\
    \        val isPrimeIter6 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ == 5).iterator\n        val isPrimeIter7 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ == 6).iterator\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 7).iterator\n        val isPrimeIter9\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ == 8).iterator\n\
    \        val isPrimeIter10 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ == 9).iterator\n        val isPrimeIter11 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ == 10).iterator\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 11).iterator\n        val isPrimeIter13\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ == 12).iterator\n\
    \        val isPrimeIter14 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ == 13).iterator\n        val isPrimeIter15 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ == 14).iterator\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ * \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp89_9dvhl.scala:28:51 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter16\e[0m = Iterator.iterate(n)(_\
    \ * \n\e[31m\e[31m   |\e[0m                                                  \
    \ ^\e[0m\n\e[31m   |\e[0m                                       expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp89_9dvhl.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp89_9dvhl.scala:11:21 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp89_9dvhl.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmp89_9dvhl.scala:13:46 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).iterator\n\e\
    [31m\e[31m   |\e[0m                                              ^^^^^\e[0m\n\e\
    [31m   |\e[0m                                 Wrong number of parameters, expected:\
    \ 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/t"
  stdout: ''
  timestamp: 1660010288
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n/2) {\n\
    \            if (n % i == 0) {\n                factors += i\n               \
    \ n /= i\n            }\n            i += 1\n        }\n        if (n != 1) {\n\
    \            factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzpclo8ak.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpzpclo8ak.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010289
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        var factor = 2l\n        while(factor < n)\
    \ {\n            primes += factor\n            factor += 2l\n        }\n     \
    \   primes.lastOption.getOrElse(throw new Exception(\"No prime factors found\"\
    ))\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl0u0x3ts.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010285
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 0)\n        val isPrimeIter2 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ != 0)\n        val isPrimeIter3 = Iterator.iterate(n)(_ +\
    \ 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter4 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter17 = Iterator.iterate(n)(_\
    \ + \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpbcjoe13m.scala:28:51 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter17\e[0m = Iterator.iterate(n)(_\
    \ + \n\e[31m\e[31m   |\e[0m                                                  \
    \ ^\e[0m\n\e[31m   |\e[0m                                       expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpbcjoe13m.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpbcjoe13m.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmpbcjoe13m.scala:12:78 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpbcjoe13m.scala:13:79\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_\
    \ <= n).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                 \
    \                                                              ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                 Wrong nu"
  stdout: ''
  timestamp: 1660010290
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(x\
    \ => x).iterator\n        val isPrimeIterIter = Iterator.iterate(n)(x => isPrime.append(x\
    \ % 2 != 0)).takeWhile(x => x).iterator\n        val isPrimeIterIterIter = Iterator.iterate(n)(x\
    \ => isPrime.append(x % 2 != 0)).takeWhile(x => x).iterator\n        val isPrimeIterIterIterIter\
    \ = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(x => x).iterator\n\
    \        val isPrimeIterIterIterIterIter = Iterator.iterate(n)(x => isPrime.append(x\
    \ % 2 != 0)).takeWhile(x => x).iterator\n        val isPrimeIterIterIterIterIter\
    \ = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(x => x).iterator\n\
    \        val isPrimeIterIterIterIterIterIter = Iterator.iterate(n)(x => isPrime.append(x\
    \ % 2 != 0)).takeWhile(x => x).iterator\n        val isPrimeIterIterIterIterIterIterIter\
    \ = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(x => x).iterator\n\
    \        val isPrimeIterIterIterIterIterIterIter = Iterator.iterate(n)(x => isPrime.append(x\
    \ % 2 != 0)).takeWhile(x => x).iterator\n        val isPrimeIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(x => x).iterator\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIter = Iterator.iterate(n)(x\
    \ => isPrime.append(x % 2 != 0)).takeWhile(x => x).iterator\n        val isPrimeIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(x => x).iterator\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIter = Iterator.iterate(n)(x\
    \ => isPrime.append(x % 2 != 0)).\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkvrv83yk.scala:25:4 ----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkvrv83yk.scala:17:12 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIter\e[0m = Iterator.iterate(n)(\e\
    [36mx\e[0m => isPrime.append(x % \e[31m2\e[0m != \e[31m0\e[0m)).takeWhile(\e[36mx\e\
    [0m => x).iterator\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIter is already defined as \e[33mvalue\e\
    [0m \e[35misPrimeIterIterIterIterIter\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkvrv83yk.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIter\e\
    [0m = Iterator.iterate(n)(\e[36mx\e[0m => isPrime.append(x % \e[31m2\e[0m != \e\
    [31m0\e[0m)).takeWhile(\e[36mx\e[0m => x).iterator\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIter is already defined as\
    \ \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIter\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkvrv83yk.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIterIterIterIterIterIterIterIterIter\e[0m = Iterator.iterate(n)(\e\
    [36mx\e[0m => isPrime.append(x % \e[31m2\e[0m != \e[31m0\e[0m)).takeWhile(\e[36mx\e\
    [0m => x).iterator\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeI"
  stdout: ''
  timestamp: 1660010291
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = 0\n        var maxFactorIndex = 0\n        var isPrime = true\n        var\
    \ isPrimeIndex = 0\n        var isPrimeEven = true\n        var isPrimeEvenIndex\
    \ = 0\n        var isPrimeOdd = true\n        var isPrimeOddIndex = 0\n      \
    \  var isPrimeOddEven = true\n        var isPrimeOddEvenIndex = 0\n        var\
    \ isPrimeOddOdd = true\n        var isPrimeOddOddIndex = 0\n        var isPrimeOddEvenOdd\
    \ = true\n        var isPrimeOddEvenOddIndex = 0\n        var isPrimeOddOddEvenOdd\
    \ = true\n        var isPrimeOddOddEvenOddIndex = 0\n        var isPrimeOddOddOddEvenOdd\
    \ = true\n        var isPrimeOddOddOddEvenOddIndex = 0\n        var isPrimeOddOddOddOddEvenOdd\
    \ = true\n        var isPrimeOddOddOddOddEvenOddIndex = 0\n        var isPrimeOddOddOddOddOddEvenOddIndex\
    \ = 0\n        var isPrimeOddOddOddOddOddOddEvenOddIndex = 0\n        var isPrimeOddOddOddOddOddOddEvenOddIndex\
    \ = 0\n        var isPrimeOddOddOddOddOddOddEvenOddIndex = 0\n        var isPrimeOddOddOddOddOddOddOddEvenOddIndex\
    \ = 0\n        var isPrimeOddOddOddOddOddOddOddEvenOddIndex = 0\n        var isPrimeOddOddOddOddOddOddOddEvenOddIndex\
    \ = 0\n        var isPrimeOddOddOddOddOddOddOddEvenOddIndex = 0\n        var isPrimeOddOddOddOddOddOddOddEvenOddIndex\
    \ = 0\n        var isPrimeOddOddOddOddOddOddOddEvenOddIndex = 0\n        var isPrimeOddOddOddOddOddOddOddEvenOddIndex\
    \ = 0\n        var isPrimeOddOddOddOddOddOddOddEvenOddIndex = 0\n        var isPrimeOddOddOddOddOddOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpu85qhp5_.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu85qhp5_.scala:32:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mvar\e[0m\
    \ \e[36misPrimeOddOddOddOddOddOddEvenOddIndex\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0misPrimeOddOddOddOddOddOddEvenOddIndex is already defined as \e[33mvariable\e\
    [0m \e[35misPrimeOddOddOddOddOddOddEvenOddIndex\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu85qhp5_.scala:33:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m33 |\e[0m        \e[33mvar\e[0m\
    \ \e[36misPrimeOddOddOddOddOddOddEvenOddIndex\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0misPrimeOddOddOddOddOddOddEvenOddIndex is already defined as \e[33mvariable\e\
    [0m \e[35misPrimeOddOddOddOddOddOddEvenOddIndex\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu85qhp5_.scala:35:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m35 |\e[0m        \e[33mvar\e[0m\
    \ \e[36misPrimeOddOddOddOddOddOddOddEvenOddIndex\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0misPrimeOddOddOddOddOddOddOddEvenOddIndex is already defined as \e\
    [33mvariable\e[0m \e[35misPrimeOddOddOddOddOddOddOddEvenOddIndex\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpu85qhp5_.scala:36:12 ---------------------------\e[0m\e[0m\n\e[31m36\
    \ |\e[0m        \e[33mvar\e[0m \e[36misPrimeOddOddOddOddOddOddOddEvenOddIndex\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660010294
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        val factors = mutable.ArrayBuffer(2l)\n \
    \       var i = 2l\n        while (i <= n) {\n            if (n % i == 0l) {\n\
    \                primes += i\n                factors += i\n            }\n  \
    \          i += 1\n        }\n        val largestPrime = primes.max\n        val\
    \ largestFactor = factors.max\n        largestPrime * largestFactor\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_80lz2eh.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_80lz2eh.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010290
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        for(i <- 2 to n by 2)\n            factors\
    \ += i\n        factors.max\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp31cvdcsu.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp31cvdcsu.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010294
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <= n).filter(_ % _ != 0)\n      \
    \  val isPrimeIter2 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <= n).filter(_\
    \ % _ == 0)\n        val isPrimeIter3 = Iterator.iterate(2l)(_ + 2l).takeWhile(_\
    \ <= n).filter(_ % _ == 0)\n        val isPrimeIter4 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter5 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter7 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter9 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter10 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter11 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter13 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter14 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter15 = Iterator.iterate(2l)(_\
    \ + 2l).take\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc0vec616.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpc0vec616.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpc0vec616.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmpc0vec616.scala:13:80 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ <= n).filter(_ % _ != \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \             Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmpc0vec616.scala:14:81 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                         ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \              Wrong number of parameters, e"
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        for (i <- 2 to n by 2) {\n            if (n % i == 0) {\n           \
    \     factors += i\n                isPrime += false\n            }\n        \
    \    else {\n                isPrime += true\n            }\n        }\n     \
    \   if (isPrime.last)\n            factors.last\n        else\n            largestPrimeFactor(factors.last)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_2mx6_xc.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_2mx6_xc.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp_2mx6_xc.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010295
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) ++ (2l..n).filter(x => n % x == 0)\n        val largestPrime\
    \ = primes.max\n        largestPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0_nn0r3c.scala:10:52 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) ++ (\e[31m2l\e[0m..n).filter(\e[36mx\e[0m => n % x == \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                    ^\e[0m\n\
    \e[31m   |\e[0m                                   an identifier expected, but\
    \ '.' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0_nn0r3c.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2l\e[0m) ++ (\e[31m2l\e[0m..n).filter(\e\
    [36mx\e[0m => n % x == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                  \
    \   ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010291
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2L);\n        var factor = 2L;\n        while (factor\
    \ <= n) {\n            if (n % factor == 0) {\n                primes += factor;\n\
    \                n /= factor;\n            }\n            else {\n           \
    \     factor += 2L;\n            }\n        }\n        primes.last\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptv5q8luy.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2L\e[0m);\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmptv5q8luy.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor;\n\e[31m\e[31m   |\e[0m \
    \               ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010296
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp826c9f8s.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp826c9f8s.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val primes = mutable.Set[Long]()\n        val\
    \ maxFactor = mutable.Set[Long]()\n        val maxFactors = mutable.Set[Long]()\n\
    \        val maxPrime = mutable.Set[Long]()\n        val maxPrimes = mutable.Set[Long]()\n\
    \        val maxFactorPrimes = mutable.Set[Long]()\n        val maxPrimePrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactors = mutable.Set[Long]()\n \
    \       val maxPrimePrimeFactors = mutable.Set[Long]()\n        val maxPrimePrimePrimes\
    \ = mutable.Set[Long]()\n        val maxPrimePrimePrimeFactors = mutable.Set[Long]()\n\
    \        val maxPrimePrimePrimePrimes = mutable.Set[Long]()\n        val maxPrimePrimePrimePrimeFactors\
    \ = mutable.Set[Long]()\n        val maxPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val maxPrimePrimePrimePrimePrimeFactors = mutable.Set[Long]()\n     \
    \   val maxPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n        val maxPrimePrimePrimePrimePrimeFactors\
    \ = mutable.Set[Long]()\n        val maxPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val maxPrimePrimePrimePrimePrimePrimeFactors = mutable.Set[Long]()\n\
    \        val maxPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n      \
    \  val maxPrimePrimePrimePrimePrimePrimeFactors = mutable.Set[Long]()\n      \
    \  val maxPrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n       \
    \ val maxPrimePrimePrimePrimePrimePrimeFactors = mutable.Set[Long]()\n       \
    \ val maxPrimePrimePrimePrimePrimePrimePrimeFactors = mutable.Set[Long]()\n  \
    \      val maxPrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n   \
    \     \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp6xwo4js6.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimePrimePrimePrimePrimes\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimePrimePrimePrimePrimes is already defined as \e[33mvalue\e\
    [0m \e[35mmaxPrimePrimePrimePrimePrimes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp6xwo4js6.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimePrimePrimePrimePrimeFactors\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimePrimePrimePrimePrimeFactors is already defined as\
    \ \e[33mvalue\e[0m \e[35mmaxPrimePrimePrimePrimePrimeFactors\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp6xwo4js6.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxPrimePrimePrimePrimePrimePrimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimePrimePrimePrimePrimePrimes is already defined as \e\
    [33mvalue\e[0m \e[35mmaxPrimePrimePrimePrimePrimePrimes\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp6xwo4js6.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxPrimePrimePrimePrimePrimePrimeFactors\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimePrimePrimePrimePrimePrimeFactors is already defined\
    \ as \e[33mvalue\e[0m \e[35mmaxPrimePrimePrimeP"
  stdout: ''
  timestamp: 1660010296
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjjjs5sq2.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpjjjs5sq2.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010297
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to n by 2){\n        \
    \    val p = i\n            for(j <- 3 to n by 2){\n                if(p % j ==\
    \ 0){\n                    factors += j\n                    break\n         \
    \       }\n            }\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmg9ow122.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmg9ow122.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmg9ow122.scala:13:26\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m            \e[33mfor\e[0m(j\
    \ <- \e[31m3\e[0m to n by \e[31m2\e[0m){\n\e[31m\e[31m   |\e[0m              \
    \            ^\e[0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\
    \e[31m   |\e[0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmg9ow122.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                    break\n\e[31m\e[31m   |\e[0m    \
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010297
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val primes = mutable.Set[Long]()\n        val\
    \ isPrime = mutable.Set[Boolean]()\n        val isPrimeIter = mutable.Set[Boolean]()\n\
    \        val isPrimeIter2 = mutable.Set[Boolean]()\n        val isPrimeIter3 =\
    \ mutable.Set[Boolean]()\n        val isPrimeIter4 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter5 = mutable.Set[Boolean]()\n        val isPrimeIter6 =\
    \ mutable.Set[Boolean]()\n        val isPrimeIter7 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter8 = mutable.Set[Boolean]()\n        val isPrimeIter9 =\
    \ mutable.Set[Boolean]()\n        val isPrimeIter10 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter11 = mutable.Set[Boolean]()\n        val isPrimeIter12\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter13 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter14 = mutable.Set[Boolean]()\n        val isPrimeIter15\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter16 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter17 = mutable.Set[Boolean]()\n        val isPrimeIter18\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter19 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter20 = mutable.Set[Boolean]()\n        val isPrimeIter21\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter22 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter23 = mutable.Set[Boolean]()\n        val isPrimeIter24\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter25 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter26 = mutable.Set[Boolean]()\n        val isPrimeIter27\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter28 = mutable.Set[Boolean]()\n\
    \        val isPrimeIter29 = mutable.Set[Boolean]()\n        val isPrimeIter30\
    \ = mutable.Set[Boolean]()\n        val isPrimeIter\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk02hnsvs.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02hnsvs.scala:13:26\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeIter\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                          ^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpk02hnsvs.scala:14:27 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.Set[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer ex"
  stdout: ''
  timestamp: 1660010249
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        factors += 2\n        factors +=\
    \ 3\n        factors += 5\n        factors += 7\n        factors += 11\n     \
    \   factors += 13\n        factors += 17\n        factors += 19\n        factors\
    \ += 23\n        factors += 29\n        factors += 31\n        factors += 37\n\
    \        factors += 41\n        factors += 43\n        factors += 47\n       \
    \ factors += 53\n        factors += 59\n        factors += 61\n        factors\
    \ += 67\n        factors += 71\n        factors += 73\n        factors += 79\n\
    \        factors += 83\n        factors += 89\n        factors += 97\n       \
    \ factors += 101\n        factors += 103\n        factors += 107\n        factors\
    \ += 109\n        factors += 113\n        factors += 127\n        factors += 131\n\
    \        factors += 137\n        factors += 139\n        factors += 149\n    \
    \    factors += 151\n        factors += 157\n        factors += 163\n        factors\
    \ += 167\n        factors += 173\n        factors += 179\n        factors += 181\n\
    \        factors += 191\n        factors += 193\n        factors += 197\n    \
    \    factors += 199\n        factors += 211\n        factors += 223\n        factors\
    \ += 227\n        factors += 229\n        factors += 233\n        factors += 239\n\
    \        factors += 241\n        factors += 247\n        factors += 249\n    \
    \    factors += 251\n        factors += 253\n        factors += 257\n        factors\
    \ += 263\n        factors += 269\n        factors += 271\n        factors += 277\n\
    \        factors += 281\n        factors += 283\n        factors += 293\n    \
    \    factors += 307\n        factors += 311\n        factors += 313\n        factors\
    \ += 317\n        factors += 323\n        factors += 329\n        factors += 331\n\
    \        factors += 337\n        factors += 347\n        factors += 349\n    \
    \    factors += 353\n        factors += 359\n        factors += 363\n        factors\
    \ += 369\n        factors += 373\n        factors += 379\n        factors += 383\n\
    \        factors += 389\n        factors += 395\n        factors += 401\n    \
    \    factors += 409\n        factors += 419\n        factors += 431\n        factors\
    \ += 439\n        factors += 443\n        factors += 449\n        factors += 457\n\
    \        factors += 461\n        factors += 463\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2yu406e9.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010293
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) ++ (2l..n).filter(x => isPrime(x)).map(x => x * x)\n\
    \        primes.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx40pl89n.scala:10:52 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) ++ (\e[31m2l\e[0m..n).filter(\e[36mx\e[0m => isPrime(x)).map(\e[36mx\e\
    [0m => x * x)\n\e[31m\e[31m   |\e[0m                                         \
    \           ^\e[0m\n\e[31m   |\e[0m                                   an identifier\
    \ expected, but '.' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx40pl89n.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2l\e[0m) ++ (\e[31m2l\e[0m..n).filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x * x)\n\e[31m\e[31m   |\e[0m  \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010293
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l).+:(2l).+:(3l).+:(5l).+:(7l).+:(11l).+:(13l).+:(17l).+:(19l).+:(23l).+:(29l).+:(31l).+:(37l).+:(41l).+:(43l).+:(47l).+:(53l).+:(59l).+:(61l).+:(67l).+:(71l).+:(73l).+:(79l).+:(83l).+:(89l).+:(97l).+:(101l).+:(103l).+:(107l).+:(109l).+:(113l).+:(127l).+:(131l).+:(137l).+:(139l).+:(149l).+:(151l).+:(157l).+:(163l).+:(167l).+:(173l).+:(179l).+:(181l).+:(191l).+:(193l).+:(197l).+:(199l).+:(211l).+:(223l).+:(227l).+:(229l).+:(233l).+:(239l).+:(241l).+:(251l).+:(257l).+:(263l).+:(269l).+:(271l).+:(277l).+:(281l).+:(283l).+:(293l).+:(307l).+:(311l).+:(313l).+:(317l).+:(331l).+:(337l).+:(347l).+:(349l).+:(353l).+:(359l).+:(367l).+:(373l).+:(379l).+:(383l).+:(389l).+:(397l).+:(401l).+:(409l).+:(419l).+:(421l).+:(431l).+:(433l).+:(439l).+:(443l).+:(449l).+:(457l).+:(461l).+:(463l).+:(467l).+:(479l).+:(487l).+:(491l).\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqwbgh6zs.scala:11:4 ----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpqwbgh6zs.scala:10:21 ------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2l\e\
    [0m).+:(\e[31m2l\e[0m).+:(\e[31m3l\e[0m).+:(\e[31m5l\e[0m).+:(\e[31m7l\e[0m).+:(\e\
    [31m11l\e[0m).+:(\e[31m13l\e[0m).+:(\e[31m17l\e[0m).+:(\e[31m19l\e[0m).+:(\e[31m23l\e\
    [0m).+:(\e[31m29l\e[0m).+:(\e[31m31l\e[0m).+:(\e[31m37l\e[0m).+:(\e[31m41l\e[0m).+:(\e\
    [31m43l\e[0m).+:(\e[31m47l\e[0m).+:(\e[31m53l\e[0m).+:(\e[31m59l\e[0m).+:(\e[31m61l\e\
    [0m).+:(\e[31m67l\e[0m).+:(\e[31m71l\e[0m).+:(\e[31m73l\e[0m).+:(\e[31m79l\e[0m).+:(\e\
    [31m83l\e[0m).+:(\e[31m89l\e[0m).+:(\e[31m97l\e[0m).+:(\e[31m101l\e[0m).+:(\e\
    [31m103l\e[0m).+:(\e[31m107l\e[0m).+:(\e[31m109l\e[0m).+:(\e[31m113l\e[0m).+:(\e\
    [31m127l\e[0m).+:(\e[31m131l\e[0m).+:(\e[31m137l\e[0m).+:(\e[31m139l\e[0m).+:(\e\
    [31m149l\e[0m).+:(\e[31m151l\e[0m).+:(\e[31m157l\e[0m).+:(\e[31m163l\e[0m).+:(\e\
    [31m167l\e[0m).+:(\e[31m173l\e[0m).+:(\e[31m179l\e[0m).+:(\e[31m181l\e[0m).+:(\e\
    [31m191l\e[0m).+:(\e[31m193l\e[0m).+:(\e[31m197l\e[0m).+:(\e[31m199l\e[0m).+:(\e\
    [31m211l\e[0m).+:(\e[31m223l\e[0m).+:(\e[31m227l\e[0m).+:(\e[31m229l\e[0m).+:(\e\
    [31m233l\e[0m).+:(\e[31m239l\e[0m).+:(\e[31m241l\e[0m).+:(\e[31m251l\e[0m).+:(\e\
    [31m257l\e[0m).+:(\e[31m263l\e[0m).+:(\e[31m269l\e[0m).+:(\e[31m271l\e[0m).+:(\e\
    [31m277l\e[0m).+:(\e[31m281l\e[0m).+:(\e[31m283l\e[0m).+:(\e[31m293l\e[0m).+:(\e\
    [31m307l\e[0m).+:(\e[31m311l\e[0m).+:(\e[31m313l\e[0m).+:(\e[31m317l\e[0m).+:(\e\
    [31m331l\e[0m).+:(\e[31m337l\e[0m).+:(\e[31m347l\e[0m).+:(\e[31m349l\e[0m).+:(\e\
    [31m353l\e[0m).+:(\e[31m359l\e[0m).+:(\e[31m367l\e[0m).+:(\e[31m373l\e[0m).+:(\e\
    [31m379l\e[0m).+:(\e[31m383l\e[0m).+:(\e[31m389l\e[0m).+:(\e[31m397l\e[0m).+:(\e\
    [31m401l\e[0m).+:(\e[31m409l\e[0m).+:(\e[31m419l\e[0m).+:(\e[31m421l\e[0m).+:(\e\
    [31m431l\e[0m).+:(\e[31m433l\e[0m).+:(\e[31m439l\e[0m).+:(\e[31m443l\e[0m).+:(\e\
    [31m449l\e[0m).+:(\e[31m457l\e[0m).+:(\e[31m461l\e[0m).+:(\e[31m463l\e[0m).+:(\e\
    [31m467l\e[0m).+:(\e[31m479l\e[0m).+:(\e[31m487l\e[0m).+:(\e[31m491l\e[0m)."
  stdout: ''
  timestamp: 1660010298
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ largestPrime = mutable.Set[Long]()\n        val largestPrimeFactor = mutable.Set[Long]()\n\
    \        val largestPrimeFactors = mutable.Set[Long]()\n        val largestPrimeFactorsSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSize = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsSizeSizeSize = mutable.Set[Long]()\n        val\
    \ largestPrimeFactorsSizeSizeSizeSize = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsSizeSize\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqg4tyupo.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqg4tyupo.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mlargestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSize\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlargestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSize is already\
    \ defined as \e[33mvalue\e[0m \e[35mlargestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqg4tyupo.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlargestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ is already defined as \e[33mvalue\e[0m \e[35mlargestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqg4tyupo.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlargestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ is already defined as \e[33mvalue\e[0m \e[35mlargestPrimeFactorsSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ d"
  stdout: ''
  timestamp: 1660010298
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_\
    \ > 1l).map(n => n % _ == 0)\n        val isPrimeIter2 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_ > 1l).map(n => n % _\
    \ == 0)\n        val isPrimeIter3 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <\
    \ n).filter(_ % _ != 0l).takeWhile(_ > 1l).map(n => n % _ == 0)\n        val isPrimeIter4\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_\
    \ > 1l).map(n => n % _ == 0)\n        val isPrimeIter5 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_ > 1l).map(n => n % _\
    \ == 0)\n        val isPrimeIter6 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <\
    \ n).filter(_ % _ != 0l).takeWhile(_ > 1l).map(n => n % _ == 0)\n        val isPrimeIter7\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_\
    \ > 1l).map(n => n % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_ > 1l).map(n => n % _\
    \ == 0)\n        val isPrimeIter9 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <\
    \ n).filter(_ % _ != 0l).takeWhile(_ > 1l).map(n => n % _ == 0)\n        val isPrimeIter10\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_\
    \ > 1l\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk0p8ta2g.scala:23:4 ----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk0p8ta2g.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk0p8ta2g.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk0p8ta2g.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error:\
    \ /tmp/tmpk0p8ta2g.scala:13:79 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(\e[31m2l\e\
    [0m)(_ + \e[31m2l\e[0m).takeWhile(_ < n).filter(_ % _ != \e[31m0l\e[0m).takeWhile(_\
    \ > \e[31m1l\e[0m).map(\e[36mn\e[0m => n % _ == \e[31m0\e[0m)\n\e[31m\e[31m  \
    \ |\e[0m                                                                     \
    \          ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 1\n\e[31m\e[31m-- [E081] Type Error: /tmp/tmpk0p8ta2g.scala:13:123\
    \ ----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter\e[0m = Iterator.iterate(\e[31m2l\e["
  stdout: ''
  timestamp: 1660010299
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = Long.MinValue\n        var maxFactorPrime = 0\n        var maxFactorPrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrime = 0\n        var\
    \ maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n    \
    \    var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n   \
    \     var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp73t2w6qj.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp73t2w6qj.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp73t2w6qj.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp73t2w6qj.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp"
  stdout: ''
  timestamp: 1660010273
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        var i = 2\n\
    \        while (i <= n) {\n            if (n % i == 0) {\n                factors\
    \ += i\n                primes += i\n                isPrime += true\n       \
    \     }\n            i += 1\n        }\n        val largestPrime = primes.max\n\
    \        val largestFactor = factors.max\n        val largestPrimeIndex = primes.indexOf(largestPrime)\n\
    \        val largestFactorIndex = factors.indexOf(largestFactor)\n        val\
    \ isPrimeIndex = primes.indexOf(largestPrime)\n        val isPrime = isPrimeIndex.map(x\
    \ => isPrimeIndex.indexOf(x) == largestPrimeIndex).getOrElse(false)\n        if\
    \ (isPrime) {\n            largestPrime\n        } else {\n            largestFactor\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpl0pprh5w.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = isPrimeIndex.map(\e\
    [36mx\e[0m => isPrimeIndex.indexOf(x) == largestPrimeIndex).getOrElse(\e[31mfalse\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrime is already defined as \e[33mvalue\e[0m \e[35misPrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpl0pprh5w.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpl0pprh5w.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpl0pprh5w.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010295
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to n) factors += i\n \
    \       factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjb_k7_hy.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjb_k7_hy.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) factors\
    \ += i\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m   \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010299
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ != 1) {\n            factors += n\n        }\n        factors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9ex4qfoq.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp9ex4qfoq.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9ex4qfoq.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010299
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n     \
    \   val isPrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePri\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpplppaxyn.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpplppaxyn.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimePrimeFactor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimeFactor is already defined as \e\
    [33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimeFactor\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpplppaxyn.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimePrimePrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrime is already defined as \e\
    [33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpplppaxyn.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimePrimePrimeFactor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimeFactor is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimeFactor\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpplppaxyn.scala:29:12 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33m"
  stdout: ''
  timestamp: 1660010299
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2l\n        while(i <= n){\n \
    \           val isPrime = true\n            for(j <- 2l; j < (i.toLong / 2l);\
    \ j += i){\n                if(i % j == 0){\n                    isPrime = false\n\
    \                    break\n                }\n            }\n            if(isPrime){\n\
    \                factors += i\n            }\n            i += 2l\n        }\n\
    \        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgctupu1z.scala:14:44 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mfor\e[0m(j <- \e[31m2l\e[0m; j < (i.toLong\
    \ / \e[31m2l\e[0m); j += i){\n\e[31m\e[31m   |\e[0m                          \
    \                  ^\e[0m\n\e[31m   |\e[0m                                   \
    \         '<-' expected, but ';' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgctupu1z.scala:14:52\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            \e[33mfor\e\
    [0m(j <- \e[31m2l\e[0m; j < (i.toLong / \e[31m2l\e[0m); j += i){\n\e[31m\e[31m\
    \   |\e[0m                                                    ^\e[0m\n\e[31m \
    \  |\e[0m                                            '<-' expected, but ')' found\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgctupu1z.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpgctupu1z.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mfor\e[0m(j <- \e[31m2l\e[0m; j < (i.toLong\
    \ / \e[31m2l\e[0m); j += i){\n\e[31m\e[31m   |\e[0m                     ^^\e[0m\n\
    \e[31m   |\e[0m                     value foreach is not a member of Long\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpgctupu1z.scala:23:14 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            i += \e[31m2l\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Long - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010299
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(n)(n => isPrime(n))\n        val isPrimeIter2 = Iterator.iterate(n)(n\
    \ => isPrime(n))\n        val isPrimeIter3 = Iterator.iterate(n)(n => isPrime(n))\n\
    \        val isPrimeIter4 = Iterator.iterate(n)(n => isPrime(n))\n        val\
    \ isPrimeIter5 = Iterator.iterate(n)(n => isPrime(n))\n        val isPrimeIter6\
    \ = Iterator.iterate(n)(n => isPrime(n))\n        val isPrimeIter7 = Iterator.iterate(n)(n\
    \ => isPrime(n))\n        val isPrimeIter8 = Iterator.iterate(n)(n => isPrime(n))\n\
    \        val isPrimeIter9 = Iterator.iterate(n)(n => isPrime(n))\n        val\
    \ isPrimeIter10 = Iterator.iterate(n)(n => isPrime(n))\n        val isPrimeIter11\
    \ = Iterator.iterate(n)(n => isPrime(n))\n        val isPrimeIter12 = Iterator.iterate(n)(n\
    \ => isPrime(n))\n        val isPrimeIter13 = Iterator.iterate(n)(n => isPrime(n))\n\
    \        val isPrimeIter14 = Iterator.iterate(n)(n => isPrime(n))\n        val\
    \ isPrimeIter15 = Iterator.iterate(n)(n => isPrime(n))\n        val isPrimeIter16\
    \ = Iterator.iterate(n)(n => isPrime(n))\n        val isPrimeIter17 = Iterator.iterate(n)(n\
    \ => isPrime(n))\n        val isPrimeIter18 = Iterator.iterate(n)(n => isPrime(n))\n\
    \        val isPrimeIter19 = Iterator.iterate(n)(n => isPrime(n))\n        val\
    \ isPrimeIter20 = Iterator.iterate(n)(n => isPrime(n))\n        val isPrimeIter21\
    \ = Iterator.iterate(n)(n => isPrime(n))\n        val isPrimeIter22 = Iterator.iterate(n)(n\
    \ => isPrime(n))\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp64r0qpy7.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp64r0qpy7.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp64r0qpy7.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp64r0qpy7.scala:35:5 ---------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010299
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxFactor = math.max(2, math.floor(math.sqrt(n)))\n\
    \        for(i <- 2 to maxFactor) {\n            if(n%i == 0) {\n            \
    \    factors += i\n                n /= i\n            }\n        }\n        if(n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbumd4eqg.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbumd4eqg.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to maxFactor)\
    \ {\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Found:    (maxFactor : Double)\n\e[31m   |\e[0m       \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpbumd4eqg.scala:15:18 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m                n /= i\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e\
    [31m   |\e[0m                value /= is not a member of Long - did you mean n.!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010300
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor2 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor3 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeFactor4 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor5\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor6 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor7 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeFactor8 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor9\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor10 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor11 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeFactor12 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor13\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor14 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor15 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeFactor16 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor17\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor18 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor19 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeFactor20 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor21\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor22 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor23 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeFactor24 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor25\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor26 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor27 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeFactor28 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8gb7fwvi.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8gb7fwvi.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8gb7fwvi.scala:11:27\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                           ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp8gb7fwvi.scala:12:22 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e\
    [0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp8gb7fwvi.scala:13:28 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8gb7fwvi.scala:14:29 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactor2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1660010300
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i <= n / 2) {\n\
    \            if (n % i == 0) {\n                primes += i\n                n\
    \ /= i\n            }\n            i += 1\n        }\n        primes.last\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphezq0lgx.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmphezq0lgx.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010282
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val\
    \ isPrimeIter2 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _ !=\
    \ 0)\n        val isPrimeIter3 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 0)\n        val isPrimeIter4 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ != 0)\n        val isPrimeIter5 = Iterator.iterate(n)(_ +\
    \ 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val is\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr9nspqc3.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr9nspqc3.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr9nspqc3.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr9nspqc3.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error:\
    \ /tmp/tmpr9nspqc3.scala:13:78 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpr9nspqc3.scala:14:79\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_\
    \ <= n).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m    "
  stdout: ''
  timestamp: 1660010300
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        var i = 2\n        while(i <= n && isPrime(i)) {\n            val isPrime\
    \ = n.toInt % i == 0\n            factors += i\n            i += 1\n        }\n\
    \        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpda1p7oyi.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpda1p7oyi.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010299
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n > 1) {\n    \
    \        factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbhgnt1gb.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhgnt1gb.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2dev22uy.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2dev22uy.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010300

name: HumanEval_64_vowels_count
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function vowels_count which takes a string representing\n    //\
  \ a word as input and returns the number of vowels in the string.\n    // Vowels\
  \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    // vowel, but\
  \ only when it is at the end of the given word.\n    // Example:\n    // >>> vowelsCount((\"\
  abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"ACEDY\"))\n    // (3l)\n    def\
  \ vowelsCount(s : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
  )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
  key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
  keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
  ACEDY\")) == (3l));\n    }\n\n}\n"
completions: ["        val vowels = \"aeiou\"\n        var count = 0\n        var\
    \ lastVowel = vowels.last\n        for (i <- 0 until s.length)\n            if\
    \ (vowels.contains(s.charAt(i)))\n                if (lastVowel == s.charAt(i))\
    \ {\n                    count += 1\n                    lastVowel = vowels.last\n\
    \                }\n                else {\n                    count = 0\n  \
    \                  lastVowel = s.charAt(i)\n                }\n        count",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(x => vowels.contains(x)).length\n        vowelsCount",
  "        val vowels = Array('a','e','i','o','u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for(i <- 0 until s.length){\n            val c = s.charAt(i)\n      \
    \      if(vowels.contains(c)){\n                vowelsCount += c\n           \
    \ }\n        }\n        vowelsCount.size", "        val vowels = Array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n        for (i <- 0 until\
    \ s.length)\n            if (vowels(i) == s(i)) {\n                count += 1\n\
    \            }\n        count", "        val vowels = Array('a','e','i','o','u')\n\
    \        val vowels_count = s.length\n        val vowels_count_in_string = vowels.count(s\
    \ contains _)\n        vowels_count_in_string * vowels_count", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c.toString)).size\n\
    \        vowelsCount", "        var vowelCount = 0\n        var vowelIndex = 0\n\
    \        var vowel = s.charAt(0)\n        var vowelCount = 0\n        var vowelIndex\
    \ = 0\n        var vowel = s.charAt(0)\n        var vowelCount = 0\n        var\
    \ vowelIndex = 0\n        var vowel = s.charAt(0)\n        var vowelCount = 0\n\
    \        var vowelIndex = 0\n        var vowel = s.charAt(0)\n        var vowelCount\
    \ = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n        var\
    \ vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowel", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"\
    u\")\n        var count = 0\n        for (i <- 0 until s.length)\n           \
    \ if (vowels(i) == s(i) && s(i) != \"y\")\n                count += 1\n      \
    \  count", "        var count = 0\n        for(i <- 0 until s.length)\n      \
    \      if(s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i)\
    \ == 'o' || s.charAt(i) == 'u')\n                count += 1\n        for(i <-\
    \ 0 until s.length)\n            if(s.charAt(i) == 'y')\n                count\
    \ += 1\n        count", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        val vowelsCount = s.count(vowels)\n        vowelsCount", " \
    \       val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(x => vowels.contains(x)).length\n        vowelsCount",
  "        var count = 0\n        var vowels = \"aeiou\"\n        var vowelsCount\
    \ = 0\n        var vowelsCountArray = Array(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        var vowelsCountArrayLength = vowelsCountArray.length\n        var vowelsCountArrayIndex\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0", "        val vowels = \"\
    aeiouAEIOU\".toSet\n        val vowelsCount = s.toCharArray.filter(vowels.contains).length\n\
    \        vowelsCount", "        val vowels = \"aeiouAEIOU\"\n        val vowelsCount\
    \ = s.count(vowels.indexOf)\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count = s.toCharArray.filter(x\
    \ => vowels.contains(x)).size\n        vowels_count", "        val vowels = Array('a',\
    \ 'e', 'i', 'o', 'u')\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        val vowels = \"aeiouAEIOU\"\n        val vowelsCount\
    \ = s.count(vowels.indexOf)\n        vowelsCount", "        val vowels = \"aeiouAEIOU\"\
    \n        val vowelsCount = mutable.HashMap[Char, Int]()\n        for (c <- s)\
    \ {\n            if (vowels.contains(c)) {\n                vowelsCount(c) +=\
    \ 1\n            }\n        }\n        vowelsCount.values.sum", "        val vowels\
    \ = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = \"\
    aeiou\"\n        val vowelsCount = mutable.HashSet[Char]()\n        for (c <-\
    \ s) {\n            if (vowels.contains(c)) {\n                vowelsCount +=\
    \ c\n            }\n        }\n        vowelsCount.size", "        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowels_count", "        val vowels =\
    \ \"aeiouAEIOU\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n   \
    \     for (c <- s) {\n            if (vowels.contains(c)) {\n                vowelsCount(c)\
    \ += 1\n            }\n        }\n        vowelsCount.values.sum", "        var\
    \ count = 0\n        var vowels = \"aeiouAEIOU\"\n        var lastVowel = vowels.last\n\
    \        var lastChar = s.last\n        while (lastChar != lastVowel) {\n    \
    \        count += 1\n            lastChar = s.last\n        }\n        count",
  "        var count = 0\n        var vowels = \"aeiou\"\n        var vowelsCount\
    \ = 0\n        var lastVowel = -1\n        var lastVowelIndex = -1\n        var\
    \ lastVowelIndex2 = -1\n        var lastVowelIndex3 = -1\n        var lastVowelIndex4\
    \ = -1\n        var lastVowelIndex5 = -1\n        var lastVowelIndex6 = -1\n \
    \       var lastVowelIndex7 = -1\n        var lastVowelIndex8 = -1\n        var\
    \ lastVowelIndex9 = -1\n        var lastVowelIndex10 = -1\n        var lastVowelIndex11\
    \ = -1\n        var lastVowelIndex12 = -1\n        var lastVowelIndex13 = -1\n\
    \        var lastVowelIndex14 = -1\n        var lastVowelIndex15 = -1\n      \
    \  var lastVowelIndex16 = -1\n        var lastVowelIndex17 = -1\n        var lastVowelIndex18\
    \ = -1\n        var lastVowelIndex19 = -1\n        var lastVowelIndex20 = -1\n\
    \        var lastVowelIndex21 = -1\n        var lastVowelIndex22 = -1\n      \
    \  var lastVowelIndex23 = -1\n        var lastVowelIndex24 = -1\n        var lastVowelIndex25\
    \ = -1\n        var lastVowelIndex26 = -1\n        var lastVowelIndex27 = -1\n\
    \        var lastVowelIndex28 = -1\n        var lastVowelIndex29 = -1\n      \
    \  var lastVowelIndex30 = -1\n        var lastVowelIndex31 = -1\n        var lastVowelIndex32\
    \ = -1\n        var lastVowelIndex33 = -1\n        var lastVowelIndex34 = -1\n\
    \        var lastVowelIndex35 = -1\n        var lastVowelIndex36 = -1\n      \
    \  var lastVowelIndex37 = -1\n        var lastVowelIndex38 = -1\n        var lastVowelIndex39\
    \ = -1\n        var lastVowelIndex40 = -1\n        var lastVowelIndex41 = -1\n\
    \        var lastVowelIndex42 = -1\n        var lastVowelIndex43 = -1\n      \
    \  var lastVowelIndex44 = -1\n        var lastVowelIndex45 = -1\n        var lastVowelIndex46\
    \ = -1\n        var lastVowelIndex47 = -1\n        var lastVowelIndex48 = -1\n\
    \        var lastVowelIndex49 = -1\n        var lastVowelIndex50 = -1\n      \
    \  var lastVowelIndex51 = -1\n        var lastVowelIndex52 = -1\n        var lastVowelIndex53\
    \ = -1\n        var lastVow", "        var count = 0\n        for (i <- 0 until\
    \ s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count +=\
    \ 1\n        count + (s.charAt(s.length - 1) == 'y' ? 1 : 0)", "        val vowels\
    \ = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[String]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelsCount += s.charAt(i)\n        vowelsCount.size", "    \
    \    val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.filter(x => vowels.contains(x)).size\n        vowelsCount", "        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = mutable.HashSet[String]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelsCount += s.charAt(i)\n        vowelsCount.size", "    \
    \    val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).size\n        vowelsCount", "        var count = 0\n\
    \        for (i <- 0 until s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n\
    \                count += 1\n        count + (s.length - count) / 2", "      \
    \  val vowels = \"aeiou\"\n        val vowelsCount = s.count(vowels.toCharArray)\n\
    \        vowelsCount", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        val vowelsCount = mutable.Map[Char, Long]()\n        for (c\
    \ <- s) {\n            vowelsCount(c) += 1\n        }\n        vowelsCount.filter(_._2\
    \ > 0).map(_._1).sum", "        val vowels = \"aeiou\"\n        var count = 0\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                count += 1\n        count", "        val vowels = \"aeiou\"\n\
    \        val vowelsCount = mutable.HashSet[Char]()\n        for (c <- s) {\n \
    \           if (vowels.contains(c)) {\n                vowelsCount += c\n    \
    \        }\n        }\n        vowelsCount.size", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = mutable.HashSet[String]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) == s(i))\n   \
    \             vowelsCount += s(i)\n        vowelsCount.size", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowelsCount = s.count(vowels.indexOf(_))\n   \
    \     vowelsCount", "        val vowels = \"aeiou\"\n        val vowelsCount =\
    \ s.count(vowels)\n        vowelsCount", "        val vowels = Array('a', 'e',\
    \ 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[Char]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels(i) == s.charAt(i))\n       \
    \         vowelsCount += s.charAt(i)\n        vowelsCount.size", "        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowels_count =\
    \ mutable.Map[Char,Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowels_count(c) = vowels_count(c) + 1\n            }\n  \
    \      }\n        vowels_count.values.sum", "        val vowels = \"aeiouAEIOU\"\
    .toCharArray\n        val vowelsCount = mutable.HashMap[Char, Int]()\n       \
    \ for (c <- s) {\n            if (vowels.contains(c)) {\n                vowelsCount(c)\
    \ += 1\n            }\n        }\n        vowelsCount.values.sum", "        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(x\
    \ => vowels.contains(x))\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n        for (i <- 0 until\
    \ s.length)\n            if (vowels(i) == s(i)) {\n                count += 1\n\
    \            }\n        count", "        var count = 0\n        var vowels = \"\
    aeiou\"\n        var lastVowel = vowels.last\n        var lastChar = s.last\n\
    \        for(i <- 0 until s.length){\n            if(vowels.contains(s.charAt(i))){\n\
    \                count += 1\n            }\n            else if(lastVowel == s.charAt(i)\
    \ && lastChar != s.charAt(i)){\n                count += 1\n            }\n  \
    \          lastChar = s.charAt(i)\n            lastVowel = vowels.last\n     \
    \   }\n        count", "        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       count + (s.length - count) // add one for y", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n        var lastVowel\
    \ = vowels(0)\n        for (i <- 0 until s.length)\n            if (vowels(i)\
    \ == lastVowel)\n                count += 1\n            lastVowel = vowels(i)\n\
    \        count", "        val vowels = \"aeiouAEIOU\".toCharArray\n        val\
    \ vowels_count = s.length\n        val vowels_count_map = mutable.HashMap[Char,\
    \ Long]()\n        for (i <- 0 until vowels_count) {\n            val c = s.charAt(i)\n\
    \            if (vowels.contains(c)) {\n                vowels_count_map.put(c,\
    \ vowels_count_map.getOrElse(c, 0L) + 1L)\n            }\n        }\n        vowels_count_map.values.sum",
  "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount =\
    \ mutable.HashSet[Char]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount += c\n            }\n        }\n        vowelsCount.size",
  "        val vowels = \"aeiou\"\n        val vowelsCount = s.count(vowels.toCharArray)\n\
    \        vowelsCount + vowelsCount.toLong", "        val vowels = \"aeiou\"\n\
    \        val vowelsCount = mutable.HashMap[Char, Int]()\n        for (c <- s)\
    \ {\n            if (vowels.contains(c)) {\n                vowelsCount(c) +=\
    \ 1\n            }\n        }\n        vowelsCount.values.sum", "        var count\
    \ = 0\n        var vowels = \"aeiouAEIOU\"\n        var lastVowel = vowels.last\n\
    \        var lastIndex = s.length - 1\n        var lastChar = s.charAt(s.length\
    \ - 1)\n        var lastCharVowel = vowels.charAt(vowels.indexOf(lastChar))\n\
    \        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex\
    \ = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n\
    \        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex\
    \ = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n\
    \        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex\
    \ = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n\
    \        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex\
    \ = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n\
    \        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex\
    \ = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n\
    \        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex\
    \ = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n\
    \        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex\
    \ = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n\
    \        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex\
    \ = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n\
    \        var lastCharVowelIndex = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex\
    \ = vowels.indexOf(lastCharVowel)\n        var lastCharVowelIndex = vowels.indexOf(lastCharVowel",
  "        val vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[String]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size", " \
    \       var count = 0\n        var lastVowel = s.last\n        for (i <- 0 until\
    \ s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count +=\
    \ 1\n            else if (s.charAt(i) == lastVowel)\n                count +=\
    \ 1\n            lastVowel = s.charAt(i)\n        count", "        val vowels\
    \ = \"aeiou\"\n        var count = 0\n        var lastVowel = -1\n        for\
    \ (i <- 0 until s.length)\n        {\n            if (vowels(i) == s(i))\n   \
    \         {\n                count += 1\n            }\n            else\n   \
    \         {\n                if (lastVowel != -1)\n                {\n       \
    \             count += lastVowel - vowels(i)\n                }\n            \
    \    lastVowel = vowels(i)\n            }\n        }\n        count", "      \
    \  val vowels = \"aeiou\"\n        var count = 0\n        var lastChar = s.charAt(s.length\
    \ - 1)\n        for(i <- 0 until s.length){\n            if(vowels.contains(s.charAt(i))){\n\
    \                count += 1\n            }\n            else if(lastChar == 'y'){\n\
    \                count += 1\n            }\n            lastChar = s.charAt(i)\n\
    \        }\n        count", "        var count = 0\n        for(i <- 0 until s.length){\n\
    \            if(s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u'){\n                count += 1\n\
    \            }\n        }\n        count", "        val vowels = Array('a', 'e',\
    \ 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[String]()\n      \
    \  for (i <- 0 until s.length)\n            if (vowels(i) == s(i) && vowelsCount.contains(s(i)))\n\
    \                vowelsCount += s(i)\n            else\n                vowelsCount\
    \ += s(i)\n        vowelsCount.size", "        val vowels = \"aeiou\"\n      \
    \  val vowelsCount = s.count(vowels)\n        val lastVowel = s.last\n       \
    \ val lastVowelIndex = s.lastIndexOf(lastVowel)\n        val lastVowelIndex =\
    \ if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (lastVowelIndex == -1) s.length else lastVowelIndex\n        val lastVowelIndex\
    \ = if (", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n  \
    \      val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        val vowels = \"aeiou\"\n        val vowelsCount\
    \ = mutable.HashSet[Char]()\n        for(i <- 0 until s.length)\n            if(vowels.contains(s.charAt(i)))\n\
    \                vowelsCount += s.charAt(i)\n        vowelsCount.size", "    \
    \    val vowels = \"aeiou\"\n        var count = 0\n        var lastVowel = vowels.last\n\
    \        var lastChar = s.last\n        while (lastChar != lastVowel) {\n    \
    \        lastChar = s.last\n            count += 1\n        }\n        count",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.count(vowels)\n        vowelsCount + vowelsCount(s.substring(vowelsCount))",
  "        val vowels = \"aeiou\"\n        var count = 0\n        for (c <- s) {\n\
    \            if (vowels.indexOf(c) >= 0) {\n                count += 1\n     \
    \       }\n        }\n        count", "        val vowels = Array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n        val vowelsCount = mutable.ListBuffer[String]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) == s(i))\n   \
    \             vowelsCount += s(i)\n        vowelsCount.length", "        val vowels\
    \ = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n      \
    \  for (c <- s) {\n            if (vowels.contains(c)) {\n                vowelsCount(c)\
    \ = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum",
  "        var count = 0\n        var vowels = \"aeiou\"\n        var lastVowel =\
    \ vowels.last\n        var lastChar = s.last\n        for(i <- 0 until s.length){\n\
    \            if(vowels.contains(s.charAt(i))){\n                count += 1\n \
    \           }\n            if(s.charAt(i) == lastChar){\n                count\
    \ += 1\n            }\n            if(s.charAt(i) == lastVowel){\n           \
    \     count += 1\n            }\n        }\n        count", "        val vowels\
    \ = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = mutable.HashSet[String]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) == s(i)) {\n \
    \               vowelsCount += s(i)\n            }\n        vowelsCount.size",
  "        var count = 0\n        var vowels = \"aeiou\"\n        var lastVowel =\
    \ vowels.last\n        var lastChar = s.last\n        for(i <- 0 until s.length){\n\
    \            if(vowels.contains(s.charAt(i))){\n                count += 1\n \
    \           }\n            if(lastVowel == s.charAt(i) && lastChar == 'y'){\n\
    \                count += 1\n            }\n        }\n        count", "     \
    \   val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.filter(x => vowels.contains(x)).size\n        vowelsCount", "        var\
    \ count = 0\n        var lastVowel = s.charAt(s.length - 1)\n        for (i <-\
    \ 0 until s.length - 1) {\n            if (s.charAt(i) == 'a' || s.charAt(i) ==\
    \ 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u') {\n \
    \               count += 1\n            }\n            if (s.charAt(i) == lastVowel)\
    \ {\n                count += 1\n            }\n        }\n        count", " \
    \       val vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount\
    \ = mutable.Map[Char,Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount(c) = vowelsCount(c) + 1\n            }\n    \
    \    }\n        vowelsCount.values.sum", "        val vowels = Array(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c =>\
    \ vowels.contains(c)).size\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        var count = 0\n\
    \        for (i <- 0 until s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n\
    \                count += 1\n        val vowels = s.length - count\n        vowels",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = mutable.HashSet[String]()\n        for (i <- 0 until s.length)\n         \
    \   if (vowels(i) == s(i))\n                vowelsCount += s(i)\n        vowelsCount.size",
  "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount\
    \ = mutable.Map[Char, Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount(c) = vowelsCount(c) + 1\n            }\n    \
    \    }\n        vowelsCount.values.sum", "        val vowels = Set(\"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        var count = 0\n        var lastVowel = s.last\n\
    \        var lastVowelIndex = s.length - 1\n        while (lastVowelIndex >= 0)\
    \ {\n            if (lastVowel == 'a' || lastVowel == 'e' || lastVowel == 'i'\
    \ || lastVowel == 'o' || lastVowel == 'u') {\n                count += 1\n   \
    \         }\n            lastVowel = s.last\n            lastVowelIndex -= 1\n\
    \        }\n        count", "        val vowels = Set(\"a\", \"e\", \"i\", \"\
    o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(x => vowels.contains(x)).length\n\
    \        vowelsCount", "        val vowels = \"aeiouAEIOU\"\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c)).size\n        vowelsCount",
  "        val vowels = \"aeiouAEIOU\"\n        var count = 0\n        for(i <- 0\
    \ until s.length)\n            if(vowels.indexOf(s.charAt(i)) >= 0)\n        \
    \        count += 1\n        count ", "        val vowels = Array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels(i) == s(i) && s(i) != \"y\")\n                count +=\
    \ 1\n        count", "        var count = 0\n        var vowels = \"aeiou\"\n\
    \        var lastVowel = vowels.last\n        var lastChar = s.last\n        var\
    \ lastCharIndex = s.length - 1\n        var lastCharVowel = vowels(lastChar)\n\
    \        while (lastCharIndex >= 0) {\n            if (lastCharVowel == lastChar)\
    \ {\n                count += 1\n            }\n            else {\n         \
    \       count = 0\n            }\n            lastCharIndex -= 1\n           \
    \ lastChar = vowels(lastCharIndex)\n            lastCharVowel = vowels(lastChar)\n\
    \        }\n        count += lastCharVowel == lastChar\n        count += lastCharVowel\
    \ == lastVowel\n        count", "        var count = 0\n        for (i <- 0 until\
    \ s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count +=\
    \ 1\n        count += s.length - vowelsCount(s.substring(s.length - 1))\n    \
    \    count", "        var count = 0\n        var vowels = \"aeiou\"\n        var\
    \ lastVowel = \"\"\n        for (i <- 0 until s.length)\n        {\n         \
    \   if (vowels.contains(s.charAt(i)))\n            {\n                if (lastVowel\
    \ == s.charAt(i))\n                {\n                    count += 1\n       \
    \         }\n                else\n                {\n                    count\
    \ = 0\n                }\n            }\n            lastVowel = s.charAt(i)\n\
    \        }\n        count", "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n\
    \        val vowels_count = mutable.HashSet[Char]()\n        for(i <- 0 until\
    \ s.length){\n            if(vowels(i) == s.charAt(i)){\n                vowels_count\
    \ += s.charAt(i)\n            }\n        }\n        vowels_count.size", "    \
    \    val vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[String]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelsCount += s.charAt(i)\n        vowelsCount.size", "    \
    \    val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = mutable.HashSet[String]()\n        for (i <- 0 until s.length)\n         \
    \   if (vowels(i) == s(i) && vowelsCount.contains(s(i)))\n                vowelsCount\
    \ += s(i)\n            else\n                vowelsCount += s(i)\n        vowelsCount.size",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = mutable.HashSet[String]()\n        for (i <- 0 until s.length)\n         \
    \   if (vowels(i) == s(i))\n                vowelsCount += s(i)\n        vowelsCount.size",
  "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount\
    \ = mutable.Map[Char, Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.length\n        val vowels_count_in_string = 0\n        for (i <- 0 until\
    \ s.length)\n            if (vowels.contains(s.charAt(i)))\n                vowels_count_in_string\
    \ += 1\n        vowels_count_in_string", "        val vowels = Array(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n        val vowelsCount = mutable.HashMap[String, Long]()\n\
    \        for (c <- s) {\n            vowelsCount(c) += 1\n        }\n        vowelsCount.values.sum",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = mutable.HashSet[String]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount += c\n            }\n        }\n        vowelsCount.size",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = mutable.HashMap[String, Long]()\n        for (i <- 0 until s.length)\n   \
    \         if (vowels(i) == s.charAt(i))\n                vowelsCount(s.substring(0,\
    \ i)) += 1\n        vowelsCount.size", "        val vowels = Array('a', 'e', 'i',\
    \ 'o', 'u')\n        val vowelsCount = mutable.HashSet[Char]()\n        for (c\
    \ <- s) {\n            if (vowels.contains(c)) {\n                vowelsCount\
    \ += c\n            }\n        }\n        vowelsCount.size", "        var count\
    \ = 0\n        for(i <- 0 until s.length)\n            if(s.charAt(i) == 'a' ||\
    \ s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u')\n                count += 1\n        if(s.charAt(s.length - 1) == 'y')\n\
    \            count += 1\n        count", "        val vowels = Array(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n\
    \        vowelsCount", "        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       if (s.charAt(s.length - 1) == 'y')\n            count += 1\n        count",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (vowels(i) == s(i))\n\
    \                count += 1\n        count", "        val vowels = Set(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n        for (c <- s) {\n\
    \            if (vowels.contains(c)) {\n                count += 1\n         \
    \   }\n        }\n        count", "        val vowels = \"aeiou\"\n        val\
    \ vowelsCount = mutable.HashSet[Char]()\n        for(c <- s) {\n            if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                vowelsCount\
    \ += c\n            }\n        }\n        vowelsCount.size", "        val vowels\
    \ = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count = s.length\n\
    \        val vowels_count_in_word = vowels.count(s contains _)\n        val vowels_count_in_word_in_last_word\
    \ = vowels.count(s contains _ && s.last.isUpper)\n        vowels_count_in_word\
    \ + vowels_count_in_word_in_last_word", "        val vowels = Set(\"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n        val vowelsCount = s.toList.filter(vowels.contains).size\n\
    \        vowelsCount", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        val vowelsCount = s.toCharArray.filter(x => vowels.contains(x)).length\n\
    \        vowelsCount", "        var vowels = mutable.Set[Char]()\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                count += 1\n            else\n                vowels += s.charAt(i)\n\
    \        vowels.size", "        val vowels = \"aeiouAEIOU\".toCharArray\n    \
    \    val vowelsCount = mutable.HashMap[Char, Int]()\n        for (c <- s) {\n\
    \            if (vowels.contains(c)) {\n                vowelsCount(c) += 1\n\
    \            }\n        }\n        vowelsCount.values.sum", "        val vowels\
    \ = \"aeiou\"\n        val vowelsCount = mutable.HashSet[String]()\n        for\
    \ (c <- s) {\n            if (vowels.contains(c)) {\n                vowelsCount\
    \ += c\n            }\n        }\n        vowelsCount.size", "        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n\
    \        vowelsCount", "        val vowels = \"aeiou\"\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount",
  "        val vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char,\
    \ Int]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n    \
    \            vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum",
  "        val vowels = Array('a','e','i','o','u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size", " \
    \       val vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[String]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size", " \
    \       val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowels_count\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowels_count",
  "        val vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char,\
    \ Int]()\n        for (c <- s) {\n            vowelsCount(c) += 1\n        }\n\
    \        vowelsCount.filter(_._2 > 0).map(_._1).length", "        val vowels =\
    \ \"aeiouAEIOU\"\n        val vowelsCount = mutable.HashSet[Char]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n   \
    \             vowelsCount += s.charAt(i)\n        vowelsCount.size", "       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.filter(x => vowels.contains(x)).size\n        vowelsCount", "        val\
    \ vowels = Array('a','e','i','o','u')\n        val vowelsCount = mutable.ListBuffer[Long]()\n\
    \        for(i <- 0 until s.length){\n            if(vowels(i) == s(i)){\n   \
    \             vowelsCount += 1 \n            }\n        }\n        vowelsCount.sum",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.filter(x => vowels.contains(x)).size\n        vowelsCount", "        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum",
  "        var count = 0\n        var vowels = \"aeiou\"\n        var vowelsCount\
    \ = 0\n        var lastVowel = \"\"\n        var lastVowelCount = 0\n        var\
    \ lastVowelIndex = 0\n        var lastVowelIndexCount = 0\n        var lastVowelIndexCount2\
    \ = 0\n        var lastVowelIndexCount3 = 0\n        var lastVowelIndexCount4\
    \ = 0\n        var lastVowelIndexCount5 = 0\n        var lastVowelIndexCount6\
    \ = 0\n        var lastVowelIndexCount7 = 0\n        var lastVowelIndexCount8\
    \ = 0\n        var lastVowelIndexCount9 = 0\n        var lastVowelIndexCount10\
    \ = 0\n        var lastVowelIndexCount11 = 0\n        var lastVowelIndexCount12\
    \ = 0\n        var lastVowelIndexCount13 = 0\n        var lastVowelIndexCount14\
    \ = 0\n        var lastVowelIndexCount15 = 0\n        var lastVowelIndexCount16\
    \ = 0\n        var lastVowelIndexCount17 = 0\n        var lastVowelIndexCount18\
    \ = 0\n        var lastVowelIndexCount19 = 0\n        var lastVowelIndexCount20\
    \ = 0\n        var lastVowelIndexCount21 = 0\n        var lastVowelIndexCount22\
    \ = 0\n        var lastVowelIndexCount23 = 0\n        var lastVowelIndexCount24\
    \ = 0\n        var lastVowelIndexCount25 = 0\n        var lastVowelIndexCount26\
    \ = 0\n        var lastVowelIndexCount27 = 0\n        var lastVowelIndexCount28\
    \ = 0\n        var lastVowelIndexCount29 = 0\n        var lastVowelIndexCount30\
    \ = 0\n        var lastVowelIndexCount31 = 0\n        var lastVowelIndexCount32\
    \ = 0\n        var lastVowelIndexCount33 = 0\n        var lastVowelIndexCount34\
    \ = 0\n        var lastVowelIndexCount35 = 0\n        var lastVowelIndexCount36\
    \ = 0\n        var lastVowelIndexCount37 = 0\n        var lastVowelIndexCount38\
    \ = 0\n        var lastVowelIndexCount39 = 0\n        var lastVowelIndexCount40\
    \ = 0\n        var lastVowelIndexCount41 = 0\n        var lastVowelIndexCount42\
    \ = 0\n        var lastVowelIndexCount43 = 0\n        var lastVowelIndexCount44\
    \ = 0\n        var lastVowelIndexCount45 = 0\n        var lastVowelIndexCount46\
    \ = 0\n        var lastVowelIndexCount47 = 0\n        var lastVow", "        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toList.filter(x\
    \ => vowels.contains(x)).length\n        vowelsCount", "        val vowels = \"\
    aeiou\"\n        var count = 0\n        for (i <- 0 until s.length)\n        \
    \    if (vowels.contains(s.charAt(i)))\n                count += 1\n        count",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = mutable.HashSet[String]()\n        for (i <- 0 until s.length)\n         \
    \   if (vowels(i) == s.charAt(i))\n                vowels_count += s.charAt(i)\n\
    \        vowels_count.size", "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n\
    \        val vowels_count = mutable.HashSet[Char]()\n        for (c <- s) {\n\
    \            if (vowels.contains(c)) {\n                vowels_count += c\n  \
    \          }\n        }\n        vowels_count.length", "        val vowels = \"\
    aeiouAEIOU\"\n        val vowelsCount = mutable.HashSet[Char]()\n        for (c\
    \ <- s) {\n            if (vowels.contains(c)) {\n                vowelsCount\
    \ += c\n            }\n        }\n        vowelsCount.size", "        val vowels\
    \ = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for(c <- s) {\n            if(vowels.contains(c)) {\n               \
    \ vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = mutable.HashSet[String]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount += c\n            }\n        }\n        vowelsCount.size",
  "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount =\
    \ mutable.HashSet[Char]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount += c\n            }\n        }\n        vowelsCount.size",
  "        var count = 0\n        for(i <- 0 until s.length){\n            if(s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u'){\n                count += 1\n            }\n        }\n\
    \        count", "        var count = 0\n        var vowels = \"aeiou\"\n    \
    \    var vowelsCount = 0\n        var lastVowel = vowels.last\n        var lastVowelIndex\
    \ = -1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowelIndex = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowelIndex = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowelIndex = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowelIndex = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowelIndex = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowelIndex = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowelIndex = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowelIndex = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowelIndex = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowelIndex = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowelIndex = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex\
    \ = 0\n        var lastVowelIndex = 0\n        var lastVowelIndex = 0\n      \
    \  var lastVowel", "        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       count += s.length % 2\n        count += s.charAt(s.length - 1) == 'y'\n\
    \        count += s.charAt(s.length - 2) == 'y'\n        count += s.charAt(s.length\
    \ - 3) == 'y'\n        count += s.charAt(s.length - 4) == 'y'\n        count +=\
    \ s.charAt(s.length - 5) == 'y'\n        count += s.charAt(s.length - 6) == 'y'\n\
    \        count += s.charAt(s.length - 7) == 'y'\n        count += s.charAt(s.length\
    \ - 8) == 'y'\n        count += s.charAt(s.length - 9) == 'y'\n        count +=\
    \ s.charAt(s.length - 10) == 'y'\n        count += s.charAt(s.length - 11) ==\
    \ 'y'\n        count += s.charAt(s.length - 12) == 'y'\n        count += s.charAt(s.length\
    \ - 13) == 'y'\n        count += s.charAt(s.length - 14) == 'y'\n        count\
    \ += s.charAt(s.length - 15) == 'y'\n        count += s.charAt(s.length - 16)\
    \ == 'y'\n        count += s.charAt(s.length - 17) == 'y'\n        count += s.charAt(s.length\
    \ - 18) == 'y'\n        count += s.charAt(s.length - 19) == 'y'\n        count\
    \ += s.charAt(s.length - 20) == 'y'\n        count += s.charAt(s.length - 21)\
    \ == 'y'\n        count += s.charAt(s.length - 22) == 'y'\n        count += s.charAt(s.length\
    \ - 23) == 'y'\n        count += s.charAt(s.length - 24) == 'y'\n        count\
    \ += s.charAt(s.length - 25) == 'y'\n        count += s.charAt(s.length - 26)\
    \ == 'y'\n        count += s.charAt(s.length - 27) == 'y'\n        count += s.charAt(s.length\
    \ - 28) == 'y'\n        count += s.charAt(s.length - 29) == 'y'\n        count\
    \ += s.charAt(s.length - 30) == 'y'\n        count += s.charAt(s.length - 31)\
    \ == 'y'\n        count += s.charAt(s.length - 32) == 'y'\n        count += s.charAt(s.length\
    \ - 33) == 'y'\n        count += s.charAt(s.length - 34) == 'y'\n        count\
    \ += s.charAt(s.length - 35) == 'y'\n        count += s.charAt(s.length - 36)\
    \ == 'y'\n        count += s.charAt(s.length - 37) == 'y'\n        count += s.charAt(s.length\
    \ - 38) == 'y'\n        count += s.charAt(s.length - 39) == 'y'\n        count\
    \ += s.charAt(s.length - 40) == 'y'\n        count += s.charAt(s.length - 41)\
    \ == 'y'\n        count += s.charAt(s.length - 42) == '", "        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(c\
    \ => vowels.contains(c))\n        vowelsCount", "        val vowels = \"aeiouAEIOU\"\
    \n        val vowelsCount = mutable.HashSet[Char]()\n        for (i <- 0 until\
    \ s.length)\n            if (vowels.contains(s.charAt(i)))\n                vowelsCount\
    \ += s.charAt(i)\n        vowelsCount.size", "        val vowels = Array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n        for (i <- 0 until\
    \ s.length)\n            if (vowels(i) == s(i)) {\n                count += 1\n\
    \            }\n        count ", "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n\
    \        val vowelsCount = mutable.Map[Char,Long]()\n        for (c <- s) {\n\
    \            if (vowels.contains(c)) {\n                vowelsCount(c) = vowelsCount(c)\
    \ + 1\n            }\n        }\n        vowelsCount.values.sum", "        var\
    \ count = 0\n        for(i <- 0 until s.length)\n            if(s.charAt(i) ==\
    \ 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u')\n                count += 1\n        for(i <- 0 until s.length)\n  \
    \          if(s.charAt(i) == 'y' && s.charAt(i+1) == 'a')\n                count\
    \ += 1\n        count * s.length", "        val vowels = Array(\"a\", \"e\", \"\
    i\", \"o\", \"u\")\n        val vowelsCount = mutable.Map[String, Long]()\n  \
    \      for (c <- s) {\n            if (vowels.contains(c)) {\n               \
    \ vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum",
  "        val vowels = Set('a','e','i','o','u')\n        val vowelsCount = s.filter(vowels.contains).size\n\
    \        vowelsCount", "        val vowels = \"aeiouAEIOU\"\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (vowels(i) == s(i))\n\
    \                count += 1\n        count", "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n\
    \        var count = 0\n        for (c <- s) {\n            if (vowels.contains(c))\n\
    \                count += 1\n        }\n        count + (s.length - count)", " \
    \       var vowels = mutable.Set[Char]()\n        var count = 0\n        for (c\
    \ <- s) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u') {\n                vowels += c\n            }\n            if (c == 'y')\
    \ {\n                vowels += 'y'\n            }\n        }\n        vowels.toList.foreach(c\
    \ => count += 1)\n        count", "        val vowels = Array(\"a\", \"e\", \"\
    i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).size\n\
    \        vowelsCount", "        val vowels = \"aeiou\"\n        var count = 0\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                count += 1\n        count", "        var count = 0\n        var\
    \ lastVowel = s.charAt(s.length-1)\n        var lastVowelIsY = (lastVowel == 'y'\
    \ || lastVowel == 'Y')\n        var lastVowelIsYOrZ = (lastVowel == 'y' || lastVowel\
    \ == 'Z')\n        var lastVowelIsZ = (lastVowel == 'z' || lastVowel == 'Z')\n\
    \        var lastVowelIsYOrZOrX = (lastVowel == 'y' || lastVowel == 'z' || lastVowel\
    \ == 'X')\n        var lastVowelIsYOrZOrXOrW = (lastVowel == 'y' || lastVowel\
    \ == 'z' || lastVowel == 'X' || lastVowel == 'W')\n        var lastVowelIsYOrZOrXOrWOrV\
    \ = (lastVowel == 'y' || lastVowel == 'z' || lastVowel == 'X' || lastVowel ==\
    \ 'W' || lastVowel == 'V')\n        var lastVowelIsYOrZOrXOrWOrVOrU = (lastVowel\
    \ == 'y' || lastVowel == 'z' || lastVowel == 'X' || lastVowel == 'W' || lastVowel\
    \ == 'V' || lastVowel == 'U')\n        var lastVowelIsYOrZOrXOrWOrVOrUOrD = (lastVowel\
    \ == 'y' || lastVowel == 'z' || lastVowel == 'X' || lastVowel == 'W' || lastVowel\
    \ == 'V' || lastVowel == 'U' || lastVowel == 'D')\n        var lastVowelIsYOrZOrXOrWOrVOrUOrDOrF\
    \ = (lastVowel == 'y' || lastVowel == 'z' || lastVowel == 'X' || lastVowel ==\
    \ 'W' || lastVowel == 'V' || lastVowel == 'U' || lastVowel == 'D' || lastVowel\
    \ == 'F')\n        var lastVowelIsYOrZOrXOrWOrVOrUOrDOrFOrH = (lastVowel == 'y'\
    \ || lastVowel == 'z' || lastVowel == 'X' || lastVowel == 'W' || lastVowel ==\
    \ 'V' || lastVowel == 'U' || lastVowel == 'D' || lastVowel == 'F' || lastVowel\
    \ == 'H')\n", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n \
    \       var count = 0\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                count += 1\n            }\n        }\n        count", " \
    \       val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (vowels(i) == s(i)\
    \ && s(i) != \"y\")\n                count += 1\n        count", "        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count += s.length -\
    \ vowelsCount(s.substring(s.length - 1))\n        count", "        val vowels\
    \ = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = mutable.HashSet[String]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size", " \
    \       val vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount\
    \ = mutable.Map[Char,Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount(c) = vowelsCount(c) + 1\n            }\n    \
    \    }\n        vowelsCount.values.sum", "        var count = 0\n        var vowels\
    \ = \"aeiouAEIOU\"\n        var lastVowel = vowels.last\n        var lastChar\
    \ = s.last\n        for(i <- 0 until s.length){\n            val c = s.charAt(i)\n\
    \            if(c == lastChar){\n                count += 1\n            }else\
    \ if(c == lastVowel){\n                count -= 1\n            }\n           \
    \ lastChar = c\n            lastVowel = c\n        }\n        count", "      \
    \  val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.count(vowels)\n        vowelsCount", "        val vowels = Array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = mutable.HashSet[String]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size", " \
    \       val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.count(x => vowels.contains(x))\n        vowelsCount", "        val vowels\
    \ = \"aeiou\"\n        var count = 0\n        var i = 0\n        while (i < s.length){\n\
    \            if (vowels(i) == s(i)){\n                count += 1\n           \
    \ }\n            i += 1\n        }\n        count", "        var count = 0\n \
    \       for (i <- 0 until s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n\
    \                count += 1\n        count + (s.length - count) / 2", "      \
    \  var count = 0\n        var lastVowel = s.charAt(s.length - 1)\n        var\
    \ vowels = \"aeiou\"\n        var vowelsCount = vowels.count(lastVowel)\n    \
    \    for(i <- 0 until s.length){\n            val c = s.charAt(i)\n          \
    \  if(vowels.contains(c)){\n                count += 1\n            }\n      \
    \  }\n        return count", "        val vowels = Array(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        val vowels_count = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowels_count", "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n\
    \        val vowelsCount = mutable.Map[Char, Long]()\n        for (c <- s) {\n\
    \            if (vowels.contains(c)) {\n                vowelsCount(c) = vowelsCount(c)\
    \ + 1\n            }\n        }\n        vowelsCount.values.sum", "        var\
    \ count = 0\n        var lastVowel = s.last\n        for (i <- 0 until s.length)\n\
    \            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i)\
    \ == 'u')\n                count += 1\n            else if (s(i) == lastVowel)\n\
    \                count += 1\n            lastVowel = s(i)\n        count", " \
    \       val vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount\
    \ = mutable.Map[Char,Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount(c) = vowelsCount(c) + 1\n            }\n    \
    \    }\n        vowelsCount.values.sum", "        val vowels = \"aeiou\"\n   \
    \     val vowelsCount = s.toCharArray.filter(c => vowels.contains(c.toString)).size\n\
    \        vowelsCount", "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n\
    \        val vowels_count = s.length\n        val vowels_count_in_string = vowels.count(s\
    \ => s.toLowerCase contains s.toLowerCase)\n        vowels_count_in_string * vowels_count\
    \ + vowels_count_in_string", "        val vowels = Array(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\")\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels(i) == s(i) && s(i) != \"y\")\n                count +=\
    \ 1\n        count", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"\
    u\")\n        val vowelsCount = s.count(vowels)\n        vowelsCount + (if (s.endsWith(\"\
    y\")) 1 else 0)", "        var count = 0\n        var lastVowel = s.charAt(s.length\
    \ - 1)\n        var vowels = \"aeiouAEIOU\"\n        for (i <- 0 until s.length\
    \ - 1) {\n            if (vowels.contains(s.charAt(i))) {\n                count\
    \ += 1\n            }\n            if (s.charAt(i) == lastVowel) {\n         \
    \       count += 1\n            }\n        }\n        count", "        val vowels\
    \ = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,\
    \ Long]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n   \
    \             vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n\
    \        vowelsCount.values.sum", "        val vowels = \"aeiou\"\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (vowels(i) ==\
    \ s(i) && s(i) != 'y')\n                count += 1\n        count", "        val\
    \ vowels = \"aeiouAEIOU\"\n        var count = 0\n        var lastVowel = -1\n\
    \        for (i <- 0 until s.length)\n        {\n            if (vowels(i) ==\
    \ s(i))\n            {\n                count += 1\n            }\n          \
    \  else\n            {\n                if (lastVowel != -1)\n               \
    \ {\n                    if (lastVowel == s(i))\n                    {\n     \
    \                   count += 1\n                    }\n                }\n   \
    \             lastVowel = s(i)\n            }\n        }\n        count", "  \
    \      val vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowels_count\
    \ = mutable.Map[Char,Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowels_count(c) = vowels_count(c) + 1\n            }\n  \
    \      }\n        vowels_count.values.sum", "        var count = 0\n        for(i\
    \ <- 0 until s.length)\n            if(s.charAt(i) == 'a' || s.charAt(i) == 'e'\
    \ || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n       \
    \         count += 1\n        for(i <- 0 until s.length)\n            if(s.charAt(i)\
    \ == 'y' && s.charAt(i+1) == 'a')\n                count += 1\n        count *\
    \ s.length", "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        var\
    \ count = 0\n        for(i <- 0 until s.length){\n            if(vowels(i) ==\
    \ s(i)){\n                count += 1\n            }\n        }\n        count",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(x => vowels.contains(x)).size\n        vowelsCount",
  "        val vowels = Array('a','e','i','o','u')\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).length\n\
    \        vowelsCount", "        var count = 0\n        var lastVowel = s.charAt(s.length\
    \ - 1)\n        var lastVowelIsY = (lastVowel == 'y' || lastVowel == 'Y')\n  \
    \      for (i <- 0 until s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n\
    \                count += 1\n            if (s.charAt(i) == 'y' && lastVowelIsY)\n\
    \                count += 1\n            lastVowel = s.charAt(s.length - 1)\n\
    \            lastVowelIsY = (lastVowel == 'y' || lastVowel == 'Y')\n        count\
    \ + (lastVowelIsY ? 1 : 0)", "        val vowels = Array('a','e','i','o','u')\n\
    \        var count = 0\n        for(i <- 0 until s.length){\n            if(vowels(i)\
    \ == s(i)){\n                count += 1\n            }\n        }\n        count",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.toCharArray.filter(c => vowels.contains(c)).size\n        vowels_count",
  "        var count = 0\n        var vowels = \"aeiou\"\n        var vowelsCount\
    \ = 0\n        var lastVowel = vowels.last\n        var lastVowelIndex = vowels.lastIndex\n\
    \        var lastVowelIndex = s.length - 1\n        var lastVowelIndex = s.length\
    \ - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex =\
    \ s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1", "        val vowels\
    \ = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count = s.length\n\
    \        val vowels_count_in_string = vowels.count(s contains _)\n        vowels_count_in_string",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.filter(c => vowels.contains(c)).size\n        vowelsCount", "        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for (i <- 0 until s.length)\n            if (vowels(i) == s(i)) {\n  \
    \              count += 1\n            }\n        count", "        var count =\
    \ 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i) == 'a' ||\
    \ s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u')\n                count += 1\n        count + (s.length - count) / 2",
  "        val vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char,\
    \ Int]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n    \
    \            vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum",
  "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount =\
    \ mutable.HashSet[Char]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount += c\n            }\n        }\n        vowelsCount.size",
  "        var count = 0\n        for(i <- 0 until s.length){\n            val c =\
    \ s.charAt(i)\n            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u'){\n                count += 1\n            }\n        }\n        count",
  "        val vowels = \"aeiouAEIOU\".toCharArray\n        val vowelsCount = mutable.HashMap[Char,\
    \ Int]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n    \
    \            vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum",
  "        var vowels = mutable.Set[Char]()\n        for (c <- s) {\n            if\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n             \
    \   vowels += c\n            }\n        }\n        vowels.size", "        val\
    \ vowels = \"aeiouAEIOU\".toCharArray\n        val vowelsCount = mutable.HashMap[Char,\
    \ Int]()\n        for (i <- 0 until s.length)\n            if (vowels(i) == s.charAt(i))\n\
    \                vowelsCount(s.charAt(i)) += 1\n        vowelsCount.size", " \
    \       val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.count(vowels)\n        val yCount = s.lastIndexOf('y')\n        val yCount2\
    \ = s.lastIndexOf('y', s.length - 1)\n        val yCount3 = s.lastIndexOf('y',\
    \ s.length - 2)\n        val yCount4 = s.lastIndexOf('y', s.length - 3)\n    \
    \    val yCount5 = s.lastIndexOf('y', s.length - 4)\n        val yCount6 = s.lastIndexOf('y',\
    \ s.length - 5)\n        val yCount7 = s.lastIndexOf('y', s.length - 6)\n    \
    \    val yCount8 = s.lastIndexOf('y', s.length - 7)\n        val yCount9 = s.lastIndexOf('y',\
    \ s.length - 8)\n        val yCount10 = s.lastIndexOf('y', s.length - 9)\n   \
    \     val yCount11 = s.lastIndexOf('y', s.length - 10)\n        val yCount12 =\
    \ s.lastIndexOf('y', s.length - 11)\n        val yCount13 = s.lastIndexOf('y',\
    \ s.length - 12)\n        val yCount14 = s.lastIndexOf('y', s.length - 13)\n \
    \       val yCount15 = s.lastIndexOf('y', s.length - 14)\n        val yCount16\
    \ = s.lastIndexOf('y', s.length - 15)\n        val yCount17 = s.lastIndexOf('y',\
    \ s.length - 16)\n        val yCount18 = s.lastIndexOf('y', s.length - 17)\n \
    \       val yCount19 = s.lastIndexOf('y', s.length - 18)\n        val yCount20\
    \ = s.lastIndexOf('y', s.length - 19)\n        val yCount21 = s.lastIndexOf('y',\
    \ s.length - 20)\n        val yCount22 = s.lastIndexOf('y', s.length - 21)\n \
    \       val yCount23 = s.lastIndexOf('y', s.length - 22)\n        val yCount24\
    \ = s.lastIndexOf('y', s.length - 23)\n        val yCount25 = s.lastIndexOf('y',\
    \ s.length - 24)\n        val yCount26 = s.lastIndexOf('y', s.length - 25)\n \
    \       val yCount27 = s.lastIndexOf('y', s.length - 26)\n        val yCount28\
    \ = s.lastIndexOf('y', s.length - 27)\n        val yCount29 = s.lastIndexOf('y',\
    \ s.length - 28)\n        val yCount30 = s.lastIndexOf('y', s.length - 29)\n \
    \       val yCount31 = s.lastIndexOf('y', s.length - 30)\n        val yCount32\
    \ = s.lastIndexOf('y', s.length - 31)\n        val yCount33 = s.lastIndexOf('y',\
    \ s.length - 32)\n        ", "        val vowels = \"aeiou\"\n        val vowelsCount\
    \ = mutable.HashMap[Char, Int]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum",
  "        var count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        if (s.charAt(s.length\
    \ - 1) == 'y')\n            count += 1\n        count", "        var count = 0\n\
    \        for (i <- 0 until s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n\
    \                count += 1\n        val vowels = count / s.length\n        val\
    \ consonants = count % s.length\n        vowels + consonants", "        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(x\
    \ => vowels.contains(x))\n        vowelsCount", "        val vowels = Set(\"a\"\
    , \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n        for (c <- s) {\n\
    \            if (vowels.contains(c)) {\n                count += 1\n         \
    \   }\n        }\n        count"]
stop_tokens:
- "\n    }\n"

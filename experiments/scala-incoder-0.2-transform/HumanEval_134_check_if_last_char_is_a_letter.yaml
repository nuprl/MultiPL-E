name: HumanEval_134_check_if_last_char_is_a_letter
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function that returns True if the last character\n    // of a given\
  \ string is an alphabetical character and is not\n    // a part of a word, and False\
  \ otherwise.\n    // Note: \"word\" is a group of characters separated by space.\n\
  \    // Examples:\n    // >>> checkIfLastCharIsALetter((\"apple pie\"))\n    //\
  \ (false)\n    // >>> checkIfLastCharIsALetter((\"apple pi e\"))\n    // (true)\n\
  \    // >>> checkIfLastCharIsALetter((\"apple pi e \"))\n    // (false)\n    //\
  \ >>> checkIfLastCharIsALetter((\"\"))\n    // (false)\n    def checkIfLastCharIsALetter(txt\
  \ : String) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(checkIfLastCharIsALetter((\"\
  apple\")) == (false));\n    assert(checkIfLastCharIsALetter((\"apple pi e\")) ==\
  \ (true));\n    assert(checkIfLastCharIsALetter((\"eeeee\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  A\")) == (true));\n    assert(checkIfLastCharIsALetter((\"Pumpkin pie \")) == (false));\n\
  \    assert(checkIfLastCharIsALetter((\"Pumpkin pie 1\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  \")) == (false));\n    assert(checkIfLastCharIsALetter((\"eeeee e \")) == (false));\n\
  \    assert(checkIfLastCharIsALetter((\"apple pie\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  apple pi e \")) == (false));\n    }\n\n}\n"
completions: ["        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharAlpha = lastChar.toString.matches(\"[a-zA-Z]\")\n     \
    \   val isLastCharNotWord = words.last.contains(lastChar)\n        val isLastCharNotWordAlpha\
    \ = words.last.contains(lastChar) && lastChar.toString.matches(\"[a-zA-Z]\")\n\
    \        val isLastCharNotWordAlpha = words.last.contains(lastChar) && lastChar.toString.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = words.last.contains(lastChar)\
    \ && lastChar.toString.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha\
    \ = words.last.contains(lastChar) && lastChar.toString.matches(\"[a-zA-Z]\")\n\
    \        val isLastCharNotWordAlpha = words.last.contains(lastChar) && lastChar.toString.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = words.last.contains(lastChar)\
    \ && lastChar.toString.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha\
    \ = words.last.contains(lastChar) && lastChar.toString.matches(\"[a-zA-Z]\")\n\
    \        val isLastCharNotWordAlpha = words.last.contains(lastChar) && lastChar.toString.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = words.last.contains(lastChar)\
    \ && lastChar.toString.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha\
    \ = words.last.contains(lastChar) && lastChar.toString.matches(\"[a-zA-Z]\")\n\
    \        val isLastCharNotWordAlpha = words.last.contains(lastChar) && lastChar.toString.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = words.last.contains(lastChar)\
    \ && lastChar.toString.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha\
    \ = words.last.contains(lastChar) && lastChar.toString.matches(\"[a-zA-Z]\")\n\
    \        val isLastCharNotWordAlpha = words.last.contains(lastChar) && lastChar.toString.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = words.last.contains(lastChar)\
    \ && lastChar.toString.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha\
    \ = words.last.contains(lastChar) && lastChar.toString.matches(\"[a-zA-Z]\")\n\
    \        val isLastCharNotWordAlpha = words.last.contains(lastChar) && lastChar.toString.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = words.last.contains(lastChar)\
    \ && lastChar.toString.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha\
    \ = words.last.contains(", "        val words = txt.split(\" \").toList\n    \
    \    val lastChar = words(txt.length-1)\n        val lastCharIsALetter = lastChar.forall(Character.isLetter)\n\
    \        val lastCharIsNotALetter = lastChar.forall(!Character.isLetter)\n   \
    \     val lastCharIsNotALetterOrWord = lastCharIsALetter && !lastCharIsNotALetter\n\
    \        val lastCharIsNotALetterOrWordOrEmpty = lastCharIsALetter && !lastCharIsNotALetter\
    \ && !lastCharIsNotALetterOrWord\n        lastCharIsALetter || lastCharIsNotALetter\
    \ || lastCharIsNotALetterOrWord || lastCharIsNotALetterOrWordOrEmpty", "     \
    \   val lastChar = txt.last\n        val isLastCharAlpha = lastChar.toString.isLetter\n\
    \        val isLastCharNotWord = lastChar.toString.isNotEmpty && !isLastCharAlpha\n\
    \        isLastCharNotWord", "        val words = txt.split(\" \")\n        val\
    \ lastChar = words(txt.length-1)\n        val isLastCharAlphabetical = lastChar.toString.isLetter\n\
    \        val isLastCharNotWord = words.last.contains(lastChar)\n        isLastCharAlphabetical\
    \ && !isLastCharNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsALetter = lastChar.toString.matches(\"\
    [a-zA-Z]\")\n        val lastCharIsNotALetter = lastChar.isEmpty || lastChar.isLetter\n\
    \        val lastCharIsNotALetterInWord = words.lastOption.exists(_.contains(lastChar))\n\
    \        lastCharIsALetter && !lastCharIsNotALetter && !lastCharIsNotALetterInWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = (lastChar.toString.toLowerCase == lastChar)\n\
    \        val isNotALetterWord = words.lastOption.exists(word => word.contains(lastChar))\n\
    \        isLastCharALetter && !isNotALetterWord", "        val lastChar = txt.last\n\
    \        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord\
    \ = txt.split(\" \").last.contains(lastChar)\n        isLastCharAlpha && !isLastCharNotWord",
  "        val lastChar = txt.last\n        val isLetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = words.lastOption.exists(_.contains(lastChar))\n\
    \        isLastCharAlpha && !isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val isLastCharAlpha = lastChar.toString.isLetter\n        val isLastCharNotAlpha\
    \ = !lastChar.toString.isLetter\n        val isLastCharNotWord = txt.last != \"\
    \ \" && !txt.last.equals(\" \")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharAlpha && !isLastCharNotAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWord && isLastCharAlpha && !isLastCharNotAlpha\n        val\
    \ isLastCharNotWordAlpha = !isLastCharNotWord && isLastCharAlpha && !isLastCharNotAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWord && isLastCharAlpha &&\
    \ !isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharAlpha && !isLastCharNotAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWord && isLastCharAlpha && !isLastCharNotAlpha\n        val\
    \ isLastCharNotWordAlpha = !isLastCharNotWord && isLastCharAlpha && !isLastCharNotAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWord && isLastCharAlpha &&\
    \ !isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharAlpha && !isLastCharNotAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWord && isLastCharAlpha && !isLastCharNotAlpha\n        val\
    \ isLastCharNotWordAlpha = !isLastCharNotWord && isLastCharAlpha && !isLastCharNotAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWord && isLastCharAlpha &&\
    \ !isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharAlpha && !isLastCharNotAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWord && isLastCharAlpha && !isLastCharNotAlpha\n        val\
    \ isLastCharNotWordAlpha = !isLastCharNotWord && isLastCharAlpha && !isLastCharNotAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWord ", "        val lastChar\
    \ = txt.last\n        val words = txt.split(\" \").filter(_.nonEmpty)\n      \
    \  val isLastCharALetter = lastChar != ' ' && lastChar.isLetter\n        val isLastCharNotWord\
    \ = words.last.last.isLetter\n        isLastCharALetter && !isLastCharNotWord",
  "        val lastChar = txt.last\n        val isLastCharALetter = lastChar.isLetter\n\
    \        val isLastCharNotALetter = lastChar.isNotLetter\n        val isLastCharNotALetterOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace\n        val isLastCharNotALetterOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrEnd\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isEnd\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrEndOrNewLine = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isEnd || lastChar.isNewLine\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrEndOrNewLineOrNewLine = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isEnd || lastChar.isNewLine\
    \ || lastChar.isNewLine\n        val isLastCharNotALetterOrSpaceOrWordOrEndOrNewLineOrNewLineOrNewLine\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isEnd\
    \ || lastChar.isNewLine || lastChar.isNewLine || lastChar.isNewLine || lastChar.isNewLine\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrEndOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isEnd\
    \ || lastChar.isNewLine || lastChar.isNewLine || lastChar.isNewLine || lastChar.isNewLine\
    \ || lastChar.isNewLine\n        val isLastCharNotALetterOrSpaceOrWordOrEndOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isEnd\
    \ || lastChar.isNewLine || lastChar.isNewLine || lastChar.isNewLine || lastChar.isNewLine\
    \ || lastChar.isNewLine || lastChar.isNewLine\n        val isLastCharNotALetterOrSpaceOrWordOrEndOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord\
    \ = words.last.contains(lastChar)\n        isLastCharAlpha && !isLastCharNotWord",
  "        val lastChar = txt.last\n        val isAlpha = lastChar.toString.isLetter\n\
    \        val isNotWord = txt.split(\" \").last.contains(lastChar)\n        isAlpha\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLastCharALetter = lastChar.toString.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotALetter = lastChar.toString.matches(\"[a-zA-Z\
    \ ]\")\n        val isLastCharNotALetter2 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+\")\n        val isLastCharNotALetter3 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter4 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter5 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter6 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter7 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter8 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter9 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter10 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter11 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter12 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter13 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter14 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter15 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter16 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter17 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter18 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter19 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter20 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter21 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALetter22 = lastChar.toString.matches(\"[a-zA-Z\
    \ ]+$\")\n        val isLastCharNotALet", "        val lastChar = txt.last\n \
    \       val isALetter = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A'\
    \ && lastChar <= 'Z')\n        val isNotWord = txt.split(\" \").lastOption.exists(_\
    \ != lastChar)\n        isALetter && !isNotWord", "        val lastChar = txt.last\n\
    \        val isLastCharAlpha = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetterOrDigit\n        val isLastCharNotSpace = lastChar.isLetterOrDigitOrSpace\n\
    \        val isLastCharNotUpper = lastChar.isLetterOrDigitOrSpaceOrUpper\n   \
    \     val isLastCharNotLower = lastChar.isLetterOrDigitOrSpaceOrLower\n      \
    \  val isLastCharNotDigit = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n  \
    \      val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        ", "        val lastChar = txt.last\n        val lastCharIsALetter =\
    \ lastChar.isLetter\n        val lastCharIsNotALetter = lastChar.isNotLetter\n\
    \        val lastCharIsNotALetterOrSpace = lastChar.isNotLetter || lastChar.isSpace\n\
    \        val lastCharIsALetterOrSpace = lastChar.isLetter || lastChar.isSpace\n\
    \        val lastCharIsNotALetterOrSpaceOrWord = lastChar.isNotLetter || lastChar.isSpace\
    \ || lastChar.isWord\n        val lastCharIsALetterOrWord = lastChar.isLetter\
    \ || lastChar.isWord || lastChar.isSpace\n        val lastCharIsNotALetterOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isWord || lastChar.isSpace || lastChar.isNotLetter\n\
    \        val lastCharIsALetterOrWordOrSpace = lastChar.isLetter || lastChar.isWord\
    \ || lastChar.isSpace || lastChar.isNotLetter\n        val lastCharIsNotALetterOrWordOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isWord || lastChar.isSpace || lastChar.isNotLetter\
    \ || lastChar.isWord\n        val lastCharIsALetterOrWordOrSpaceOrWord = lastChar.isLetter\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isNotLetter || lastChar.isWord\
    \ || lastChar.isSpace\n        val lastCharIsNotALetterOrWordOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isNotLetter || lastChar.isWord\
    \ || lastChar.isNotLetter\n        val lastCharIsALetterOrWordOrSpaceOrWord =\
    \ lastChar.isLetter || lastChar.isWord || lastChar.isSpace || lastChar.isNotLetter\
    \ || lastChar.isWord || lastChar.isNotLetter\n        val lastCharIsNotALetterOrWordOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isWord || lastChar.isSpace || lastChar.isNotLetter\
    \ || lastChar.isWord || lastChar.isNotLetter\n        val lastCharIsALetterOrWordOrSpaceOrWord\
    \ = lastChar.isLetter || lastChar.isWord || lastChar.isSpace || lastChar.isNotLetter\
    \ || lastChar.isWord || lastChar.is", "        val words = txt.split(\" \")\n\
    \        val lastChar = words(txt.length-1)\n        val isLastCharALetter = lastChar.toString.isLetter\n\
    \        val isNotWord = words.last.contains(lastChar)\n        isLastCharALetter\
    \ && !isNotWord", "        val words = txt.split(\" \").toList\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsALetter = lastChar.toString.isLetter\n\
    \        val lastCharIsNotALetter = lastChar.isLetter\n        val lastCharIsNotALetterOrSpace\
    \ = lastChar.isLetter && !lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWord\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrEnd\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrEndOrEmpty = lastChar.isLetter\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd && !lastChar.isEmpty\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrEndOrEmptyOrEmpty = lastChar.isLetter\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd && !lastChar.isEmpty\
    \ && !lastChar.isEmpty\n        val lastCharIsNotALetterOrSpaceOrWordOrEndOrEmptyOrEmpty\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\
    \ && !lastChar.isEmpty && !lastChar.isEmpty\n        val lastCharIsNotALetterOrSpaceOrWordOrEndOrEmptyOrEmpty\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\
    \ && !lastChar.isEmpty && !lastChar.isEmpty\n        val lastCharIsNotALetterOrSpaceOrWordOrEndOrEmptyOrEmpty\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\
    \ && !lastChar.isEmpty && !lastChar.isEmpty\n        val lastCharIsNotALetterOrSpaceOrWordOrEndOrEmptyOrEmpty\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\
    \ && !lastChar.isEmpty && !lastChar.isEmpty\n        val lastCharIsNotALetterOrSpaceOrWordOrEndOrEmptyOrEmpty\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\
    \ && !lastChar.isEmpty && !lastChar.isEmpty\n        val lastCharIsNotALet", " \
    \       val words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.last\n        val isLastCharALetter = lastChar\
    \ >= 'a' && lastChar <= 'z'\n        val isLastCharNotALetter = lastChar != 'a'\
    \ && lastChar != 'z'\n        val isLastCharNotALetterOrSpace = lastChar != 'a'\
    \ && lastChar != 'z' && lastChar != ' '\n        val isLastCharNotALetterOrSpaceOrNewLine\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar != ' ' && lastChar != '\\n'\n\
    \        val isLastCharNotALetterOrSpaceOrNewLineOrNewLine = lastChar != 'a' &&\
    \ lastChar != 'z' && lastChar != ' ' && lastChar != '\\n' && lastChar != '\\r'\n\
    \        val isLastCharNotALetterOrSpaceOrNewLineOrNewLineOrNewLine = lastChar\
    \ != 'a' && lastChar != 'z' && lastChar != ' ' && lastChar != '\\n' && lastChar\
    \ != '\\r' && lastChar != '\\r'\n        val isLastCharNotALetterOrSpaceOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar != ' ' && lastChar != '\\n'\
    \ && lastChar != '\\r' && lastChar != '\\r' && lastChar != '\\r'\n        val\
    \ isLastCharNotALetterOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine = lastChar\
    \ != 'a' && lastChar != 'z' && lastChar != ' ' && lastChar != '\\n' && lastChar\
    \ != '\\r' && lastChar != '\\r' && lastChar != '\\r' && lastChar != '\\r'\n  \
    \      val isLastCharNotALetterOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar != ' ' && lastChar != '\\n'\
    \ && lastChar != '\\r' && lastChar != '\\r' && lastChar != '\\r' && lastChar !=\
    \ '\\r' && lastChar != '\\r'\n        val isLastCharNotALetterOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar ", "        var lastChar = txt.last\n        var isLastCharALetter\
    \ = true\n        var isLastCharNotALetter = false\n        for(i <- 0 until txt.length){\n\
    \            if(txt(i) == lastChar){\n                isLastCharALetter = false\n\
    \            }\n            else{\n                isLastCharALetter = true\n\
    \            }\n        }\n        return isLastCharALetter", "        val lastChar\
    \ = txt.last\n        val isLastCharALetter = lastChar.toString.isLetter\n   \
    \     val isLastCharNotALetter = lastChar.toString.isNotLetter\n        val isLastCharNotALetterOrSpace\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace\n        isLastCharALetter\
    \ && !isLastCharNotALetter && !isLastCharNotALetterOrSpace", "        val words\
    \ = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n        val\
    \ isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord\
    \ = words.last.contains(lastChar)\n        isLastCharAlpha && !isLastCharNotWord",
  "        val lastChar = txt.last\n        val isLastCharALetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        val isLastCharNotALetter = lastChar != ' ' && lastChar\
    \ != '\\n'\n        isLastCharALetter && !isLastCharNotALetter", "        val\
    \ lastChar = txt.last\n        val isLastCharALetter = lastChar.matches(\"[a-zA-Z]\"\
    ) && !lastChar.contains(\" \")\n        isLastCharALetter", "        val lastChar\
    \ = txt.last\n        val words = txt.split(\" \").map(_.toLowerCase).toSet\n\
    \        val isLastCharALetter = lastChar.toLowerCase == lastChar\n        val\
    \ isLastCharNotWord = words.contains(lastChar)\n        isLastCharALetter && !isLastCharNotWord",
  "        val lastChar = txt.last\n        val words = txt.split(\" \").filter(_.nonEmpty)\n\
    \        val isLastCharALetter = lastChar.toString.toLowerCase == lastChar\n \
    \       val isLastCharNotWord = words.contains(lastChar)\n        isLastCharALetter\
    \ && !isLastCharNotWord", "        val lastChar = txt.last\n        val isALetter\
    \ = lastChar.isLetter\n        val isNotWord = lastChar.isLetterOrDigit && !txt.contains(lastChar)\n\
    \        isALetter && !isNotWord", "        val lastChar = txt.last\n        val\
    \ isLastCharAlpha = lastChar.isLetter\n        val isLastCharNotWord = lastChar.matches(\"\
    \\\\W\")\n        isLastCharAlpha && !isLastCharNotWord", "        val words =\
    \ txt.split(\" \")\n        val lastChar = words(txt.length-1)\n        val isLastCharALetter\
    \ = lastChar.forall(_.isLetter)\n        val isLastCharNotALetter = lastChar.forall(!_.isLetter)\n\
    \        val isLastCharNotALetterOrLastCharIsALetter = isLastCharNotALetter ||\
    \ isLastCharALetter\n        isLastCharNotALetterOrLastCharIsALetter", "     \
    \   val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsALetter = lastChar.toString.isLetter\n        val lastCharIsNotALetter\
    \ = lastChar.isLetter\n        val lastCharIsNotWord = lastChar.isLetterOrDigit\n\
    \        val lastCharIsNotWordOrSpace = lastChar.isLetterOrDigitOrSpace\n    \
    \    val lastCharIsNotWordOrSpaceOrNewLine = lastChar.isLetterOrDigitOrSpaceOrNewLine\n\
    \        val lastCharIsNotWordOrNewLine = lastChar.isLetterOrDigitOrNewLine\n\
    \        val lastCharIsNotWordOrNewLineOrNewLine = lastChar.isLetterOrDigitOrNewLineOrNewLine\n\
    \        val lastCharIsNotWordOrNewLineOrNewLineOrNewLine = lastChar.isLetterOrDigitOrNewLineOrNewLineOrNewLine\n\
    \        val lastCharIsNotWordOrNewLineOrNewLineOrNewLineOrNewLine = lastChar.isLetterOrDigitOrNewLineOrNewLineOrNewLineOrNewLine\n\
    \        val lastCharIsNotWordOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine =\
    \ lastChar.isLetterOrDigitOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\n    \
    \    val lastCharIsNotWordOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.isLetterOrDigitOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\n\
    \        val lastCharIsNotWordOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.isLetterOrDigitOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\n\
    \        val lastCharIsNotWordOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.isLetterOrDigitOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\n\
    \        val lastCharIsNotWordOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.isLetterOrDigitOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\n\
    \        val ", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        val isLastCharNotALetter = !isLastCharALetter\n        val isLastCharNotALetterOrLastCharIsALetter\
    \ = isLastCharNotALetter || isLastCharALetter\n        isLastCharNotALetterOrLastCharIsALetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = (lastChar.toString.toLowerCase == lastChar)\n\
    \        val isLastCharNotALetter = (lastChar.toString.toLowerCase != lastChar)\n\
    \        val isLastCharNotALetterInWord = words.contains(lastChar)\n        val\
    \ isLastCharNotALetterInWordButNotLastCharInWord = words.contains(lastChar) &&\
    \ words.indexOf(lastChar) == words.length-1\n        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && words.indexOf(lastChar) == words.length-1 && words.indexOf(lastChar)\
    \ == words.length-2\n        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && words.indexOf(lastChar) == words.length-1 && words.indexOf(lastChar)\
    \ == words.length-2 && words.indexOf(lastChar) == words.length-3\n        val\
    \ isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && words.indexOf(lastChar) == words.length-1 && words.indexOf(lastChar)\
    \ == words.length-2 && words.indexOf(lastChar) == words.length-3 && words.indexOf(lastChar)\
    \ == words.length-4\n        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && words.indexOf(lastChar) == words.length-1 && words.indexOf(lastChar)\
    \ == words.length-2 && words.indexOf(lastChar) == words.length-3 && words.indexOf(lastChar)\
    \ == words.length-4 && words.indexOf(lastChar) == words.length-5\n        val\
    \ isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && words.indexOf(lastChar) == words.length-1 && words.indexOf(lastChar)\
    \ == words.length-2 && words.indexOf(lastChar) == words.length-3 && words.indexOf(lastChar)\
    \ == words.length-4 && words.indexOf(lastChar) == words.length-5 && words.indexOf(lastChar)\
    \ == words.length-6\n        val isLastCharNotALetterInWord", "        val words\
    \ = txt.split(\" \")\n        val lastChar = txt.last\n        val isLastCharALetter\
    \ = lastChar.toChar.isLetter\n        val isLastCharNotALetter = words.last.last.isLetter\n\
    \        val isLastCharNotALetterInWord = words.last.last != lastChar\n      \
    \  val isLastCharNotALetterInWords = words.last.last != lastChar && words.last.last\
    \ != lastChar\n        val isLastCharNotALetterInWordsOrLastCharNotALetterInWords\
    \ = words.last.last != lastChar && words.last.last != lastChar && words.last.last\
    \ != lastChar\n        val isLastCharNotALetterInWordsOrLastCharNotALetterInWordsOrLastCharNotALetterInWords\
    \ = words.last.last != lastChar && words.last.last != lastChar && words.last.last\
    \ != lastChar && words.last.last != lastChar\n        val isLastCharNotALetterInWordsOrLastCharNotALetterInWordsOrLastCharNotALetterInWordsOrLastCharNotALetterInWords\
    \ = words.last.last != lastChar && words.last.last != lastChar && words.last.last\
    \ != lastChar && words.last.last != lastChar && words.last.last != lastChar\n\
    \        val isLastCharNotALetterInWordsOrLastCharNotALetterInWordsOrLastCharNotALetterInWordsOrLastCharNotALetterInWordsOrLastCharNotALetterInWords\
    \ = words.last.last != lastChar && words.last.last != lastChar && words.last.last\
    \ != lastChar && words.last.last != lastChar && words.last.last != lastChar &&\
    \ words.last.last != lastChar\n        val isLastCharNotALetterInWordsOrLastCharNotALetterInWordsOrLastCharNotALetterInWordsOrLastCharNotALetterInWordsOrLastCharNotALetterInWordsOrLastCharNotALetterInWords\
    \ = words.last.last != lastChar && words.last.last != lastChar && words.last.last\
    \ != lastChar && words.last.last != lastChar && words.last.last != lastChar &&\
    \ words.last.", "        val words = txt.split(\" \")\n        val lastChar =\
    \ words(txt.length-1)\n        val isALetter = lastChar.matches(\"[a-zA-Z]\")\n\
    \        !isALetter", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\"\
    )\n        val isLastCharNotWord = words.last.contains(lastChar)\n        !isLastCharAlpha\
    \ && !isLastCharNotWord", "        val lastChar = txt.last\n        val isALetter\
    \ = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n   \
    \     isALetter && !isNotWord", "        val lastChar = txt.last\n        val\
    \ isLastCharAlpha = lastChar.isLetter\n        val isLastCharNotWord = lastChar.nonEmpty\
    \ && !isLastCharAlpha\n        isLastCharNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLastCharALetter\
    \ = lastChar.toString.isLetter\n        val isLastCharNotALetter = lastChar.toString.isNotLetter\n\
    \        val isLastCharNotALetterInWord = words.last.contains(lastChar)\n    \
    \    val isLastCharNotALetterInWordButNotLastChar = words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar)\n        val isLastCharNotALetterInWordButNotLastCharInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && words.last.contains(lastChar)\n\
    \        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && words.last.contains(lastChar)\n       \
    \ val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && words.last.contains(lastChar) && !words.last.contains(lastChar)\n\
    \        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && words.last.contains(lastChar)\n        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && words.last.contains(lastChar) && !words.last.contains(lastChar)\n       \
    \ val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.last.contains(lastChar", "        val lastChar = txt.last\n        val\
    \ isALetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\"\
    \ \").lastOption match {\n            case Some(word) => !word.contains(lastChar)\n\
    \            case None => false\n        }\n        isALetter && !isNotWord",
  "        val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val isNotWordChar\
    \ = txt.dropRight(1).forall(c => !Character.isLetter(c))\n        isLastCharALetter\
    \ && !isNotWordChar", "        val lastChar = txt.last\n        val isAlpha =\
    \ lastChar.matches(\"[a-zA-Z]+\")\n        val isNotWord = txt.split(\" \").last.contains(lastChar)\n\
    \        isAlpha && !isNotWord", "        val lastChar = txt.last\n        val\
    \ isALetter = (lastChar >= 'a' && lastChar <= 'z')\n        val isNotWord = txt.split(\"\
    \ \").lastOption match {\n            case Some(word) => !word.contains(lastChar)\n\
    \            case None => false\n        }\n        isALetter && !isNotWord",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]+\")\n        val isLastCharNotWord = txt.substring(txt.length-1, txt.length).split(\"\
    \ \").length == 0\n        isLastCharAlpha && !isLastCharNotWord", "        val\
    \ words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n     \
    \   val isLastCharAlpha = lastChar.forall(x => x.isLetter)\n        val isLastCharNotWord\
    \ = words.last.forall(x => x.contains(lastChar))\n        !isLastCharAlpha &&\
    \ !isLastCharNotWord", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        val isLastCharNotALetter = txt.last != lastChar\n        isLastCharALetter\
    \ && !isLastCharNotALetter", "        val words = txt.split(\" \")\n        val\
    \ lastChar = words(txt.length-1)\n        val isLastCharAlpha = lastChar.toString.isLetter\n\
    \        val isLastCharNotWord = words.last.contains(lastChar)\n        isLastCharAlpha\
    \ && !isLastCharNotWord", "        val lastChar = txt.last\n        val isALetter\
    \ = lastChar.isLetter\n        val isNotWord = txt.split(\" \").lastOption.exists(!_.contains(lastChar))\n\
    \        isALetter && !isNotWord", "        val words = txt.split(\" \").toList\n\
    \        val lastChar = words(txt.length-1)\n        val isALetter = lastChar.matches(\"\
    [a-zA-Z]+\")\n        !isALetter", "        val lastChar = txt.last\n        val\
    \ isALetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\"\
    \ \").lastOption.exists(_.equals(lastChar))\n        isALetter && !isNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isALetter = lastChar.matches(\"[a-zA-Z]+\")\n        !isALetter",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.isLetter\n\
    \        val isLastCharNotAlpha = !lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.matches(\"\\\\W\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\n\
    \        val isLastCharNotWordNotAlpha = !isLastCharNotWord && !isLastCharAlpha\n\
    \        val isLastCharNotWordNotAlpha = !isLastCharNotWord && !isLastCharAlpha\
    \ && !isLastCharNotAlpha\n        val isLastCharNotWordNotAlpha = !isLastCharNotWord\
    \ && !isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord\n        val\
    \ isLastCharNotWordNotAlpha = !isLastCharNotWord && !isLastCharAlpha && !isLastCharNotAlpha\
    \ && !isLastCharNotWord && !isLastCharNotWordNotAlpha\n        val isLastCharNotWordNotAlpha\
    \ = !isLastCharNotWord && !isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord\
    \ && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha\n        val isLastCharNotWordNotAlpha\
    \ = !isLastCharNotWord && !isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord\
    \ && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha\n\
    \        val isLastCharNotWordNotAlpha = !isLastCharNotWord && !isLastCharAlpha\
    \ && !isLastCharNotAlpha && !isLastCharNotWord && !isLastCharNotWordNotAlpha &&\
    \ !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha\n\
    \        val isLastCharNotWordNotAlpha = !isLastCharNotWord && !isLastCharAlpha\
    \ && !isLastCharNotAlpha && !isLastCharNotWord && !isLastCharNotWordNotAlpha &&\
    \ !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha\
    \ && !isLastCharNotWordNotAlpha\n        val isLastCharNotWordNotAlpha = !isLastCharNotWord\
    \ && !isLastCharAlpha && !isLastCharNotAlpha && !isLastChar", "        val lastChar\
    \ = txt.last\n        val isLastCharALetter = (lastChar >= 'a' && lastChar <=\
    \ 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val isLastCharNotALetter\
    \ = !isLastCharALetter\n        isLastCharNotALetter", "        var lastChar =\
    \ txt.last\n        var isLastCharALetter = true\n        var isLastCharNotALetter\
    \ = false\n        for(i <- 0 until txt.length){\n            if(txt(i) == lastChar){\n\
    \                isLastCharALetter = false\n            }\n            else{\n\
    \                isLastCharALetter = true\n            }\n        }\n        return\
    \ isLastCharALetter", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLastCharALetter = (lastChar.toString.toLowerCase\
    \ == \"a\" || lastChar.toString.toLowerCase == \"e\" || lastChar.toString.toLowerCase\
    \ == \"i\" || lastChar.toString.toLowerCase == \"o\" || lastChar.toString.toLowerCase\
    \ == \"u\")\n        val isLastCharNotALetter = (lastChar.toString.toLowerCase\
    \ != \"a\" && lastChar.toString.toLowerCase != \"e\" && lastChar.toString.toLowerCase\
    \ != \"i\" && lastChar.toString.toLowerCase != \"o\" && lastChar.toString.toLowerCase\
    \ != \"u\")\n        isLastCharALetter && !isLastCharNotALetter", "        val\
    \ lastChar = txt.last\n        val isALetter = lastChar >= 'a' && lastChar <=\
    \ 'z'\n        val isNotWord = txt.split(\" \").lastOption match {\n         \
    \   case None => false\n            case Some(word) => !word.contains(lastChar)\n\
    \        }\n        isALetter && !isNotWord", "        val lastChar = txt.last\n\
    \        val isALetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.dropRight(1).forall(_.isLetter)\n        isALetter && !isNotWord", " \
    \       val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharAlpha = lastChar.toString.matches(\"[a-zA-Z]\")\n     \
    \   val isLastCharNotWord = words.last.contains(lastChar)\n        isLastCharAlpha\
    \ && !isLastCharNotWord", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.isLetter\n        val isLastCharNotAlpha = !lastChar.isLetter\n \
    \       val isLastCharNotWord = txt.last.matches(\"\\\\w+\")\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWord\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        ", "  \
    \      val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val isNotWordChar\
    \ = txt.last.contains(\" \")\n        val isLastCharNotALetter = !isLastCharALetter\n\
    \        val isLastCharNotWordChar = !isNotWordChar\n        isLastCharNotALetter\
    \ && isLastCharNotWordChar", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isLastCharNotALetter = lastChar\
    \ != 'a' && lastChar != 'z'\n        val isLastCharNotALetterOrLastCharNotALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar != 'a'\n        val isLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar != 'a' && lastChar != 'z'\n\
    \        val isLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar != 'a' && lastChar != 'z' &&\
    \ lastChar != 'a'\n        val isLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar != 'a' && lastChar != 'z' &&\
    \ lastChar != 'a' && lastChar != 'z'\n        val isLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar != 'a' && lastChar != 'z' &&\
    \ lastChar != 'a' && lastChar != 'z' && lastChar != 'a' && lastChar != 'z'\n \
    \       val isLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar != 'a' && lastChar != 'z' &&\
    \ lastChar != 'a' && lastChar != 'z' && lastChar != 'a' && lastChar != 'z' &&\
    \ lastChar != 'a' && lastChar != 'z'\n        val isLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsALetter = lastChar.toString.toLowerCase match {\n     \
    \       case c if c.isLetter => true\n            case _ => false\n        }\n\
    \        val lastCharIsNotALetter = lastChar.isLetter\n        val lastCharIsNotALetterAndNotWord\
    \ = lastCharIsALetter && !lastCharIsNotALetter\n        val lastCharIsNotALetterAndWord\
    \ = lastCharIsALetter && !lastCharIsNotALetterAndNotWord\n        val lastCharIsNotALetterAndNotWordAndNotLastChar\
    \ = lastCharIsALetter && !lastCharIsNotALetterAndNotWord && !lastCharIsNotALetter\n\
    \        val lastCharIsNotALetterAndNotWordAndNotLastCharAndNotLastChar = lastCharIsALetter\
    \ && !lastCharIsNotALetterAndNotWord && !lastCharIsNotALetter && !lastCharIsNotALetterAndNotLastChar\n\
    \        val lastCharIsNotALetterAndNotWordAndNotLastCharAndNotLastCharAndNotLastChar\
    \ = lastCharIsALetter && !lastCharIsNotALetterAndNotWord && !lastCharIsNotALetter\
    \ && !lastCharIsNotALetterAndNotLastChar && !lastCharIsNotALetterAndNotLastCharAndNotLastChar\n\
    \        val lastCharIsNotALetterAndNotWordAndNotLastCharAndNotLastCharAndNotLastCharAndNotLastChar\
    \ = lastCharIsALetter && !lastCharIsNotALetterAndNotWord && !lastCharIsNotALetter\
    \ && !lastCharIsNotALetterAndNotLastChar && !lastCharIsNotALetterAndNotLastCharAndNotLastChar\
    \ && !lastCharIsNotALetterAndNotLastCharAndNotLastCharAndNotLastChar\n       \
    \ val lastCharIsNotALetterAndNotWordAndNotLastCharAndNotLastCharAndNotLastCharAndNotLastCharAndNotLastChar\
    \ = lastCharIsALetter && !lastCharIsNotALetterAndNotWord && !lastCharIsNotALetter\
    \ && !lastCharIsNotALetterAndNotLastChar && !lastCharIsNotALetterAndNotLastCharAndNotLastChar\
    \ && !lastCharIsNotALetter", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        val isLastCharNotALetter = txt.last != lastChar\n        isLastCharALetter\
    \ && !isLastCharNotALetter", "        val lastChar = txt.last\n        val isALetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \"\
    ).map(_.last).contains(lastChar)\n        !isALetter && !isNotWord", "       \
    \ val lastChar = txt.last\n        val isLastCharAlpha = lastChar.isLetter\n \
    \       val isLastCharNotAlpha = !lastChar.isLetter\n        val isLastCharNotWord\
    \ = txt.last.split(\" \").forall(_.isLetter)\n        isLastCharAlpha && !isLastCharNotAlpha\
    \ && !isLastCharNotWord", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.matches(\"\\\\\
    W\")\n        val isLastCharNotAlpha = !isLastCharNotWord\n        val isLastCharNotSpace\
    \ = lastChar.matches(\"\\\\s\")\n        val isLastCharNotUpper = lastChar.matches(\"\
    \\\\p{Upper}\")\n        val isLastCharNotLower = lastChar.matches(\"\\\\p{Lower}\"\
    )\n        val isLastCharNotDigit = lastChar.matches(\"\\\\p{Digit}\")\n     \
    \   val isLastCharNotAlpha = !isLastCharNotWord && !isLastCharNotAlpha && !isLastCharNotSpace\
    \ && !isLastCharNotUpper && !isLastCharNotLower && !isLastCharNotDigit\n     \
    \   isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotSpace", "        val\
    \ lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a' && lastChar\
    \ <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        !isLastCharALetter",
  "        val lastChar = txt.last\n        val isAlpha = lastChar.isLetter\n    \
    \    val isNotWord = txt.split(\" \").last.contains(lastChar)\n        isAlpha\
    \ && !isNotWord", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord = txt.split(\"\
    \ \").last.contains(lastChar)\n        isLastCharAlpha && !isLastCharNotWord",
  "        val lastChar = txt.last\n        val isALetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").lastOption match {\n      \
    \      case Some(word) => !word.contains(lastChar)\n            case None => false\n\
    \        }\n        isALetter && !isNotWord", "        var lastChar = txt.last\n\
    \        var isLastCharALetter = true\n        var isLastCharNotALetter = false\n\
    \        while(lastChar != \" \") {\n            if(lastChar.matches(\"[a-zA-Z]\"\
    )) {\n                isLastCharALetter = true\n            } else {\n       \
    \         isLastCharNotALetter = true\n            }\n            lastChar = txt.last\n\
    \        }\n        if(isLastCharALetter) {\n            return false\n      \
    \  } else {\n            return true\n        }", "        val lastChar = txt.last\n\
    \        val isAlpha = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.dropRight(1).forall(_.isLetter)\n        isAlpha && !isNotWord", "   \
    \     val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = (lastChar.toString.toLowerCase == \"a\" || lastChar.toString.toLowerCase\
    \ == \"e\" || lastChar.toString.toLowerCase == \"i\" || lastChar.toString.toLowerCase\
    \ == \"o\" || lastChar.toString.toLowerCase == \"u\")\n        val isLastCharNotALetter\
    \ = (lastChar.toString.toLowerCase != \"a\" && lastChar.toString.toLowerCase !=\
    \ \"e\" && lastChar.toString.toLowerCase != \"i\" && lastChar.toString.toLowerCase\
    \ != \"o\" && lastChar.toString.toLowerCase != \"u\")\n        val isLastCharNotALetterOrLastCharIsALetter\
    \ = (lastChar.toString.toLowerCase != \"a\" && lastChar.toString.toLowerCase !=\
    \ \"e\" && lastChar.toString.toLowerCase != \"i\" && lastChar.toString.toLowerCase\
    \ != \"o\" && lastChar.toString.toLowerCase != \"u\" && isLastCharALetter)\n \
    \       val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetter = (lastChar.toString.toLowerCase\
    \ != \"a\" && lastChar.toString.toLowerCase != \"e\" && lastChar.toString.toLowerCase\
    \ != \"i\" && lastChar.toString.toLowerCase != \"o\" && lastChar.toString.toLowerCase\
    \ != \"u\" && isLastCharALetter && isLastCharALetter)\n        val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetter\
    \ = (lastChar.toString.toLowerCase != \"a\" && lastChar.toString.toLowerCase !=\
    \ \"e\" && lastChar.toString.toLowerCase != \"i\" && lastChar.toString.toLowerCase\
    \ != \"o\" && lastChar.toString.toLowerCase != \"u\" && isLastCharALetter && isLastCharALetter\
    \ && isLastCharALetter)\n        val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetter\
    \ = (lastChar.toString.toLowerCase != \"a\" && lastChar.toString.toLowerCase !=\
    \ \"e\" && lastChar.toString.toLowerCase != \"i\" && lastChar.toString.toLowerCase\
    \ != \"o\" && lastChar.toString.toLowerCase != \"u\" && isLastCharALetter && isLastCharALetter\
    \ && isLastCharALet", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLastCharALetter = lastChar.matches(\"[a-zA-Z]+\"\
    )\n        val isLastCharNotALetter = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter2 = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter3 = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter4 = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter5 = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter6 = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter7 = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter8 = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter9 = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter10 = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter11 = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter12 = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharNotALetter13 = lastChar.matches(\"[a-zA-Z", "       \
    \ val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]+\"\
    )\n        val isLastCharNotWord = lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\"\
    )\n        val isLastCharNotWord2 = lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\")\n        val isLastCharNotWord3 = lastChar.matches(\"[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord4 =\
    \ lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\"\
    )\n        val isLastCharNotWord5 = lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord6\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\\
    s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord7 = lastChar.matches(\"\
    [a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord8 = lastChar.matches(\"\
    [a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord9 =\
    \ lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n    \
    \    val isLastCharNotWord10 = lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\\\
    s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord11 =\
    \ lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\")\n        val isLastCharNotWord12 = lastChar.matches(\"[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\", " \
    \       val lastChar = txt.last\n        val isLastCharALetter = (lastChar >=\
    \ 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val\
    \ isLastCharNotALetter = txt.last != lastChar\n        isLastCharALetter && !isLastCharNotALetter",
  "        val lastChar = txt.last\n        val isLastCharALetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        val isLastCharNotALetter = lastChar != 'a' && lastChar\
    \ != 'z'\n        val isLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetter\
    \ = \n            isLastCharNotALetter || isLastCharNotALetter || isLastCharNotALetter\
    \ || isLastCharNotALetter\n        val isLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetter\
    \ = \n            isLastCharNotALetter || isLastCharNotALetter || isLastCharNotALetter\
    \ || isLastCharNotALetter || isLastCharNotALetter\n        val isLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetter\
    \ = \n            isLastCharNotALetter || isLastCharNotALetter || isLastCharNotALetter\
    \ || isLastCharNotALetter || isLastCharNotALetter || isLastCharNotALetter\n  \
    \      val isLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetter\
    \ = \n            isLastCharNotALetter || isLastCharNotALetter || isLastCharNotALetter\
    \ || isLastCharNotALetter || isLastCharNotALetter || isLastCharNotALetter || isLastCharNotALetter\n\
    \        val isLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetterOrLastCharNotALetter\
    \ = \n            isLastCharNotALetter || isLastCharNotALetter || isLastCharNotALetter\
    \ || isLastCharNotALetter || isLastCharNotALetter || isLastCharNotALetter || isLastCharNotALetter\
    \ || isLastCharNotALetter\n        val isLastCharNotALetterOrLastCharNot", " \
    \       val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]+\")\n        val isLastCharNotWord\
    \ = words.lastOption.exists(_.contains(lastChar))\n        isLastCharAlpha &&\
    \ !isLastCharNotWord", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.isLetter\n        val isLastCharNotAlpha = !lastChar.isLetter\n \
    \       val isLastCharNotWord = lastChar.trim.split(\" \").length == 0\n     \
    \   isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord", "        val\
    \ lastChar = txt.last\n        val isLastCharALetter = lastChar.isLetter\n   \
    \     val isLastCharNotALetter = lastChar.isNotLetter\n        val isLastCharNotALetterOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace\n        val isLastCharNotALetterOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrDigit\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrDigitOrUppercase = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isDigit || lastChar.isUppercase\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrDigitOrUppercaseOrSpace = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isDigit || lastChar.isUppercase\
    \ || lastChar.isSpace\n        val isLastCharNotALetterOrSpaceOrWordOrDigitOrUppercaseOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUppercase || lastChar.isSpace || lastChar.isWord\n        val\
    \ isLastCharNotALetterOrSpaceOrWordOrDigitOrUppercaseOrSpaceOrWordOrDigit = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isDigit || lastChar.isUppercase\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\n        val isLastCharNotALetterOrSpaceOrWordOrDigitOrUppercaseOrSpaceOrWordOrDigitOrUppercase\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUppercase || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUppercase\n        val isLastCharNotALetterOrSpaceOrWordOrDigitOrUppercaseOrSpaceOrWordOrDigitOrUppercaseOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUppercase ", "        val lastChar = txt.last\n        val lastCharIsALetter\
    \ = lastChar.toString.isLetter\n        val lastCharIsNotALetter = lastChar.isLetter\n\
    \        val lastCharIsNotALetterOrSpace = lastChar.isLetter && !lastChar.isSpace\n\
    \        val lastCharIsNotALetterOrSpaceOrWord = lastChar.isLetter && !lastChar.isSpace\
    \ && !lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrEnd = lastChar.isLetter\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\n        val lastCharIsNotALetterOrSpaceOrWordOrEndOrSpace\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\
    \ && !lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrEndOrSpaceOrWord\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\
    \ && !lastChar.isSpace && !lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrEndOrSpaceOrWordOrSpace\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrEndOrSpaceOrWordOrSpaceOrEnd\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace && !lastChar.isEnd\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrEndOrSpaceOrWordOrSpaceOrEndOrSpace\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace && !lastChar.isEnd\
    \ && !lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrEndOrSpaceOrWordOrSpaceOrEndOrSpaceOrSpace\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isEnd\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace && !lastChar.isEnd\
    \ && !", "        var lastChar = txt.last\n        var isLastCharALetter = true\n\
    \        var isLastCharNotALetter = false\n        while(lastChar != \" \") {\n\
    \            if(lastChar.equalsIgnoreCase(\"a\") || lastChar.equalsIgnoreCase(\"\
    e\") || lastChar.equalsIgnoreCase(\"i\") || lastChar.equalsIgnoreCase(\"o\") ||\
    \ lastChar.equalsIgnoreCase(\"u\")) {\n                isLastCharALetter = true\n\
    \            } else {\n                isLastCharNotALetter = true\n         \
    \   }\n            lastChar = txt.last\n        }\n        return isLastCharALetter",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.isLetter\n\
    \        val isLastCharNotWord = lastChar.nonEmpty && !isLastCharAlpha\n     \
    \   isLastCharNotWord", "        var lastChar = txt.last\n        var isLastCharALetter\
    \ = true\n        while(lastChar != \" \" && lastChar != \"\\n\" && lastChar !=\
    \ \"\\r\" && lastChar != \"\\t\") {\n            lastChar = txt.last\n       \
    \     isLastCharALetter = false\n        }\n        return isLastCharALetter",
  "        val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        !isLastCharALetter",
  "        val words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val isALetter = lastChar.matches(\"[a-zA-Z]+\")\n        !isALetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = lastChar.toString.toLowerCase == lastChar\n \
    \       val isNotWord = words.lastOption.exists(word => word.contains(lastChar))\n\
    \        isLastCharALetter && !isNotWord", "        val words = txt.split(\" \"\
    )\n        val lastChar = words(txt.length-1)\n        val isLastCharAlpha = lastChar.toString.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = words.lastOption.exists(word => word.last.charAt(0)\
    \ == lastChar.charAt(0))\n        isLastCharAlpha && !isLastCharNotWord", "  \
    \      val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = lastChar.toString.isLetter\n        val isNotWord\
    \ = words.last.forall(_.toString.isLetter)\n        isLastCharALetter && !isNotWord",
  "        val words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = (lastChar.toString.toLowerCase == \"a\" || lastChar.toString.toLowerCase\
    \ == \"e\" || lastChar.toString.toLowerCase == \"i\" || lastChar.toString.toLowerCase\
    \ == \"o\" || lastChar.toString.toLowerCase == \"u\")\n        val isLastCharNotALetter\
    \ = (lastChar.toString.toLowerCase != \"a\" && lastChar.toString.toLowerCase !=\
    \ \"e\" && lastChar.toString.toLowerCase != \"i\" && lastChar.toString.toLowerCase\
    \ != \"o\" && lastChar.toString.toLowerCase != \"u\")\n        isLastCharALetter\
    \ && !isLastCharNotALetter", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.isLetter\n        val isLastCharNotAlpha = !lastChar.isLetter\n \
    \       val isLastCharNotWord = txt.last.nonEmpty\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWord\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLast",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.toString.isLetter\n\
    \        val isLastCharNotWord = txt.dropRight(1).forall(_.toString.isLetter)\n\
    \        isLastCharAlpha && !isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val lastCharIsALetter = lastChar.isLetter\n        val lastCharIsNotALetter\
    \ = lastChar.isNotLetter\n        val lastCharIsNotALetterAndNotWord = lastChar.isNotLetter\
    \ && !lastChar.isWord\n        val lastCharIsWord = lastChar.isWord\n        val\
    \ lastCharIsNotWord = lastChar.isNotWord\n        val lastCharIsNotWordAndNotLetter\
    \ = lastChar.isNotWord && !lastChar.isLetter\n        val lastCharIsLetter = lastChar.isLetter\n\
    \        val lastCharIsNotLetter = lastChar.isNotLetter\n        val lastCharIsNotLetterAndNotWord\
    \ = lastChar.isNotLetter && !lastChar.isWord\n        val lastCharIsWordAndNotLetter\
    \ = lastChar.isWord && !lastChar.isLetter\n        val lastCharIsLetterAndNotWord\
    \ = lastChar.isLetter && !lastChar.isWord\n        val lastCharIsWordAndNotLetter\
    \ = lastChar.isWord && !lastChar.isLetter\n        val lastCharIsLetterAndNotWordAndNotLetter\
    \ = lastChar.isLetter && !lastChar.isWord && !lastChar.isLetter\n        val lastCharIsWordAndNotLetterAndNotLetter\
    \ = lastChar.isWord && !lastChar.isLetter && !lastChar.isLetter\n        val lastCharIsWordAndNotLetterAndNotLetterAndNotWord\
    \ = lastChar.isWord && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isWord\n\
    \        val lastCharIsWordAndNotLetterAndNotLetterAndNotWordAndNotLetter = lastChar.isWord\
    \ && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isWord && !lastChar.isLetter\n\
    \        val lastCharIsWordAndNotLetterAndNotLetterAndNotWordAndNotLetterAndNotWord\
    \ = lastChar.isWord && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isWord\
    \ && !lastChar.isLetter && !lastChar.isWord\n        val lastCharIsWordAndNotLetterAndNotLetterAndNotWordAndNotLetterAndNotWordAndNotLetter\
    \ = lastChar.isWord && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isWord\
    \ && !lastChar.isLetter && !lastChar.isWord && !lastChar.isLetter\n        val\
    \ lastCharIsWordAndNotLetterAndNotLetterAndNotWordAndNotLetterAnd", "        val\
    \ lastChar = txt.last\n        val lastCharIsALetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val lastCharIsNotALetter = lastChar != 'a' && lastChar != 'z'\n\
    \        val lastCharIsNotALetterButLastCharIsALetter = lastChar != 'a' && lastChar\
    \ != 'z' && lastChar == 'a'\n        val lastCharIsALetterButLastCharIsNotALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar == 'z'\n        val lastCharIsALetterButLastCharIsALetterButLastCharIsNotALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar == 'a' && lastChar == 'z'\n\
    \        val lastCharIsALetterButLastCharIsNotALetterButLastCharIsALetter = lastChar\
    \ != 'a' && lastChar != 'z' && lastChar == 'z' && lastChar == 'a'\n        val\
    \ lastCharIsALetterButLastCharIsALetterButLastCharIsNotALetterButLastCharIsALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar == 'a' && lastChar == 'z' &&\
    \ lastChar == 'z'\n        val lastCharIsALetterButLastCharIsNotALetterButLastCharIsALetterButLastCharIsNotALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar == 'z' && lastChar == 'a' &&\
    \ lastChar == 'z'\n        val lastCharIsALetterButLastCharIsALetterButLastCharIsNotALetterButLastCharIsALetterButLastCharIsNotALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar == 'a' && lastChar == 'z' &&\
    \ lastChar == 'z'\n        val lastCharIsALetterButLastCharIsNotALetterButLastCharIsALetterButLastCharIsNotALetterButLastCharIsALetter\
    \ = lastChar != 'a' && lastChar != 'z' && lastChar == 'z' && lastChar == 'a' &&\
    \ lastChar == 'z'\n        val lastCharIsALetterButLastCharIsALetterButLastCharIsNotALetterButLastCharIsALetterButLastCharIsNotALetterButLastCharIsALetter\
    \ = lastChar != 'a' && ", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.matches(\"\\\\\
    W\")\n        isLastCharAlpha && !isLastCharNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLastCharALetter\
    \ = (lastChar.toString.toLowerCase == lastChar)\n        val isNotWordChar = words.last.forall(_.toString.toLowerCase\
    \ != lastChar)\n        isLastCharALetter && !isNotWordChar", "        val lastChar\
    \ = txt.last\n        val isALetter = lastChar.toString.isLetter\n        val\
    \ isNotWord = txt.dropRight(1).forall(_.toString.isLetter)\n        isALetter\
    \ && !isNotWord", "        val lastChar = txt.last\n        val isAlpha = lastChar\
    \ >= 'a' && lastChar <= 'z'\n        val isWord = txt.split(\" \").last.contains(lastChar)\n\
    \        !isAlpha && !isWord", "        val lastChar = txt.last\n        val isAlpha\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \"\
    ).map(_.last).contains(lastChar)\n        isAlpha && !isNotWord", "        val\
    \ lastChar = txt.last\n        val isLastCharALetter = lastChar.isLetter\n   \
    \     val isLastCharNotALetter = lastChar.nonLetter\n        val isLastCharNotALetterOrSpace\
    \ = lastChar.nonLetter.nonSpace || lastChar.nonSpace == false\n        isLastCharALetter\
    \ && !isLastCharNotALetter && !isLastCharNotALetterOrSpace", "        val lastChar\
    \ = txt.last\n        val isLastCharALetter = lastChar.toString.isLetter\n   \
    \     val isLastCharNotALetter = lastChar.toString.isNotLetter\n        val isLastCharNotALetterOrWord\
    \ = lastChar.toString.isNotLetter || lastChar.toString.split(\" \").length ==\
    \ 1\n        val isLastCharNotALetterOrWordOrEmpty = lastChar.toString.isNotLetter\
    \ || lastChar.toString.split(\" \").length == 0 || txt.length == 0\n        val\
    \ isLastCharNotALetterOrWordOrEmptyOrEmpty = lastChar.toString.isNotLetter ||\
    \ lastChar.toString.split(\" \").length == 0 || txt.length == 0\n        val isLastCharNotALetterOrWordOrEmptyOrEmpty\
    \ = lastChar.toString.isNotLetter || lastChar.toString.split(\" \").length ==\
    \ 0 || txt.length == 0\n        val isLastCharNotALetterOrWordOrEmptyOrEmpty =\
    \ lastChar.toString.isNotLetter || lastChar.toString.split(\" \").length == 0\
    \ || txt.length == 0\n        val isLastCharNotALetterOrWordOrEmptyOrEmpty = lastChar.toString.isNotLetter\
    \ || lastChar.toString.split(\" \").length == 0 || txt.length == 0\n        val\
    \ isLastCharNotALetterOrWordOrEmptyOrEmpty = lastChar.toString.isNotLetter ||\
    \ lastChar.toString.split(\" \").length == 0 || txt.length == 0\n        val isLastCharNotALetterOrWordOrEmptyOrEmpty\
    \ = lastChar.toString.isNotLetter || lastChar.toString.split(\" \").length ==\
    \ 0 || txt.length == 0\n        val isLastCharNotALetterOrWordOrEmptyOrEmpty =\
    \ lastChar.toString.isNotLetter || lastChar.toString.split(\" \").length == 0\
    \ || txt.length == 0\n        val isLastCharNotALetterOrWordOrEmptyOrEmpty = lastChar.toString.isNotLetter\
    \ || lastChar.toString.split(\" \").length == 0 || txt.length == 0\n        val\
    \ isLastCharNotALetterOrWordOrEmptyOrEmpty = lastChar.toString.isNotLetter ||\
    \ lastChar.toString.split(\" \").length == 0 || txt.length == 0\n        val isLastCharNotALetterOrWordOrEmptyOrEmpty\
    \ = lastChar.toString.isNotLetter || lastChar.toString.split(\" \").length ==\
    \ 0 || txt.length == 0\n        val isLastCharNotALetterOrWordOrEmpty", "    \
    \    var lastChar = txt.last\n        var isLastCharALetter = true\n        var\
    \ isLastCharNotALetter = false\n        for(i <- 0 until txt.length){\n      \
    \      if(txt(i) == lastChar){\n                lastChar = txt.last\n        \
    \        isLastCharALetter = true\n            }\n            else{\n        \
    \        isLastCharALetter = false\n            }\n        }\n        return isLastCharALetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharAlphabetic = lastChar.matches(\"[a-zA-Z]\") && !lastChar.matches(\"\
    \\\\w\")\n        val isLastCharNotWord = lastChar.matches(\"\\\\w\")\n      \
    \  return isLastCharAlphabetic && !isLastCharNotWord", "        val lastChar =\
    \ txt.last\n        val isAlpha = lastChar >= 'a' && lastChar <= 'z'\n       \
    \ val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n        isAlpha\
    \ && !isNotWord", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        val isLastCharNotALetter = txt.last != lastChar\n        val isLastCharNotALetterAndNotWord\
    \ = txt.last != lastChar && !txt.contains(\" \")\n        val isLastCharNotALetterAndNotWordAndNotLastCharIsALetter\
    \ = txt.last != lastChar && !txt.contains(\" \") && !isLastCharALetter\n     \
    \   val isLastCharNotALetterAndNotWordAndNotLastCharIsALetterAndNotLastCharIsALetter\
    \ = txt.last != lastChar && !txt.contains(\" \") && !isLastCharALetter && !isLastCharALetter\n\
    \        val isLastCharNotALetterAndNotWordAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetter\
    \ = txt.last != lastChar && !txt.contains(\" \") && !isLastCharALetter && !isLastCharALetter\
    \ && !isLastCharALetter\n        val isLastCharNotALetterAndNotWordAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetter\
    \ = txt.last != lastChar && !txt.contains(\" \") && !isLastCharALetter && !isLastCharALetter\
    \ && !isLastCharALetter && !isLastCharALetter && !isLastCharALetter\n        val\
    \ isLastCharNotALetterAndNotWordAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetter\
    \ = txt.last != lastChar && !txt.contains(\" \") && !isLastCharALetter && !isLastCharALetter\
    \ && !isLastCharALetter && !isLastCharALetter && !isLastCharALetter && !isLastCharALetter\
    \ && !isLastCharALetter\n        val isLastCharNotALetterAndNotWordAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNot",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharAlphabetical = lastChar.toString.isLetter\n        val\
    \ isLastCharNotWord = words.last.contains(lastChar)\n        isLastCharAlphabetical\
    \ && !isLastCharNotWord", "        val lastChar = txt.last\n        val isALetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \"\
    ).lastOption.isEmpty\n        isALetter && !isNotWord", "        val words = txt.split(\"\
    \ \").toList\n        val lastChar = words(txt.length-1)\n        val lastCharIsALetter\
    \ = lastChar.forall(_.isLetter)\n        val lastCharIsNotALetter = lastChar.forall(!_.isLetter)\n\
    \        val lastCharIsNotALetterButNotWord = lastChar.forall(!_.isLetter && !_.isSpace)\n\
    \        val lastCharIsNotALetterButNotWordButNotSpace = lastChar.forall(!_.isLetter\
    \ && !_.isSpace && !_.isSpace)\n        val lastCharIsNotALetterButNotWordButNotSpaceButNotLastChar\
    \ = lastChar.forall(!_.isLetter && !_.isSpace && !_.isSpace && !_.isLetter &&\
    \ !_.isSpace)\n        val lastCharIsNotALetterButNotWordButNotSpaceButNotLastCharButNotLastChar\
    \ = lastChar.forall(!_.isLetter && !_.isSpace && !_.isSpace && !_.isLetter &&\
    \ !_.isSpace && !_.isLetter && !_.isSpace)\n        val lastCharIsNotALetterButNotWordButNotSpaceButNotLastCharButNotLastCharButNotLastChar\
    \ = lastChar.forall(!_.isLetter && !_.isSpace && !_.isSpace && !_.isLetter &&\
    \ !_.isSpace && !_.isLetter && !_.isSpace && !_.isLetter && !_.isSpace)\n    \
    \    val lastCharIsNotALetterButNotWordButNotSpaceButNotLastCharButNotLastCharButNotLastCharButNotLastChar\
    \ = lastChar.forall(!_.isLetter && !_.isSpace && !_.isSpace && !_.isLetter &&\
    \ !_.isSpace && !_.isLetter && !_.isSpace && !_.isLetter && !_.isSpace && !_.isLetter\
    \ && !_.isSpace)\n        val lastCharIsNotALetterButNotWordButNotSpaceButNotLastCharButNotLastCharButNotLastCharButNotLastCharButNotLastChar\
    \ = lastChar.forall(!_.isLetter && !_.isSpace && !_.isSpace && !_.isLetter &&\
    \ !_.isSpace && !_.isLetter && !_.isSpace && !_.isLetter && !_.isSpace && !_.isLetter\
    \ && !_.isSpace && !_.isLetter ", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLastCharALetter = lastChar.matches(\"\
    [a-zA-Z]+\")\n        val isLastCharNotALetter = lastChar.matches(\"[a-zA-Z]+$\"\
    )\n        val isLastCharNotALetterOrSpace = lastChar.matches(\"[a-zA-Z]+\\\\\
    s+\")\n        val isLastCharNotALetterOrSpaceOrLastCharIsALetter = isLastCharNotALetter\
    \ || isLastCharIsALetter\n        val isLastCharNotALetterOrSpaceOrLastCharIsALetterOrSpace\
    \ = isLastCharNotALetter || isLastCharIsALetter || isLastCharNotALetterOrSpace\n\
    \        val isLastCharNotALetterOrSpaceOrLastCharIsALetterOrSpaceOrLastCharIsALetter\
    \ = isLastCharNotALetter || isLastCharIsALetter || isLastCharNotALetterOrSpace\
    \ || isLastCharIsALetterOrSpace\n        val isLastCharNotALetterOrSpaceOrLastCharIsALetterOrSpaceOrLastCharIsALetterOrSpace\
    \ = isLastCharNotALetter || isLastCharIsALetter || isLastCharNotALetterOrSpace\
    \ || isLastCharIsALetterOrSpace || isLastCharNotALetterOrSpace\n        val isLastCharNotALetterOrSpaceOrLastCharIsALetterOrSpaceOrLastCharIsALetterOrSpaceOrLastCharIsALetter\
    \ = isLastCharNotALetter || isLastCharIsALetter || isLastCharNotALetterOrSpace\
    \ || isLastCharIsALetterOrSpace || isLastCharNotALetterOrSpace || isLastCharIsALetterOrSpace\n\
    \        val isLastCharNotALetterOrSpaceOrLastCharIsALetterOrSpaceOrLastCharIsALetterOrSpaceOrLastCharIsALetterOrSpace\
    \ = isLastCharNotALetter || isLastCharIsALetter || isLastCharNotALetterOrSpace\
    \ || isLastCharIsALetterOrSpace || isLastCharNotALetterOrSpace || isLastCharIsALetterOrSpace\n\
    \        val isLastCharNotALetterOrSpaceOrLastCharIsALetterOrSpaceOrLastCharIsALetterOrSpaceOrLastCharIsALetterOrSpaceOrLastCharIsALetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotALetter\
    \ = !isLastCharALetter\n        isLastCharNotALetter", "        val lastChar =\
    \ txt.last\n        val lastCharIsALetter = lastChar >= 'a' && lastChar <= 'z'\n\
    \        val lastCharIsNotALetter = lastChar != 'a' && lastChar != 'z'\n     \
    \   lastCharIsALetter && !lastCharIsNotALetter", "        val lastChar = txt.last\n\
    \        val isLastCharAlphabetic = lastChar.isLetter\n        val isLastCharNotWord\
    \ = txt.split(\" \").last.contains(lastChar)\n        isLastCharAlphabetic &&\
    \ !isLastCharNotWord", "        val lastChar = txt.last\n        val isAlpha =\
    \ lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \"\
    ).lastOption.exists(_ == lastChar)\n        isAlpha && !isNotWord", "        val\
    \ words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n     \
    \   val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord\
    \ = words.last.contains(lastChar)\n        isLastCharAlpha && !isLastCharNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharAlpha = lastChar.forall(x => x.isLetter)\n        val isLastCharNotWord\
    \ = words.last.forall(x => !x.contains(\" \"))\n        isLastCharAlpha && !isLastCharNotWord",
  "        val lastChar = txt.last\n        val isAlpha = lastChar.matches(\"[a-zA-Z]\"\
    )\n        val isNotWord = txt.split(\" \").lastOption match {\n            case\
    \ Some(word) => !word.contains(lastChar)\n            case None => false\n   \
    \     }\n        isAlpha && !isNotWord", "        val lastChar = txt.last\n  \
    \      val isLastCharALetter = lastChar.isLetter\n        val isLastCharNotALetter\
    \ = lastChar.isNotLetter\n        val isLastCharNotALetterOrSpace = lastChar.isNotLetter\
    \ || lastChar.isSpace\n        val isLastCharNotALetterOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrNewline\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isNewline\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrNewlineOrNewline = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isNewline || lastChar.isNewline\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrNewlineOrNewlineOrNewline = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isNewline || lastChar.isNewline\
    \ || lastChar.isNewline\n        val isLastCharNotALetterOrSpaceOrWordOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isNewline\
    \ || lastChar.isNewline || lastChar.isNewline || lastChar.isNewline\n        val\
    \ isLastCharNotALetterOrSpaceOrWordOrNewlineOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isNewline\
    \ || lastChar.isNewline || lastChar.isNewline || lastChar.isNewline || lastChar.isNewline\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isNewline\
    \ || lastChar.isNewline || lastChar.isNewline || lastChar.isNewline || lastChar.isNewline\
    \ || lastChar.isNewline\n        val isLastCharNotALetterOrSpaceOrWordOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastChar.isNotLetter || lastChar.is", "        val lastChar = txt.last\n \
    \       val lastCharIsALetter = lastChar >= 'a' && lastChar <= 'z'\n        val\
    \ lastCharIsNotALetter = lastChar != 'a' && lastChar != 'z'\n        lastCharIsALetter\
    \ && lastCharIsNotALetter", "        val words = txt.split(\" \")\n        val\
    \ lastChar = words(txt.length-1)\n        val isLastCharALetter = lastChar.toString.isLetter\n\
    \        val isNotWord = words.last.forall(_.toString.isLetter)\n        isLastCharALetter\
    \ && !isNotWord", "        val words = txt.split(\" \").toList\n        val lastChar\
    \ = words(txt.length-1)\n        val isLastCharAlpha = lastChar.forall(_.isLetter)\n\
    \        val isLastCharNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     isLastCharAlpha && !isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val lastCharIsALetter = (lastChar >= 'a' && lastChar <= 'z')\n      \
    \  val lastCharIsNotALetter = (lastChar != 'a' && lastChar != 'z')\n        val\
    \ lastCharIsNotALetterOrSpace = (lastCharIsALetter || lastCharIsNotALetter)\n\
    \        val lastCharIsNotALetterOrSpaceOrWord = (lastCharIsALetter || lastCharIsNotALetter\
    \ || lastCharIsNotALetterOrSpace)\n        val lastCharIsNotALetterOrSpaceOrWordOrEmpty\
    \ = (lastCharIsALetter || lastCharIsNotALetter || lastCharIsNotALetterOrSpace\
    \ || lastChar.isEmpty)\n        val lastCharIsNotALetterOrSpaceOrWordOrEmptyOrSpace\
    \ = (lastCharIsALetter || lastCharIsNotALetter || lastCharIsNotALetterOrSpace\
    \ || lastChar.isEmpty || lastChar.isSpace)\n        val lastCharIsNotALetterOrSpaceOrWordOrEmptyOrSpaceOrWord\
    \ = (lastCharIsALetter || lastCharIsNotALetter || lastCharIsNotALetterOrSpace\
    \ || lastChar.isEmpty || lastChar.isSpace || lastChar.isWord)\n        val lastCharIsNotALetterOrSpaceOrWordOrEmptyOrSpaceOrWordOrSpace\
    \ = (lastCharIsALetter || lastCharIsNotALetter || lastCharIsNotALetterOrSpace\
    \ || lastChar.isEmpty || lastChar.isSpace || lastChar.isWord || lastChar.isSpace)\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrEmptyOrSpaceOrWordOrSpaceOrWord\
    \ = (lastCharIsALetter || lastCharIsNotALetter || lastCharIsNotALetterOrSpace\
    \ || lastChar.isEmpty || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord)\n        val lastCharIsNotALetterOrSpaceOrWordOrEmptyOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = (lastCharIsALetter || lastCharIsNotALetter || lastCharIsNotALetterOrSpace\
    \ || lastChar.isEmpty || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || ", "        val words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsALetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotALetter\
    \ = lastChar.forall(!_.isLetter)\n        val lastCharIsNotALetterButNotWord =\
    \ lastChar.forall(!_.isLetter && !_.isSpace)\n        val lastCharIsNotALetterButWord\
    \ = lastChar.forall(!_.isLetter && _.isSpace)\n        val lastCharIsALetterButNotWord\
    \ = lastChar.forall(_.isLetter && !_.isSpace)\n        val lastCharIsALetterButWord\
    \ = lastChar.forall(_.isLetter && _.isSpace)\n        val lastCharIsALetterButNotWordButNotSpace\
    \ = lastChar.forall(_.isLetter && !_.isSpace && !_.isLetter)\n        val lastCharIsALetterButNotWordButSpace\
    \ = lastChar.forall(_.isLetter && !_.isSpace && _.isLetter)\n        val lastCharIsALetterButWordButNotSpace\
    \ = lastChar.forall(_.isLetter && _.isSpace && !_.isLetter)\n        val lastCharIsALetterButWordButSpace\
    \ = lastChar.forall(_.isLetter && _.isSpace && _.isLetter)\n        val lastCharIsALetterButNotWordButNotSpace\
    \ = lastChar.forall(_.isLetter && !_.isSpace && !_.isLetter && !_.isSpace)\n \
    \       val lastCharIsALetterButNotWordButSpace = lastChar.forall(_.isLetter &&\
    \ !_.isSpace && _.isLetter && !_.isSpace)\n        val lastCharIsALetterButWordButNotSpace\
    \ = lastChar.forall(_.isLetter && _.isSpace && !_.isLetter && !_.isSpace)\n  \
    \      val lastCharIsALetterButWordButSpace = lastChar.forall(_.isLetter && _.isSpace\
    \ && _.isLetter && !_.isSpace)\n        val lastCharIsALetterButNotWordButNotSpace\
    \ = lastChar.forall(_.isLetter && !_.isSpace && !_.isLetter && _.isSpace)\n  \
    \      val lastCharIsALetterButNotWordButSpace", "        val lastChar = txt.last\n\
    \        val isLastCharAlpha = lastChar.isLetter\n        val isLastCharNotAlpha\
    \ = !lastChar.isLetter\n        val isLastCharNotWord = txt.last.split(\" \").forall(_.isLetter)\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWord\n        val isLastCharNotWordNotAlpha\
    \ = !isLastCharNotWord && !isLastCharAlpha\n        val isLastCharNotWordNotAlpha\
    \ = !isLastCharNotWord && !isLastCharAlpha && !isLastCharNotAlpha\n        val\
    \ isLastCharNotWordNotAlpha = !isLastCharNotWord && !isLastCharAlpha && !isLastCharNotAlpha\
    \ && !isLastCharNotWord\n        val isLastCharNotWordNotAlpha = !isLastCharNotWord\
    \ && !isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord && !isLastCharNotWordNotAlpha\n\
    \        val isLastCharNotWordNotAlpha = !isLastCharNotWord && !isLastCharAlpha\
    \ && !isLastCharNotAlpha && !isLastCharNotWord && !isLastCharNotWordNotAlpha &&\
    \ !isLastCharNotWordNotAlpha\n        val isLastCharNotWordNotAlpha = !isLastCharNotWord\
    \ && !isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord && !isLastCharNotWordNotAlpha\
    \ && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha\n        val isLastCharNotWordNotAlpha\
    \ = !isLastCharNotWord && !isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord\
    \ && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha\
    \ && !isLastCharNotWordNotAlpha\n        val isLastCharNotWordNotAlpha = !isLastCharNotWord\
    \ && !isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord && !isLastCharNotWordNotAlpha\
    \ && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha\
    \ && !isLastCharNotWordNotAlpha\n        val isLastCharNotWordNotAlpha = !isLastCharNotWord\
    \ && !isLastCharAlpha && !isLastCharNotAlph", "        val lastChar = txt.last\n\
    \        val lastCharIsLetter = lastChar >= 'a' && lastChar <= 'z'\n        val\
    \ lastCharIsNotWord = lastChar != ' ' && lastChar != '\\n'\n        val lastCharIsNotSpace\
    \ = lastChar != ' '\n        val lastCharIsNotNewline = lastChar != '\\n'\n  \
    \      val lastCharIsNotNewLineOrSpace = lastChar != '\\n' && lastChar != ' '\n\
    \        val lastCharIsNotNewLineOrSpaceOrNewline = lastChar != '\\n' && lastChar\
    \ != ' ' && lastChar != '\\n'\n        val lastCharIsNotNewLineOrSpaceOrNewlineOrNewline\
    \ = lastChar != '\\n' && lastChar != ' ' && lastChar != '\\n' && lastChar != '\\\
    n'\n        val lastCharIsNotNewLineOrSpaceOrNewlineOrNewlineOrNewline = lastChar\
    \ != '\\n' && lastChar != ' ' && lastChar != '\\n' && lastChar != '\\n' && lastChar\
    \ != '\\n'\n        val lastCharIsNotNewLineOrSpaceOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastChar != '\\n' && lastChar != ' ' && lastChar != '\\n' && lastChar != '\\\
    n' && lastChar != '\\n' && lastChar != '\\n'\n        val lastCharIsNotNewLineOrSpaceOrNewlineOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastChar != '\\n' && lastChar != ' ' && lastChar != '\\n' && lastChar != '\\\
    n' && lastChar != '\\n' && lastChar != '\\n' && lastChar != '\\n'\n        val\
    \ lastCharIsNotNewLineOrSpaceOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastChar != '\\n' && lastChar != ' ' && lastChar != '\\n' && lastChar != '\\\
    n' && lastChar != '\\n' && lastChar != '\\n' && lastChar != '\\n' && lastChar\
    \ != '\\n'\n        val lastCharIsNotNewLineOrSpaceOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastChar != '\\n' && lastChar != ' ' && lastChar != '\\n' && lastChar != '\\\
    n' && lastChar != '\\n' && lastChar != '\\n' && lastChar != '\\n' && lastChar\
    \ != '\\n'\n        val lastCharIsNotNewLineOrSpace", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLastCharAlpha\
    \ = lastChar.toString.isLetter\n        val isLastCharNotWord = words.last.contains(lastChar)\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWord\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWord", "        val lastChar = txt.last\n        val\
    \ isLastCharAlpha = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetterOrDigit\n\
    \        val isLastCharNotSpace = lastChar.isLetterOrDigitOrSpace\n        val\
    \ isLastCharNotUpper = lastChar.isLetterOrDigitOrSpaceOrUpper\n        val isLastCharNotLower\
    \ = lastChar.isLetterOrDigitOrSpaceOrLower\n        val isLastCharNotDigit = lastChar.isLetterOrDigitOrSpaceOrUpperOrLower\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = lastChar.isLetterOrDigitOrSpaceOrUpperOrLowerOrDigit\n\
    \        val isLastCharNotAlpha = last", "        val lastChar = txt.last\n  \
    \      if(lastChar.isLetter) {\n            val words = txt.split(\" \").map(_.toUpperCase)\n\
    \            val lastWord = words.last\n            if(lastWord.contains(lastChar))\
    \ {\n                return false\n            }\n        }\n        return true",
  "        val lastChar = txt.last\n        val isAlpha = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").lastOption match {\n      \
    \      case Some(word) => !word.contains(lastChar)\n            case None => false\n\
    \        }\n        isAlpha && !isNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLastCharALetter\
    \ = lastChar.matches(\"[a-zA-Z]\") && !lastChar.matches(\"\\\\w+\")\n        isLastCharALetter",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"\\\\W\")\n   \
    \     isLastCharAlpha && !isLastCharNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = txt.last\n        val lastCharIsALetter = lastChar.toString.isLetter\n\
    \        val lastCharIsNotALetter = lastChar.isLetter\n        val lastCharIsNotALetterInWord\
    \ = words.last.contains(lastChar)\n        val lastCharIsNotALetterInWordButNotLastCharInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar)\n        val\
    \ lastCharIsNotALetterInWordButNotLastCharInWordButNotLastCharInWord = words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && !words.last.contains(lastChar)\n      \
    \  val lastCharIsNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar)\n        val lastCharIsNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && !words.last.contains(lastChar)\n      \
    \  val lastCharIsNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\n\
    \        val lastCharIsNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar)\n        val lastCharIsNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = ", "        val lastChar = txt.last\n        val isALetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n\
    \        isALetter && !isNotWord", "        val lastChar = txt.last\n        if(lastChar.isLetter)\
    \ {\n            val words = txt.split(\" \").filter(_.nonEmpty)\n           \
    \ val lastWord = words.last\n            if(lastWord.last.isLetter) {\n      \
    \          return false\n            }\n        }\n        return true", "   \
    \     val words = txt.split(\" \")\n        val lastChar = txt.last\n        val\
    \ lastCharIsALetter = lastChar.isLetter\n        val lastCharIsNotALetter = lastChar.isNotLetter\n\
    \        val lastCharIsNotWord = lastChar.isNotWord\n        val lastCharIsNotWordOrALetter\
    \ = lastCharIsNotWord || lastCharIsALetter\n        val lastCharIsNotWordOrNotALetter\
    \ = lastCharIsNotWord && !lastCharIsALetter\n        val lastCharIsNotWordOrNotALetterOrNotWord\
    \ = lastCharIsNotWord && !lastCharIsALetter && !lastCharIsNotWord\n        val\
    \ lastCharIsNotWordOrNotALetterOrNotWordOrALetter = lastCharIsNotWord && !lastCharIsALetter\
    \ && !lastCharIsNotWord && lastCharIsALetter\n        val lastCharIsNotWordOrNotALetterOrNotWordOrNotALetter\
    \ = lastCharIsNotWord && !lastCharIsALetter && !lastCharIsNotWord && !lastCharIsALetter\n\
    \        val lastCharIsNotWordOrNotALetterOrNotWordOrNotALetterOrNotWord = lastCharIsNotWord\
    \ && !lastCharIsALetter && !lastCharIsNotWord && !lastCharIsALetter && !lastCharIsNotWord\
    \ && !lastCharIsALetter\n        val lastCharIsNotWordOrNotALetterOrNotWordOrNotALetterOrNotWordOrALetter\
    \ = lastCharIsNotWord && !lastCharIsALetter && !lastCharIsNotWord && !lastCharIsALetter\
    \ && !lastCharIsNotWord && !lastCharIsALetter && !lastCharIsNotWord\n        val\
    \ lastCharIsNotWordOrNotALetterOrNotWordOrNotALetterOrNotWordOrNotALetter = lastCharIsNotWord\
    \ && !lastCharIsALetter && !lastCharIsNotWord && !lastCharIsALetter && !lastCharIsNotWord\
    \ && !lastCharIsALetter && !lastCharIsNotWord && !lastCharIsALetter\n        val\
    \ lastCharIsNotWordOrNotALetterOrNotWordOrNotALetterOrNotWordOrNotALetterOrNotWord\
    \ = lastCharIsNotWord && !lastCharIsALetter && !last", "        val lastChar =\
    \ txt.last\n        val isLastCharAlpha = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.matches(\"\\\\W\")\n        val isLastCharNotAlpha = !isLastCharNotWord\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWord && !isLastCharAlpha\n\
    \        isLastCharNotWordAlpha && isLastCharAlpha", "        val lastChar = txt.last\n\
    \        val isAlpha = lastChar.matches(\"[a-zA-Z]+\")\n        val isNotWord\
    \ = txt.split(\" \").lastOption match {\n            case None => false\n    \
    \        case Some(word) => !word.contains(lastChar)\n        }\n        isAlpha\
    \ && !isNotWord", "        val lastChar = txt.last\n        val isLetter = lastChar.toString.isLetter\n\
    \        val isNotWord = txt.splitAt(txt.length-1)\n            .filter(_ != \"\
    \ \")\n            .exists(_ == lastChar)\n        !isLetter && !isNotWord", " \
    \       val lastChar = txt.last\n        val isALetter = (lastChar >= 'a' && lastChar\
    \ <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        !isALetter", "    \
    \    val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = (lastChar.toString.toLowerCase == \"a\" || lastChar.toString.toLowerCase\
    \ == \"e\" || lastChar.toString.toLowerCase == \"i\" || lastChar.toString.toLowerCase\
    \ == \"o\" || lastChar.toString.toLowerCase == \"u\")\n        val isLastCharNotALetter\
    \ = !isLastCharALetter\n        val isLastCharNotALetterWord = words.last.contains(lastChar)\n\
    \        val isLastCharNotALetterWordOrNotLastCharNotALetterWord = isLastCharNotALetter\
    \ || isLastCharNotALetterWord\n        val isLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWord\
    \ = isLastCharNotALetterWord || isLastCharNotALetterWordOrNotLastCharNotALetterWord\n\
    \        val isLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWord\
    \ = isLastCharNotALetterWordOrNotLastCharNotALetterWord || isLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWord\n\
    \        val isLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWord\
    \ = isLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWord\
    \ || isLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWord\n\
    \        val isLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWord\
    \ = isLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWord\
    \ || isLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWordOrNotLastCharNotALetterWordOr",
  "        val lastChar = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n\
    \        val lastCharIsNotALetter = lastChar.isNotLetter\n        val lastCharIsNotALetterAndNotWord\
    \ = lastChar.isNotLetter && !lastChar.isWord\n        val lastCharIsWord = lastChar.isWord\n\
    \        val lastCharIsNotWord = lastChar.isNotWord\n        val lastCharIsNotWordAndNotLetter\
    \ = lastChar.isNotWord && !lastChar.isLetter\n        val lastCharIsNotWordAndNotLetterAndNotWord\
    \ = lastChar.isNotWord && !lastChar.isLetter && !lastChar.isWord\n        val\
    \ lastCharIsNotWordAndNotLetterAndNotWord = lastChar.isNotWord && !lastChar.isLetter\
    \ && !lastChar.isWord && !lastChar.isLetter\n        val lastCharIsNotWordAndNotLetterAndNotWord\
    \ = lastChar.isNotWord && !lastChar.isLetter && !lastChar.isWord && !lastChar.isLetter\
    \ && !lastChar.isWord\n        val lastCharIsNotWordAndNotLetterAndNotWord = lastChar.isNotWord\
    \ && !lastChar.isLetter && !lastChar.isWord && !lastChar.isLetter && !lastChar.isWord\
    \ && !lastChar.isLetter\n        val lastCharIsNotWordAndNotLetterAndNotWord =\
    \ lastChar.isNotWord && !lastChar.isLetter && !lastChar.isWord && !lastChar.isLetter\
    \ && !lastChar.isWord && !lastChar.isLetter && !lastChar.isWord\n        val lastCharIsNotWordAndNotLetterAndNotWord\
    \ = lastChar.isNotWord && !lastChar.isLetter && !lastChar.isWord && !lastChar.isLetter\
    \ && !lastChar.isWord && !lastChar.isLetter && !lastChar.isWord && !lastChar.isLetter\n\
    \        val lastCharIsNotWordAndNotLetterAndNotWord = lastChar.isNotWord && !lastChar.isLetter\
    \ && !lastChar.isWord && !lastChar.isLetter && !lastChar.isWord && !lastChar.isLetter\
    \ && !lastChar.isWord && !lastChar.isLetter && !lastChar.isWord\n        val lastCharIsNotWordAndNotLetterAndNotWord\
    \ = lastChar.isNotWord && !lastChar.isLetter && !lastChar.isWord && !lastChar.isLetter\
    \ && !lastChar.isWord && !lastChar.isLetter && !", "        val lastChar = txt.last\n\
    \        val lastCharIsALetter = lastChar.isLetter\n        val lastCharIsNotALetter\
    \ = lastChar.isNotLetter\n        val lastCharIsNotALetterOrSpace = lastChar.isNotLetter\
    \ || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrDigit\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercase = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isDigit || lastChar.isUppercase\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercaseOrUpper = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isDigit || lastChar.isUppercase\
    \ || lastChar.isUpper\n        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercaseOrUpperOrUpper\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUppercase || lastChar.isUpper || lastChar.isUpper\n        val\
    \ lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercaseOrUpperOrUpperOrUpper = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isDigit || lastChar.isUppercase\
    \ || lastChar.isUpper || lastChar.isUpper || lastChar.isUpper\n        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercaseOrUpperOrUpperOrUpperOrUpper\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUppercase || lastChar.isUpper || lastChar.isUpper || lastChar.isUpper\
    \ || lastChar.isUpper\n        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercaseOrUpperOrUpperOrUpperOrUpperOrUpper\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUppercase || ", "        val words = txt.split(\" \")\n      \
    \  val lastChar = words(txt.length-1)\n        val lastCharIsALetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotALetter = lastChar.forall(!_.isLetter)\n        val\
    \ lastCharIsNotALetterOrNotWord = lastCharIsALetter || lastCharIsNotALetter\n\
    \        val lastCharIsNotALetterOrNotWordOrEmpty = lastCharIsALetter || lastCharIsNotALetter\
    \ || lastChar.isEmpty\n        lastCharIsALetter && lastCharIsNotALetter && lastCharIsNotALetterOrNotWord\
    \ && lastCharIsNotALetterOrNotWordOrEmpty", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val lastCharIsALetter\
    \ = lastChar.forall(_.isLetter)\n        val lastCharIsNotALetter = lastChar.forall(!_.isLetter)\n\
    \        val lastCharIsNotALetterOrWord = lastChar.forall(!_.isLetter && !_.isSpace)\n\
    \        val lastCharIsNotALetterOrWordOrSpace = lastChar.forall(!_.isLetter &&\
    \ !_.isSpace && !_.isWhitespace)\n        val lastCharIsNotALetterOrWordOrSpaceOrNewLine\
    \ = lastChar.forall(!_.isLetter && !_.isSpace && !_.isWhitespace && !_.isNewLine)\n\
    \        val lastCharIsNotALetterOrWordOrSpaceOrNewLineOrNewLine = lastChar.forall(!_.isLetter\
    \ && !_.isSpace && !_.isWhitespace && !_.isNewLine && !_.isNewLine)\n        val\
    \ lastCharIsNotALetterOrWordOrSpaceOrNewLineOrNewLineOrNewLine = lastChar.forall(!_.isLetter\
    \ && !_.isSpace && !_.isWhitespace && !_.isNewLine && !_.isNewLine && !_.isNewLine)\n\
    \        val lastCharIsNotALetterOrWordOrSpaceOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.forall(!_.isLetter && !_.isSpace && !_.isWhitespace && !_.isNewLine\
    \ && !_.isNewLine && !_.isNewLine && !_.isNewLine)\n        val lastCharIsNotALetterOrWordOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.forall(!_.isLetter && !_.isSpace && !_.isWhitespace && !_.isNewLine\
    \ && !_.isNewLine && !_.isNewLine && !_.isNewLine && !_.isNewLine)\n        val\
    \ lastCharIsNotALetterOrWordOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.forall(!_.isLetter && !_.isSpace && !_.isWhitespace && !_.isNewLine\
    \ && !_.isNewLine && !_.isNewLine && !_.isNewLine && !_.isNewLine && !_.isNewLine)\n\
    \        val lastCharIsNotALetterOr", "        val words = txt.split(\" \")\n\
    \        val lastChar = words(txt.length-1)\n        val isLastCharALetter = lastChar.matches(\"\
    [a-zA-Z]+\")\n        val isNotLastCharALetter = lastChar.matches(\"[a-zA-Z]+$\"\
    )\n        val isLastCharNotALetter = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharALetterButNotLastCharALetter = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+$\"\
    )\n        val isLastCharALetterButNotLastCharNotALetter = lastChar.matches(\"\
    [a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\")\n        val isLastCharALetterButNotLastCharALetterButNotLastCharNotALetter\
    \ = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\")\n        val\
    \ isLastCharALetterButNotLastCharALetterButNotLastCharNotALetterButNotLastCharNotALetter\
    \ = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\")\n\
    \        val isLastCharALetterButNotLastCharALetterButNotLastCharNotALetterButNotLastCharALetterButNotLastCharNotALetter\
    \ = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharALetterButNotLastCharALetterButNotLastCharNotALetterButNotLastCharALetterButNotLastCharNotALetterButNotLastCharNotALetter\
    \ = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharALetterButNotLastCharALetterButNotLastCharNotALetterButNotLastCharALetterButNotLastCharNotALetterButNotLastCharALetterButNotLastCharNotALetterButNotLastCharNotALetter\
    \ = lastChar.matches(\"[a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+[^a-zA-Z]+\"\
    )\n        val isLastCharALetterButNotLastCharALetterButNotLastCharNotALetterButNotLastCharALetterButNotLastCharNotALetterButNotLastCharALetterButNotLastCharNotALetterButNotLastCharNotAL",
  "        val words = txt.split(\" \")\n        val lastChar = txt.last\n       \
    \ val isLastCharALetter = lastChar.toString.toLowerCase == lastChar\n        val\
    \ isLastCharNotALetter = words.lastOption.map(_.toString.toLowerCase == lastChar).getOrElse(false)\n\
    \        isLastCharALetter && !isLastCharNotALetter", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLastCharALetter\
    \ = lastChar.toString.toLowerCase match {\n            case c if c.isLetter =>\
    \ true\n            case _ => false\n        }\n        !isLastCharALetter", " \
    \       val lastChar = txt.last\n        val words = txt.split(\" \").map(_.toLowerCase)\n\
    \        val isLastCharALetter = lastChar != null && !words.contains(lastChar)\n\
    \        isLastCharALetter", "        val words = txt.split(\" \")\n        val\
    \ lastChar = words(txt.length-1)\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = words.last.contains(lastChar)\n \
    \       val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        !isLastCharAlpha && !isLastCharNotWordAlpha", "        val\
    \ lastChar = txt.last\n        val isAlpha = lastChar >= 'a' && lastChar <= 'z'\n\
    \        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n   \
    \     isAlpha && !isNotWord", "        val words = txt.split(\" \").toList\n \
    \       val lastChar = words(txt.length-1)\n        val isLastCharALetter = lastChar.toString.isLetter\n\
    \        val isLastCharNotALetter = lastChar.toString.isNotLetter\n        val\
    \ isLastCharNotALetterInWord = words.contains(lastChar)\n        val isLastCharNotALetterInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && !words.contains(lastChar)\n        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && !words.contains(lastChar) && !words.contains(lastChar)\n\
    \        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && !words.contains(lastChar) && !words.contains(lastChar)\
    \ && !words.contains(lastChar)\n        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && !words.contains(lastChar) && !words.contains(lastChar)\
    \ && !words.contains(lastChar) && !words.contains(lastChar)\n        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && !words.contains(lastChar) && !words.contains(lastChar)\
    \ && !words.contains(lastChar) && !words.contains(lastChar) && !words.contains(lastChar)\n\
    \        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && !words.contains(lastChar) && !words.contains(lastChar)\
    \ && !words.contains(lastChar) && !words.contains(lastChar) && !words.contains(lastChar)\
    \ && !words.contains(lastChar)\n        val isLastCharNotALetterInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWordButNotLastCharInWord\
    \ = words.contains(lastChar) && !words.contains(lastChar) && !words.contains(lastChar)\
    \ && !words.contains(lastChar) && !words.contains(lastChar) && !words.contains(lastChar)\
    \ && !words.contains(lastChar) && !words.contains(lastChar)\n        val isLastCharNotALetter",
  "        val lastChar = txt.last\n        val isALetter = lastChar.toString.isLetter\n\
    \        val isNotWord = txt.split(\" \").map(_.trim).filter(_.nonEmpty).map(_.last).contains(lastChar)\n\
    \        isALetter && !isNotWord", "        val words = txt.split(\" \")\n   \
    \     val lastChar = words(txt.length-1)\n        val isLastCharALetter = lastChar.matches(\"\
    [a-zA-Z]\") && !lastChar.matches(\"\\\\W\")\n        return isLastCharALetter",
  "        val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val isLastCharNotALetter\
    \ = !isLastCharALetter\n        isLastCharNotALetter", "        val lastChar =\
    \ txt.last\n        if(lastChar.isLetter) {\n            val words = txt.split(\"\
    \ \").filter(_.nonEmpty)\n            val lastWord = words(words.length-1)\n \
    \           val lastWordChar = lastWord.last\n            if(lastWordChar.isLetter)\
    \ {\n                return false\n            } else {\n                return\
    \ true\n            }\n        } else {\n            return false\n        }",
  "        val lastChar = txt.last\n        if(lastChar.isLetter) {\n            val\
    \ words = txt.split(\" \").filter(_.nonEmpty)\n            val lastWord = words(words.length-1)\n\
    \            val lastWordChar = lastWord.last\n            if(lastWordChar.isLetter)\
    \ {\n                return false\n            } else {\n                return\
    \ true\n            }\n        } else {\n            return false\n        }",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"\\\\W\")\n   \
    \     isLastCharAlpha && !isLastCharNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLastCharALetter\
    \ = (lastChar.toString.toLowerCase == lastChar)\n        val isLastCharNotALetter\
    \ = (lastChar.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = words.lastOption.exists(word => word.contains(lastChar))\n        val isLastCharNotALetterWordOrEmpty\
    \ = words.lastOption.exists(word => word.isEmpty || word.contains(lastChar))\n\
    \        val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWord = words.lastOption.exists(word\
    \ => word.isEmpty || word.contains(lastChar) || word.contains(lastChar))\n   \
    \     val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWordOrLastCharNotALetterWord\
    \ = words.lastOption.exists(word => word.isEmpty || word.contains(lastChar) ||\
    \ word.contains(lastChar) || word.contains(lastChar))\n        val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWordOrLastCharNotALetterWordOrLastCharNotALetterWord\
    \ = words.lastOption.exists(word => word.isEmpty || word.contains(lastChar) ||\
    \ word.contains(lastChar) || word.contains(lastChar) || word.contains(lastChar)\
    \ || word.contains(lastChar))\n        val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWordOrLastCharNotALetterWordOrLastCharNotALetterWordOrLastCharNotALetterWord\
    \ = words.lastOption.exists(word => word.isEmpty || word.contains(lastChar) ||\
    \ word.contains(lastChar) || word.contains(lastChar) || word.contains(lastChar)\
    \ || word.contains(lastChar) || word.contains(lastChar) || word.contains(lastChar))\n\
    \        val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWordOrLastCharNotALetterWordOrLastCharNotALetterWordOrLastCharNotALetterWordOrLastCharNotALetterWord\
    \ = words.lastOption.exists(word => word.isEmpty || word.contains(lastChar) ||\
    \ word.contains(lastChar) || word.contains(lastChar) || word.contains(lastChar)\
    \ || word.contains(lastChar) || word.contains(lastChar) || word.contains(lastChar)\
    \ || word.contains(lastChar))\n        val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWordOrLastCharNotALetterWordOrLastCharNotALetter",
  "        val lastChar = txt.last\n        val isLastCharALetter = lastChar.isLetter\n\
    \        val isLastCharNotALetter = lastChar.isNotLetter\n        val isLastCharNotALetterOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace\n        val isLastCharNotALetterOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrEmpty\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isEmpty\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrEmptyOrSpace = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isEmpty || lastChar.isSpace\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrEmptyOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isEmpty || lastChar.isSpace\
    \ || lastChar.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrEmptyOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isEmpty\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\n        val isLastCharNotALetterOrSpaceOrWordOrEmptyOrSpaceOrWordOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isEmpty\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrEmptyOrSpaceOrWordOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isEmpty\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\
    \ || lastChar.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrEmptyOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isEmpty\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\
    \ || lastChar.isSpace ", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        val isLastCharNotALetter = !isLastCharALetter\n        isLastCharNotALetter",
  "        val words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.last\n        val isLastCharALetter = lastChar.isLetter\n\
    \        val isLastCharNotALetter = lastChar.matches(\"\\\\W\")\n        isLastCharALetter\
    \ && !isLastCharNotALetter", "        var lastChar = txt.last\n        var isLastCharALetter\
    \ = true\n        for(i <- 0 until txt.length){\n            if(txt(i) == lastChar){\n\
    \                isLastCharALetter = false\n            }\n        }\n       \
    \ return isLastCharALetter", "        val words = txt.split(\" \")\n        val\
    \ lastChar = words(txt.length-1)\n        val isLastCharALetter = lastChar.toString.isLetter\n\
    \        val isNotLastCharALetter = lastChar.toString.isNotLetter\n        val\
    \ isNotLastCharALetterOrWord = lastChar.toString.isNotLetter || words(txt.length-1).toString.isLetter\n\
    \        val isNotLastCharALetterOrWordOrEmpty = lastChar.toString.isNotLetter\
    \ || words(txt.length-1).toString.isLetter || txt.length==0\n        val isLastCharALetterOrWord\
    \ = lastChar.toString.isLetter || words(txt.length-1).toString.isLetter\n    \
    \    val isLastCharALetterOrWordOrEmpty = lastChar.toString.isLetter || words(txt.length-1).toString.isLetter\
    \ || txt.length==0\n        val isLastCharALetterOrWordOrEmptyOrEmpty = lastChar.toString.isLetter\
    \ || words(txt.length-1).toString.isLetter || txt.length==0 || txt.length==0\n\
    \        val isLastCharALetterOrWordOrEmptyOrEmpty = lastChar.toString.isLetter\
    \ || words(txt.length-1).toString.isLetter || txt.length==0 || txt.length==0\n\
    \        val isLastCharALetterOrWordOrEmptyOrEmpty = lastChar.toString.isLetter\
    \ || words(txt.length-1).toString.isLetter || txt.length==0 || txt.length==0\n\
    \        val isLastCharALetterOrWordOrEmptyOrEmpty = lastChar.toString.isLetter\
    \ || words(txt.length-1).toString.isLetter || txt.length==0 || txt.length==0\n\
    \        val isLastCharALetterOrWordOrEmptyOrEmpty = lastChar.toString.isLetter\
    \ || words(txt.length-1).toString.isLetter || txt.length==0 || txt.length==0\n\
    \        val isLastCharALetterOrWordOrEmptyOrEmpty = lastChar.toString.isLetter\
    \ || words(txt.length-1).toString.isLetter || txt.length==0 || txt.length==0\n\
    \        val isLastCharALetterOrWordOrEmptyOrEmpty = lastChar.toString.isLetter\
    \ || words(txt.length-1).toString.isLetter || txt.length==0 || txt.length==0\n\
    \        val isLastCharALetterOrWordOrEmptyOrEmpty = lastChar.toString.isLetter\
    \ || words(txt.length-1).toString.isLetter || txt.length==0 || ", "        val\
    \ lastChar = txt.last\n        val words = txt.split(\" \").filter(_.nonEmpty)\n\
    \        val isLastCharALetter = lastChar.toString.isLetter\n        val isLastCharNotALetter\
    \ = words.last.last.isLetter\n        isLastCharALetter && !isLastCharNotALetter",
  "        val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val isLastCharNotALetter\
    \ = !isLastCharALetter\n        isLastCharNotALetter", "        val lastChar =\
    \ txt.last\n        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\") && !lastChar.matches(\"\
    \\\\W\")\n        val isLastCharNotAlpha = !lastChar.matches(\"[a-zA-Z]\") &&\
    \ !lastChar.matches(\"\\\\W\")\n        isLastCharAlpha && isLastCharNotAlpha",
  "        val lastChar = txt.last\n        val isALetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotALetter = lastChar != 'a' && lastChar != 'z'\n    \
    \    isALetter && !isNotALetter", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLastCharALetter = (lastChar.toString.toLowerCase\
    \ == \"a\" || lastChar.toString.toLowerCase == \"e\" || lastChar.toString.toLowerCase\
    \ == \"i\" || lastChar.toString.toLowerCase == \"o\" || lastChar.toString.toLowerCase\
    \ == \"u\")\n        val isLastCharNotALetter = (lastChar.toString.toLowerCase\
    \ != \"a\" && lastChar.toString.toLowerCase != \"e\" && lastChar.toString.toLowerCase\
    \ != \"i\" && lastChar.toString.toLowerCase != \"o\" && lastChar.toString.toLowerCase\
    \ != \"u\")\n        val isLastCharNotALetterOrLastCharIsALetter = (isLastCharNotALetter\
    \ || isLastCharALetter)\n        val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetter\
    \ = (isLastCharNotALetter || isLastCharALetter || isLastCharALetter)\n       \
    \ val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetter\
    \ = (isLastCharNotALetter || isLastCharALetter || isLastCharALetter || isLastCharALetter\
    \ || isLastCharALetter || isLastCharALetter)\n        val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetter\
    \ = (isLastCharNotALetter || isLastCharALetter || isLastCharALetter || isLastCharALetter\
    \ || isLastCharALetter || isLastCharALetter || isLastCharALetter || isLastCharALetter)\n\
    \        val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetter\
    \ = (isLastCharNotALetter || isLastCharALetter || isLastCharALetter || isLastCharALetter\
    \ || isLastCharALetter || isLastCharALetter || isLastCharALetter || isLastCharALetter\
    \ || isLastCharALetter || isLastCharALetter)\n        val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetter",
  "        val lastChar = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n\
    \        val lastCharIsNotALetter = lastChar.isNotLetter\n        val lastCharIsNotALetterButNotWord\
    \ = lastChar.isNotLetter && !lastChar.isLetterOrDigit\n        val lastCharIsWord\
    \ = lastChar.isLetterOrDigit\n        val lastCharIsNotWord = lastChar.isNotLetterOrDigit\n\
    \        val lastCharIsNotWordButNotALetter = lastChar.isNotLetterOrDigit && !lastChar.isLetter\n\
    \        val lastCharIsALetterButNotWord = lastChar.isLetter && !lastChar.isLetterOrDigit\n\
    \        val lastCharIsNotALetterButNotWord = lastChar.isNotLetter && !lastChar.isLetterOrDigit\n\
    \        val lastCharIsALetterAndNotWord = lastChar.isLetter && !lastChar.isLetterOrDigit\n\
    \        val lastCharIsNotALetterAndNotWord = lastChar.isNotLetter && !lastChar.isLetterOrDigit\n\
    \        val lastCharIsALetterAndNotWordButNotWord = lastChar.isLetter && !lastChar.isLetterOrDigit\
    \ && !lastChar.isLetterOrDigit\n        val lastCharIsNotALetterAndNotWordButNotWord\
    \ = lastChar.isNotLetter && !lastChar.isLetterOrDigit && !lastChar.isLetterOrDigit\n\
    \        val lastCharIsALetterAndNotWordButNotWordButNotALetter = lastChar.isLetter\
    \ && !lastChar.isLetterOrDigit && !lastChar.isLetterOrDigit && !lastChar.isLetter\n\
    \        val lastCharIsNotALetterAndNotWordButNotWordButNotALetter = lastChar.isNotLetter\
    \ && !lastChar.isLetterOrDigit && !lastChar.isLetterOrDigit && !lastChar.isLetter\n\
    \        val lastCharIsALetterAndNotWordButNotWordButNotALetterButNotWord = lastChar.isLetter\
    \ && !lastChar.isLetterOrDigit && !lastChar.isLetterOrDigit && !lastChar.isLetterOrDigit\
    \ && !lastChar.isLetter\n        val lastCharIsNotALetterAndNotWordButNotWordButNotALetterButNotWord\
    \ = lastChar.isNotLetter && !lastChar.isLetterOrDigit && !lastChar.isLetterOrDigit\
    \ && !lastChar.isLetterOrDigit && !lastChar.isLetter\n        val ", "       \
    \ val words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsALetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotALetter\
    \ = lastChar.forall(!_.isLetter)\n        val lastCharIsNotALetterOrWord = lastCharIsALetter\
    \ || lastCharIsNotALetter\n        val lastCharIsNotALetterOrWordOrEmpty = lastCharIsALetter\
    \ || lastCharIsNotALetter || lastChar.isEmpty\n        val lastCharIsNotALetterOrWordOrEmptyOrSpace\
    \ = lastCharIsALetter || lastCharIsNotALetter || lastChar.isEmpty || lastChar.forall(_.isSpace)\n\
    \        val lastCharIsNotALetterOrWordOrEmptyOrSpaceOrNewLine = lastCharIsALetter\
    \ || lastCharIsNotALetter || lastChar.isEmpty || lastChar.forall(_.isSpace) ||\
    \ lastChar.forall(_.isNewLine)\n        val lastCharIsNotALetterOrWordOrEmptyOrSpaceOrNewLineOrNewLine\
    \ = lastCharIsALetter || lastCharIsNotALetter || lastChar.isEmpty || lastChar.forall(_.isSpace)\
    \ || lastChar.forall(_.isNewLine) || lastChar.forall(_.isNewLine)\n        val\
    \ lastCharIsNotALetterOrWordOrEmptyOrSpaceOrNewLineOrNewLineOrNewLine = lastCharIsALetter\
    \ || lastCharIsNotALetter || lastChar.isEmpty || lastChar.forall(_.isSpace) ||\
    \ lastChar.forall(_.isNewLine) || lastChar.forall(_.isNewLine) || lastChar.forall(_.isNewLine)\n\
    \        val lastCharIsNotALetterOrWordOrEmptyOrSpaceOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastCharIsALetter || lastCharIsNotALetter || lastChar.isEmpty || lastChar.forall(_.isSpace)\
    \ || lastChar.forall(_.isNewLine) || lastChar.forall(_.isNewLine) || lastChar.forall(_.isNewLine)\
    \ || lastChar.forall(_.isNewLine)\n        val lastCharIsNotALetterOrWordOrEmptyOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastCharIs", "        var lastChar = txt.last\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = false\n        var isLastCharAlpha = false\n\
    \        var isLastCharAlpha = false\n        var isLastCharAlpha = false\n  \
    \      var isLastCharAlpha = false\n        var isLastCharAlpha = false\n    \
    \    var isLastCharAlpha = false\n        var isLastCharAlpha = false\n      \
    \  var isLastCharAlpha = false\n        var isLastCharAlpha = false\n        var\
    \ isLastCharAlpha = false\n        var isLastCharAlpha = false\n        var isLastCharAlpha\
    \ = false\n        var isLastCharAlpha = false\n        var isLastCharAlpha =\
    \ false\n        var isLastCharAlpha = false\n        var isLastCharAlpha = false\n\
    \        var isLastCharAlpha = false\n        var isLastCharAlpha = false\n  \
    \      var isLastCharAlpha = false\n        var isLastCharAlpha = false\n    \
    \    var isLastCharAlpha = false\n        var isLastCharAlpha = false\n      \
    \  var isLastCharAlpha = false\n        var isLastCharAlpha = false\n        var\
    \ isLastCharAlpha = false\n        var isLastCharAlpha = false\n        var isLastCharAlpha\
    \ = false\n        var isLastCharAlpha = false\n        var isLastCharAlpha =\
    \ false\n        var isLastCharAlpha = false\n        var isLastCharAlpha = false\n\
    \        var isLastCharAlpha = false\n        var isLastCharAlpha = false\n  \
    \      var isLastCharAlpha = false\n        var isLastCharAlpha = false\n    \
    \    var isLastCharAlpha = false\n        var isLastCharAlpha = false\n      \
    \  var isLastCharAlpha = false\n        var isLastCharAlpha = false\n        var\
    \ isLastCharAlpha = false\n        var isLastCharAlpha = false\n        var isLastCharAlpha\
    \ = false\n        var isLastCharAlpha = false\n        var isLastCharAlpha =\
    \ false\n        var isLastCharAlpha = false\n        var isLastCharAlpha = false\n\
    \        var isLastCharAlpha = false\n        var isLastCharAlpha = false\n  \
    \      var isLastCharAlpha = false\n        var isLastCharAlpha = false\n    \
    \    var isLastCharAlpha = false\n        var isLastCharAlpha = false\n      \
    \  var isLastCharAlpha = false\n        var isLastCharAlpha = false\n        var\
    \ isLastCharAlpha = false\n        var isLastCharAlpha = false\n        var isLastCharAlpha\
    \ = false\n        var isLastCharAlpha = false\n        var isLastCharAlpha =\
    \ false\n        var isLastCharAlpha = false\n        var isLastCharAlpha = false\n",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.forall(_.isLetter)\n        val isNotWord = words.last.forall(_.forall(_.isLetter))\n\
    \        isLetter && !isNotWord", "        val lastChar = txt.last\n        val\
    \ isALetter = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar\
    \ <= 'Z')\n        !isALetter", "        val lastChar = txt.last\n        val\
    \ isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\"\
    \ \").map(_.last).contains(lastChar)\n        isLetter && !isNotWord", "     \
    \   val words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharAlpha = lastChar.forall(_.isLetter)\n        val isLastCharNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        isLastCharAlpha && !isLastCharNotWord",
  "        var lastChar = txt.last\n        var isLastCharALetter = true\n       \
    \ var isLastCharALetterWord = false\n        var isLastCharALetterSpace = false\n\
    \        var isLastCharALetterNonWord = false\n        var isLastCharALetterNonSpace\
    \ = false\n        var isLastCharALetterNonWordSpace = false\n        var isLastCharALetterNonSpaceWord\
    \ = false\n        var isLastCharALetterNonSpaceWordSpace = false\n        var\
    \ isLastCharALetterNonSpaceWordSpaceSpace = false\n        var isLastCharALetterNonSpaceWordSpaceSpace\
    \ = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n\
    \        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var\
    \ isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace\
    \ = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n\
    \        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var\
    \ isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace\
    \ = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n\
    \        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var\
    \ isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace\
    \ = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n\
    \        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var\
    \ isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace\
    \ = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n\
    \        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var\
    \ isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace\
    \ = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n\
    \        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var\
    \ isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace\
    \ = false\n        var isLastCharALetterNonSpaceWordSpaceSpaceSpace = false\n\
    \        var isLastCharALetterNonSpaceWordSpaceSpaceSpace", "        val lastChar\
    \ = txt.last\n        val isALetter = (lastChar >= 'a' && lastChar <= 'z') ||\
    \ (lastChar >= 'A' && lastChar <= 'Z')\n        val isNotWord = txt.split(\" \"\
    ).lastOption.exists(!_.contains(lastChar))\n        isALetter && !isNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = (lastChar.toString.toLowerCase == \"a\" || lastChar.toString.toLowerCase\
    \ == \"e\" || lastChar.toString.toLowerCase == \"i\" || lastChar.toString.toLowerCase\
    \ == \"o\" || lastChar.toString.toLowerCase == \"u\")\n        val isLastCharNotALetter\
    \ = (lastChar.toString.toLowerCase != \"a\" && lastChar.toString.toLowerCase !=\
    \ \"e\" && lastChar.toString.toLowerCase != \"i\" && lastChar.toString.toLowerCase\
    \ != \"o\" && lastChar.toString.toLowerCase != \"u\")\n        val isLastCharNotALetterOrLastCharIsALetter\
    \ = (isLastCharNotALetter || isLastCharALetter)\n        val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetter\
    \ = (isLastCharNotALetter || isLastCharALetter || isLastCharALetter)\n       \
    \ val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetter\
    \ = (isLastCharNotALetter || isLastCharALetter || isLastCharALetter || isLastCharALetter\
    \ || isLastCharALetter)\n        val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetter\
    \ = (isLastCharNotALetter || isLastCharALetter || isLastCharALetter || isLastCharALetter\
    \ || isLastCharALetter || isLastCharALetter || isLastCharALetter)\n        val\
    \ isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetter\
    \ = (isLastCharNotALetter || isLastCharALetter || isLastCharALetter || isLastCharALetter\
    \ || isLastCharALetter || isLastCharALetter || isLastCharALetter || isLastCharALetter\
    \ || isLastCharALetter)\n        val isLastCharNotALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIsALetterOrLastCharIs",
  "        val lastChar = txt.last\n        val isALetter = lastChar.isLetter\n  \
    \      val isNotALetter = lastChar.isNotLetter\n        val isNotWord = txt.split(\"\
    \ \").last.contains(lastChar)\n        val isWord = txt.split(\" \").last.contains(lastChar)\
    \ && !txt.split(\" \").last.contains(lastChar)\n        val isNotWord2 = txt.split(\"\
    \ \").last.contains(lastChar) && !txt.split(\" \").last.contains(lastChar)\n \
    \       val isWord2 = txt.split(\" \").last.contains(lastChar) && txt.split(\"\
    \ \").last.contains(lastChar)\n        val isNotWord3 = txt.split(\" \").last.contains(lastChar)\
    \ && !txt.split(\" \").last.contains(lastChar)\n        val isWord3 = txt.split(\"\
    \ \").last.contains(lastChar) && txt.split(\" \").last.contains(lastChar)\n  \
    \      val isNotWord4 = txt.split(\" \").last.contains(lastChar) && !txt.split(\"\
    \ \").last.contains(lastChar)\n        val isWord4 = txt.split(\" \").last.contains(lastChar)\
    \ && txt.split(\" \").last.contains(lastChar)\n        val isNotWord5 = txt.split(\"\
    \ \").last.contains(lastChar) && !txt.split(\" \").last.contains(lastChar)\n \
    \       val isWord5 = txt.split(\" \").last.contains(lastChar) && txt.split(\"\
    \ \").last.contains(lastChar)\n        val isNotWord6 = txt.split(\" \").last.contains(lastChar)\
    \ && !txt.split(\" \").last.contains(lastChar)\n        val isWord6 = txt.split(\"\
    \ \").last.contains(lastChar) && txt.split(\" \").last.contains(lastChar)\n  \
    \      val isNotWord7 = txt.split(\" \").last.contains(lastChar) && !txt.split(\"\
    \ \").last.contains(lastChar)\n        val isWord7 = txt.split(\" \").last.contains(lastChar)\
    \ && txt.split(\" \").last.contains(lastChar)\n        val isNotWord8 = txt.split(\"\
    \ \").last.contains(lastChar) && !txt.split(\" \").last.contains(lastChar)\n \
    \       val isWord8 = txt.split(\" \").last.contains(lastChar) && txt.split(\"\
    \ \").last.contains(lastChar)\n        val isNotWord9 = txt.split(\" \").last.contains(lastChar)\
    \ && !txt.split(\" \").last.contains(lastChar)\n        val isWord9 = ", "   \
    \     val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isALetter = lastChar.matches(\"[a-zA-Z]\") && !lastChar.matches(\"\
    \\\\w\")\n        return isALetter", "        val lastChar = txt.last\n      \
    \  val isLastCharALetter = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >=\
    \ 'A' && lastChar <= 'Z')\n        val isLastCharNotALetter = !(isLastCharALetter)\n\
    \        isLastCharNotALetter", "        val words = txt.split(\" \").toList\n\
    \        val lastChar = words(txt.length-1)\n        val isLastCharAlpha = lastChar.forall(_.isLetter)\n\
    \        val isLastCharNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     isLastCharAlpha && !isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val isALetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.split(\" \").lastOption match {\n            case Some(word) => !word.contains(lastChar)\n\
    \            case None => false\n        }\n        isALetter && !isNotWord",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]+\")\n        val isLastCharNotWord = txt.lastIndexOfAny(\" \") != txt.length\
    \ - 1\n        isLastCharAlpha && !isLastCharNotWord", "        val words = txt.split(\"\
    \ \").toList\n        val lastWord = words(words.length-1)\n        val lastChar\
    \ = lastWord.last\n        val isLastCharALetter = lastChar.isLetter\n       \
    \ val isLastCharNotALetter = lastChar.matches(\"[a-zA-Z]\")\n        isLastCharALetter\
    \ && !isLastCharNotALetter", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.isLetter\n        val isLastCharNotAlpha = !lastChar.isLetter\n \
    \       val isLastCharNotWord = txt.last.split(\" \").length == 0\n        isLastCharAlpha\
    \ && !isLastCharNotAlpha && !isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val isALetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.dropRight(1).forall(_.isLetter)\n        isALetter && !isNotWord", " \
    \       val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = (lastChar.toString.toLowerCase == lastChar)\n\
    \        val isLastCharNotALetter = (lastChar.toString.toLowerCase != lastChar)\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = words.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterInWord = ", "        val lastChar = txt.last\n\
    \        val isALetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.split(\" \").lastOption match {\n            case None => false\n    \
    \        case Some(word) => !word.contains(lastChar)\n        }\n        isALetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastWord\
    \ = words(words.length-1)\n        val lastChar = lastWord.last\n        val isLastCharALetter\
    \ = lastChar.isLetter\n        val isLastCharNotALetter = lastChar.matches(\"\
    [a-zA-Z]+\")\n        !isLastCharALetter && !isLastCharNotALetter", "        val\
    \ lastChar = txt.last\n        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n\
    \        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n   \
    \     isLetter && !isNotWord", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        val isLastCharNotALetter = !(isLastCharALetter)\n        isLastCharNotALetter",
  "        val lastChar = txt.last\n        val isLastCharALetter = lastChar.matches(\"\
    [a-zA-Z]+\")\n        val isLastCharNotALetter = lastChar != lastChar.toLowerCase\n\
    \        isLastCharALetter && !isLastCharNotALetter", "        val lastChar =\
    \ txt.last\n        val lastCharIsLetter = lastChar >= 'a' && lastChar <= 'z'\n\
    \        val lastCharIsNotWord = lastChar != ' ' && lastChar != '\\t'\n      \
    \  lastCharIsLetter && lastCharIsNotWord", "        val lastChar = txt.last\n\
    \        val isALetter = lastChar.toString.isLetter\n        val isNotWord = txt.splitAt(txt.length-1)\n\
    \            .filter(_ != \" \")\n            .forall(_.toString.isLetter)\n \
    \       isALetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotAlpha = !lastChar.matches(\"[a-zA-Z]+\"\
    )\n        isLastCharAlpha && !isLastCharNotAlpha", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLastCharAlpha\
    \ = lastChar.toString.matches(\"[a-zA-Z]\")\n        val isLastCharNotAlpha =\
    \ !lastChar.toString.matches(\"[a-zA-Z]+\")\n        isLastCharAlpha && !isLastCharNotAlpha",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord\
    \ = words.last.contains(lastChar)\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNot",
  "        val lastChar = txt.last\n        val lastCharIsALetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        val lastCharIsNotALetter = lastChar != 'a' && lastChar\
    \ != 'z'\n        val lastCharIsNotALetterOrSpace = lastCharIsNotALetter || lastChar\
    \ == ' '\n        lastCharIsALetterOrSpace && lastCharIsNotALetterOrSpace", " \
    \       val lastChar = txt.last\n        val words = txt.split(\" \").filter(_.nonEmpty)\n\
    \        val isLastCharALetter = lastChar.toString.isLetter\n        val isLastCharNotWord\
    \ = words.last.contains(lastChar)\n        !isLastCharALetter && !isLastCharNotWord"]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_100_make_a_pile
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val nums = mutable.ListBuffer[Long]()\n        val odd = if (n % 2 == 0) n\
    \ / 2 else n / 2 + 1\n        val even = if (n % 2 == 0) n / 2 else n / 2\n  \
    \      val nextLevel = if (n % 2 == 0) odd else even\n        nums += nextLevel\n\
    \        n -= 1\n        while (n > 0) {\n            val nextLevel = if (n %\
    \ 2 == 0) odd else even\n            nums += nextLevel\n            n -= 1\n \
    \       }\n        nums.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(makeAPile((3l)).equals((List[Long](3l.toLong, 5l.toLong, 7l.toLong))));\n\
    \    assert(makeAPile((4l)).equals((List[Long](4l.toLong, 6l.toLong, 8l.toLong,\
    \ 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong, 7l.toLong,\
    \ 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk6r5liva.scala:15:19 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpk6r5liva.scala:20:10 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^\e[0m\n\e[31m   |\e[0m        value -= is not a member of Long - did\
    \ you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpk6r5liva.scala:24:14\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m            n -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659821631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val stones = mutable.ListBuffer[Long]()\n        stones += n\n        stones\
    \ += if (n % 2 == 0) stones.last.last else stones.last.last + 1\n        stones\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpwd_6f4d7.scala:17:18 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        stones += \e[33mif\e[0m (n % \e[31m2\e[0m ==\
    \ \e[31m0\e[0m) stones.last.last \e[33melse\e[0m stones.last.last + \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                  ^^\e[0m\n\e[31m   |\e[0m         \
    \         expression expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwd_6f4d7.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mstones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659821627
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val result = new mutable.ListBuffer[Long]()\n        var nextLevel = 0\n \
    \       while(n > 0) {\n            nextLevel = nextLevel + math.min(math.ceil(n/2),\
    \ math.floor(n/2))\n            n -= nextLevel\n            result += nextLevel.toLong\n\
    \        }\n        result.toList\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong, 5l.toLong, 7l.toLong))));\n\
    \    assert(makeAPile((4l)).equals((List[Long](4l.toLong, 6l.toLong, 8l.toLong,\
    \ 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong, 7l.toLong,\
    \ 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7b_frqab.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7b_frqab.scala:18:24\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            nextLevel = nextLevel\
    \ + math.min(math.ceil(n/\e[31m2\e[0m), math.floor(n/\e[31m2\e[0m))\n\e[31m\e\
    [31m   |\e[0m                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                        Found:    Double\n\e[31m   |\e[0m\
    \                        Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp7b_frqab.scala:19:14 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            n -= nextLevel\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of Long -\
    \ did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659821631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val levels = mutable.ListBuffer[Long]()\n        val nextLevel = if (n % 2\
    \ == 0) n.toLong + 1 else n.toLong\n        levels += nextLevel\n        n -=\
    \ 1\n        while (n > 0) {\n            val nextLevel = if (n % 2 == 0) n.toLong\
    \ + 1 else n.toLong\n            levels += nextLevel\n            n -= 1\n   \
    \     }\n        levels.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(makeAPile((3l)).equals((List[Long](3l.toLong, 5l.toLong, 7l.toLong))));\n\
    \    assert(makeAPile((4l)).equals((List[Long](4l.toLong, 6l.toLong, 8l.toLong,\
    \ 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong, 7l.toLong,\
    \ 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8oh4taok.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mlevels\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp8oh4taok.scala:18:10 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^\e[0m\n\e[31m   |\e[0m        value -= is not a member of Long - did\
    \ you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8oh4taok.scala:22:14\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            n -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659821631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val stones = mutable.ListBuffer[Long]()\n        var stonesCount = 0\n   \
    \     var nextLevel = n.toLong\n        while (nextLevel > 0) {\n            stonesCount\
    \ += nextLevel\n            nextLevel = nextLevel.toLong match {\n           \
    \     case x if x % 2 == 0 => nextLevel.toLong + 1\n                case x if\
    \ x % 2 == 1 => nextLevel.toLong\n                case _ => nextLevel.toLong\n\
    \            }\n            stones += stonesCount\n        }\n        stones.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjcz87eeb.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mstones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjcz87eeb.scala:19:24 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            stonesCount += nextLevel\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of Int - did you mean Int.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659821631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val nums = mutable.ListBuffer[Long]()\n        val odd = n.toInt\n       \
    \ val even = n.toInt\n        val nextOdd = if (odd % 2 == 0) odd + 1\n      \
    \  else odd - 1\n        val nextEven = if (even % 2 == 0) even + 1\n        else\
    \ even - 1\n        val nextLevel = if (nextEven > nextOdd) nextEven\n       \
    \ else nextOdd\n        val nextLevelNum = nextLevel.toLong\n        nums += nextLevelNum\n\
    \        makeAPile(nums)\n    }\n    def main(args: Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_xfns_ge.scala:15:19 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659821629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val pile = mutable.ListBuffer[Long]()\n        var nextLevel = n.toLong\n\
    \        while (nextLevel > 0) {\n            pile.append(nextLevel)\n       \
    \     nextLevel = nextLevel.toLong % 2 == 0 ? nextLevel.toLong + 2 : nextLevel.toLong\n\
    \        }\n        pile\n    }\n    def main(args: Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpal_a_luj.scala:15:19 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mpile\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpal_a_luj.scala:19:85 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            nextLevel = nextLevel.toLong % \e[31m2\e\
    [0m == \e[31m0\e[0m ? nextLevel.toLong + \e[31m2\e[0m : nextLevel.toLong\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \           ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                           \
    \          type toLong is not a member of Long\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpal_a_luj.scala:19:50 ------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m            nextLevel = nextLevel.toLong % \e[31m2\e[0m == \e[31m0\e[0m\
    \ ? nextLevel.toLong + \e[31m2\e[0m : nextLevel.toLong\n\e[31m\e[31m   |\e[0m\
    \                                                ^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       value ? is not a member of Int\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659821631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val stones = mutable.ListBuffer(n)\n        stones += stones.head\n      \
    \  stones += stones.tail.filter(_ % 2 == 1).head\n        stones += stones.tail.filter(_\
    \ % 2 == 0).head\n        stones.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong, 5l.toLong, 7l.toLong))));\n\
    \    assert(makeAPile((4l)).equals((List[Long](4l.toLong, 6l.toLong, 8l.toLong,\
    \ 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong, 7l.toLong,\
    \ 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5pe6r3m4.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mstones\e[0m = mutable.ListBuffer(n)\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659821628
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val stones = mutable.ListBuffer.empty[Long]\n        var nextLevel = 0\n \
    \       var nextOdd = 0\n        var nextEven = 0\n        stones += nextLevel\n\
    \        nextLevel = nextLevel + n\n        if (nextLevel % 2 == 0) {\n      \
    \      nextEven = nextLevel / 2\n            nextLevel = nextLevel / 2\n     \
    \   } else {\n            nextOdd = nextLevel / 2\n            nextLevel = nextLevel\
    \ / 2\n        }\n        stones += nextLevel\n        nextLevel = nextLevel +\
    \ n\n        if (nextLevel % 2 == 0) {\n            nextEven = nextLevel / 2\n\
    \            nextLevel = nextLevel / 2\n        } else {\n            nextOdd\
    \ = nextLevel / 2\n            nextLevel = nextLevel / 2\n        }\n        stones\
    \ += nextLevel\n        nextLevel = nextLevel + n\n        if (nextLevel % 2 ==\
    \ 0) {\n            nextEven = nextLevel / 2\n            nextLevel = nextLevel\
    \ / 2\n        } else {\n            nextOdd = nextLevel / 2\n            nextLevel\
    \ = nextLevel / 2\n        }\n        stones += nextLevel\n        nextLevel =\
    \ nextLevel + n\n        if (nextLevel % 2 == 0) {\n            nextEven = nextLevel\
    \ / 2\n            nextLevel = nextLevel / 2\n        } else {\n            nextOdd\
    \ = nextLevel / 2\n            nextLevel = nextLevel / 2\n        }\n        stones\
    \ += nextLevel\n        nextLevel = nextLevel + n\n        if (nextLevel % 2 ==\
    \ 0) {\n            nextEven = nextLevel / 2\n            nextLevel = nextLevel\
    \ / 2\n        } else {\n            nextOdd = nextLevel / 2\n            nextLevel\
    \ = nextLevel / 2\n        }\n        stones += nextLevel\n        nextLevel =\
    \ nextLevel + n\n        if (nextLevel % 2 == 0) {\n            nextEven = nextLevel\
    \ / 2\n            nextLevel = nextLevel / 2\n        } else {\n            nextOdd\
    \ = nextLevel / 2\n            nextLevel = nextLevel / 2\n        }\n        stones\
    \ += nextLevel\n        nextLevel = nextLevel + n\n        if (nextLevel % 2 ==\
    \ 0) {\n            nextEven = nextLevel / 2\n            nextLevel = nextLevel\
    \ / 2\n        } else {\n            nextOdd = nextLevel / 2\n            nextLevel\
    \ = nextLevel / 2\n        }\n        stones += nextLevel\n        nextLevel =\
    \ nextLevel + n\n        if (nextLevel % 2 == 0) {\n            nextEven = nextLevel\
    \ / 2\n            nextLevel = nextLevel / 2\n        } else {\n            nextOdd\
    \ = nextLevel / 2\n            nextLevel = nextLevel / 2\n        }\n        stones\
    \ += nextLevel\n        nextLevel = nextLevel + n\n        if (nextLevel % 2 ==\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpypeoo6yg.scala:93:28 ---------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        \e[33mif\e[0m (nextLevel % \e[31m2\e[0m == \n\
    \e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m     \
    \                       expression expected but \e[31m'}'\e[0m found\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpypeoo6yg.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mstones\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpypeoo6yg.scala:20:20 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        nextLevel = nextLevel + n\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \ Found:    Long\n\e[31m   |\e[0m                    Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpypeoo6yg.scala:29:20 --------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        nextLevel = nextLevel + n\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \ Found:    Long\n\e[31m   |\e[0m                    Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpypeoo6yg.scala:38:20 --------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        nextLevel = nextLevel + n\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \ Found:    Long\n\e[31m   |\e[0m                    Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpypeoo6yg.scala:47:20 --------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        nextLe"
  stdout: ''
  timestamp: 1659821632
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val nums = mutable.ListBuffer.empty[Long]\n        val odd = if (n % 2 ==\
    \ 0) n / 2 else n / 2 + 1\n        val even = if (n % 2 == 0) n / 2 else n\n \
    \       val nums = for (i <- 0 until n) yield {\n            if (i % 2 == 0) odd\
    \ else even\n        }\n        nums.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong, 5l.toLong, 7l.toLong))));\n\
    \    assert(makeAPile((4l)).equals((List[Long](4l.toLong, 6l.toLong, 8l.toLong,\
    \ 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong, 7l.toLong,\
    \ 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp776ttcnu.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = \e[33mfor\e\
    [0m (i <- \e[31m0\e[0m until n) \e[33myield\e[0m {\n\e[31m\e[31m   |\e[0m    \
    \    ^\e[0m\n\e[31m   |\e[0mnums is already defined as \e[33mvalue\e[0m \e[35mnums\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m19 |\e[0m         \
    \   \e[33mif\e[0m (i % \e[31m2\e[0m == \e[31m0\e[0m) odd \e[33melse\e[0m even\n\
    \e[31m20 |\e[0m        }\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp776ttcnu.scala:15:19\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mnums\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659821628
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val levels = mutable.ListBuffer[Long]()\n        var currentLevel = n.toLong\n\
    \        var nextLevel = n.toLong\n        while(currentLevel > 0) {\n       \
    \     levels += currentLevel\n            nextLevel = nextLevel % 2 == 0 ? nextLevel\
    \ + 1 : nextLevel\n            currentLevel = nextLevel\n        }\n        levels.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl2ewveo5.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mlevels\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpl2ewveo5.scala:20:61 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            nextLevel = nextLevel % \e[31m2\e[0m == \e\
    [31m0\e[0m ? nextLevel + \e[31m1\e[0m : \e[35mnextLevel\e[0m\n\e[31m\e[31m   |\e\
    [0m                                                             ^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                               Not found: type\
    \ nextLevel\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl2ewveo5.scala:20:43\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m            nextLevel = nextLevel\
    \ % \e[31m2\e[0m == \e[31m0\e[0m ? nextLevel + \e[31m1\e[0m : \e[35mnextLevel\e\
    [0m\n\e[31m\e[31m   |\e[0m                                         ^^^\e[0m\n\e\
    [31m   |\e[0m                                         value ? is not a member\
    \ of Int\n3 errors found\n"
  stdout: ''
  timestamp: 1659821630
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val nums = mutable.ArrayBuffer.empty[Long]\n        val odd = if (n % 2 ==\
    \ 0) n else n + 1 \n        val even = if (n % 2 == 1) n else n + 1 \n       \
    \ val nums = for (i <- 1 to n) yield {\n            if (i % 2 == 0) odd else even\n\
    \        }\n        nums.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(makeAPile((3l)).equals((List[Long](3l.toLong, 5l.toLong, 7l.toLong))));\n\
    \    assert(makeAPile((4l)).equals((List[Long](4l.toLong, 6l.toLong, 8l.toLong,\
    \ 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong, 7l.toLong,\
    \ 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd95dzkyp.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = \e[33mfor\e\
    [0m (i <- \e[31m1\e[0m to n) \e[33myield\e[0m {\n\e[31m\e[31m   |\e[0m       \
    \ ^\e[0m\n\e[31m   |\e[0mnums is already defined as \e[33mvalue\e[0m \e[35mnums\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m19 |\e[0m         \
    \   \e[33mif\e[0m (i % \e[31m2\e[0m == \e[31m0\e[0m) odd \e[33melse\e[0m even\n\
    \e[31m20 |\e[0m        }\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd95dzkyp.scala:15:19\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mnums\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659821630
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val levels = mutable.ListBuffer[Long]()\n        var i = 0\n        while\
    \ (i < n) {\n            levels += n\n            i += 2\n        }\n        levels.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpstr7zq9x.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mlevels\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659821628
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val stones = mutable.ListBuffer[Long]()\n        stones += n\n        stones\
    \ += n % 2 == 0 ? stones.head + 1 : stones.head + 1\n        stones.toList\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpckz8qhd4.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mstones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpckz8qhd4.scala:17:61 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        stones += n % \e[31m2\e[0m == \e[31m0\e[0m ?\
    \ stones.head + \e[31m1\e[0m : stones.head \e[35m+\e[0m \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m                                                             ^\e\
    [0m\n\e[31m   |\e[0m                                                       Not\
    \ found: type +\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659821628
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val stones = mutable.ListBuffer[Long]()\n        stones += n\n        stones\
    \ += (if (n % 2 == 0) n else n + 2)\n        stones\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_p02cgki.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mstones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659821626
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val levels = mutable.ListBuffer[Long]()\n        var i = 0\n        while\
    \ (i < n) {\n            if (n % 2 == 0) {\n                levels += n.toLong\n\
    \                i += 2\n            } else {\n                levels += n.toLong\n\
    \                i += 1\n            }\n        }\n        levels.toList\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpay4bjusv.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mlevels\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659821629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val stones = mutable.ListBuffer[Long]()\n        stones += n\n        stones\
    \ += if (n % 2 == 0) stones.head + 1 else stones.head + 1\n        stones.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9e0_lorp.scala:17:18 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        stones += \e[33mif\e[0m (n % \e[31m2\e[0m ==\
    \ \e[31m0\e[0m) stones.head + \e[31m1\e[0m \e[33melse\e[0m stones.head + \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                  ^^\e[0m\n\e[31m   |\e[0m         \
    \         expression expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp9e0_lorp.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mstones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659821628
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val stones = mutable.ListBuffer.empty[Long]\n        stones += n\n       \
    \ stones += if (n % 2 == 0) n else n + 2\n        stones\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp92un7nr_.scala:17:18 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        stones += \e[33mif\e[0m (n % \e[31m2\e[0m ==\
    \ \e[31m0\e[0m) n \e[33melse\e[0m n + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m    \
    \              ^^\e[0m\n\e[31m   |\e[0m                  expression expected but\
    \ \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp92un7nr_.scala:15:21\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mstones\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659821628
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val nums = mutable.ListBuffer[Long]()\n        val odd = n.toInt\n       \
    \ val even = n.toInt / 2\n        val nextOdd = if (odd % 2 == 0) odd + 1 else\
    \ odd\n        val nextEven = if (even % 2 == 0) even + 1 else even\n        val\
    \ nextNum = if (nextEven > nextOdd) nextEven else nextOdd\n        nums += nextNum\n\
    \        makeAPile(nums)\n    }\n    def main(args: Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxjmtlxj8.scala:15:19 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659821627
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    // The first level has n stones.\n    // The number of stones in\
    \ the next level is:\n    // - the next odd number if n is odd.\n    // - the\
    \ next even number if n is even.\n    // Return the number of stones in each level\
    \ in a list, where element at index\n    // i represents the number of stones\
    \ in the level (i+1).\n    // Examples:\n    // >>> makeAPile((3l))\n    // (List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))\n    def makeAPile(n : Long) : List[Long] = {\n     \
    \   val stones = mutable.ListBuffer[Long]()\n        stones += n\n        stones\
    \ += n / 2\n        stones += n / 3\n        stones\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(makeAPile((3l)).equals((List[Long](3l.toLong,\
    \ 5l.toLong, 7l.toLong))));\n    assert(makeAPile((4l)).equals((List[Long](4l.toLong,\
    \ 6l.toLong, 8l.toLong, 10l.toLong))));\n    assert(makeAPile((5l)).equals((List[Long](5l.toLong,\
    \ 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong))));\n    assert(makeAPile((6l)).equals((List[Long](6l.toLong,\
    \ 8l.toLong, 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong))));\n    assert(makeAPile((8l)).equals((List[Long](8l.toLong,\
    \ 10l.toLong, 12l.toLong, 14l.toLong, 16l.toLong, 18l.toLong, 20l.toLong, 22l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjmh_m3cx.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mstones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659821627

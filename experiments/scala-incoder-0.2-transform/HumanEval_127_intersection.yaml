name: HumanEval_127_intersection
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given two intervals,\n    // where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n    // The given intervals are\
  \ closed which means that the interval (start, end)\n    // includes both start\
  \ and end.\n    // For each given interval, it is assumed that its start is less\
  \ or equal its end.\n    // Your task is to determine whether the length of intersection\
  \ of these two \n    // intervals is a prime number.\n    // Example, the intersection\
  \ of the intervals (1, 3), (2, 4) is (2, 3)\n    // which its length is 1, which\
  \ not a prime number.\n    // If the length of the intersection is a prime number,\
  \ return \"YES\",\n    // otherwise, return \"NO\".\n    // If the two intervals\
  \ don't intersect, return \"NO\".\n    // [input/output] samples:\n    // >>> intersection(((1l,\
  \ 2l)), ((2l, 3l)))\n    // (\"NO\")\n    // >>> intersection(((-1l, 1l)), ((0l,\
  \ 4l)))\n    // (\"NO\")\n    // >>> intersection(((-3l, -1l)), ((-5l, 5l)))\n \
  \   // (\"YES\")\n    def intersection(interval1 : Tuple2[Long, Long], interval2\
  \ : Tuple2[Long, Long]) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(intersection(((1l,\
  \ 2l)), ((2l, 3l))).equals((\"NO\")));\n    assert(intersection(((-1l, 1l)), ((0l,\
  \ 4l))).equals((\"NO\")));\n    assert(intersection(((-3l, -1l)), ((-5l, 5l))).equals((\"\
  YES\")));\n    assert(intersection(((-2l, 2l)), ((-4l, 0l))).equals((\"YES\")));\n\
  \    assert(intersection(((-11l, 2l)), ((-1l, -1l))).equals((\"NO\")));\n    assert(intersection(((1l,\
  \ 2l)), ((3l, 5l))).equals((\"NO\")));\n    assert(intersection(((1l, 2l)), ((1l,\
  \ 2l))).equals((\"NO\")));\n    assert(intersection(((-2l, -2l)), ((-3l, -2l))).equals((\"\
  NO\")));\n    }\n\n}\n"
completions: ["        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length == 0 || length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMinusEnd = start - end\n        val start2MinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start2 - end\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) \"NO\"\
    \ else \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMinusEnd = start - end\n        val start2MinusEnd2 = start2 - end2\n \
    \       val startMinusEnd2 = start2 - end2\n        val startMinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = math.min(start, start2)\n        val end\
    \ = math.max(end, end2)\n        val length = end - start\n        val isPrime\
    \ = length == 2 || length == 3 || length == 5 || length == 7 || length == 11 ||\
    \ length == 13\n        if (isPrime) {\n            \"YES\"\n        } else {\n\
    \            \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval2._1\n        val start2 = interval1._2\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start > start2 && end > end2) {\n            val temp\
    \ = start\n            start = start2\n            start2 = temp\n           \
    \ end = end2\n            end2 = temp\n        }\n        if (start < start2 &&\
    \ end < end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n            end = end2\n            end2 = temp\n  \
    \      }\n        if (start < start2 && end > end2) {\n            val temp =\
    \ start\n            start = start2\n            start2 = temp\n            end\
    \ = end2\n            end2 = temp\n        }\n        if (start > start2 && end\
    \ < end2) {\n            val temp = start\n            start = start2\n      \
    \      start2 = temp\n            end = end2\n            end2 = temp\n      \
    \  }\n        if (start < start2 && end > end2) {\n            val temp = start\n\
    \            start = start2\n            start2 = temp\n            end = end2\n\
    \            end2 = temp\n        }\n        if (start > start2 && end < end2)\
    \ {\n            val temp = start\n            start = start2\n            start2\
    \ = temp\n            end = end2\n            end2 = temp\n        }\n       \
    \ if (start < start2 && end < end2) {\n            val temp = start\n        \
    \    start = start2\n            start2 = temp\n            end = end2\n     \
    \       end2 = temp\n        }\n        if (start > start2 && end > end2) {\n\
    \            val temp = start\n            start = start2\n            start2\
    \ = temp\n            end = end2\n            end2 = temp\n        }\n       \
    \ if (start < start2 && end < end2) {\n            val temp = start\n        \
    \    start = start2\n            start2 = temp\n            end = end2\n     \
    \       end2 = temp\n        }\n        if (start > start2 && end > end2) {\n\
    \            val temp = start\n            start = start2\n            start2\
    \ = temp\n            end = end2\n            end2 = temp\n        }\n       \
    \ if (start < start2 && end < end2) {\n            val temp = start\n        \
    \    start = start2\n            start2 = temp\n            end = end2\n     \
    \       end2 = temp\n        }\n        if (start > start2 && end > end2) {\n\
    \            val temp = start\n            start = start2\n            start2\
    \ = temp\n            end = end2\n            end2 = temp\n        }\n       \
    \ if (start < start", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   val isPrime = length == length2\n        if (isPrime) {\n            return\
    \ \"YES\"\n        } else {\n            return \"NO\"\n        }", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.min(start, start2)\n\
    \        val end = math.max(end, end2)\n        val length = end - start\n   \
    \     if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        val isPrime = length == length2\n        if(isPrime)\
    \ {\n            \"YES\"\n        } else {\n            \"NO\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start3 =\
    \ start2\n        val end3 = end2\n        val start4 = start3\n        val end4\
    \ = end3\n        val start5 = start4\n        val end5 = end4\n        val start6\
    \ = start5\n        val end6 = end5\n        val start7 = start6\n        val\
    \ end7 = end6\n        val start8 = start7\n        val end8 = end7\n        val\
    \ start9 = start8\n        val end9 = end8\n        val start10 = start9\n   \
    \     val end10 = end9\n        val start11 = start10\n        val end11 = end10\n\
    \        val start12 = start11\n        val end12 = end11\n        val start13\
    \ = start12\n        val end13 = end12\n        val start14 = start13\n      \
    \  val end14 = end13\n        val start15 = start14\n        val end15 = end14\n\
    \        val start16 = start15\n        val end16 = end15\n        val start17\
    \ = start16\n        val end17 = end16\n        val start18 = start17\n      \
    \  val end18 = end17\n        val start19 = start18\n        val end19 = end18\n\
    \        val start20 = start19\n        val end20 = end19\n        val start21\
    \ = start20\n        val end21 = end20\n        val start22 = start21\n      \
    \  val end22 = end21\n        val start23 = start22\n        val end23 = end22\n\
    \        val start24 = start23\n        val end24 = end23\n        val start25\
    \ = start24\n        val end25 = end24\n        val start26 = start25\n      \
    \  val end26 = end25\n        val start27 = start26\n        val end27 = end26\n\
    \        val start28 = start27\n        val end28 = end27\n        val start29\
    \ = start28\n        val end29 = end28\n        val start30 = start29\n      \
    \  val end30 = end29\n        val start31 = start30\n        val end31 = end30\n\
    \        val start32 = start31\n        val end32 = end31\n        val start33\
    \ = start32\n        val end33 = end32\n        val start34 = start", "      \
    \  val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n        else if (length\
    \ == 1) \"NO\"\n        else if (length == length2) \"YES\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval2._1\n\
    \        val start1 = interval1._2\n        val end1 = interval2._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start3 =\
    \ interval1._1\n        val end3 = interval1._2\n        val start4 = interval2._1\n\
    \        val end4 = interval2._2\n        val start5 = interval1._1\n        val\
    \ end5 = interval1._2\n        val start6 = interval2._1\n        val end6 = interval2._2\n\
    \        val start7 = interval1._1\n        val end7 = interval1._2\n        val\
    \ start8 = interval2._1\n        val end8 = interval2._2\n        val start9 =\
    \ interval1._1\n        val end9 = interval1._2\n        val start10 = interval2._1\n\
    \        val end10 = interval2._2\n        val start11 = interval1._1\n      \
    \  val end11 = interval1._2\n        val start12 = interval2._1\n        val end12\
    \ = interval2._2\n        val start13 = interval1._1\n        val end13 = interval1._2\n\
    \        val start14 = interval2._1\n        val end14 = interval2._2\n      \
    \  val start15 = interval1._1\n        val end15 = interval1._2\n        val start16\
    \ = interval2._1\n        val end16 = interval2._2\n        val start17 = interval1._1\n\
    \        val end17 = interval1._2\n        val start18 = interval2._1\n      \
    \  val end18 = interval2._2\n        val start19 = interval1._1\n        val end19\
    \ = interval1._2\n        val start20 = interval2._1\n        val end20 = interval2._2\n\
    \        val start21 = interval1._1\n        val end21 = interval1._2\n      \
    \  val start22 = interval2._1\n        val end22 = interval2._2\n        val start23\
    \ = interval1._1\n        val end23 = interval1._2\n        val start24 = interval2._1\n\
    \        val end24 = interval2._2\n        val start25 = interval1._1\n      \
    \  val end25 = interval1._2\n        val start26 = interval2._1\n        val end26\
    \ = interval2._2\n        val start27 = interval1._1\n        val end27 = interval1._2\n\
    \        val start28 = interval2._1\n        val end28 = interval2._2\n      \
    \  val start29 = interval1._1\n        val end29 = interval1._2\n", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            }\n            else {\n\
    \                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 1) {\n            if (length == 1) {\n                return \"YES\"\n  \
    \          }\n            else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 2) {\n            if (length == 2) {\n    \
    \            return \"YES\"\n            }\n            else {\n             \
    \   return \"NO\"\n            }\n        }\n        if (length2 == 3) {\n   \
    \         if (length == 3) {\n                return \"YES\"\n            }\n\
    \            else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 4) {\n            if (length == 4) {\n               \
    \ return \"YES\"\n            }\n            else {\n                return \"\
    NO\"\n            }\n        }\n        if (length2 == 5) {\n            if (length\
    \ == 5) {\n                return \"YES\"\n            }\n            else {\n\
    \                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 6) {\n            if (length == 6) {\n                return \"YES\"\n  \
    \          }\n            else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 7) {\n            if (length == 7) {\n    \
    \            return \"YES\"\n            }\n            else {\n             \
    \   return \"NO\"\n            }\n        }\n        if (length2 == 8) {\n   \
    \         if (length == 8) {\n                return \"YES\"\n            }\n\
    \            else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 9) {\n            if (length == 9) {\n               \
    \ return \"YES\"\n            }\n            else {\n                return \"\
    NO\"\n            }\n        }\n        if (length2 == 10) {\n            if (length\
    \ == 10) {\n                return \"YES\"\n            }\n            else {\n\
    \                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 11) {\n            if (length == 11) {\n                return \"YES\"\n\
    \            }\n            else {\n                return \"NO\"\n          \
    \  }\n        }\n        if (length2 == 12) {\n            if (length == 12) {\n\
    \                return \"YES\"\n            }\n            else {\n         \
    \       return \"NO\"\n            }\n        }\n        if (length2 == 13) {\n\
    \            if (length == 13) {\n                return \"YES\"\n           \
    \ }\n            else {\n                return \"NO\"\n            }\n      \
    \  }\n        if (length2 == 14) {\n            if (length == 14) {\n        \
    \        return \"YES\"\n            }\n            else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 15) {\n           \
    \ if (length == 15) {\n                return \"YES\"\n            }\n       \
    \     else {\n                return \"NO\"\n            }\n        }\n      \
    \  if (length2 == 16) {\n", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = start2\n        val end3 = end2\n        val start4 = start3\n\
    \        val end4 = end3\n        val start5 = start4\n        val end5 = end4\n\
    \        val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.min(start,\
    \ start2)\n        val end = math.max(end, end2)\n        val length = end - start\n\
    \        if (length == 0)\n            \"NO\"\n        else if (length == 1)\n\
    \            \"YES\"\n        else if (length == 2 && start == end)\n        \
    \    \"YES\"\n        else if (length == 2 && start < end)\n            \"NO\"\
    \n        else if (length == 2 && start > end)\n            \"NO\"\n        else\
    \ if (length == 2 && start == start2 && end == end2)\n            \"YES\"\n  \
    \      else if (length == 2 && start > start2 && end < end2)\n            \"NO\"\
    \n        else if (length == 2 && start < start2 && end > end2)\n            \"\
    NO\"\n        else if (length == 2 && start == start2 && end == end2)\n      \
    \      \"YES\"\n        else if (length == 2 && start > start2 && end < end2)\n\
    \            \"NO\"\n        else if (length == 2 && start < start2 && end > end2)\n\
    \            \"NO\"\n        else if (length == 2 && start == start2 && end ==\
    \ end2)\n            \"YES\"\n        else if (length == 2 && start > start2 &&\
    \ end < end2)\n            \"NO\"\n        else if (length == 2 && start < start2\
    \ && end > end2)\n            \"NO\"\n        else if (length == 2 && start ==\
    \ start2 && end == end2)\n            \"YES\"\n        else if (length == 2 &&\
    \ start > start2 && end < end2)\n            \"NO\"\n        else if (length ==\
    \ 2 && start < start2 && end > end2)\n            \"NO\"\n        else if (length\
    \ == 2 && start == start2 && end == end2)\n            \"YES\"\n        else if\
    \ (length == 2 && start > start2 && end < end2)\n            \"NO\"\n        else\
    \ if (length == 2 && start < start2 && end > end2)\n            \"NO\"\n     \
    \   else if (length == 2 && start == start2 && end == end2)\n            \"YES\"\
    \n        else if (length == 2 && start > start2 && end < end2)\n            \"\
    NO\"\n        else if (length == 2 && start < start2 && end > end2)\n        \
    \    \"NO\"\n        else if (length == 2 && start == start2 && end == end2)\n\
    \            \"YES\"\n        else if (length == 2 && start > start2 && end <\
    \ end2)\n            \"NO\"\n        else if (length == 2 && start < start2 &&\
    \ end > end2)\n            \"NO\"\n        else if (length == 2 && start == start2\
    \ && end == end2)\n            \"YES\"\n        else if (length == 2 && start\
    \ > start2 && end < end2)\n            \"NO\"\n        else if (length == 2 &&\
    \ start < start2 && end > end2)\n", "        val start = interval1._1\n      \
    \  val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val startMinusEnd = start - end\n  \
    \      val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val start"]
stop_tokens:
- "\n    }\n"

name: HumanEval_127_intersection
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given two intervals,\n    // where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n    // The given intervals are\
  \ closed which means that the interval (start, end)\n    // includes both start\
  \ and end.\n    // For each given interval, it is assumed that its start is less\
  \ or equal its end.\n    // Your task is to determine whether the length of intersection\
  \ of these two \n    // intervals is a prime number.\n    // Example, the intersection\
  \ of the intervals (1, 3), (2, 4) is (2, 3)\n    // which its length is 1, which\
  \ not a prime number.\n    // If the length of the intersection is a prime number,\
  \ return \"YES\",\n    // otherwise, return \"NO\".\n    // If the two intervals\
  \ don't intersect, return \"NO\".\n    // [input/output] samples:\n    // >>> intersection(((1l,\
  \ 2l)), ((2l, 3l)))\n    // (\"NO\")\n    // >>> intersection(((-1l, 1l)), ((0l,\
  \ 4l)))\n    // (\"NO\")\n    // >>> intersection(((-3l, -1l)), ((-5l, 5l)))\n \
  \   // (\"YES\")\n    def intersection(interval1 : Tuple2[Long, Long], interval2\
  \ : Tuple2[Long, Long]) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(intersection(((1l,\
  \ 2l)), ((2l, 3l))).equals((\"NO\")));\n    assert(intersection(((-1l, 1l)), ((0l,\
  \ 4l))).equals((\"NO\")));\n    assert(intersection(((-3l, -1l)), ((-5l, 5l))).equals((\"\
  YES\")));\n    assert(intersection(((-2l, 2l)), ((-4l, 0l))).equals((\"YES\")));\n\
  \    assert(intersection(((-11l, 2l)), ((-1l, -1l))).equals((\"NO\")));\n    assert(intersection(((1l,\
  \ 2l)), ((3l, 5l))).equals((\"NO\")));\n    assert(intersection(((1l, 2l)), ((1l,\
  \ 2l))).equals((\"NO\")));\n    assert(intersection(((-2l, -2l)), ((-3l, -2l))).equals((\"\
  NO\")));\n    }\n\n}\n"
completions: ["        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length == 0 || length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMinusEnd = start - end\n        val start2MinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start2 - end\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) \"NO\"\
    \ else \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMinusEnd = start - end\n        val start2MinusEnd2 = start2 - end2\n \
    \       val startMinusEnd2 = start2 - end2\n        val startMinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = math.min(start, start2)\n        val end\
    \ = math.max(end, end2)\n        val length = end - start\n        val isPrime\
    \ = length == 2 || length == 3 || length == 5 || length == 7 || length == 11 ||\
    \ length == 13\n        if (isPrime) {\n            \"YES\"\n        } else {\n\
    \            \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval2._1\n        val start2 = interval1._2\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start > start2 && end > end2) {\n            val temp\
    \ = start\n            start = start2\n            start2 = temp\n           \
    \ end = end2\n            end2 = temp\n        }\n        if (start < start2 &&\
    \ end < end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n            end = end2\n            end2 = temp\n  \
    \      }\n        if (start < start2 && end > end2) {\n            val temp =\
    \ start\n            start = start2\n            start2 = temp\n            end\
    \ = end2\n            end2 = temp\n        }\n        if (start > start2 && end\
    \ < end2) {\n            val temp = start\n            start = start2\n      \
    \      start2 = temp\n            end = end2\n            end2 = temp\n      \
    \  }\n        if (start < start2 && end > end2) {\n            val temp = start\n\
    \            start = start2\n            start2 = temp\n            end = end2\n\
    \            end2 = temp\n        }\n        if (start > start2 && end < end2)\
    \ {\n            val temp = start\n            start = start2\n            start2\
    \ = temp\n            end = end2\n            end2 = temp\n        }\n       \
    \ if (start < start2 && end < end2) {\n            val temp = start\n        \
    \    start = start2\n            start2 = temp\n            end = end2\n     \
    \       end2 = temp\n        }\n        if (start > start2 && end > end2) {\n\
    \            val temp = start\n            start = start2\n            start2\
    \ = temp\n            end = end2\n            end2 = temp\n        }\n       \
    \ if (start < start2 && end < end2) {\n            val temp = start\n        \
    \    start = start2\n            start2 = temp\n            end = end2\n     \
    \       end2 = temp\n        }\n        if (start > start2 && end > end2) {\n\
    \            val temp = start\n            start = start2\n            start2\
    \ = temp\n            end = end2\n            end2 = temp\n        }\n       \
    \ if (start < start2 && end < end2) {\n            val temp = start\n        \
    \    start = start2\n            start2 = temp\n            end = end2\n     \
    \       end2 = temp\n        }\n        if (start > start2 && end > end2) {\n\
    \            val temp = start\n            start = start2\n            start2\
    \ = temp\n            end = end2\n            end2 = temp\n        }\n       \
    \ if (start < start", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   val isPrime = length == length2\n        if (isPrime) {\n            return\
    \ \"YES\"\n        } else {\n            return \"NO\"\n        }", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.min(start, start2)\n\
    \        val end = math.max(end, end2)\n        val length = end - start\n   \
    \     if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        val isPrime = length == length2\n        if(isPrime)\
    \ {\n            \"YES\"\n        } else {\n            \"NO\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start3 =\
    \ start2\n        val end3 = end2\n        val start4 = start3\n        val end4\
    \ = end3\n        val start5 = start4\n        val end5 = end4\n        val start6\
    \ = start5\n        val end6 = end5\n        val start7 = start6\n        val\
    \ end7 = end6\n        val start8 = start7\n        val end8 = end7\n        val\
    \ start9 = start8\n        val end9 = end8\n        val start10 = start9\n   \
    \     val end10 = end9\n        val start11 = start10\n        val end11 = end10\n\
    \        val start12 = start11\n        val end12 = end11\n        val start13\
    \ = start12\n        val end13 = end12\n        val start14 = start13\n      \
    \  val end14 = end13\n        val start15 = start14\n        val end15 = end14\n\
    \        val start16 = start15\n        val end16 = end15\n        val start17\
    \ = start16\n        val end17 = end16\n        val start18 = start17\n      \
    \  val end18 = end17\n        val start19 = start18\n        val end19 = end18\n\
    \        val start20 = start19\n        val end20 = end19\n        val start21\
    \ = start20\n        val end21 = end20\n        val start22 = start21\n      \
    \  val end22 = end21\n        val start23 = start22\n        val end23 = end22\n\
    \        val start24 = start23\n        val end24 = end23\n        val start25\
    \ = start24\n        val end25 = end24\n        val start26 = start25\n      \
    \  val end26 = end25\n        val start27 = start26\n        val end27 = end26\n\
    \        val start28 = start27\n        val end28 = end27\n        val start29\
    \ = start28\n        val end29 = end28\n        val start30 = start29\n      \
    \  val end30 = end29\n        val start31 = start30\n        val end31 = end30\n\
    \        val start32 = start31\n        val end32 = end31\n        val start33\
    \ = start32\n        val end33 = end32\n        val start34 = start", "      \
    \  val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n        else if (length\
    \ == 1) \"NO\"\n        else if (length == length2) \"YES\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval2._1\n\
    \        val start1 = interval1._2\n        val end1 = interval2._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start3 =\
    \ interval1._1\n        val end3 = interval1._2\n        val start4 = interval2._1\n\
    \        val end4 = interval2._2\n        val start5 = interval1._1\n        val\
    \ end5 = interval1._2\n        val start6 = interval2._1\n        val end6 = interval2._2\n\
    \        val start7 = interval1._1\n        val end7 = interval1._2\n        val\
    \ start8 = interval2._1\n        val end8 = interval2._2\n        val start9 =\
    \ interval1._1\n        val end9 = interval1._2\n        val start10 = interval2._1\n\
    \        val end10 = interval2._2\n        val start11 = interval1._1\n      \
    \  val end11 = interval1._2\n        val start12 = interval2._1\n        val end12\
    \ = interval2._2\n        val start13 = interval1._1\n        val end13 = interval1._2\n\
    \        val start14 = interval2._1\n        val end14 = interval2._2\n      \
    \  val start15 = interval1._1\n        val end15 = interval1._2\n        val start16\
    \ = interval2._1\n        val end16 = interval2._2\n        val start17 = interval1._1\n\
    \        val end17 = interval1._2\n        val start18 = interval2._1\n      \
    \  val end18 = interval2._2\n        val start19 = interval1._1\n        val end19\
    \ = interval1._2\n        val start20 = interval2._1\n        val end20 = interval2._2\n\
    \        val start21 = interval1._1\n        val end21 = interval1._2\n      \
    \  val start22 = interval2._1\n        val end22 = interval2._2\n        val start23\
    \ = interval1._1\n        val end23 = interval1._2\n        val start24 = interval2._1\n\
    \        val end24 = interval2._2\n        val start25 = interval1._1\n      \
    \  val end25 = interval1._2\n        val start26 = interval2._1\n        val end26\
    \ = interval2._2\n        val start27 = interval1._1\n        val end27 = interval1._2\n\
    \        val start28 = interval2._1\n        val end28 = interval2._2\n      \
    \  val start29 = interval1._1\n        val end29 = interval1._2\n", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            }\n            else {\n\
    \                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 1) {\n            if (length == 1) {\n                return \"YES\"\n  \
    \          }\n            else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 2) {\n            if (length == 2) {\n    \
    \            return \"YES\"\n            }\n            else {\n             \
    \   return \"NO\"\n            }\n        }\n        if (length2 == 3) {\n   \
    \         if (length == 3) {\n                return \"YES\"\n            }\n\
    \            else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 4) {\n            if (length == 4) {\n               \
    \ return \"YES\"\n            }\n            else {\n                return \"\
    NO\"\n            }\n        }\n        if (length2 == 5) {\n            if (length\
    \ == 5) {\n                return \"YES\"\n            }\n            else {\n\
    \                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 6) {\n            if (length == 6) {\n                return \"YES\"\n  \
    \          }\n            else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 7) {\n            if (length == 7) {\n    \
    \            return \"YES\"\n            }\n            else {\n             \
    \   return \"NO\"\n            }\n        }\n        if (length2 == 8) {\n   \
    \         if (length == 8) {\n                return \"YES\"\n            }\n\
    \            else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 9) {\n            if (length == 9) {\n               \
    \ return \"YES\"\n            }\n            else {\n                return \"\
    NO\"\n            }\n        }\n        if (length2 == 10) {\n            if (length\
    \ == 10) {\n                return \"YES\"\n            }\n            else {\n\
    \                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 11) {\n            if (length == 11) {\n                return \"YES\"\n\
    \            }\n            else {\n                return \"NO\"\n          \
    \  }\n        }\n        if (length2 == 12) {\n            if (length == 12) {\n\
    \                return \"YES\"\n            }\n            else {\n         \
    \       return \"NO\"\n            }\n        }\n        if (length2 == 13) {\n\
    \            if (length == 13) {\n                return \"YES\"\n           \
    \ }\n            else {\n                return \"NO\"\n            }\n      \
    \  }\n        if (length2 == 14) {\n            if (length == 14) {\n        \
    \        return \"YES\"\n            }\n            else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 15) {\n           \
    \ if (length == 15) {\n                return \"YES\"\n            }\n       \
    \     else {\n                return \"NO\"\n            }\n        }\n      \
    \  if (length2 == 16) {\n", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = start2\n        val end3 = end2\n        val start4 = start3\n\
    \        val end4 = end3\n        val start5 = start4\n        val end5 = end4\n\
    \        val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.min(start,\
    \ start2)\n        val end = math.max(end, end2)\n        val length = end - start\n\
    \        if (length == 0)\n            \"NO\"\n        else if (length == 1)\n\
    \            \"YES\"\n        else if (length == 2 && start == end)\n        \
    \    \"YES\"\n        else if (length == 2 && start < end)\n            \"NO\"\
    \n        else if (length == 2 && start > end)\n            \"NO\"\n        else\
    \ if (length == 2 && start == start2 && end == end2)\n            \"YES\"\n  \
    \      else if (length == 2 && start > start2 && end < end2)\n            \"NO\"\
    \n        else if (length == 2 && start < start2 && end > end2)\n            \"\
    NO\"\n        else if (length == 2 && start == start2 && end == end2)\n      \
    \      \"YES\"\n        else if (length == 2 && start > start2 && end < end2)\n\
    \            \"NO\"\n        else if (length == 2 && start < start2 && end > end2)\n\
    \            \"NO\"\n        else if (length == 2 && start == start2 && end ==\
    \ end2)\n            \"YES\"\n        else if (length == 2 && start > start2 &&\
    \ end < end2)\n            \"NO\"\n        else if (length == 2 && start < start2\
    \ && end > end2)\n            \"NO\"\n        else if (length == 2 && start ==\
    \ start2 && end == end2)\n            \"YES\"\n        else if (length == 2 &&\
    \ start > start2 && end < end2)\n            \"NO\"\n        else if (length ==\
    \ 2 && start < start2 && end > end2)\n            \"NO\"\n        else if (length\
    \ == 2 && start == start2 && end == end2)\n            \"YES\"\n        else if\
    \ (length == 2 && start > start2 && end < end2)\n            \"NO\"\n        else\
    \ if (length == 2 && start < start2 && end > end2)\n            \"NO\"\n     \
    \   else if (length == 2 && start == start2 && end == end2)\n            \"YES\"\
    \n        else if (length == 2 && start > start2 && end < end2)\n            \"\
    NO\"\n        else if (length == 2 && start < start2 && end > end2)\n        \
    \    \"NO\"\n        else if (length == 2 && start == start2 && end == end2)\n\
    \            \"YES\"\n        else if (length == 2 && start > start2 && end <\
    \ end2)\n            \"NO\"\n        else if (length == 2 && start < start2 &&\
    \ end > end2)\n            \"NO\"\n        else if (length == 2 && start == start2\
    \ && end == end2)\n            \"YES\"\n        else if (length == 2 && start\
    \ > start2 && end < end2)\n            \"NO\"\n        else if (length == 2 &&\
    \ start < start2 && end > end2)\n", "        val start = interval1._1\n      \
    \  val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val startMinusEnd = start - end\n  \
    \      val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start3 = start2\n\
    \        val end3 = end2\n        val start4 = start3\n        val end4 = end3\n\
    \        val start5 = start4\n        val end5 = end4\n        val start6 = start5\n\
    \        val end6 = end5\n        val start7 = start6\n        val end7 = end6\n\
    \        val start8 = start7\n        val end8 = end7\n        val start9 = start8\n\
    \        val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMin = math.min(start, start2)\n      \
    \  val startMax = math.max(start, start2)\n        val endMin = math.min(end,\
    \ end2)\n        val endMax = math.max(end, end2)\n        val startMin2 = math.min(start2,\
    \ end2)\n        val startMax2 = math.max(start2, end2)\n        val endMin2 =\
    \ math.min(end2, start2)\n        val endMax2 = math.max(end2, start2)\n     \
    \   val startMin3 = math.min(start2, end2)\n        val startMax3 = math.max(start2,\
    \ end2)\n        val endMin3 = math.min(end2, start2)\n        val endMax3 = math.max(end2,\
    \ start2)\n        val startMin4 = math.min(start2, end2)\n        val startMax4\
    \ = math.max(start2, end2)\n        val endMin4 = math.min(end2, start2)\n   \
    \     val endMax4 = math.max(end2, start2)\n        val startMin5 = math.min(start2,\
    \ end2)\n        val startMax5 = math.max(start2, end2)\n        val endMin5 =\
    \ math.min(end2, start2)\n        val endMax5 = math.max(end2, start2)\n     \
    \   val startMin6 = math.min(start2, end2)\n        val startMax6 = math.max(start2,\
    \ end2)\n        val endMin6 = math.min(end2, start2)\n        val endMax6 = math.max(end2,\
    \ start2)\n        val startMin7 = math.min(start2, end2)\n        val startMax7\
    \ = math.max(start2, end2)\n        val endMin7 = math.min(end2, start2)\n   \
    \     val endMax7 = math.max(end2, start2)\n        val startMin8 = math.min(start2,\
    \ end2)\n        val startMax8 = math.max(start2, end2)\n        val endMin8 =\
    \ math.min(end2, start2)\n        val endMax8 = math.max(end2, start2)\n     \
    \   val startMin9 = math.min(start2, end2)\n        val startMax9 = math.max(start2,\
    \ end2)\n        val endMin9 = math.min(end2, start2)\n        val endMax9 = math.max(end2,\
    \ start2)\n        val startMin10 = math.min(start2, end2)\n        val startMax10\
    \ = math.max(start2, end2)\n        val endMin10 = math.min(end2, start2)\n  \
    \      val endMax10 = math.max(end2, start2)\n        val startMin11 = math.",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start > end) {\n\
    \            val temp = start\n            start = end\n            end = temp\n\
    \        }\n        if (start2 > end2) {\n            val temp = start2\n    \
    \        start2 = end2\n            end2 = temp\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"YES\"\n        }\n       \
    \ if (start > start2 && end < end2) {\n            return \"NO\"\n        }\n\
    \        if (start < start2 && end > end2) {\n            return \"NO\"\n    \
    \    }\n        if (start < start2 && end > end2) {\n            return \"NO\"\
    \n        }\n        if (start > start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start > start2 && end > end2) {\n            return\
    \ \"NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else length == length2 ? \"YES\" : \"NO\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd\
    \ = start - end\n        val start2MinusEnd2 = start2 - end2\n        if (startMinusEnd\
    \ < 0 || start2MinusEnd2 < 0 || start2MinusEnd2 > startMinusEnd) {\n         \
    \   return \"NO\"\n        }\n        if (startMinusEnd < start2MinusEnd2) {\n\
    \            return \"NO\"\n        }\n        if (startMinusEnd == start2MinusEnd2)\
    \ {\n            if (end < end2) {\n                return \"NO\"\n          \
    \  }\n            if (end == end2) {\n                if (start < end) {\n   \
    \                 return \"NO\"\n                }\n                if (start\
    \ == end) {\n                    return \"YES\"\n                }\n         \
    \   }\n        }\n        return \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0 ||\
    \ length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0) {\n            if (length == 0) \"NO\" else\
    \ \"YES\"\n        } else {\n            val prime = length / length2\n      \
    \      if (prime == 0) \"NO\" else \"YES\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.max(start, start2)\n        val\
    \ end = math.min(end, end2)\n        val length = end - start\n        val isPrime\
    \ = length == 1 && start == end\n        if (isPrime) {\n            \"YES\"\n\
    \        } else {\n            \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val\
    \ start = interval1._1\n        val end = interval2._1\n        val start = interval1._2\n\
    \        val end = interval2._2\n        if (start < end) {\n            val length\
    \ = end - start\n            if (length == 1) {\n                return \"NO\"\
    \n            }\n            val primes = mutable.ListBuffer[Long]()\n       \
    \     val primesSet = mutable.Set[Long]()\n            val primesSet2 = mutable.Set[Long]()\n\
    \            val primesSet3 = mutable.Set[Long]()\n            val primesSet4\
    \ = mutable.Set[Long]()\n            val primesSet5 = mutable.Set[Long]()\n  \
    \          val primesSet6 = mutable.Set[Long]()\n            val primesSet7 =\
    \ mutable.Set[Long]()\n            val primesSet8 = mutable.Set[Long]()\n    \
    \        val primesSet9 = mutable.Set[Long]()\n            val primesSet10 = mutable.Set[Long]()\n\
    \            val primesSet11 = mutable.Set[Long]()\n            val primesSet12\
    \ = mutable.Set[Long]()\n            val primesSet13 = mutable.Set[Long]()\n \
    \           val primesSet14 = mutable.Set[Long]()\n            val primesSet15\
    \ = mutable.Set[Long]()\n            val primesSet16 = mutable.Set[Long]()\n \
    \           val primesSet17 = mutable.Set[Long]()\n            val primesSet18\
    \ = mutable.Set[Long]()\n            val primesSet19 = mutable.Set[Long]()\n \
    \           val primesSet20 = mutable.Set[Long]()\n            val primesSet21\
    \ = mutable.Set[Long]()\n            val primesSet22 = mutable.Set[Long]()\n \
    \           val primesSet23 = mutable.Set[Long]()\n            val primesSet24\
    \ = mutable.Set[Long]()\n            val primesSet25 = mutable.Set[Long]()\n \
    \           val primesSet26 = mutable.Set[Long]()\n            val primesSet27\
    \ = mutable.Set[Long]()\n            val primesSet28 = mutable.Set[Long]()\n \
    \           val primesSet29 = mutable.Set[Long]()\n            val primesSet30\
    \ = mutable.Set[Long]()\n            val primesSet31 = mutable.", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"YES\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end > end2) {\n            return \"NO\"\n        }\n        if (start\
    \ > start2 && end > end2) {\n            return \"YES\"\n        }\n        if\
    \ (start < start2 && end < end2) {\n            return \"YES\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ math.min(start, start2)\n        val end = math.max(end, end2)\n        val\
    \ length = end - start\n        val isPrime = length == 2 || length == 3 && start\
    \ % length == 0 && end % length == 0\n        if (isPrime) {\n            \"YES\"\
    \n        } else {\n            \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) {\n            \"NO\"\
    \n        } else {\n            val isPrime = length == length2\n            if\
    \ (isPrime) {\n                \"YES\"\n            } else {\n               \
    \ \"NO\"\n            }\n        }", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = math.max(start, start2)\n        val end\
    \ = math.min(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMinusEnd = start - end\n        val start2MinusEnd2 = start2\
    \ - end2\n        if (startMinusEnd < 0 || start2MinusEnd2 < 0 || start2MinusEnd2\
    \ > startMinusEnd) {\n            return \"NO\"\n        }\n        if (startMinusEnd\
    \ == 0 || start2MinusEnd2 == 0 || start2MinusEnd2 > startMinusEnd) {\n       \
    \     return \"NO\"\n        }\n        if (start2MinusEnd2 == 0 || start2MinusEnd2\
    \ > startMinusEnd) {\n            return \"NO\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd + 1) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd - 1) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd + 2) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd - 2) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd + 3) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd - 3) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd + 4) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd - 4) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd + 5) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd - 5) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd + 6) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd - 6) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd + 7) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd - 7) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd + 8) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd - 8) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd + 9) {\n            return \"YES", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.min(start,\
    \ start2)\n        val end = math.max(end, end2)\n        val length = end - start\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primes2 = mutable.ListBuffer[Long]()\n\
    \        val primes3 = mutable.ListBuffer[Long]()\n        val primes4 = mutable.ListBuffer[Long]()\n\
    \        val primes5 = mutable.ListBuffer[Long]()\n        val primes6 = mutable.ListBuffer[Long]()\n\
    \        val primes7 = mutable.ListBuffer[Long]()\n        val primes8 = mutable.ListBuffer[Long]()\n\
    \        val primes9 = mutable.ListBuffer[Long]()\n        val primes10 = mutable.ListBuffer[Long]()\n\
    \        val primes11 = mutable.ListBuffer[Long]()\n        val primes12 = mutable.ListBuffer[Long]()\n\
    \        val primes13 = mutable.ListBuffer[Long]()\n        val primes14 = mutable.ListBuffer[Long]()\n\
    \        val primes15 = mutable.ListBuffer[Long]()\n        val primes16 = mutable.ListBuffer[Long]()\n\
    \        val primes17 = mutable.ListBuffer[Long]()\n        val primes18 = mutable.ListBuffer[Long]()\n\
    \        val primes19 = mutable.ListBuffer[Long]()\n        val primes20 = mutable.ListBuffer[Long]()\n\
    \        val primes21 = mutable.ListBuffer[Long]()\n        val primes22 = mutable.ListBuffer[Long]()\n\
    \        val primes23 = mutable.ListBuffer[Long]()\n        val primes24 = mutable.ListBuffer[Long]()\n\
    \        val primes25 = mutable.ListBuffer[Long]()\n        val primes26 = mutable.ListBuffer[Long]()\n\
    \        val primes27 = mutable.ListBuffer[Long]()\n        val primes28 = mutable.ListBuffer[Long]()\n\
    \        val primes29 = mutable.ListBuffer[Long]()\n        val primes30 = mutable.ListBuffer[Long]()\n\
    \        val primes31 = mutable.ListBuffer[Long]()\n        val primes32 = mutable.",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start3 = start2\n\
    \        val end3 = end2\n        val start4 = start3\n        val end4 = end3\n\
    \        val start5 = start4\n        val end5 = end4\n        val start6 = start5\n\
    \        val end6 = end5\n        val start7 = start6\n        val end7 = end6\n\
    \        val start8 = start7\n        val end8 = end7\n        val start9 = start8\n\
    \        val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start < end2 && start2 < end) \n          \
    \  \"NO\" \n        else if (start < end2 && start2 > end) \n            \"YES\"\
    \ \n        else if (start > end2 && start2 < end) \n            \"NO\" \n   \
    \     else if (start > end2 && start2 > end) \n            \"YES\"\n        else\
    \ \n            \"NO\"", "        val start = interval1._1\n        val end =\
    \ interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"YES\"\n        }\n        if (start > start2 && end > end2) {\n          \
    \  return \"NO\"\n        }\n        if (start < start2 && end < end2) {\n   \
    \         return \"NO\"\n        }\n        if (start < start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start == start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end == end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end < end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start == start2 && end < end2) {\n            return \"NO\"\n        }\n  \
    \      if (start > start2 && end == end2) {\n            return \"NO\"\n     \
    \   }\n        if (start < start2 && end < end2) {\n            return \"NO\"\n\
    \        }\n        if (start < start2 && end > end2) {\n            return \"\
    NO\"\n        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end == end2) {\n          \
    \  return \"NO\"\n        }\n        if (start < start2 && end == end2) {\n  \
    \          return \"NO\"\n        }\n        if (start < start2 && end < end2)\
    \ {\n            return \"NO\"\n        }\n        if (start == start2 && end\
    \ < end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end == end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end < end2) {\n            return \"NO\"\n        }\n        if\
    \ (start == start2 && end == end2) {\n            return \"NO\"\n        }\n \
    \       if (start > start2 && end == end2) {\n            return \"NO\"\n    \
    \    }\n        if (start < start2 && end == end2) {\n            return \"NO\"\
    \n        }\n        if (start < start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end == end2) {\n          \
    \  return \"NO\"\n        }\n        if (start < start", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start <\
    \ end2 && start2 < end) {\n            val length = end - start\n            val\
    \ length2 = end2 - start2\n            if (length == length2) {\n            \
    \    if (length == 1) {\n                    return \"YES\"\n                }\
    \ else {\n                    return \"NO\"\n                }\n            }\
    \ else {\n                return \"NO\"\n            }\n        } else {\n   \
    \         return \"NO\"\n        }", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = math.max(start, start2)\n        val end\
    \ = math.min(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = start2\n        val end3 = end2\n        val start4 = start3\n\
    \        val end4 = end3\n        val start5 = start4\n        val end5 = end4\n\
    \        val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start < end2 &&\
    \ start2 < end) {\n            val start3 = start2\n            val end3 = end2\n\
    \            val start4 = start\n            val end4 = end\n            if (start3\
    \ < end4 && start4 < end3) {\n                val start5 = start3\n          \
    \      val end5 = end3\n                val start6 = start4\n                val\
    \ end6 = end4\n                if (start5 < end6 && start6 < end5) {\n       \
    \             val start7 = start5\n                    val end7 = end5\n     \
    \               val start8 = start6\n                    val end8 = end6\n   \
    \                 if (start7 < end8 && start8 < end7) {\n                    \
    \    val start9 = start7\n                        val end9 = end7\n          \
    \              val start10 = start8\n                        val end10 = end8\n\
    \                        if (start9 < end10 && start10 < end9) {\n           \
    \                 val start11 = start9\n                            val end11\
    \ = end9\n                            val start12 = start10\n                \
    \            val end12 = end10\n                            if (start11 < end12\
    \ && start12 < end11) {\n                                val start13 = start11\n\
    \                                val end13 = end11\n                         \
    \       val start14 = start12\n                                val end14 = end12\n\
    \                                if (start13 < end14 && start14 < end13) {\n \
    \                                   val start15 = start13\n                  \
    \                  val end15 = end13\n                                    val\
    \ start16 = start14\n                                    val end16 = end14\n \
    \                                   if (start15 < end16 && start16 < end15) {\n\
    \                                        val start17 = start15\n             \
    \                           val end17 = end15\n                              \
    \          val start18 = start16\n                                        val\
    \ end18 = end16\n                                        if (start17 < end18 &&\
    \ start18 < end17) {\n                                            val start19\
    \ = start17\n                                            val end19 = end17\n \
    \                                           val start20 = start18\n          \
    \                                  val end20 = end18\n                       \
    \                     if (start19 < end20 && start20 < end19) {\n            \
    \                                    return \"YES\"\n                        \
    \                    }\n                                        }\n          \
    \                          }\n                                }\n            \
    \                }\n                        }\n                    }\n       \
    \         }\n            }\n        }\n        return \"NO\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"YES\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end > end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start > start2 && end > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start < start2 && end < end2) {\n            return \"NO\"\n\
    \        }\n        if (start < start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start > start2 && end > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end > end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start2 && end < end2) {\n    \
    \        return \"NO\"\n        }\n        if (start > start2 && end < end2) {\n\
    \            return \"NO\"\n        }\n        if (start < start2 && end < end2)\
    \ {\n            return \"NO\"\n        }\n        if (start < start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start < start2\
    \ && end > end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end < end2) {\n            return \"NO\"\n        }\n        if (start\
    \ > start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start < start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end < end2) {\n            return \"NO\"\n       \
    \ }\n        if (start > start2 && end > end2) {\n            return \"NO\"\n\
    \        }\n        if (start < start2 && end > end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end > end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start2 && end < end2) {\n    \
    \        return \"NO\"\n        }\n        if (start < start2 && end < end2) {\n\
    \            return \"NO\"\n        }\n        if (start > start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start < start", "     \
    \   val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start < end2 &&\
    \ start2 < end) {\n            val start3 = start2\n            val end3 = end2\n\
    \            val start4 = start\n            val end4 = end\n            if (start3\
    \ < end4 && start4 < end3) {\n                val start5 = start3\n          \
    \      val end5 = end3\n                val start6 = start4\n                val\
    \ end6 = end4\n                if (start5 < end6 && start6 < end5) {\n       \
    \             val start7 = start5\n                    val end7 = end5\n     \
    \               val start8 = start6\n                    val end8 = end6\n   \
    \                 if (start7 < end8 && start8 < end7) {\n                    \
    \    val start9 = start7\n                        val end9 = end7\n          \
    \              val start10 = start8\n                        val end10 = end8\n\
    \                        if (start9 < end10 && start10 < end9) {\n           \
    \                 val start11 = start9\n                            val end11\
    \ = end9\n                            val start12 = start10\n                \
    \            val end12 = end10\n                            if (start11 < end12\
    \ && start12 < end11) {\n                                val start13 = start11\n\
    \                                val end13 = end11\n                         \
    \       val start14 = start12\n                                val end14 = end12\n\
    \                                if (start13 < end14 && start14 < end13) {\n \
    \                                   val start15 = start13\n                  \
    \                  val end15 = end13\n                                    val\
    \ start16 = start14\n                                    val end16 = end14\n \
    \                                   if (start15 < end16 && start16 < end15) {\n\
    \                                        val start17 = start15\n             \
    \                           val end17 = end15\n                              \
    \          val start18 = start16\n                                        val\
    \ end18 = end16\n                                        if (start17 < end18 &&\
    \ start18 < end17) {\n                                            return \"YES\"\
    \n                                        } else {\n                         \
    \                   return \"NO\"\n                                        }\n\
    \                                    } else {\n                              \
    \          return \"NO\"\n                                    }\n            \
    \                    } else {\n                                    return \"NO\"\
    \n                                }\n                            } else {\n  \
    \                              return \"NO\"\n                            }\n\
    \                        } else {\n                            return \"NO\"\n\
    \                        }\n                    } else {\n                   \
    \     return \"NO\"\n                    }\n                } else {\n       \
    \             return \"NO\"\n                }\n            } else {\n       \
    \         return \"NO\"\n            }\n        } else {\n            return \"\
    NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) \"NO\" else \"YES\"\n        } else if\
    \ (length2 == 1) {\n            if (length == 1) \"YES\" else \"NO\"\n       \
    \ } else if (length2 == 2) {\n            if (length == 2) \"YES\" else \"NO\"\
    \n        } else if (length2 == 3) {\n            if (length == 3) \"YES\" else\
    \ \"NO\"\n        } else if (length2 == 4) {\n            if (length == 2) \"\
    YES\" else \"NO\"\n        } else if (length2 == 5) {\n            if (length\
    \ == 2) \"YES\" else \"NO\"\n        } else if (length2 == 6) {\n            if\
    \ (length == 2) \"YES\" else \"NO\"\n        } else if (length2 == 7) {\n    \
    \        if (length == 2) \"YES\" else \"NO\"\n        } else if (length2 == 8)\
    \ {\n            if (length == 2) \"YES\" else \"NO\"\n        } else if (length2\
    \ == 9) {\n            if (length == 2) \"YES\" else \"NO\"\n        } else if\
    \ (length2 == 10) {\n            if (length == 2) \"YES\" else \"NO\"\n      \
    \  } else if (length2 == 11) {\n            if (length == 2) \"YES\" else \"NO\"\
    \n        } else if (length2 == 12) {\n            if (length == 2) \"YES\" else\
    \ \"NO\"\n        } else if (length2 == 13) {\n            if (length == 2) \"\
    YES\" else \"NO\"\n        } else if (length2 == 14) {\n            if (length\
    \ == 2) \"YES\" else \"NO\"\n        } else if (length2 == 15) {\n           \
    \ if (length == 2) \"YES\" else \"NO\"\n        } else if (length2 == 16) {\n\
    \            if (length == 2) \"YES\" else \"NO\"\n        } else if (length2\
    \ == 17) {\n            if (length == 2) \"YES\" else \"NO\"\n        } else if\
    \ (length2 == 18) {\n            if (length == 2) \"YES\" else \"NO\"\n      \
    \  } else if (length2 == 19) {\n            if (length == 2) \"YES\" else \"NO\"\
    \n        } else if (length2 == 20) {\n            if (length == 2) \"YES\" else\
    \ \"NO\"\n        } else if (length2 == 21) {\n            if (length == 2) \"\
    YES\" else \"NO\"\n        } else if (length2 == 22) {\n            if (length\
    \ == 2) \"YES\" else \"NO\"\n        } else if (length2 == 23) {\n           \
    \ if (length == 2) \"YES\" else \"NO\"\n        } else if (length2 == 24) {\n\
    \            if (length == 2) \"YES\" else \"NO\"\n        } else if (length2\
    \ == 25) {\n            if (length == 2) \"YES\" else \"NO\"\n        } else if\
    \ (length2 == 26) {\n            if (length == 2) \"YES\" else \"NO\"\n      \
    \  } else if (length2 == 27) {\n            if (length == 2) \"YES\" ", "    \
    \    val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n        else (length2\
    \ % length == 0) ? \"YES\" : \"NO\"", "        val start = interval1._1\n    \
    \    val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = math.min(start, start2)\n        val end\
    \ = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0)\n            \"NO\"\n        else if (length == 1)\n            \"YES\"\
    \n        else if (length == 2 && start == end)\n            \"YES\"\n       \
    \ else if (length == 2 && start != end)\n            \"NO\"\n        else if (length\
    \ == 2 && start == start2 && end == end2)\n            \"YES\"\n        else if\
    \ (length == 2 && start != start2 && end != end2)\n            \"NO\"\n      \
    \  else if (length == 2 && start == start2 && end != end2)\n            \"NO\"\
    \n        else if (length == 2 && start != start2 && end == end2)\n          \
    \  \"NO\"\n        else if (length == 2 && start == start2 && end == end2)\n \
    \           \"YES\"\n        else if (length == 2 && start != start2 && end !=\
    \ end2)\n            \"NO\"\n        else if (length == 2 && start == start2 &&\
    \ end != end2)\n            \"NO\"\n        else if (length == 2 && start != start2\
    \ && end == end2)\n            \"NO\"\n        else if (length == 2 && start ==\
    \ start2 && end == end2)\n            \"YES\"\n        else if (length == 2 &&\
    \ start != start2 && end != end2)\n            \"NO\"\n        else if (length\
    \ == 2 && start == start2 && end == end2)\n            \"NO\"\n        else if\
    \ (length == 2 && start != start2 && end != end2)\n            \"NO\"\n      \
    \  else if (length == 2 && start == start2 && end == end2)\n            \"NO\"\
    \n        else if (length == 2 && start != start2 && end != end2)\n          \
    \  \"NO\"\n        else if (length == 2 && start == start2 && end == end2)\n \
    \           \"NO\"\n        else if (length == 2 && start != start2 && end !=\
    \ end2)\n            \"NO\"\n        else if (length == 2 && start == start2 &&\
    \ end == end2)\n            \"NO\"\n        else if (length == 2 && start != start2\
    \ && end != end2)\n            \"NO\"\n        else if (length == 2 && start ==\
    \ start2 && end == end2)\n            \"NO\"\n        else if (length == 2 &&\
    \ start != start2 && end != end2)\n            \"NO\"\n        else if (length\
    \ == 2 && start == start2 && end == end2)\n            \"NO\"\n        else if\
    \ (length == 2 && start != start2 && end != end2)\n            \"NO\"\n      \
    \  else if (length == 2 && start == start2 && end == end2)\n            \"NO\"\
    \n        else if (length == 2 && start != start2 && end != end2)\n          \
    \  \"NO\"\n        else if (length == 2 && start == start2 && ", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else length2 % length == 0 ? \"YES\" : \"NO\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            \"NO\"\n        } else if (length == length2)\
    \ {\n            \"YES\"\n        } else {\n            val start3 = start + length\n\
    \            val end3 = start + length2\n            val start4 = start2 + length2\n\
    \            val end4 = start2 + length\n            val start5 = start2 + length\n\
    \            val end5 = start2 + length2\n            val start6 = start2 + length2\n\
    \            val end6 = start2 + length\n            val start7 = start2 + length\n\
    \            val end7 = start2 + length2\n            val start8 = start2 + length2\n\
    \            val end8 = start2 + length\n            val start9 = start2 + length\n\
    \            val end9 = start2 + length2\n            val start10 = start2 + length2\n\
    \            val end10 = start2 + length\n            val start11 = start2 + length\n\
    \            val end11 = start2 + length2\n            val start12 = start2 +\
    \ length2\n            val end12 = start2 + length\n            val start13 =\
    \ start2 + length\n            val end13 = start2 + length2\n            val start14\
    \ = start2 + length2\n            val end14 = start2 + length\n            val\
    \ start15 = start2 + length2\n            val end15 = start2 + length\n      \
    \      val start16 = start2 + length2\n            val end16 = start2 + length\n\
    \            val start17 = start2 + length2\n            val end17 = start2 +\
    \ length\n            val start18 = start2 + length2\n            val end18 =\
    \ start2 + length\n            val start19 = start2 + length2\n            val\
    \ end19 = start2 + length\n            val start20 = start2 + length2\n      \
    \      val end20 = start2 + length\n            val start21 = start2 + length2\n\
    \            val end21 = start2 + length\n            val start22 = start2 + length2\n\
    \            val end22 = start2 + length\n            val start23 = start2 + length2\n\
    \            val end23 = start2 + length\n            val start24 = start2 + length2\n\
    \            val end24 = start2 + length\n            val start25 = start2 + length2\n\
    \            val end25 = start2 + length\n            val start26 = start2 + length2\n\
    \            val end26 = start2 + length\n            val start27 = start2 + length2",
  "        val start = interval1._1\n        val end = interval2._1\n        val start2\
    \ = interval2._2\n        val end2 = interval1._2\n        val start3 = interval1._1\n\
    \        val end3 = interval2._1\n        val start4 = interval2._2\n        val\
    \ end4 = interval1._2\n        val start5 = interval1._1\n        val end5 = interval2._1\n\
    \        val start6 = interval2._2\n        val end6 = interval1._2\n        val\
    \ start7 = interval1._1\n        val end7 = interval2._1\n        val start8 =\
    \ interval2._2\n        val end8 = interval1._2\n        val start9 = interval1._1\n\
    \        val end9 = interval2._1\n        val start10 = interval2._2\n       \
    \ val end10 = interval1._2\n        val start11 = interval1._1\n        val end11\
    \ = interval2._1\n        val start12 = interval2._2\n        val end12 = interval1._2\n\
    \        val start13 = interval1._1\n        val end13 = interval2._1\n      \
    \  val start14 = interval2._2\n        val end14 = interval1._2\n        val start15\
    \ = interval1._1\n        val end15 = interval2._1\n        val start16 = interval2._2\n\
    \        val end16 = interval1._2\n        val start17 = interval1._1\n      \
    \  val end17 = interval2._1\n        val start18 = interval2._2\n        val end18\
    \ = interval1._2\n        val start19 = interval1._1\n        val end19 = interval2._1\n\
    \        val start20 = interval2._2\n        val end20 = interval1._2\n      \
    \  val start21 = interval1._1\n        val end21 = interval2._1\n        val start22\
    \ = interval2._2\n        val end22 = interval1._2\n        val start23 = interval1._1\n\
    \        val end23 = interval2._1\n        val start24 = interval2._2\n      \
    \  val end24 = interval1._2\n        val start25 = interval1._1\n        val end25\
    \ = interval2._1\n        val start26 = interval2._2\n        val end26 = interval1._2\n\
    \        val start27 = interval1._1\n        val end27 = interval2._1\n      \
    \  val start28 = interval2._2\n        val end28 = interval1._2\n        val start29\
    \ = interval1._1\n        val end29 = interval2._1\n        val start30 = interval2._2\n\
    \        val end30 = interval1.", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) {\n            if (length == 0)\n                \"NO\"\n\
    \            else\n                \"YES\"\n        }\n        else if (length\
    \ == 0)\n            \"NO\"\n        else if (length2 == 0)\n            \"NO\"\
    \n        else if (length == 1)\n            \"YES\"\n        else if (length2\
    \ == 1)\n            \"YES\"\n        else if (length == length2)\n          \
    \  \"YES\"\n        else if (length2 == length2)\n            \"YES\"\n      \
    \  else if (length == length2 - 1)\n            \"YES\"\n        else if (length2\
    \ == length2 - 1)\n            \"YES\"\n        else if (length == length2 - 2)\n\
    \            \"YES\"\n        else if (length2 == length2 - 2)\n            \"\
    YES\"\n        else if (length == length2 - 3)\n            \"YES\"\n        else\
    \ if (length2 == length2 - 3)\n            \"YES\"\n        else if (length ==\
    \ length2 - 4)\n            \"YES\"\n        else if (length2 == length2 - 4)\n\
    \            \"YES\"\n        else if (length == length2 - 5)\n            \"\
    YES\"\n        else if (length2 == length2 - 5)\n            \"YES\"\n       \
    \ else if (length == length2 - 6)\n            \"YES\"\n        else if (length2\
    \ == length2 - 6)\n            \"YES\"\n        else if (length == length2 - 7)\n\
    \            \"YES\"\n        else if (length2 == length2 - 7)\n            \"\
    YES\"\n        else if (length == length2 - 8)\n            \"YES\"\n        else\
    \ if (length2 == length2 - 8)\n            \"YES\"\n        else if (length ==\
    \ length2 - 9)\n            \"YES\"\n        else if (length2 == length2 - 9)\n\
    \            \"YES\"\n        else if (length == length2 - 10)\n            \"\
    YES\"\n        else if (length2 == length2 - 10)\n            \"YES\"\n      \
    \  else if (length == length2 - 11)\n            \"YES\"\n        else if (length2\
    \ == length2 - 11)\n            \"YES\"\n        else if (length == length2 -\
    \ 12)\n            \"YES\"\n        else if (length2 == length2 - 12)\n      \
    \      \"YES\"\n        else if (length == length2 - 13)\n            \"YES\"\n\
    \        else if (length2 == length2 - 13)\n            \"YES\"\n        else\
    \ if (length == length2 - 14)\n            \"YES\"\n        else if (length2 ==\
    \ length2 - 14)\n            \"YES\"\n        else if (length == length2 - 15)\n\
    \            \"YES\"\n        else if (length2 == length2 - 15)\n            \"\
    YES\"\n        else if (length == length2 - 16)\n            \"YES\"\n       \
    \ else if (length2 == length2 - 16)\n            \"YES\"\n        else if (length\
    \ == length2 - 17)\n            \"YES\"\n        else if (length2 == length2 -\
    \ 17)\n            \"YES\"\n        else if (length == length2 - 18)\n       \
    \     \"YES\"\n        else if (length2 == ", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMinusEnd = start - end\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        val isPrime = length == 0 || length ==\
    \ 1 || length == 2 || length == 3 || length == 5 || length == 7\n        if (isPrime)\
    \ {\n            return \"YES\"\n        } else {\n            return \"NO\"\n\
    \        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) {\n            return \"\
    NO\"\n        }\n        if (length == 1) {\n            return \"YES\"\n    \
    \    }\n        val isPrime = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime) {\n            return \"YES\"\n      \
    \  }\n        val isPrime2 = length2 % length2 == 0 // if length2 is prime then\
    \ length2 is prime\n        if (isPrime2) {\n            return \"NO\"\n     \
    \   }\n        val isPrime3 = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime3) {\n            return \"NO\"\n      \
    \  }\n        val isPrime4 = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime4) {\n            return \"NO\"\n      \
    \  }\n        val isPrime5 = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime5) {\n            return \"NO\"\n      \
    \  }\n        val isPrime6 = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime6) {\n            return \"NO\"\n      \
    \  }\n        val isPrime7 = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime7) {\n            return \"NO\"\n      \
    \  }\n        val isPrime8 = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime8) {\n            return \"NO\"\n      \
    \  }\n        val isPrime9 = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime9) {\n            return \"NO\"\n      \
    \  }\n        val isPrime10 = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime10) {\n            return \"NO\"\n     \
    \   }\n        val isPrime11 = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime11) {\n            return \"NO\"\n     \
    \   }\n        val isPrime12 = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime12) {\n            return \"NO\"\n     \
    \   }\n        val isPrime13 = length2 % length == 0 // if length2 is prime then\
    \ length is prime\n        if (isPrime13", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMinusEnd = end - start\n        val start2MinusEnd2\
    \ = end2 - start2\n        val startMinusEnd2MinusEnd = end2 - start2\n      \
    \  val startMinusEnd2MinusEnd2 = end2 - start2\n        val startMinusEnd2MinusEnd2MinusEnd\
    \ = end2 - start2\n        val startMinusEnd2MinusEnd2MinusEnd2 = end2 - start2\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd = end2 - start2\n      \
    \  val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2 = end2 - start2\n        val\
    \ startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd = end2 - start2\n        val\
    \ startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2 = end2 - start2\n       \
    \ val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd = end2 - start2\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2 = end2\
    \ - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = end2 - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2\
    \ = end2 - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = end2 - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2\
    \ = end2 - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = end2 - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2Min",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        val isPrime = length ==\
    \ 2 || length3 == 2\n        if (isPrime) {\n            \"YES\"\n        } else\
    \ {\n            \"NO\"\n        }", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start3 = start2\n        val end3 = end2\n     \
    \   val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val startMinusEnd = start - end\n  \
    \      val start2MinusEnd2 = start2 - end2\n        if (startMinusEnd < 0 || start2MinusEnd2\
    \ < 0 || start2MinusEnd2 > startMinusEnd) {\n            return \"NO\"\n     \
    \   }\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        if (startMinusEnd2 < 0 || start2MinusEnd2 < 0 || start2MinusEnd2\
    \ > startMinusEnd) {\n            return \"NO\"\n        }\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        if (startMinusEnd2\
    \ < 0 || start2MinusEnd2 < 0 || start2MinusEnd2 > startMinusEnd) {\n         \
    \   return \"NO\"\n        }\n        val startMinusEnd2 = start2 - end2\n   \
    \     val startMinusEnd2 = start2 - end2\n        if (startMinusEnd2 < 0 || start2MinusEnd2\
    \ < 0 || start2MinusEnd2 > startMinusEnd) {\n            return \"NO\"\n     \
    \   }\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        if (startMinusEnd2 < 0 || start2MinusEnd2 < 0 || start2MinusEnd2\
    \ > startMinusEnd) {\n            return \"NO\"\n        }\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        if (startMinusEnd2\
    \ < 0 || start2MinusEnd2 < 0 || start2MinusEnd2 > startMinusEnd) {\n         \
    \   return \"NO\"\n        }\n        val startMinusEnd2 = start2 - end2\n   \
    \     val startMinusEnd2 = start2 - end2\n        if (startMinusEnd2 < 0 || start2MinusEnd2\
    \ < 0 || start2MinusEnd2 > startMinusEnd) {\n            return \"NO\"\n     \
    \   }\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        if (startMinusEnd2 < 0 || start2MinusEnd2 < 0 || start2MinusEnd2\
    \ > startMinusEnd) {\n            return \"NO\"\n        }\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        if (startMin",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start3 = start2\n\
    \        val end3 = end2\n        val start4 = start3\n        val end4 = end3\n\
    \        val start5 = start4\n        val end5 = end4\n        val start6 = start5\n\
    \        val end6 = end5\n        val start7 = start6\n        val end7 = end6\n\
    \        val start8 = start7\n        val end8 = end7\n        val start9 = start8\n\
    \        val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start > end) {\n            val temp = start\n\
    \            start = end\n            end = temp\n        }\n        if (start2\
    \ > end2) {\n            val temp = start2\n            start2 = end2\n      \
    \      end2 = temp\n        }\n        if (start == start2 && end == end2) {\n\
    \            return \"NO\"\n        }\n        if (start > start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start < start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start == start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end > end2) {\n            return \"NO\"\n        }\n        if (start\
    \ == start2 && end < end2) {\n            return \"NO\"\n        }\n        if\
    \ (start < start2 && end == end2) {\n            return \"NO\"\n        }\n  \
    \      if (start > start2 && end < end2) {\n            return \"NO\"\n      \
    \  }\n        if (start < start2 && end == end2) {\n            return \"NO\"\n\
    \        }\n        if (start > start2 && end > end2) {\n            return \"\
    NO\"\n        }\n        if (start == start2 && end < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end == end2) {\n          \
    \  return \"NO\"\n        }\n        if (start > start2 && end > end2) {\n   \
    \         return \"NO\"\n        }\n        if (start == start2 && end < end2)\
    \ {\n            return \"NO\"\n        }\n        if (start < start2 && end ==\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start == start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end == end2) {\n            return \"NO\"\n        }\n        if (start\
    \ > start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start == start2 && end < end2) {\n            return \"NO\"\n        }\n  \
    \      if (start < start2 && end == end2) {\n            return \"NO\"\n     \
    \   }\n        if (start > start2 && end > end2) {\n            return \"NO\"\n\
    \        }\n        if (start == start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end > end2) {\n           \
    \ return \"NO\"\n        }\n        if (start == start2 && end < end2) {\n   \
    \         return \"NO\"\n        }\n        if (start < start", "        val start\
    \ = interval1._1\n        val end = interval2._1\n        val start2 = interval1._2\n\
    \        val end2 = interval2._2\n        val start3 = interval1._3\n        val\
    \ end3 = interval2._3\n        val start4 = interval1._4\n        val end4 = interval2._4\n\
    \        val start5 = interval1._5\n        val end5 = interval2._5\n        val\
    \ start6 = interval1._6\n        val end6 = interval2._6\n        val start7 =\
    \ interval1._7\n        val end7 = interval2._7\n        val start8 = interval1._8\n\
    \        val end8 = interval2._8\n        val start9 = interval1._9\n        val\
    \ end9 = interval2._9\n        val start10 = interval1._10\n        val end10\
    \ = interval2._10\n        val start11 = interval1._11\n        val end11 = interval2._11\n\
    \        val start12 = interval1._12\n        val end12 = interval2._12\n    \
    \    val start13 = interval1._13\n        val end13 = interval2._13\n        val\
    \ start14 = interval1._14\n        val end14 = interval2._14\n        val start15\
    \ = interval1._15\n        val end15 = interval2._15\n        val start16 = interval1._16\n\
    \        val end16 = interval2._16\n        val start17 = interval1._17\n    \
    \    val end17 = interval2._17\n        val start18 = interval1._18\n        val\
    \ end18 = interval2._18\n        val start19 = interval1._19\n        val end19\
    \ = interval2._19\n        val start20 = interval1._20\n        val end20 = interval2._20\n\
    \        val start21 = interval1._21\n        val end21 = interval2._21\n    \
    \    val start22 = interval1._22\n        val end22 = interval2._22\n        val\
    \ start23 = interval1._23\n        val end23 = interval2._23\n        val start24\
    \ = interval1._24\n        val end24 = interval2._24\n        val start25 = interval1._25\n\
    \        val end25 = interval2._25\n        val start26 = interval1._26\n    \
    \    val end26 = interval2._26\n        val start27 = interval1._27\n        val\
    \ end27 = interval2._27\n        val start28 = interval1._", "        val start\
    \ = interval1._1\n        val end = interval2._1\n        val start = interval1._2\n\
    \        val end = interval2._2\n        val length = end - start\n        if\
    \ (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n    \
    \    val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else if (length2\
    \ == 1) \"YES\"\n        else if (length2 > 1 && length2 % length == 0) \"YES\"\
    \n        else \"NO\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) \"NO\" else \"YES\"\n        } else {\n\
    \            val length3 = length / length2\n            if (length3 == 0) \"\
    NO\" else \"YES\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = start2\n        val end3 = end2\n        val start4 = start3\n\
    \        val end4 = end3\n        val start5 = start4\n        val end5 = end4\n\
    \        val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        val isPrime = length2 %\
    \ length == 0 \n        if(isPrime) {\n            \"YES\"\n        } else {\n\
    \            \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.max(start, start2)\n        val end = math.min(end,\
    \ end2)\n        val length = end - start\n        if (length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.min(start, start2)\n        val end = math.max(end,\
    \ end2)\n        val length = end - start\n        val prime = length.toString.toInt\n\
    \        if (prime == 0) {\n            \"NO\"\n        } else if (prime == 1)\
    \ {\n            \"YES\"\n        } else {\n            val prime2 = prime - 1\n\
    \            val prime3 = prime - 2\n            val prime4 = prime - 3\n    \
    \        val prime5 = prime - 4\n            val prime6 = prime - 5\n        \
    \    val prime7 = prime - 6\n            val prime8 = prime - 7\n            val\
    \ prime9 = prime - 8\n            val prime10 = prime - 9\n            val prime11\
    \ = prime - 10\n            val prime12 = prime - 11\n            val prime13\
    \ = prime - 12\n            val prime14 = prime - 13\n            val prime15\
    \ = prime - 14\n            val prime16 = prime - 15\n            val prime17\
    \ = prime - 16\n            val prime18 = prime - 17\n            val prime19\
    \ = prime - 18\n            val prime20 = prime - 19\n            val prime21\
    \ = prime - 20\n            val prime22 = prime - 21\n            val prime23\
    \ = prime - 22\n            val prime24 = prime - 23\n            val prime25\
    \ = prime - 24\n            val prime26 = prime - 25\n            val prime27\
    \ = prime - 26\n            val prime28 = prime - 27\n            val prime29\
    \ = prime - 28\n            val prime30 = prime - 29\n            val prime31\
    \ = prime - 30\n            val prime32 = prime - 31\n            val prime33\
    \ = prime - 32\n            val prime34 = prime - 33\n            val prime35\
    \ = prime - 34\n            val prime36 = prime - 35\n            val prime37\
    \ = prime - 36\n            val prime38 = prime - 37\n            val prime39\
    \ = prime - 38\n            val prime40 = prime - 39\n            val prime41\
    \ = prime - 40\n            val prime42 = prime - 41\n            val prime43\
    \ = prime - 42\n            val prime44 = prime - 43\n            val prime45\
    \ = prime - 44\n            val prime46 = prime - 45\n            val prime47\
    \ = prime - 46\n            val prime48 = prime - 47\n            val prime49\
    \ = prime - 48\n            val prime50 = prime - 49", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            }\n            else {\n          \
    \      return \"YES\"\n            }\n        }\n        val prime = length /\
    \ length2\n        if (prime == 0) {\n            return \"NO\"\n        }\n \
    \       if (prime == 1) {\n            return \"YES\"\n        }\n        if (prime\
    \ == 2) {\n            if (length < length2) {\n                return \"NO\"\n\
    \            }\n            else {\n                return \"YES\"\n         \
    \   }\n        }\n        if (prime == 3) {\n            if (length < length2)\
    \ {\n                return \"NO\"\n            }\n            else {\n      \
    \          return \"YES\"\n            }\n        }\n        if (prime == 4) {\n\
    \            if (length < length2) {\n                return \"NO\"\n        \
    \    }\n            else {\n                return \"YES\"\n            }\n  \
    \      }\n        if (prime == 5) {\n            if (length < length2) {\n   \
    \             return \"NO\"\n            }\n            else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (prime == 6) {\n    \
    \        if (length < length2) {\n                return \"NO\"\n            }\n\
    \            else {\n                return \"YES\"\n            }\n        }\n\
    \        if (prime == 7) {\n            if (length < length2) {\n            \
    \    return \"NO\"\n            }\n            else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (prime == 8) {\n            if\
    \ (length < length2) {\n                return \"NO\"\n            }\n       \
    \     else {\n                return \"YES\"\n            }\n        }\n     \
    \   if (prime == 9) {\n            if (length < length2) {\n                return\
    \ \"NO\"\n            }\n            else {\n                return \"YES\"\n\
    \            }\n        }\n        if (prime == 10) {\n            if (length\
    \ < length2) {\n                return \"NO\"\n            }\n            else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (prime\
    \ == 11) {\n            if (length < length2) {\n                return \"NO\"\
    \n            }\n            else {\n                return \"YES\"\n        \
    \    }\n        }\n        if (prime == 12) {\n            if (length < length2)\
    \ {\n                return \"NO\"\n            }\n            else {\n      \
    \          return \"YES\"\n            }\n        }\n        if (prime == 13)\
    \ {\n            if (length < length2) {\n                return \"NO\"\n    \
    \        }\n            else {\n                return \"YES\"\n            }\n\
    \        }\n        if (prime == 14) {\n            if (length < length2) {\n\
    \                return \"NO\"\n            }\n            else {\n          \
    \      return \"YES\"\n            }\n        }\n        if (prime == 15) {\n\
    \            if (length < length2) {\n                return \"NO\"\n        \
    \    }\n            else {\n                return ", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start < end2 && start2 < end) {\n         \
    \   val start3 = start2\n            val end3 = end2\n            val start4 =\
    \ start\n            val end4 = end\n            val start5 = start3\n       \
    \     val end5 = end3\n            val start6 = start4\n            val end6 =\
    \ end4\n            val start7 = start5\n            val end7 = end5\n       \
    \     val start8 = start6\n            val end8 = end6\n            val start9\
    \ = start7\n            val end9 = end7\n            val start10 = start8\n  \
    \          val end10 = end8\n            val start11 = start9\n            val\
    \ end11 = end9\n            val start12 = start10\n            val end12 = end10\n\
    \            val start13 = start11\n            val end13 = end11\n          \
    \  val start14 = start12\n            val end14 = end12\n            val start15\
    \ = start13\n            val end15 = end13\n            val start16 = start14\n\
    \            val end16 = end14\n            val start17 = start15\n          \
    \  val end17 = end15\n            val start18 = start16\n            val end18\
    \ = end16\n            val start19 = start17\n            val end19 = end17\n\
    \            val start20 = start18\n            val end20 = end18\n          \
    \  val start21 = start19\n            val end21 = end19\n            val start22\
    \ = start20\n            val end22 = end20\n            val start23 = start21\n\
    \            val end23 = end21\n            val start24 = start22\n          \
    \  val end24 = end22\n            val start25 = start23\n            val end25\
    \ = end23\n            val start26 = start24\n            val end26 = end24\n\
    \            val start27 = start25\n            val end27 = end25\n          \
    \  val start28 = start26\n            val end28 = end26\n            val start29\
    \ = start27\n            val end29 = end27\n            val start30 = start28\n\
    \            val end30 = end28\n            val start31 = start29\n          \
    \  val end31 = end29\n            val start32 = start30\n            val end32\
    \ = end30\n            val start33 = start31\n            val end33 = end", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0 ||\
    \ length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length == 0 || length2 == 0) {\n            \"NO\"\n \
    \       } else if (length2 == 1) {\n            if (length == 1) {\n         \
    \       \"YES\"\n            } else {\n                \"NO\"\n            }\n\
    \        } else {\n            val mid = length / 2\n            val mid2 = length2\
    \ / 2\n            if (mid == mid2) {\n                if (mid % 2 == 0) {\n \
    \                   val mid3 = mid / 2\n                    if (mid3 == 1) {\n\
    \                        \"YES\"\n                    } else {\n             \
    \           \"NO\"\n                    }\n                } else {\n        \
    \            \"NO\"\n                }\n            } else {\n               \
    \ if (mid % 2 == 0) {\n                    val mid3 = mid / 2\n              \
    \      if (mid3 == 1) {\n                        \"NO\"\n                    }\
    \ else {\n                        \"YES\"\n                    }\n           \
    \     } else {\n                    \"YES\"\n                }\n            }\n\
    \        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) \"NO\" else \"YES\"\n        } else {\n\
    \            if (length == 0) \"NO\" else \"YES\"\n        }", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = start2\n        val end3 = end2\n        val start4 = start\n\
    \        val end4 = end\n        val start5 = start3\n        val end5 = end3\n\
    \        val start6 = start4\n        val end6 = end4\n        val start7 = start5\n\
    \        val end7 = end5\n        val start8 = start6\n        val end8 = end6\n\
    \        val start9 = start7\n        val end9 = end7\n        val start10 = start8\n\
    \        val end10 = end8\n        val start11 = start9\n        val end11 = end9\n\
    \        val start12 = start10\n        val end12 = end10\n        val start13\
    \ = start11\n        val end13 = end11\n        val start14 = start12\n      \
    \  val end14 = end12\n        val start15 = start13\n        val end15 = end13\n\
    \        val start16 = start14\n        val end16 = end14\n        val start17\
    \ = start15\n        val end17 = end15\n        val start18 = start16\n      \
    \  val end18 = end16\n        val start19 = start17\n        val end19 = end17\n\
    \        val start20 = start18\n        val end20 = end18\n        val start21\
    \ = start19\n        val end21 = end19\n        val start22 = start20\n      \
    \  val end22 = end20\n        val start23 = start21\n        val end23 = end21\n\
    \        val start24 = start22\n        val end24 = end22\n        val start25\
    \ = start23\n        val end25 = end23\n        val start26 = start24\n      \
    \  val end26 = end24\n        val start27 = start25\n        val end27 = end25\n\
    \        val start28 = start26\n        val end28 = end26\n        val start29\
    \ = start27\n        val end29 = end27\n        val start30 = start28\n      \
    \  val end30 = end28\n        val start31 = start29\n        val end31 = end29\n\
    \        val start32 = start30\n        val end32 = end30\n        val start33\
    \ = start31\n        val end33 = end31\n        val start34 = start32\n", "  \
    \      val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.max(start,\
    \ start2)\n        val end = math.min(end, end2)\n        val length = end - start\n\
    \        val isPrime = length == 2 || length == 3 && start % length == 0 && end\
    \ % length == 0\n        if (isPrime) {\n            \"YES\"\n        } else {\n\
    \            \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) {\n            val start3 = start2\n\
    \            val end3 = end2\n            val start4 = start\n            val\
    \ end4 = end\n            if (start3 < end4 && start4 < end3) {\n            \
    \    val start5 = start3\n                val end5 = end3\n                val\
    \ start6 = start4\n                val end6 = end4\n                if (start5\
    \ < end6 && start6 < end5) {\n                    val start7 = start5\n      \
    \              val end7 = end5\n                    val start8 = start6\n    \
    \                val end8 = end6\n                    if (start7 < end8 && start8\
    \ < end7) {\n                        val start9 = start7\n                   \
    \     val end9 = end7\n                        val start10 = start8\n        \
    \                val end10 = end8\n                        if (start9 < end10\
    \ && start10 < end9) {\n                            val start11 = start9\n   \
    \                         val end11 = end9\n                            val start12\
    \ = start10\n                            val end12 = end10\n                 \
    \           if (start11 < end12 && start12 < end11) {\n                      \
    \          val start13 = start11\n                                val end13 =\
    \ end11\n                                val start14 = start12\n             \
    \                   val end14 = end12\n                                if (start13\
    \ < end14 && start14 < end13) {\n                                    val start15\
    \ = start13\n                                    val end15 = end13\n         \
    \                           val start16 = start14\n                          \
    \          val end16 = end14\n                                    if (start15\
    \ < end16 && start16 < end15) {\n                                        val start17\
    \ = start15\n                                        val end17 = end15\n     \
    \                                   val start18 = start16\n                  \
    \                      val end18 = end16\n                                   \
    \     if (start17 < end18 && start18 < end17) {\n                            \
    \                val start19 = start17\n                                     \
    \       val end19 = end17\n                                            val start20\
    \ = start18\n                                            val end20 = end18\n \
    \                                           if (start19 < end20 && start20 < end19)\
    \ {\n                                                return \"YES\"\n        \
    \                                    }\n                                     \
    \   }\n                                    }\n                               \
    \ }\n                            }\n                        }\n              \
    \      }\n                }\n            }\n        }\n        \"NO\"", "    \
    \    val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMin = math.min(start, start2)\n        val startMax = math.max(start,\
    \ start2)\n        val endMin = math.min(end, end2)\n        val endMax = math.max(end,\
    \ end2)\n        val intersection = startMax - startMin + endMax - endMin\n  \
    \      if (intersection == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) \"NO\"\
    \ else \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        if (start == start2 && end == end2) {\n            return \"YES\"\n \
    \       }\n        if (start == start2 && end != end2) {\n            return \"\
    NO\"\n        }\n        if (start != start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start != start2 && end != end2) {\n         \
    \   val start3 = start2\n            val end3 = end2\n            val start4 =\
    \ start\n            val end4 = end\n            val start5 = start3\n       \
    \     val end5 = end3\n            val start6 = start4\n            val end6 =\
    \ end4\n            val start7 = start5\n            val end7 = end5\n       \
    \     val start8 = start6\n            val end8 = end6\n            val start9\
    \ = start7\n            val end9 = end7\n            val start10 = start8\n  \
    \          val end10 = end8\n            val start11 = start9\n            val\
    \ end11 = end9\n            val start12 = start10\n            val end12 = end10\n\
    \            val start13 = start11\n            val end13 = end11\n          \
    \  val start14 = start12\n            val end14 = end12\n            val start15\
    \ = start13\n            val end15 = end13\n            val start16 = start14\n\
    \            val end16 = end14\n            val start17 = start15\n          \
    \  val end17 = end15\n            val start18 = start16\n            val end18\
    \ = end16\n            val start19 = start17\n            val end19 = end17\n\
    \            val start20 = start18\n            val end20 = end18\n          \
    \  val start21 = start19\n            val end21 = end19\n            val start22\
    \ = start20\n            val end22 = end20\n            val start23 = start21\n\
    \            val end23 = end21\n            val start24 = start22\n          \
    \  val end24 = end22\n            val start25 = start23\n            val end25\
    \ = end23\n            val start26 = start24\n            val end26 = end24\n\
    \            val start27 = start25\n            val end27 = end25\n", "      \
    \  val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) \"NO\"\
    \ else (length == length2 ? \"YES\" : \"NO\")", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval2._1\n        val start2 = interval2._2\n\
    \        val end2 = interval2._2\n        val start1 = interval1._2\n        val\
    \ end1 = interval1._2\n        val start3 = interval1._2\n        val end3 = interval1._2\n\
    \        val start4 = interval1._2\n        val end4 = interval1._2\n        val\
    \ start5 = interval1._2\n        val end5 = interval1._2\n        val start6 =\
    \ interval1._2\n        val end6 = interval1._2\n        val start7 = interval1._2\n\
    \        val end7 = interval1._2\n        val start8 = interval1._2\n        val\
    \ end8 = interval1._2\n        val start9 = interval1._2\n        val end9 = interval1._2\n\
    \        val start10 = interval1._2\n        val end10 = interval1._2\n      \
    \  val start11 = interval1._2\n        val end11 = interval1._2\n        val start12\
    \ = interval1._2\n        val end12 = interval1._2\n        val start13 = interval1._2\n\
    \        val end13 = interval1._2\n        val start14 = interval1._2\n      \
    \  val end14 = interval1._2\n        val start15 = interval1._2\n        val end15\
    \ = interval1._2\n        val start16 = interval1._2\n        val end16 = interval1._2\n\
    \        val start17 = interval1._2\n        val end17 = interval1._2\n      \
    \  val start18 = interval1._2\n        val end18 = interval1._2\n        val start19\
    \ = interval1._2\n        val end19 = interval1._2\n        val start20 = interval1._2\n\
    \        val end20 = interval1._2\n        val start21 = interval1._2\n      \
    \  val end21 = interval1._2\n        val start22 = interval1._2\n        val end22\
    \ = interval1._2\n        val start23 = interval1._2\n        val end23 = interval1._2\n\
    \        val start24 = interval1._2\n        val end24 = interval1._2\n      \
    \  val start25 = interval1._2\n        val end25 = interval1._2\n        val start26\
    \ = interval1._2\n        val end26 = interval1._2\n        val start27 = interval1._2\n\
    \        val end27 = interval1._2\n        val start28 = interval1._2\n      \
    \  val end28 = interval1._2\n        val start29 = interval1._2\n        val end29\
    \ = interval1._2\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        if (start == start2 && end == end2) {\n            return \"NO\"\n  \
    \      }\n        if (start > start2 && end < end2) {\n            return \"NO\"\
    \n        }\n        if (start < start2 && end > end2) {\n            return \"\
    NO\"\n        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end < end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start2 && end > end2) {\n    \
    \        return \"NO\"\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start < start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start == start2\
    \ && end == end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end < end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start == start2 && end == end2) {\n            return \"NO\"\n        }\n \
    \       if (start > start2 && end < end2) {\n            return \"NO\"\n     \
    \   }\n        if (start < start2 && end > end2) {\n            return \"NO\"\n\
    \        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end < end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start2 && end > end2) {\n    \
    \        return \"NO\"\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start < start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start == start2\
    \ && end == end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end < end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start == start2 && end == end2) {\n            return \"NO\"\n        }\n \
    \       if (start > start2 && end < end2) {\n            return \"NO\"\n     \
    \   }\n        if (start < start2 && end > end2) {\n            return \"NO\"\n\
    \        }\n        if (start == start", "        val start = interval1._1\n \
    \       val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length2 == 1) {\n            if (length\
    \ == 1) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length == 1) {\n   \
    \         if (length2 == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 1) {\n            if (length == 1) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length == 1) {\n            if (length2 == 0) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (length2 == 1) {\n            if (length == 1)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length == 1) {\n            if\
    \ (length2 == 0) {\n                return \"NO\"\n            } else {\n    \
    \            return \"YES\"\n            }\n        }\n        if (length2 ==\
    \ 1) {\n            if (length == 1) {\n                return \"NO\"\n      \
    \      } else {\n                return \"YES\"\n            }\n        }\n  \
    \      if (length == 1) {\n            if (length2 == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length2 == 1) {\n            if (length == 1) {\n    \
    \            return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length == 1) {\n            if (length2\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 == 1) {\n  \
    \          if (length == 1) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 1) {\n            if (length2 == 0) {\n                return \"NO\"\n  \
    \          } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 == 1) {\n            if (length == 1) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (length == 1) {\n            if (length2 == 0)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length2 == 1) {\n           \
    \ if (length == 1) {\n                return \"NO\"\n            } else {\n  \
    \              return \"YES\"\n            }\n        }\n        if (length ==\
    \ 1) {\n            if (length2 == 0) {\n                return \"NO\"\n     \
    \       } else {\n                return \"YES\"\n            }\n        }\n \
    \       if (length2 == 1) {\n            if (length == 1) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            val start3 = start2\n        \
    \    val end3 = end2\n            val start4 = start\n            val end4 = end\n\
    \            val start5 = start3\n            val end5 = end3\n            val\
    \ start6 = start4\n            val end6 = end4\n            val start7 = start5\n\
    \            val end7 = end5\n            val start8 = start6\n            val\
    \ end8 = end6\n            val start9 = start7\n            val end9 = end7\n\
    \            val start10 = start8\n            val end10 = end8\n            val\
    \ start11 = start9\n            val end11 = end9\n            val start12 = start10\n\
    \            val end12 = end10\n            val start13 = start11\n          \
    \  val end13 = end11\n            val start14 = start12\n            val end14\
    \ = end12\n            val start15 = start13\n            val end15 = end13\n\
    \            val start16 = start14\n            val end16 = end14\n          \
    \  val start17 = start15\n            val end17 = end15\n            val start18\
    \ = start16\n            val end18 = end16\n            val start19 = start17\n\
    \            val end19 = end17\n            val start20 = start18\n          \
    \  val end20 = end18\n            val start21 = start19\n            val end21\
    \ = end19\n            val start22 = start20\n            val end22 = end20\n\
    \            val start23 = start21\n            val end23 = end21\n          \
    \  val start24 = start22\n            val end24 = end22\n            val start25\
    \ = start23\n            val end25 = end23\n            val start26 = start24\n\
    \            val end26 = end24\n            val start27 = start25\n          \
    \  val end27 = end25\n            val start28 = start26\n            val end28\
    \ = end26\n            val start29 = start27\n            val end29 = end27\n\
    \            val start30 = start28\n            val end30 = end28\n          \
    \  val start31 = start29\n            val end31 = end29\n            val start32\
    \ = start30\n            val end32 = end30\n            val start33 = start31\n\
    \            val end33 = end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0) {\n            return \"NO\"\n        }\n\
    \        if (length == 1) {\n            return \"YES\"\n        }\n        if\
    \ (length2 == 1) {\n            return \"YES\"\n        }\n        if (length\
    \ == length2) {\n            return \"YES\"\n        }\n        if (length < length2)\
    \ {\n            return \"NO\"\n        }\n        if (length2 < length) {\n \
    \           return \"NO\"\n        }\n        if (length < length2) {\n      \
    \      return \"NO\"\n        }\n        if (length2 < length) {\n           \
    \ return \"NO\"\n        }\n        if (length < length2) {\n            return\
    \ \"NO\"\n        }\n        if (length2 < length) {\n            return \"NO\"\
    \n        }\n        if (length2 < length) {\n            return \"NO\"\n    \
    \    }\n        if (length2 < length) {\n            return \"NO\"\n        }\n\
    \        if (length2 < length) {\n            return \"NO\"\n        }\n     \
    \   if (length2 < length) {\n            return \"NO\"\n        }\n        if\
    \ (length2 < length) {\n            return \"NO\"\n        }\n        if (length2\
    \ < length) {\n            return \"NO\"\n        }\n        if (length2 < length)\
    \ {\n            return \"NO\"\n        }\n        if (length2 < length) {\n \
    \           return \"NO\"\n        }\n        if (length2 < length) {\n      \
    \      return \"NO\"\n        }\n        if (length2 < length) {\n           \
    \ return \"NO\"\n        }\n        if (length2 < length) {\n            return\
    \ \"NO\"\n        }\n        if (length2 < length) {\n            return \"NO\"\
    \n        }\n        if (length2 < length) {\n            return \"NO\"\n    \
    \    }\n        if (length2 < length) {\n            return \"NO\"\n        }\n\
    \        if (length2 < length) {\n            return \"NO\"\n        }\n     \
    \   if (length2 < length) {\n            return \"NO\"\n        }\n        if\
    \ (length2 < length) {\n            return \"NO\"\n        }\n        if (length2\
    \ < length) {\n            return \"NO\"\n        }\n        if (length2 < length)\
    \ {\n            return \"NO\"\n        }\n        if (length2 < length) {\n \
    \           return \"NO\"\n        }\n        if (length2 < length) {\n      \
    \      return \"NO\"\n        }\n        if (length2 < length) {\n           \
    \ return \"NO\"\n        }\n        if (length2 < length) {\n            return\
    \ \"NO\"\n        }\n        if (length2 < length) {\n            return \"NO\"\
    \n        }\n        if (length2 < length) {\n            return \"NO\"\n    \
    \    }\n        if (length2 < length) {\n            return \"NO\"\n        }\n\
    \        if (length2 < length) {\n", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ math.min(start, start2)\n        val end = math.max(end, end2)\n        val\
    \ length = end - start\n        val isPrime = length == 2 || length == 3 && start\
    \ % length == 0 && end % length == 0\n        if (isPrime) {\n            \"YES\"\
    \n        } else {\n            \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start < end2 &&\
    \ start2 < end) {\n            val start3 = start2\n            val end3 = end2\n\
    \            val start4 = start\n            val end4 = end\n            val start5\
    \ = start3\n            val end5 = end3\n            val start6 = start4\n   \
    \         val end6 = end4\n            val start7 = start5\n            val end7\
    \ = end5\n            val start8 = start6\n            val end8 = end6\n     \
    \       val start9 = start7\n            val end9 = end7\n            val start10\
    \ = start8\n            val end10 = end8\n            val start11 = start9\n \
    \           val end11 = end9\n            val start12 = start10\n            val\
    \ end12 = end10\n            val start13 = start11\n            val end13 = end11\n\
    \            val start14 = start12\n            val end14 = end12\n          \
    \  val start15 = start13\n            val end15 = end13\n            val start16\
    \ = start14\n            val end16 = end14\n            val start17 = start15\n\
    \            val end17 = end15\n            val start18 = start16\n          \
    \  val end18 = end16\n            val start19 = start17\n            val end19\
    \ = end17\n            val start20 = start18\n            val end20 = end18\n\
    \            val start21 = start19\n            val end21 = end19\n          \
    \  val start22 = start20\n            val end22 = end20\n            val start23\
    \ = start21\n            val end23 = end21\n            val start24 = start22\n\
    \            val end24 = end22\n            val start25 = start23\n          \
    \  val end25 = end23\n            val start26 = start24\n            val end26\
    \ = end24\n            val start27 = start25\n            val end27 = end25\n\
    \            val start28 = start26\n            val end28 = end26\n          \
    \  val start29 = start27\n            val end29 = end27\n            val start30\
    \ = start28\n            val end30 = end28\n            val start31 = start29\n\
    \            val end31 = end29\n            val start32 = start30\n          \
    \  val end32 = end30\n            val start33 = start31\n            val end33\
    \ = end", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = math.max(start, start2)\n        val end3 = math.min(end, end2)\n \
    \       val start4 = math.max(start, start3)\n        val end4 = math.min(end,\
    \ end3)\n        if (start4 < end4) {\n            if (end4 < start3) {\n    \
    \            if (end3 < start2) {\n                    if (end2 < start) {\n \
    \                       if (end1 < end) {\n                            return\
    \ \"NO\"\n                        } else {\n                            return\
    \ \"YES\"\n                        }\n                    } else {\n         \
    \               return \"YES\"\n                    }\n                } else\
    \ {\n                    return \"YES\"\n                }\n            } else\
    \ {\n                return \"YES\"\n            }\n        } else {\n       \
    \     return \"YES\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   val isPrime = length == 2 || length == length2\n        if (isPrime) {\n \
    \           return \"YES\"\n        } else {\n            return \"NO\"\n    \
    \    }", "        val start = interval1._1\n        val end = interval1._2\n \
    \       val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        val start3 = start2\n        val end3 = end2\n        val start4 = start\n\
    \        val end4 = end\n        val start5 = start3\n        val end5 = end3\n\
    \        val start6 = start4\n        val end6 = end4\n        val start7 = start5\n\
    \        val end7 = end5\n        val start8 = start6\n        val end8 = end6\n\
    \        val start9 = start7\n        val end9 = end7\n        val start10 = start8\n\
    \        val end10 = end8\n        val start11 = start9\n        val end11 = end9\n\
    \        val start12 = start10\n        val end12 = end10\n        val start13\
    \ = start11\n        val end13 = end11\n        val start14 = start12\n      \
    \  val end14 = end12\n        val start15 = start13\n        val end15 = end13\n\
    \        val start16 = start14\n        val end16 = end14\n        val start17\
    \ = start15\n        val end17 = end15\n        val start18 = start16\n      \
    \  val end18 = end16\n        val start19 = start17\n        val end19 = end17\n\
    \        val start20 = start18\n        val end20 = end18\n        val start21\
    \ = start19\n        val end21 = end19\n        val start22 = start20\n      \
    \  val end22 = end20\n        val start23 = start21\n        val end23 = end21\n\
    \        val start24 = start22\n        val end24 = end22\n        val start25\
    \ = start23\n        val end25 = end23\n        val start26 = start24\n      \
    \  val end26 = end24\n        val start27 = start25\n        val end27 = end25\n\
    \        val start28 = start26\n        val end28 = end26\n        val start29\
    \ = start27\n        val end29 = end27\n        val start30 = start28\n      \
    \  val end30 = end28\n        val start31 = start29\n        val ", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start3 = math.max(start, start2)\n\
    \        val end3 = math.min(end, end2)\n        val start4 = math.max(start,\
    \ start3)\n        val end4 = math.min(end, end3)\n        val start5 = math.max(start,\
    \ start4)\n        val end5 = math.min(end, end4)\n        val start6 = math.max(start,\
    \ start5)\n        val end6 = math.min(end, end5)\n        val start7 = math.max(start,\
    \ start6)\n        val end7 = math.min(end, end6)\n        val start8 = math.max(start,\
    \ start7)\n        val end8 = math.min(end, end7)\n        val start9 = math.max(start,\
    \ start8)\n        val end9 = math.min(end, end8)\n        val start10 = math.max(start,\
    \ start9)\n        val end10 = math.min(end, end9)\n        val start11 = math.max(start,\
    \ start10)\n        val end11 = math.min(end, end10)\n        val start12 = math.max(start,\
    \ start11)\n        val end12 = math.min(end, end11)\n        val start13 = math.max(start,\
    \ start12)\n        val end13 = math.min(end, end12)\n        val start14 = math.max(start,\
    \ start13)\n        val end14 = math.min(end, end13)\n        val start15 = math.max(start,\
    \ start14)\n        val end15 = math.min(end, end14)\n        val start16 = math.max(start,\
    \ start15)\n        val end16 = math.min(end, end15)\n        val start17 = math.max(start,\
    \ start16)\n        val end17 = math.min(end, end16)\n        val start18 = math.max(start,\
    \ start17)\n        val end18 = math.min(end, end17)\n        val start19 = math.max(start,\
    \ start18)\n        val end19 = math.min(end, end18)\n        val start20 = math.max(start,\
    \ start19)\n        val end20 = math.min(end, end19)\n        val start21 = math.max(start,\
    \ start20)\n        val end21 = math.min(end, end20)\n        val start22 = math.max(start,\
    \ start21)\n        val end22 = math.min(end, end21)\n        val start23 = math.max(start,\
    \ start22)\n        val end23 = math.min(end, end22)\n        val start24 = math.max(start,\
    \ start23)\n        val end24 = math.min(end, end23)\n        val start25 = math.max(start,\
    \ start24)\n        val end", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.max(start, start2)\n        val end = math.min(end,\
    \ end2)\n        val length = end - start\n        if (length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else intersection(interval1, interval2)",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start3 = start2\n\
    \        val end3 = end2\n        val start4 = start3\n        val end4 = end3\n\
    \        val start5 = start4\n        val end5 = end4\n        val start6 = start5\n\
    \        val end6 = end5\n        val start7 = start6\n        val end7 = end6\n\
    \        val start8 = start7\n        val end8 = end7\n        val start9 = start8\n\
    \        val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMinusEnd = end - start\n        val start2MinusEnd2\
    \ = end2 - start2\n        val startMinusEnd2 = start2 - start\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 1) {\n            if (length2 == 0) {\n                return \"NO\"\n  \
    \          } else {\n                return \"YES\"\n            }\n        }\n\
    \        val isPrime = length2 % length == 0\n        if (isPrime) {\n       \
    \     return \"YES\"\n        } else {\n            return \"NO\"\n        }",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start < end2 &&\
    \ start2 < end) {\n            val start3 = start2\n            val end3 = end2\n\
    \            val start4 = start\n            val end4 = end\n            val start5\
    \ = start3\n            val end5 = end3\n            val start6 = start4\n   \
    \         val end6 = end4\n            val start7 = start5\n            val end7\
    \ = end5\n            val start8 = start6\n            val end8 = end6\n     \
    \       val start9 = start7\n            val end9 = end7\n            val start10\
    \ = start8\n            val end10 = end8\n            val start11 = start9\n \
    \           val end11 = end9\n            val start12 = start10\n            val\
    \ end12 = end10\n            val start13 = start11\n            val end13 = end11\n\
    \            val start14 = start12\n            val end14 = end12\n          \
    \  val start15 = start13\n            val end15 = end13\n            val start16\
    \ = start14\n            val end16 = end14\n            val start17 = start15\n\
    \            val end17 = end15\n            val start18 = start16\n          \
    \  val end18 = end16\n            val start19 = start17\n            val end19\
    \ = end17\n            val start20 = start18\n            val end20 = end18\n\
    \            val start21 = start19\n            val end21 = end19\n          \
    \  val start22 = start20\n            val end22 = end20\n            val start23\
    \ = start21\n            val end23 = end21\n            val start24 = start22\n\
    \            val end24 = end22\n            val start25 = start23\n          \
    \  val end25 = end23\n            val start26 = start24\n            val end26\
    \ = end24\n            val start27 = start25\n            val end27 = end25\n\
    \            val start28 = start26\n            val end28 = end26\n          \
    \  val start29 = start27\n            val end29 = end27\n            val start30\
    \ = start28\n            val end30 = end28\n            val start31 = start29\n\
    \            val end31 = end29\n            val start32 = start30\n          \
    \  val end32 = end30\n            val start33 = start31\n            val end33\
    \ = end", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        val isPrime\
    \ = length2 % length == 0\n        if (isPrime) {\n            return \"YES\"\n\
    \        }\n        else {\n            return \"NO\"\n        }", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.min(start, start2)\n\
    \        val end = math.max(end, end2)\n        val length = end - start\n   \
    \     if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            \"NO\"\n        } else if\
    \ (length == length2) {\n            \"YES\"\n        } else {\n            val\
    \ start3 = start2 + 1\n            val end3 = end2 - 1\n            val start4\
    \ = start2 + 1\n            val end4 = end2 - 1\n            val start5 = start2\
    \ + 1\n            val end5 = end2 - 1\n            val start6 = start2 + 1\n\
    \            val end6 = end2 - 1\n            val start7 = start2 + 1\n      \
    \      val end7 = end2 - 1\n            val start8 = start2 + 1\n            val\
    \ end8 = end2 - 1\n            val start9 = start2 + 1\n            val end9 =\
    \ end2 - 1\n            val start10 = start2 + 1\n            val end10 = end2\
    \ - 1\n            val start11 = start2 + 1\n            val end11 = end2 - 1\n\
    \            val start12 = start2 + 1\n            val end12 = end2 - 1\n    \
    \        val start13 = start2 + 1\n            val end13 = end2 - 1\n        \
    \    val start14 = start2 + 1\n            val end14 = end2 - 1\n            val\
    \ start15 = start2 + 1\n            val end15 = end2 - 1\n            val start16\
    \ = start2 + 1\n            val end16 = end2 - 1\n            val start17 = start2\
    \ + 1\n            val end17 = end2 - 1\n            val start18 = start2 + 1\n\
    \            val end18 = end2 - 1\n            val start19 = start2 + 1\n    \
    \        val end19 = end2 - 1\n            val start20 = start2 + 1\n        \
    \    val end20 = end2 - 1\n            val start21 = start2 + 1\n            val\
    \ end21 = end2 - 1\n            val start22 = start2 + 1\n            val end22\
    \ = end2 - 1\n            val start23 = start2 + 1\n            val end23 = end2\
    \ - 1\n            val start24 = start2 + 1\n            val end24 = end2 - 1\n\
    \            val start25 = start2 + 1\n            val end25 = end2 - 1\n    \
    \        val start26 = start2 + 1\n            val end26 = end2 - 1\n        \
    \    val start27 = start2 + 1\n            val end27 = end2 - 1\n            val\
    \ start28 = start2 + 1\n            val end28", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length == 1) {\n            if (length2\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length2 == 1) {\n  \
    \          return \"NO\"\n        }\n        if (length == 2) {\n            if\
    \ (length2 == 2) {\n                return \"YES\"\n            } else {\n   \
    \             return \"NO\"\n            }\n        }\n        if (length == 2)\
    \ {\n            return \"NO\"\n        }\n        if (length == 3) {\n      \
    \      if (length2 == 3) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length\
    \ == 3) {\n            return \"NO\"\n        }\n        if (length == 4) {\n\
    \            if (length2 == 4) {\n                return \"YES\"\n           \
    \ } else {\n                return \"NO\"\n            }\n        }\n        if\
    \ (length == 4) {\n            return \"NO\"\n        }\n        if (length ==\
    \ 5) {\n            if (length2 == 5) {\n                return \"YES\"\n    \
    \        } else {\n                return \"NO\"\n            }\n        }\n \
    \       if (length == 5) {\n            return \"NO\"\n        }\n        if (length\
    \ == 6) {\n            if (length2 == 6) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length == 6) {\n            return \"NO\"\n        }\n        if\
    \ (length == 7) {\n            if (length2 == 7) {\n                return \"\
    YES\"\n            } else {\n                return \"NO\"\n            }\n  \
    \      }\n        if (length == 7) {\n            return \"NO\"\n        }\n \
    \       if (length == 8) {\n            if (length2 == 8) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length == 8) {\n            return \"NO\"\n        }\n\
    \        if (length == 9) {\n            if (length2 == 9) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length == 9) {\n            return \"NO\"\n \
    \       }\n        if (length == 10) {\n            if (length2 == 10) {\n   \
    \             return \"YES\"\n            } else {\n                return \"\
    NO\"\n            }\n        }\n        if (length == 10) {\n            return\
    \ \"NO\"\n        }\n        if (length == 11) {\n            if (length2 == 11)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 11) {\n            return\
    \ \"NO\"\n        }\n        if (length == 12) {\n            if (length2 == 12)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start < end2 && start2 < end) \n          \
    \  if (start < start2 && end < end2) \"YES\" else \"NO\"\n            else intersection(interval2,\
    \ interval1)\n        else intersection(interval1, interval2)", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            val start3 = start2\n        \
    \    val end3 = end2\n            val start4 = start\n            val end4 = end\n\
    \            val start5 = start3\n            val end5 = end3\n            val\
    \ start6 = start4\n            val end6 = end4\n            val start7 = start5\n\
    \            val end7 = end5\n            val start8 = start6\n            val\
    \ end8 = end6\n            val start9 = start7\n            val end9 = end7\n\
    \            val start10 = start8\n            val end10 = end8\n            val\
    \ start11 = start9\n            val end11 = end9\n            val start12 = start10\n\
    \            val end12 = end10\n            val start13 = start11\n          \
    \  val end13 = end11\n            val start14 = start12\n            val end14\
    \ = end12\n            val start15 = start13\n            val end15 = end13\n\
    \            val start16 = start14\n            val end16 = end14\n          \
    \  val start17 = start15\n            val end17 = end15\n            val start18\
    \ = start16\n            val end18 = end16\n            val start19 = start17\n\
    \            val end19 = end17\n            val start20 = start18\n          \
    \  val end20 = end18\n            val start21 = start19\n            val end21\
    \ = end19\n            val start22 = start20\n            val end22 = end20\n\
    \            val start23 = start21\n            val end23 = end21\n          \
    \  val start24 = start22\n            val end24 = end22\n            val start25\
    \ = start23\n            val end25 = end23\n            val start26 = start24\n\
    \            val end26 = end24\n            val start27 = start25\n          \
    \  val end27 = end25\n            val start28 = start26\n            val end28\
    \ = end26\n            val start29 = start27\n            val end29 = end27\n\
    \            val start30 = start28\n            val end30 = end28\n          \
    \  val start31 = start29\n            val end31 = end29\n            val start32\
    \ = start30\n            val end32 = end30\n            val start33 = start31\n\
    \            val end33 = end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val startMin = math.min(start, start2)\n\
    \        val startMax = math.max(start, start2)\n        val endMin = math.min(end,\
    \ end2)\n        val endMax = math.max(end, end2)\n        val startMin2 = math.min(start2,\
    \ end2)\n        val startMax2 = math.max(start2, end2)\n        val endMin2 =\
    \ math.min(end2, start2)\n        val endMax2 = math.max(end2, start2)\n     \
    \   val startMin3 = math.min(start2, end2)\n        val startMax3 = math.max(start2,\
    \ end2)\n        val endMin3 = math.min(end2, start2)\n        val endMax3 = math.max(end2,\
    \ start2)\n        val startMin4 = math.min(start2, end2)\n        val startMax4\
    \ = math.max(start2, end2)\n        val endMin4 = math.min(end2, start2)\n   \
    \     val endMax4 = math.max(end2, start2)\n        val startMin5 = math.min(start2,\
    \ end2)\n        val startMax5 = math.max(start2, end2)\n        val endMin5 =\
    \ math.min(end2, start2)\n        val endMax5 = math.max(end2, start2)\n     \
    \   val startMin6 = math.min(start2, end2)\n        val startMax6 = math.max(start2,\
    \ end2)\n        val endMin6 = math.min(end2, start2)\n        val endMax6 = math.max(end2,\
    \ start2)\n        val startMin7 = math.min(start2, end2)\n        val startMax7\
    \ = math.max(start2, end2)\n        val endMin7 = math.min(end2, start2)\n   \
    \     val endMax7 = math.max(end2, start2)\n        val startMin8 = math.min(start2,\
    \ end2)\n        val startMax8 = math.max(start2, end2)\n        val endMin8 =\
    \ math.min(end2, start2)\n        val endMax8 = math.max(end2, start2)\n     \
    \   val startMin9 = math.min(start2, end2)\n        val startMax9 = math.max(start2,\
    \ end2)\n        val endMin9 = math.min(end2, start2)\n        val endMax9 = math.max(end2,\
    \ start2)\n        val startMin10 = math.min(start2, end2)\n        val startMax10\
    \ = math.max(start2, end2)\n        val endMin10 = math.min(end2, start2)\n  \
    \      val endMax10 = math.max(end2, start2)\n        val startMin11 = math.",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.min(start,\
    \ start2)\n        val end = math.max(end, end2)\n        val length = end - start\n\
    \        val isPrime = length == 2 || length == 3 && length == math.ceil(length\
    \ / 2)\n        if (isPrime) {\n            return \"YES\"\n        } else {\n\
    \            return \"NO\"\n        }", "        val start = interval1._1\n  \
    \      val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0)\n            \"NO\"\n        else if (length == 1)\n            \"YES\"\
    \n        else if (length == 2 && start % 2 == 0 && end % 2 == 0)\n          \
    \  \"YES\"\n        else if (length == 2 && start % 2 == 0 && end % 2 == 1)\n\
    \            \"NO\"\n        else if (length == 2 && start % 2 == 1 && end % 2\
    \ == 0)\n            \"NO\"\n        else if (length == 2 && start % 2 == 1 &&\
    \ end % 2 == 1)\n            \"YES\"\n        else if (length == 2 && start %\
    \ 3 == 0 && end % 3 == 0)\n            \"YES\"\n        else if (length == 2 &&\
    \ start % 3 == 0 && end % 3 == 1)\n            \"NO\"\n        else if (length\
    \ == 2 && start % 3 == 1 && end % 3 == 0)\n            \"NO\"\n        else if\
    \ (length == 2 && start % 3 == 1 && end % 3 == 1)\n            \"YES\"\n     \
    \   else if (length == 2 && start % 5 == 0 && end % 5 == 0)\n            \"YES\"\
    \n        else if (length == 2 && start % 5 == 0 && end % 5 == 1)\n          \
    \  \"NO\"\n        else if (length == 2 && start % 5 == 1 && end % 5 == 0)\n \
    \           \"NO\"\n        else if (length == 2 && start % 5 == 1 && end % 5\
    \ == 1)\n            \"YES\"\n        else if (length == 2 && start % 7 == 0 &&\
    \ end % 7 == 0)\n            \"YES\"\n        else if (length == 2 && start %\
    \ 7 == 0 && end % 7 == 1)\n            \"NO\"\n        else if (length == 2 &&\
    \ start % 7 == 1 && end % 7 == 0)\n            \"NO\"\n        else if (length\
    \ == 2 && start % 7 == 1 && end % 7 == 1)\n            \"YES\"\n        else if\
    \ (length == 2 && start % 11 == 0 && end % 11 == 0)\n            \"YES\"\n   \
    \     else if (length == 2 && start % 11 == 0 && end % 11 == 1)\n            \"\
    NO\"\n        else if (length == 2 && start % 11 == 1 && end % 11 == 0)\n    \
    \        \"NO\"\n        else if (length == 2 && start % 11 == 1 && end % 11 ==\
    \ 1)\n            \"YES\"\n        else if (length == 2 && start % 13 == 0 &&\
    \ end % 13 == 0)\n            \"YES\"\n        else if (length == 2 && start %\
    \ 13 == 0 && end % 13 == 1)\n            \"NO\"\n        else if (length == 2\
    \ && start % 13 == 1 && end % 13 == 0)\n            \"NO\"\n        else if (length\
    \ == 2 && start % 13 == 1 && end % 13 == 1)\n            \"YES\"\n", "       \
    \ val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) {\n            val start3 = start2\n\
    \            val end3 = end2\n            val start4 = start\n            val\
    \ end4 = end\n            val start5 = start3\n            val end5 = end3\n \
    \           val start6 = start4\n            val end6 = end4\n            val\
    \ start7 = start5\n            val end7 = end5\n            val start8 = start6\n\
    \            val end8 = end6\n            val start9 = start7\n            val\
    \ end9 = end7\n            val start10 = start8\n            val end10 = end8\n\
    \            val start11 = start9\n            val end11 = end9\n            val\
    \ start12 = start10\n            val end12 = end10\n            val start13 =\
    \ start11\n            val end13 = end11\n            val start14 = start12\n\
    \            val end14 = end12\n            val start15 = start13\n          \
    \  val end15 = end13\n            val start16 = start14\n            val end16\
    \ = end14\n            val start17 = start15\n            val end17 = end15\n\
    \            val start18 = start16\n            val end18 = end16\n          \
    \  val start19 = start17\n            val end19 = end17\n            val start20\
    \ = start18\n            val end20 = end18\n            val start21 = start19\n\
    \            val end21 = end19\n            val start22 = start20\n          \
    \  val end22 = end20\n            val start23 = start21\n            val end23\
    \ = end21\n            val start24 = start22\n            val end24 = end22\n\
    \            val start25 = start23\n            val end25 = end23\n          \
    \  val start26 = start24\n            val end26 = end24\n            val start27\
    \ = start25\n            val end27 = end25\n            val start28 = start26\n\
    \            val end28 = end26\n            val start29 = start27\n          \
    \  val end29 = end27\n            val start30 = start28\n            val end30\
    \ = end28\n            val start31 = start29\n            val end31 = end29\n\
    \            val start32 = start30\n            val end32 = end30\n          \
    \  val start33 = start31\n            val end33 = end", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        val isPrime = length ==\
    \ 2 || length == 3 && isPrime(length2)\n        if(isPrime) {\n            return\
    \ \"YES\"\n        } else {\n            return \"NO\"\n        }", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start3 =\
    \ start2\n        val end3 = end2\n        val start4 = start3\n        val end4\
    \ = end3\n        val start5 = start4\n        val end5 = end4\n        val start6\
    \ = start5\n        val end6 = end5\n        val start7 = start6\n        val\
    \ end7 = end6\n        val start8 = start7\n        val end8 = end7\n        val\
    \ start9 = start8\n        val end9 = end8\n        val start10 = start9\n   \
    \     val end10 = end9\n        val start11 = start10\n        val end11 = end10\n\
    \        val start12 = start11\n        val end12 = end11\n        val start13\
    \ = start12\n        val end13 = end12\n        val start14 = start13\n      \
    \  val end14 = end13\n        val start15 = start14\n        val end15 = end14\n\
    \        val start16 = start15\n        val end16 = end15\n        val start17\
    \ = start16\n        val end17 = end16\n        val start18 = start17\n      \
    \  val end18 = end17\n        val start19 = start18\n        val end19 = end18\n\
    \        val start20 = start19\n        val end20 = end19\n        val start21\
    \ = start20\n        val end21 = end20\n        val start22 = start21\n      \
    \  val end22 = end21\n        val start23 = start22\n        val end23 = end22\n\
    \        val start24 = start23\n        val end24 = end23\n        val start25\
    \ = start24\n        val end25 = end24\n        val start26 = start25\n      \
    \  val end26 = end25\n        val start27 = start26\n        val end27 = end26\n\
    \        val start28 = start27\n        val end28 = end27\n        val start29\
    \ = start28\n        val end29 = end28\n        val start30 = start29\n      \
    \  val end30 = end29\n        val start31 = start30\n        val end31 = end30\n\
    \        val start32 = start31\n        val end32 = end31\n        val start33\
    \ = start32\n        val end33 = end32\n        val start34 = start", "      \
    \  val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val startMinusEnd = start - end\n  \
    \      val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2 = start\
    \ - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd2 = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd\
    \ = start - end\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - ", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 == 1) {\n  \
    \          if (length == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        val primes\
    \ = mutable.ListBuffer[Long]()\n        val primes2 = mutable.ListBuffer[Long]()\n\
    \        val primes3 = mutable.ListBuffer[Long]()\n        val primes4 = mutable.ListBuffer[Long]()\n\
    \        val primes5 = mutable.ListBuffer[Long]()\n        val primes6 = mutable.ListBuffer[Long]()\n\
    \        val primes7 = mutable.ListBuffer[Long]()\n        val primes8 = mutable.ListBuffer[Long]()\n\
    \        val primes9 = mutable.ListBuffer[Long]()\n        val primes10 = mutable.ListBuffer[Long]()\n\
    \        val primes11 = mutable.ListBuffer[Long]()\n        val primes12 = mutable.ListBuffer[Long]()\n\
    \        val primes13 = mutable.ListBuffer[Long]()\n        val primes14 = mutable.ListBuffer[Long]()\n\
    \        val primes15 = mutable.ListBuffer[Long]()\n        val primes16 = mutable.ListBuffer[Long]()\n\
    \        val primes17 = mutable.ListBuffer[Long]()\n        val primes18 = mutable.ListBuffer[Long]()\n\
    \        val primes19 = mutable.ListBuffer[Long]()\n        val primes20 = mutable.ListBuffer[Long]()\n\
    \        val primes21 = mutable.ListBuffer[Long]()\n        val primes22 = mutable.ListBuffer[Long]()\n\
    \        val primes23 = mutable.ListBuffer[Long]()\n        val primes24 = mutable.ListBuffer[Long]()\n\
    \        val primes25 = mutable.ListBuffer[Long]()\n        val primes26 = mutable.ListBuffer[Long]()\n\
    \        val primes27 = mutable.ListBuffer[Long]()\n        val primes28 = mutable.ListBuffer[Long]()\n\
    \        val primes29 = mutable.ListBuffer[", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        val prime = length / length2\n      \
    \  if (prime == 0) {\n            return \"NO\"\n        }\n        if (prime\
    \ == 1) {\n            return \"YES\"\n        }\n        if (prime == 2) {\n\
    \            if (length < length2) {\n                return \"YES\"\n       \
    \     } else {\n                return \"NO\"\n            }\n        }\n    \
    \    if (prime == 3) {\n            if (length < length2) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (prime == 4) {\n            if (length < length2) {\n \
    \               return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (prime == 5) {\n            if (length\
    \ < length2) {\n                return \"YES\"\n            } else {\n       \
    \         return \"NO\"\n            }\n        }\n        if (prime == 6) {\n\
    \            if (length < length2) {\n                return \"NO\"\n        \
    \    } else {\n                return \"YES\"\n            }\n        }\n    \
    \    if (prime == 7) {\n            if (length < length2) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (prime == 8) {\n            if (length < length2) {\n \
    \               return \"YES\"\n            } else {\n                return \"\
    NO\"\n            }\n        }\n        if (prime == 9) {\n            if (length\
    \ < length2) {\n                return \"NO\"\n            } else {\n        \
    \        return \"YES\"\n            }\n        }\n        if (prime == 10) {\n\
    \            if (length < length2) {\n                return \"YES\"\n       \
    \     } else {\n                return \"NO\"\n            }\n        }\n    \
    \    if (prime == 11) {\n            if (length < length2) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (prime == 12) {\n            if (length < length2)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (prime == 13) {\n            if\
    \ (length < length2) {\n                return \"NO\"\n            } else {\n\
    \                return \"YES\"\n            }\n        }\n        if (prime ==\
    \ 14) {\n            if (length < length2) {\n                return \"YES\"\n\
    \            } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (prime == 15) {\n            if (length < length2) {\n           \
    \     return \"NO\"\n            } else {\n                return \"YES\"\n  \
    \          }\n        }\n        if (prime == 16) {\n            if (length <\
    \ length2) {\n                return \"YES\"\n            } else {\n         \
    \       return \"NO", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            val start3 = start2\n        \
    \    val end3 = end2\n            val start4 = start\n            val end4 = end\n\
    \            val start5 = start3\n            val end5 = end3\n            val\
    \ start6 = start4\n            val end6 = end4\n            val start7 = start5\n\
    \            val end7 = end5\n            val start8 = start6\n            val\
    \ end8 = end6\n            val start9 = start7\n            val end9 = end7\n\
    \            val start10 = start8\n            val end10 = end8\n            val\
    \ start11 = start9\n            val end11 = end9\n            val start12 = start10\n\
    \            val end12 = end10\n            val start13 = start11\n          \
    \  val end13 = end11\n            val start14 = start12\n            val end14\
    \ = end12\n            val start15 = start13\n            val end15 = end13\n\
    \            val start16 = start14\n            val end16 = end14\n          \
    \  val start17 = start15\n            val end17 = end15\n            val start18\
    \ = start16\n            val end18 = end16\n            val start19 = start17\n\
    \            val end19 = end17\n            val start20 = start18\n          \
    \  val end20 = end18\n            val start21 = start19\n            val end21\
    \ = end19\n            val start22 = start20\n            val end22 = end20\n\
    \            val start23 = start21\n            val end23 = end21\n          \
    \  val start24 = start22\n            val end24 = end22\n            val start25\
    \ = start23\n            val end25 = end23\n            val start26 = start24\n\
    \            val end26 = end24\n            val start27 = start25\n          \
    \  val end27 = end25\n            val start28 = start26\n            val end28\
    \ = end26\n            val start29 = start27\n            val end29 = end27\n\
    \            val start30 = start28\n            val end30 = end28\n          \
    \  val start31 = start29\n            val end31 = end29\n            val start32\
    \ = start30\n            val end32 = end30\n            val start33 = start31\n\
    \            val end33 = end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\"\n        else if (length2 == 1) \"\
    YES\"\n        else if (length == 1) \"NO\"\n        else if (length == 2) \"\
    YES\"\n        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        val isPrime = length == length2\n        if (isPrime) {\n\
    \            return \"YES\"\n        }\n        else {\n            return \"\
    NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        if (start == start2 && end == end2) {\n            return \"NO\"\n  \
    \      }\n        val length = end - start\n        val length2 = end2 - start2\n\
    \        if (length == length2) {\n            if (length == 1) {\n          \
    \      return \"YES\"\n            }\n            val prime = length\n       \
    \     val prime2 = length2\n            val prime3 = prime2\n            val prime4\
    \ = prime3\n            val prime5 = prime4\n            val prime6 = prime5\n\
    \            val prime7 = prime6\n            val prime8 = prime7\n          \
    \  val prime9 = prime8\n            val prime10 = prime9\n            val prime11\
    \ = prime10\n            val prime12 = prime11\n            val prime13 = prime12\n\
    \            val prime14 = prime13\n            val prime15 = prime14\n      \
    \      val prime16 = prime15\n            val prime17 = prime16\n            val\
    \ prime18 = prime17\n            val prime19 = prime18\n            val prime20\
    \ = prime19\n            val prime21 = prime20\n            val prime22 = prime21\n\
    \            val prime23 = prime22\n            val prime24 = prime23\n      \
    \      val prime25 = prime24\n            val prime26 = prime25\n            val\
    \ prime27 = prime26\n            val prime28 = prime27\n            val prime29\
    \ = prime28\n            val prime30 = prime29\n            val prime31 = prime30\n\
    \            val prime32 = prime31\n            val prime33 = prime32\n      \
    \      val prime34 = prime33\n            val prime35 = prime34\n            val\
    \ prime36 = prime35\n            val prime37 = prime36\n            val prime38\
    \ = prime37\n            val prime39 = prime38\n            val prime40 = prime39\n\
    \            val prime41 = prime40\n            val prime42 = prime41\n      \
    \      val prime43 = prime42\n            val prime44 = prime43\n            val\
    \ prime45 = prime44\n            val prime46 = prime45\n            val prime47\
    \ = prime46\n            val prime48 = prime47\n            val prime49 = prime48\n\
    \            val prime50 = prime49\n", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start >\
    \ end) {\n            val temp = start\n            start = end\n            end\
    \ = temp\n        }\n        if (start2 > end2) {\n            val temp = start2\n\
    \            start2 = end2\n            end2 = temp\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ == 1) {\n            if (length2 == 1) {\n                return \"YES\"\n \
    \           }\n            return \"NO\"\n        }\n        val primes = mutable.Set[Long]()\n\
    \        val primes2 = mutable.Set[Long]()\n        val primes3 = mutable.Set[Long]()\n\
    \        val primes4 = mutable.Set[Long]()\n        val primes5 = mutable.Set[Long]()\n\
    \        val primes6 = mutable.Set[Long]()\n        val primes7 = mutable.Set[Long]()\n\
    \        val primes8 = mutable.Set[Long]()\n        val primes9 = mutable.Set[Long]()\n\
    \        val primes10 = mutable.Set[Long]()\n        val primes11 = mutable.Set[Long]()\n\
    \        val primes12 = mutable.Set[Long]()\n        val primes13 = mutable.Set[Long]()\n\
    \        val primes14 = mutable.Set[Long]()\n        val primes15 = mutable.Set[Long]()\n\
    \        val primes16 = mutable.Set[Long]()\n        val primes17 = mutable.Set[Long]()\n\
    \        val primes18 = mutable.Set[Long]()\n        val primes19 = mutable.Set[Long]()\n\
    \        val primes20 = mutable.Set[Long]()\n        val primes21 = mutable.Set[Long]()\n\
    \        val primes22 = mutable.Set[Long]()\n        val primes23 = mutable.Set[Long]()\n\
    \        val primes24 = mutable.Set[Long]()\n        val primes25 = mutable.Set[Long]()\n\
    \        val primes26 = mutable.Set[Long]()\n        val primes27 = mutable.Set[Long]()\n\
    \        val primes28", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start3 = start2\n\
    \        val end3 = end2\n        val start4 = start\n        val end4 = end\n\
    \        val start5 = start3\n        val end5 = end3\n        val start6 = start4\n\
    \        val end6 = end4\n        val start7 = start5\n        val end7 = end5\n\
    \        val start8 = start6\n        val end8 = end6\n        val start9 = start7\n\
    \        val end9 = end7\n        val start10 = start8\n        val end10 = end8\n\
    \        val start11 = start9\n        val end11 = end9\n        val start12 =\
    \ start10\n        val end12 = end10\n        val start13 = start11\n        val\
    \ end13 = end11\n        val start14 = start12\n        val end14 = end12\n  \
    \      val start15 = start13\n        val end15 = end13\n        val start16 =\
    \ start14\n        val end16 = end14\n        val start17 = start15\n        val\
    \ end17 = end15\n        val start18 = start16\n        val end18 = end16\n  \
    \      val start19 = start17\n        val end19 = end17\n        val start20 =\
    \ start18\n        val end20 = end18\n        val start21 = start19\n        val\
    \ end21 = end19\n        val start22 = start20\n        val end22 = end20\n  \
    \      val start23 = start21\n        val end23 = end21\n        val start24 =\
    \ start22\n        val end24 = end22\n        val start25 = start23\n        val\
    \ end25 = end23\n        val start26 = start24\n        val end26 = end24\n  \
    \      val start27 = start25\n        val end27 = end25\n        val start28 =\
    \ start26\n        val end28 = end26\n        val start29 = start27\n        val\
    \ end29 = end27\n        val start30 = start28\n        val end30 = end28\n  \
    \      val start31 = start29\n        val end31 = end29\n        val start32 =\
    \ start30\n        val end32 = end30\n        val start33 = start31\n        val\
    \ end33 = end31\n        val start34 = start32\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) {\n            \"NO\"\
    \n        } else if (length == length2) {\n            \"YES\"\n        } else\
    \ {\n            val start3 = start2 + length\n            val end3 = end2 + length\n\
    \            val start4 = start2 + length2\n            val end4 = end2 + length2\n\
    \            if (start3 > end4) {\n                val temp = start3\n       \
    \         start3 = end4\n                end4 = temp\n            }\n        \
    \    if (start3 > end2) {\n                val temp = start3\n               \
    \ start3 = end2\n                end2 = temp\n            }\n            if (start4\
    \ > end3) {\n                val temp = start4\n                start4 = end3\n\
    \                end3 = temp\n            }\n            if (start4 > end2) {\n\
    \                val temp = start4\n                start4 = end2\n          \
    \      end2 = temp\n            }\n            if (start3 < end4) {\n        \
    \        val temp = start3\n                start3 = end4\n                end4\
    \ = temp\n            }\n            if (start3 < end2) {\n                val\
    \ temp = start3\n                start3 = end2\n                end2 = temp\n\
    \            }\n            if (start4 < end3) {\n                val temp = start4\n\
    \                start4 = end3\n                end3 = temp\n            }\n \
    \           if (start4 < end2) {\n                val temp = start4\n        \
    \        start4 = end2\n                end2 = temp\n            }\n         \
    \   if (start3 < end4) {\n                val temp = start3\n                start3\
    \ = end4\n                end4 = temp\n            }\n            if (start3 <\
    \ end2) {\n                val temp = start3\n                start3 = end2\n\
    \                end2 = temp\n            }\n            if (start4 < end3) {\n\
    \                val temp = start4\n                start4 = end3\n          \
    \      end3 = temp\n            }\n            if (start4 < end2) {\n        \
    \        val temp = start4\n                start4 = end2\n                end2\
    \ = temp\n            }\n            if (start3 < end4) {\n                val\
    \ temp = start3\n                start3 = end4\n                end4 = temp\n\
    \            }\n            if (start3 < end2) {\n                val temp = start3\n\
    \                start3 = end2\n                end2 = temp\n            }\n \
    \           if (start4 < end3) {\n                val temp = start4\n        \
    \        start4 = end3\n                end3 = temp\n            }\n         \
    \   if (start4 < end2) {\n                val temp = start4\n                start4\
    \ = end2\n                end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.min(start, start2)\n        val end = math.max(end,\
    \ end2)\n        val length = end - start\n        val isPrime = length == 2 ||\
    \ length == 3 && length != 1 && length != 0 && !(length == 1 && start == end)\n\
    \        if (isPrime) {\n            \"YES\"\n        } else {\n            \"\
    NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            \"NO\"\n        } else {\n            val\
    \ isPrime = length == length2\n            if (isPrime) {\n                \"\
    YES\"\n            } else {\n                val isPrime2 = length2 % length ==\
    \ 0\n                if (isPrime2) {\n                    \"YES\"\n          \
    \      } else {\n                    \"NO\"\n                }\n            }\n\
    \        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ end - start\n        val start2MinusEnd2 = end2 - start2\n        val startMinusEnd2\
    \ = start2 - start\n        val startMinusEnd2MinusEnd = start2MinusEnd2 - startMinusEnd\n\
    \        val startMinusEnd2MinusEnd2 = startMinusEnd2 - start2MinusEnd\n     \
    \   val startMinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd - startMinusEnd2MinusEnd\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2 = startMinusEnd2MinusEnd2 - startMinusEnd2MinusEnd2\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd2MinusEnd\
    \ - startMinusEnd2MinusEnd2MinusEnd2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2\
    \ = startMinusEnd2MinusEnd2MinusEnd2 - startMinusEnd2MinusEnd2MinusEnd2\n    \
    \    val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2\
    \ - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2 - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2 - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2\
    \ = startMinusEnd2Minus", "        val start = interval1._1\n        val end =\
    \ interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.min(start, start2)\n        val end = math.max(end,\
    \ end2)\n        val length = end - start\n        val isPrime = length == 2 ||\
    \ length == 3 || length == 5 || length == 7 || length == 11 || length == 13 ||\
    \ length == 17 || length == 23 || length == 29 || length == 37 || length == 43\
    \ || length == 49 || length == 57 || length == 73 || length == 79 || length ==\
    \ 87 || length == 97 || length == 113 || length == 127\n        if (isPrime) {\n\
    \            \"YES\"\n        } else {\n            \"NO\"\n        }", "    \
    \    val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 1) {\n            if (length == 1) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 == 2) {\n            if (length == 1) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length2 == 3) {\n            if (length == 1)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 4) {\n            if\
    \ (length == 1) {\n                return \"YES\"\n            } else {\n    \
    \            return \"NO\"\n            }\n        }\n        if (length2 == 5)\
    \ {\n            if (length == 1) {\n                return \"YES\"\n        \
    \    } else {\n                return \"NO\"\n            }\n        }\n     \
    \   if (length2 == 6) {\n            if (length == 1) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 7) {\n            if (length == 1) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length2 == 8) {\n            if (length\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length2 == 9) {\n  \
    \          if (length == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 10) {\n            if (length == 1) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 11) {\n            if (length == 1) {\n              \
    \  return \"YES\"\n            } else {\n                return \"NO\"\n     \
    \       }\n        }\n        if (length2 == 12) {\n            if (length ==\
    \ 1) {\n                return \"YES\"\n            } else {\n               \
    \ return \"NO\"\n            }\n        }\n        if (length2 == 13) {\n    \
    \        if (length == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 14) {\n            if (length == 1) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 15) {\n            if (length == 1) {\n              \
    \  return \"YES\"\n            } else {\n                return \"NO\"\n     \
    \       }\n        }\n        if (length2 == 16) {\n            if (length ==\
    \ 1) {\n                return \"YES\"\n            } else {\n               \
    \ return \"NO\"\n            }\n        }\n        if (length2 == 17) {\n    \
    \        if (length == 1) {\n                return \"YES", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.min(start, start2)\n\
    \        val end = math.max(end, end2)\n        val length = end - start\n   \
    \     if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length == 1) \"YES\"\n        else if (length2 == 1) \"YES\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else intersection(interval1, interval2)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start\n        val end4 = end\n        val start5 = start3\n\
    \        val end5 = end3\n        val start6 = start4\n        val end6 = end4\n\
    \        val start7 = start5\n        val end7 = end5\n        val start8 = start6\n\
    \        val end8 = end6\n        val start9 = start7\n        val end9 = end7\n\
    \        val start10 = start8\n        val end10 = end8\n        val start11 =\
    \ start9\n        val end11 = end9\n        val start12 = start10\n        val\
    \ end12 = end10\n        val start13 = start11\n        val end13 = end11\n  \
    \      val start14 = start12\n        val end14 = end12\n        val start15 =\
    \ start13\n        val end15 = end13\n        val start16 = start14\n        val\
    \ end16 = end14\n        val start17 = start15\n        val end17 = end15\n  \
    \      val start18 = start16\n        val end18 = end16\n        val start19 =\
    \ start17\n        val end19 = end17\n        val start20 = start18\n        val\
    \ end20 = end18\n        val start21 = start19\n        val end21 = end19\n  \
    \      val start22 = start20\n        val end22 = end20\n        val start23 =\
    \ start21\n        val end23 = end21\n        val start24 = start22\n        val\
    \ end24 = end22\n        val start25 = start23\n        val end25 = end23\n  \
    \      val start26 = start24\n        val end26 = end24\n        val start27 =\
    \ start25\n        val end27 = end25\n        val start28 = start26\n        val\
    \ end28 = end26\n        val start29 = start27\n        val end29 = end27\n  \
    \      val start30 = start28\n        val end30 = end28\n        val start31 =\
    \ start29\n        val end31 = end29\n        val start32 = start30\n        val\
    \ end32 = end30\n        val start33 = start31\n        val end33 = end31\n  \
    \      val start34 = start32\n", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.max(start, start2)\n        val end = math.min(end,\
    \ end2)\n        val length = end - start\n        if (length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMinusEnd = start - end\n        val start2MinusEnd = start2 - end2\n  \
    \      if (startMinusEnd <= 0 || start2MinusEnd <= 0) {\n            return \"\
    NO\"\n        }\n        val startMinusEnd2 = start2 - start\n        val endMinusStart2\
    \ = end - start2\n        val startMinusEnd2MinusStart = start2 - end2\n     \
    \   val startMinusEnd2MinusStart2 = start2 - start2\n        val startMinusEnd2MinusStart3\
    \ = start2 - start3\n        val startMinusEnd2MinusStart4 = start2 - start4\n\
    \        val startMinusEnd2MinusStart5 = start2 - start5\n        val startMinusEnd2MinusStart6\
    \ = start2 - start6\n        val startMinusEnd2MinusStart7 = start2 - start7\n\
    \        val startMinusEnd2MinusStart8 = start2 - start8\n        val startMinusEnd2MinusStart9\
    \ = start2 - start9\n        val startMinusEnd2MinusStart10 = start2 - start10\n\
    \        val startMinusEnd2MinusStart11 = start2 - start11\n        val startMinusEnd2MinusStart12\
    \ = start2 - start12\n        val startMinusEnd2MinusStart13 = start2 - start13\n\
    \        val startMinusEnd2MinusStart14 = start2 - start14\n        val startMinusEnd2MinusStart15\
    \ = start2 - start15\n        val startMinusEnd2MinusStart16 = start2 - start16\n\
    \        val startMinusEnd2MinusStart17 = start2 - start17\n        val startMinusEnd2MinusStart18\
    \ = start2 - start18\n        val startMinusEnd2MinusStart19 = start2 - start19\n\
    \        val startMinusEnd2MinusStart20 = start2 - start20\n        val startMinusEnd2MinusStart21\
    \ = start2 - start21\n        val startMinusEnd2MinusStart22 = start2 - start22\n\
    \        val startMinusEnd2MinusStart23 = start2 - start23\n        val startMinusEnd2MinusStart24\
    \ = start2 - start24\n        val startMinusEnd2MinusStart25 = start2 - start25\n\
    \        val startMinus", "        val start = interval1._1\n        val end =\
    \ interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) {\n            if (length == 0) \"NO\" else \"YES\"\n  \
    \      } else if (length2 == 1) {\n            if (length == 1) \"YES\" else \"\
    NO\"\n        } else if (length2 == 2) {\n            if (length == 2) \"YES\"\
    \ else \"NO\"\n        } else if (length2 == 3) {\n            if (length == 3)\
    \ \"YES\" else \"NO\"\n        } else if (length2 == 4) {\n            if (length\
    \ == 2) \"YES\" else \"NO\"\n        } else if (length2 == 5) {\n            if\
    \ (length == 2) \"YES\" else \"NO\"\n        } else if (length2 == 6) {\n    \
    \        if (length == 2) \"YES\" else \"NO\"\n        } else if (length2 == 7)\
    \ {\n            if (length == 2) \"YES\" else \"NO\"\n        } else if (length2\
    \ == 8) {\n            if (length == 2) \"YES\" else \"NO\"\n        } else if\
    \ (length2 == 9) {\n            if (length == 2) \"YES\" else \"NO\"\n       \
    \ } else if (length2 == 10) {\n            if (length == 2) \"YES\" else \"NO\"\
    \n        } else if (length2 == 11) {\n            if (length == 2) \"YES\" else\
    \ \"NO\"\n        } else if (length2 == 12) {\n            if (length == 2) \"\
    YES\" else \"NO\"\n        } else if (length2 == 13) {\n            if (length\
    \ == 2) \"YES\" else \"NO\"\n        } else if (length2 == 14) {\n           \
    \ if (length == 2) \"YES\" else \"NO\"\n        } else if (length2 == 15) {\n\
    \            if (length == 2) \"YES\" else \"NO\"\n        } else if (length2\
    \ == 16) {\n            if (length == 2) \"YES\" else \"NO\"\n        } else if\
    \ (length2 == 17) {\n            if (length == 2) \"YES\" else \"NO\"\n      \
    \  } else if (length2 == 18) {\n            if (length == 2) \"YES\" else \"NO\"\
    \n        } else if (length2 == 19) {\n            if (length == 2) \"YES\" else\
    \ \"NO\"\n        } else if (length2 == 20) {\n            if (length == 2) \"\
    YES\" else \"NO\"\n        } else if (length2 == 21) {\n            if (length\
    \ == 2) \"YES\" else \"NO\"\n        } else if (length2 == 22) {\n           \
    \ if (length == 2) \"YES\" else \"NO\"\n        } else if (length2 == 23) {\n\
    \            if (length == 2) \"YES\" else \"NO\"\n        } else if (length2\
    \ == 24) {\n            if (length == 2) \"YES\" else \"NO\"\n        } else if\
    \ (length2 == 25) {\n            if (length == 2) \"YES\" else \"NO\"\n      \
    \  } else if (length2 == 26) {\n            if (length == 2) \"YES\" else \"NO\"\
    \n        } else if (length2 == 27) {\n            if (length == 2) \"YES\" ",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        val isIntersect = length\
    \ >= length2\n        if (isIntersect) {\n            val isPrime = length ==\
    \ 2 || length == 3 || length == 5 || length == 7\n            if (isPrime) {\n\
    \                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        } else {\n            return \"NO\"\n       \
    \ }", "        val start = interval1._1\n        val end = interval1._2\n    \
    \    val start2 = interval2._1\n        val end2 = interval2._2\n        val start\
    \ = math.min(start, start2)\n        val end = math.max(end, end2)\n        val\
    \ length = end - start\n        if (length == 0) \"NO\" else \"YES\"", "     \
    \   val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) \"NO\"\
    \ else \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMinusEnd = start - end\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2MinusEnd = startMinusEnd - start2\n\
    \        val startMinusEnd2MinusEnd2 = startMinusEnd2 - start2\n        val startMinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd - start2\n        val startMinusEnd2MinusEnd2MinusEnd2\
    \ = startMinusEnd2MinusEnd2 - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2\
    \ = startMinusEnd2MinusEnd2MinusEnd2 - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd - start2\n    \
    \    val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd =\
    \ startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd - start2\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2Minus",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 1) {\n            if (length2 == 1) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 1) {\n            return \"NO\"\n        }\n        if\
    \ (length == 2) {\n            if (length2 == 2) {\n                return \"\
    YES\"\n            } else {\n                return \"NO\"\n            }\n  \
    \      }\n        if (length == 2) {\n            return \"NO\"\n        }\n \
    \       if (length == 3) {\n            if (length2 == 3) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length == 3) {\n            return \"NO\"\n        }\n\
    \        if (length == 4) {\n            if (length2 == 4) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length == 4) {\n            return \"NO\"\n \
    \       }\n        if (length == 5) {\n            if (length2 == 5) {\n     \
    \           return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length == 5) {\n            return \"\
    NO\"\n        }\n        if (length == 6) {\n            if (length2 == 6) {\n\
    \                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 6) {\n            return\
    \ \"NO\"\n        }\n        if (length == 7) {\n            if (length2 == 7)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 7) {\n            return\
    \ \"NO\"\n        }\n        if (length == 8) {\n            if (length2 == 8)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 8) {\n            return\
    \ \"NO\"\n        }\n        if (length == 9) {\n            if (length2 == 9)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 9) {\n            return\
    \ \"NO\"\n        }\n        if (length == 10) {\n            if (length2 == 10)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 10) {\n            return\
    \ \"NO\"\n        }\n        if (length == 11) {\n            if (length2 == 11)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 11) {\n            return\
    \ \"NO\"\n        }\n        if (length == 12) {\n            if (length2 == 12)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start3 = start2\n        val end3\
    \ = end2\n        val start4 = start3\n        val end4 = end3\n        val start5\
    \ = start4\n        val end5 = end4\n        val start6 = start5\n        val\
    \ end6 = end5\n        val start7 = start6\n        val end7 = end6\n        val\
    \ start8 = start7\n        val end8 = end7\n        val start9 = start8\n    \
    \    val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMinusEnd = start - end\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        val result = length * length2\n        if (result < 2) \"\
    NO\"\n        else if (result > 2) \"YES\"\n        else if (length == 1) \"YES\"\
    \n        else if (length2 == 1) \"YES\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length == 2) \"NO\"\n        else if (length == 3)\
    \ \"NO\"\n        else if (length == length2) \"NO\"\n        else if (length\
    \ == length + 1) \"NO\"\n        else if (length == length + 2) \"NO\"\n     \
    \   else if (length == length + 3) \"NO\"\n        else if (length == length +\
    \ 4) \"NO\"\n        else if (length == length + 5) \"NO\"\n        else if (length\
    \ == length + 6) \"NO\"\n        else if (length == length + 7) \"NO\"\n     \
    \   else if (length == length + 8) \"NO\"\n        else if (length == length +\
    \ 9) \"NO\"\n        else if (length == length + 10) \"NO\"\n        else if (length\
    \ == length + 11) \"NO\"\n        else if (length == length + 12) \"NO\"\n   \
    \     else if (length == length + 13) \"NO\"\n        else if (length == length\
    \ + 14) \"NO\"\n        else if (length == length + 15) \"NO\"\n        else if\
    \ (length == length + 16) \"NO\"\n        else if (length == length + 17) \"NO\"\
    \n        else if (length == length + 18) \"NO\"\n        else if (length == length\
    \ + 19) \"NO\"\n        else if (length == length + 20) \"NO\"\n        else if\
    \ (length == length + 21) \"NO\"\n        else if (length == length + 22) \"NO\"\
    \n        else if (length == length + 23) \"NO\"\n        else if (length == length\
    \ + 24) \"NO\"\n        else if (length == length + 25) \"NO\"\n        else if\
    \ (length == length + 26) \"NO\"\n        else if (length == length + 27) \"NO\"\
    \n        else if (length == length + 28) \"NO\"\n        else if (length == length\
    \ + 29) \"NO\"\n        else if (length == length + 30) \"NO\"\n        else if\
    \ (length == length + 31) \"NO\"\n        else if (length == length + 32) \"NO\"\
    \n        else if (length == length + 33) \"NO\"\n        else if (length == length\
    \ + 34) \"NO\"\n        else if (length == length + 35) \"NO\"\n        else if\
    \ (length == length + 36) \"NO\"\n        else if (length == length + 37) \"NO\"\
    \n        else if (length == length + 38) \"NO\"\n        else if (length == length\
    \ + 39) \"NO\"\n        else if (length", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval2._1\n        val start2\
    \ = interval1._2\n        val end2 = interval2._2\n        val start3 = interval1._3\n\
    \        val end3 = interval2._3\n        val start4 = interval1._4\n        val\
    \ end4 = interval2._4\n        val start5 = interval1._5\n        val end5 = interval2._5\n\
    \        val start6 = interval1._6\n        val end6 = interval2._6\n        val\
    \ start7 = interval1._7\n        val end7 = interval2._7\n        val start8 =\
    \ interval1._8\n        val end8 = interval2._8\n        val start9 = interval1._9\n\
    \        val end9 = interval2._9\n        val start10 = interval1._10\n      \
    \  val end10 = interval2._10\n        val start11 = interval1._11\n        val\
    \ end11 = interval2._11\n        val start12 = interval1._12\n        val end12\
    \ = interval2._12\n        val start13 = interval1._13\n        val end13 = interval2._13\n\
    \        val start14 = interval1._14\n        val end14 = interval2._14\n    \
    \    val start15 = interval1._15\n        val end15 = interval2._15\n        val\
    \ start16 = interval1._16\n        val end16 = interval2._16\n        val start17\
    \ = interval1._17\n        val end17 = interval2._17\n        val start18 = interval1._18\n\
    \        val end18 = interval2._18\n        val start19 = interval1._19\n    \
    \    val end19 = interval2._19\n        val start20 = interval1._20\n        val\
    \ end20 = interval2._20\n        val start21 = interval1._21\n        val end21\
    \ = interval2._21\n        val start22 = interval1._22\n        val end22 = interval2._22\n\
    \        val start23 = interval1._23\n        val end23 = interval2._23\n    \
    \    val start24 = interval1._24\n        val end24 = interval2._24\n        val\
    \ start25 = interval1._25\n        val end25 = interval2._25\n        val start26\
    \ = interval1._26\n        val end26 = interval2._26\n        val start27 = interval1._27\n\
    \        val end27 = interval2._27\n        val start28 = interval1._", "    \
    \    val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length == 0 || length2\
    \ == 0) {\n            \"NO\"\n        } else {\n            val isPrime = length\
    \ == length2\n            if (isPrime) {\n                \"YES\"\n          \
    \  } else {\n                val isPrime2 = isPrime\n                if (isPrime2)\
    \ {\n                    \"YES\"\n                } else {\n                 \
    \   val isPrime3 = isPrime\n                    if (isPrime3) {\n            \
    \            \"YES\"\n                    } else {\n                        val\
    \ isPrime4 = isPrime\n                        if (isPrime4) {\n              \
    \              \"YES\"\n                        } else {\n                   \
    \         val isPrime5 = isPrime\n                            if (isPrime5) {\n\
    \                                \"YES\"\n                            } else {\n\
    \                                \"NO\"\n                            }\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        if (start == start2 && end == end2) {\n            return \"NO\"\n  \
    \      }\n        val length = end - start\n        val length2 = end2 - start2\n\
    \        if (length == 0 || length2 == 0) {\n            return \"NO\"\n     \
    \   }\n        val prime = length * length2\n        if (prime == length) {\n\
    \            return \"YES\"\n        }\n        if (prime % length == 0) {\n \
    \           return \"YES\"\n        }\n        return \"NO\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        val isPrime = length2 % length == 0\n        if (isPrime)\
    \ {\n            return \"YES\"\n        } else {\n            return \"NO\"\n\
    \        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMinusEnd = start - end\n        val start2MinusEnd2 = start2 - end2\n \
    \       val startMinusEnd2 = start2 - end2\n        val startMinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        val isPrime = length == 2 || length2 == 2\n        if (isPrime)\
    \ {\n            return \"YES\"\n        }\n        else {\n            return\
    \ \"NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            \"NO\"\n        } else if (length == length2)\
    \ {\n            \"YES\"\n        } else {\n            val start3 = start2 +\
    \ 1\n            val end3 = end2 - 1\n            val start4 = start2 + 1\n  \
    \          val end4 = end2 - 1\n            val start5 = start2 + 1\n        \
    \    val end5 = end2 - 1\n            val start6 = start2 + 1\n            val\
    \ end6 = end2 - 1\n            val start7 = start2 + 1\n            val end7 =\
    \ end2 - 1\n            val start8 = start2 + 1\n            val end8 = end2 -\
    \ 1\n            val start9 = start2 + 1\n            val end9 = end2 - 1\n  \
    \          val start10 = start2 + 1\n            val end10 = end2 - 1\n      \
    \      val start11 = start2 + 1\n            val end11 = end2 - 1\n          \
    \  val start12 = start2 + 1\n            val end12 = end2 - 1\n            val\
    \ start13 = start2 + 1\n            val end13 = end2 - 1\n            val start14\
    \ = start2 + 1\n            val end14 = end2 - 1\n            val start15 = start2\
    \ + 1\n            val end15 = end2 - 1\n            val start16 = start2 + 1\n\
    \            val end16 = end2 - 1\n            val start17 = start2 + 1\n    \
    \        val end17 = end2 - 1\n            val start18 = start2 + 1\n        \
    \    val end18 = end2 - 1\n            val start19 = start2 + 1\n            val\
    \ end19 = end2 - 1\n            val start20 = start2 + 1\n            val end20\
    \ = end2 - 1\n            val start21 = start2 + 1\n            val end21 = end2\
    \ - 1\n            val start22 = start2 + 1\n            val end22 = end2 - 1\n\
    \            val start23 = start2 + 1\n            val end23 = end2 - 1\n    \
    \        val start24 = start2 + 1\n            val end24 = end2 - 1\n        \
    \    val start25 = start2 + 1\n            val end25 = end2 - 1\n            val\
    \ start26 = start2 + 1\n            val end26 = end2 - 1\n            val start27\
    \ = start2 + 1\n            val end27 = end2 - 1\n            val start28 = start2\
    \ + 1\n            val end28", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) {\n            val length = end - start\n\
    \            val length2 = end2 - start2\n            if (length == length2) {\n\
    \                if (length == 2) {\n                    if (start <= end2 &&\
    \ start2 <= end) {\n                        if (start <= end) {\n            \
    \                return \"YES\"\n                        } else {\n          \
    \                  return \"NO\"\n                        }\n                \
    \    } else {\n                        return \"NO\"\n                    }\n\
    \                } else {\n                    if (length == 1) {\n          \
    \              if (start <= end2 && start2 <= end) {\n                       \
    \     if (start <= end) {\n                                return \"YES\"\n  \
    \                          } else {\n                                return \"\
    NO\"\n                            }\n                        } else {\n      \
    \                      return \"NO\"\n                        }\n            \
    \        } else {\n                        return \"NO\"\n                   \
    \ }\n                }\n            } else {\n                return \"NO\"\n\
    \            }\n        } else {\n            return \"NO\"\n        }", "   \
    \     val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMin = math.min(start,\
    \ start2)\n        val startMax = math.max(start, start2)\n        val endMin\
    \ = math.min(end, end2)\n        val endMax = math.max(end, end2)\n        val\
    \ startMin2 = math.min(start2, end2)\n        val startMax2 = math.max(start2,\
    \ end2)\n        val endMin2 = math.min(end2, start2)\n        val endMax2 = math.max(end2,\
    \ start2)\n        val startMin3 = math.min(start2, end2)\n        val startMax3\
    \ = math.max(start2, end2)\n        val endMin3 = math.min(end2, start2)\n   \
    \     val endMax3 = math.max(end2, start2)\n        val startMin4 = math.min(start2,\
    \ end2)\n        val startMax4 = math.max(start2, end2)\n        val endMin4 =\
    \ math.min(end2, start2)\n        val endMax4 = math.max(end2, start2)\n     \
    \   val startMin5 = math.min(start2, end2)\n        val startMax5 = math.max(start2,\
    \ end2)\n        val endMin5 = math.min(end2, start2)\n        val endMax5 = math.max(end2,\
    \ start2)\n        val startMin6 = math.min(start2, end2)\n        val startMax6\
    \ = math.max(start2, end2)\n        val endMin6 = math.min(end2, start2)\n   \
    \     val endMax6 = math.max(end2, start2)\n        val startMin7 = math.min(start2,\
    \ end2)\n        val startMax7 = math.max(start2, end2)\n        val endMin7 =\
    \ math.min(end2, start2)\n        val endMax7 = math.max(end2, start2)\n     \
    \   val startMin8 = math.min(start2, end2)\n        val startMax8 = math.max(start2,\
    \ end2)\n        val endMin8 = math.min(end2, start2)\n        val endMax8 = math.max(end2,\
    \ start2)\n        val startMin9 = math.min(start2, end2)\n        val startMax9\
    \ = math.max(start2, end2)\n        val endMin9 = math.min(end2, start2)\n   \
    \     val endMax9 = math.max(end2, start2)\n        val startMin10 = math.min(start2,\
    \ end2)\n        val startMax10 = math.max(start2, end2)\n        val endMin10\
    \ = math.min(end2, start2)\n        val endMax10 = math.max(end2, start2)\n  \
    \      val startMin11 = math.", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            (start2, end2)\n        } else if (start\
    \ < end) {\n            (start, end2)\n        } else {\n            val start3\
    \ = start2\n            val end3 = end2\n            val start4 = start\n    \
    \        val end4 = end\n            if (start3 > end4) {\n                (start4,\
    \ end3)\n            } else if (start3 < end4) {\n                (start3, end4)\n\
    \            } else {\n                if (start3 > start4) {\n              \
    \      val start5 = start3\n                    val end5 = end3\n            \
    \        val start6 = start4\n                    val end6 = end4\n          \
    \          if (start5 > end6) {\n                        (start6, end5)\n    \
    \                } else if (start5 < end6) {\n                        (start5,\
    \ end6)\n                    } else {\n                        if (start5 > start6)\
    \ {\n                            val start7 = start5\n                       \
    \     val end7 = end5\n                            val start8 = start6\n     \
    \                       val end8 = end6\n                            if (start7\
    \ > end8) {\n                                (start8, end7)\n                \
    \            } else if (start7 < end8) {\n                                (start7,\
    \ end8)\n                            } else {\n                              \
    \  if (start7 > start8) {\n                                    val start9 = start7\n\
    \                                    val end9 = end7\n                       \
    \             val start10 = start8\n                                    val end10\
    \ = end8\n                                    if (start9 > end10) {\n        \
    \                                (start10, end9)\n                           \
    \         } else if (start9 < end10) {\n                                     \
    \   (start9, end10)\n                                    } else {\n          \
    \                              if (start9 > start10) {\n                     \
    \                       val start11 = start9\n                               \
    \             val end11 = end9\n                                            val\
    \ start12 = start10\n                                            val end12 = end10\n\
    \                                            if (start11 > end12) {\n        \
    \                                        (start12, end11)\n                  \
    \                          } else if (start11 < end12) {\n                   \
    \                             (start11, end12)\n                             \
    \               } else {\n                                                if (start11\
    \ > start12) {\n                                                    val start13\
    \ = start11\n                                                    val end13 = end11\n\
    \                                                    val start14 = start12\n \
    \                                                   val end14 = end12\n      \
    \                                              if (start13 > end14) {\n      \
    \                                                  (start14, end13)\n        \
    \                                            } else if (start13 < end14) {\n \
    \                                                       (start13, end14)\n   \
    \                                                 } else {\n                 \
    \                                       if (start13 > start14) {\n           \
    \                                                 val start15 = start13\n    \
    \                                                        val end15 = end13\n \
    \                                                           val start16 = start14\n\
    \                                                            val end16 = end14\n\
    \                                                            if (start15 > end16)\
    \ {\n", "        val start = interval1._1\n        val end = interval1._2\n  \
    \      val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start3 = start2\n\
    \        val end3 = end2\n        val start4 = start3\n        val end4 = end3\n\
    \        val start5 = start4\n        val end5 = end4\n        val start6 = start5\n\
    \        val end6 = end5\n        val start7 = start6\n        val end7 = end6\n\
    \        val start8 = start7\n        val end8 = end7\n        val start9 = start8\n\
    \        val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) {\n            \"NO\"\
    \n        } else if (length == length2) {\n            \"YES\"\n        } else\
    \ {\n            val mid = (start + end) / 2\n            val mid2 = start2 +\
    \ end2\n            if (mid == mid2) {\n                \"YES\"\n            }\
    \ else {\n                \"NO\"\n            }\n        }", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start3 = start2\n        val end3\
    \ = end2\n        val start4 = start3\n        val end4 = end3\n        val start5\
    \ = start4\n        val end5 = end4\n        val start6 = start5\n        val\
    \ end6 = end5\n        val start7 = start6\n        val end7 = end6\n        val\
    \ start8 = start7\n        val end8 = end7\n        val start9 = start8\n    \
    \    val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start"]
stop_tokens:
- "\n    }\n"

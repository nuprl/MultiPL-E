name: HumanEval_162_string_to_md5
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a string 'text', return its md5 hash equivalent string.\n    // If\
  \ 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"\
  ))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String)\
  \ : Option[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
  \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
  \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
  ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
  ));\n    }\n\n}\n"
completions: ["        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n      \
    \      val md5 = digest.map(_.toHexString).take(8).mkString\n            Some(md5)\n\
    \        }", "        val md5 = new java.security.MessageDigest(\"MD5\")\n   \
    \     val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(\"\
    %02x\" format _).mkString\n        Some(md5)", "        val md5 = new java.security.MessageDigest(\"\
    MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val\
    \ md5 = digest.map(_.toHexString)\n        val md5 = md5.getOrElse(\"\")\n   \
    \     Some(md5)", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hex)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hexString = digest.map(\"%02x\".format(_)).mkString\n       \
    \     Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(scala.util.Md5.hashString(text).hexValue)", "        val md5 = new java.security.MessageDigest(\"\
    MD5\")\n        val bytes = text.getBytes\n        val md5 = md5.digest(bytes)\n\
    \        val md5 = Array[Byte](md5)\n        val md5 = java.util.Arrays.toString(md5)\n\
    \        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\",\"\
    , \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"\
    ,\", \"\")\n        val md5 = md5.replace(\"[\", \"\").replace(\"", "        if\
    \ (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5 = digest.map(_ & 0xff).mkString\n            Some(md5)\n\
    \        }", "        if (text.isEmpty) {\n            None\n        } else {\n\
    \            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes\
    \ = text.getBytes(\"UTF-8\")\n            val hash = md5.digest(bytes)\n     \
    \       val hexString = hash.toString(\"hex\")\n            Some(hexString)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5String = new String(digest)\n            Some(md5String)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        val md5 = new java.security.MessageDigest\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(_.toHexString)\n\
    \        val md5 = md5.getOrElse(\"\")\n        Option(md5)", "        val md5\
    \ = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n\
    \        val hex = digest.map(\"%02x\".format(_)).mkString\n        Option(hex)",
  "        if (text.isEmpty) None\n        else Some(md5(text))", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hexString = digest.map(\"%02x\".format(_)).mkString\n       \
    \     Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(scala.util.Md5.md5(text).hexString)", "        if (text.isEmpty) {\n  \
    \          None\n        } else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5\
    \ = digest.map(\"%02x\" format _).mkString\n            Some(md5)\n        }",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n\
    \            val hexString = bytes.map(\"%02x\".format(_)).mkString\n        \
    \    Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(scala.util.hashing.Md5.hashString(text).hexString)", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.digest(text.getBytes))", "        if\
    \ (text.isEmpty) {\n            None\n        } else {\n            val md5 =\
    \ MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n\
    \            val hex = bytes.map(\"%02x\".format(_)).mkString\n            Some(hex)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).map(_.toHexString))",
  "        if (text.isEmpty) None\n        else Some(text.md5())", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text))", "       \
    \ if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }",
  "        if (text.isEmpty) None\n        else Some(md5(text))", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.hashString(text).hexValue)", "      \
    \  if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }", "        if (text.isEmpty) {\n            None\n        } else {\n \
    \           val md5 = new java.security.MessageDigest(\"MD5\")\n            val\
    \ digest = md5.digest(text.getBytes(\"UTF-8\"))\n            val md5 = digest.map(_.toHexString)\n\
    \            Some(md5)\n        }", "        if (text.isEmpty) None\n        else\
    \ {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n        \
    \    val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(_.toHexString)\n\
    \            Some(hexString)\n        }", "        if (text.isEmpty) None\n  \
    \      else Some(scala.util.hashing.Md5.hashString(text).hex)", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text))", "       \
    \ if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5HexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(md5HexString)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).map(_.toHexString))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n\
    \        }", "        if (text.isEmpty) None\n        else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hex)",
  "        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            val bytes = text.getBytes(\"UTF-8\")\n            val hash\
    \ = md5.digest(bytes)\n            val hex = hash.toString(\"hex\")\n        \
    \    Some(hex)\n        }", "        val md5 = MessageDigest.getInstance(\"MD5\"\
    )\n        val buffer = new Array[Byte](md5.digest(text.getBytes(\"UTF-8\")).length)\n\
    \        md5.update(text.getBytes(\"UTF-8\"), 0, text.length, buffer)\n      \
    \  Some(new String(buffer, 0, buffer.length, \"UTF-8\"))", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.hashString(text).hexValue)", "      \
    \  if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hex\
    \ = bytes.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n\
    \            val hexString = bytes.map(\"%02x\".format(_)).mkString\n        \
    \    Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(scala.util.hashing.Md5.hashString(text))", "        if (text.isEmpty) None\n\
    \        else Some(scala.util.Md5.hashString(text).hexValue)", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5Hex = digest.map(_.toHexString)\n            Some(md5Hex)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(md5(text))", "        if (text.isEmpty)\
    \ {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).map(_.toString))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5String = new String(digest)\n            Some(md5String)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val md5String = new String(digest)\n  \
    \      val md5Hash = md5String.substring(0, 16)\n        Some(md5Hash)", "   \
    \     if (text.isEmpty) None\n        else Some(md5(text))", "        val md5\
    \ = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"\
    UTF-8\"))\n        val md5 = digest.map(_.toHexString)\n        val md5String\
    \ = md5.mkString\n        Option(md5String)", "        if (text.isEmpty) None\n\
    \        else Some(scala.util.Md5.hashString(text).hexString)", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text))", "       \
    \ if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5\
    \ = digest.map(x => Integer.toHexString(x))\n            Some(md5.mkString.substring(0,8))\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(md5(text))", "        val md5\
    \ = MessageDigest.getInstance(\"MD5\")\n        val bytes = text.getBytes(\"UTF-8\"\
    )\n        val hash = md5.digest(bytes)\n        val hex = hash.toString(\"hex\"\
    )\n        hex.takeWhile(c => c != '0').mkString", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text))", "       \
    \ if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hex = digest.map(x => x.toHexString).mkString\n            Some(hex)\n\
    \        }", "        if (text.isEmpty) {\n            None\n        } else {\n\
    \            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\"\
    .format(_)).mkString\n            Some(hexString)\n        }", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.hashString(text).hexValue)", "      \
    \  if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val md5 = digest.map(_.toHexString)\n \
    \       val md5 = md5.getOrElse(\"\")\n        Some(md5)", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.digest(text.getBytes))", "        if\
    \ (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).map(_.toString))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(text.md5())", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text))", "       \
    \ if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val buffer\
    \ = new Array[Byte](1024)\n        val digest = md5.digest(text.getBytes)\n  \
    \      val hex = digest.map(\"%02x\".format(_)).mkString\n        Some(hex)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).digest)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n\
    \        }", "        if (text.isEmpty) None\n        else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n\
    \        }", "        if (text.isEmpty) {\n            None\n        } else {\n\
    \            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes\
    \ = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\"\
    .format(_)).mkString\n            Some(hexString)\n        }", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.hashString(text).hexValue)", "      \
    \  if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val bytes =\
    \ text.getBytes(\"UTF-8\")\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        md5.update(bytes)\n        val md5 = md5.digest()\n        val\
    \ md5 = java.security.MessageDigest.getInstance(\"MD5\")\n        md5.update(md5)\n\
    \        val md5 = md5.digest()\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        md5.update(md5)\n        val md5 = md5.digest()\n        val md5\
    \ = java.security.MessageDigest.getInstance(\"MD5\")\n        md5.update(md5)\n\
    \        val md5 = md5.digest()\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        md5.update(md5)\n        val md5 = md5.digest()\n        val md5\
    \ = java.security.MessageDigest.getInstance(\"MD5\")\n        md5.update(md5)\n\
    \        val md5 = md5.digest()\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        md5.update(md5)\n        val md5 = md5.digest()\n        val md5\
    \ = java.security.MessageDigest.getInstance(\"MD5\")\n        md5.update(md5)\n\
    \        val md5 = md5.digest()\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        md5.update(md5)\n        val md5 = md5.digest()\n        val md5\
    \ = java.security.MessageDigest.getInstance(\"MD5\")\n        md5.update(md5)\n\
    \        val md5 = md5.digest()\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        md5.update(md5)\n        val md5 = md5.digest()\n        val md5\
    \ = java.security.MessageDigest.getInstance(\"MD5\")\n        md5.update(md5)\n\
    \        val md5 = md5.digest()\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        md5.update(md5)\n        val md5 = md5.digest()\n        val md5\
    \ = java.security.MessageDigest.getInstance(\"MD5\")\n        md5.update(md5)\n\
    \        val md5 = md5.digest()\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        md5.update(md5)\n        val md5 = md5.digest()\n        val md5\
    \ = java.security.MessageDigest.getInstance(\"MD5\")\n        md5.update(md5)\n\
    \        val md5 = md5.digest()\n        val md5 = java.security.MessageDigest.get",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(md5(text))", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.digest(text.getBytes))", "        if\
    \ (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)", "   \
    \     if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hexString = digest.map(\"%02x\".format(_)).mkString\n       \
    \     Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(scala.util.hashing.Md5.hashString(text).hexString)", "        if (text.isEmpty)\
    \ {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5 = digest.map(_.toHexString)\n            Some(md5)\n    \
    \    }", "        if (text.isEmpty) None\n        else {\n            val md5\
    \ = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hexString = digest.map(\"%02x\".format(_)).mkString\n       \
    \     Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(scala.util.hashing.Md5.hashString(text).hexString)", "        val md5 =\
    \ new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"\
    UTF-8\"))\n        val md5 = digest.map(_ & 0xff).mkString\n        Option(md5)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).map(_.toHexString))",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val md5 = digest.map(\"%02x\".format(_)).mkString\n\
    \        Option(md5)", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(md5(text))", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n\
    \            val hexString = bytes.map(\"%02x\".format(_)).mkString\n        \
    \    Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(scala.util.hashing.Md5.hashString(text).hexValue)", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text))", "       \
    \ if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).map(_.toString))",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val md5 = digest.map(_ & 0xff).mkString\n\
    \        Some(md5)", "        if (text.isEmpty) {\n            None\n        }\
    \ else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n         \
    \   val bytes = text.getBytes(\"UTF-8\")\n            val hash = md5.digest(bytes)\n\
    \            val hex = hash.toString(\"HEX\")\n            Some(hex)\n       \
    \ }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex\
    \ = digest.map(_.toHexString)\n            Some(hex)\n        }", "        if\
    \ (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5String = new String(digest)\n            Some(md5String)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hexString = digest.map(\"%02x\".format(_)).mkString\n       \
    \     Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(text.map(_.hashCode).sum.toString)", "        if (text.isEmpty) None\n\
    \        else Some(scala.util.hashing.Md5.hashString(text))", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.digest(text.getBytes))", "        if\
    \ (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5\
    \ = digest.map(_.toHexString).take(8).mkString\n            Some(md5)\n      \
    \  }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5 = digest.map(_.toHexString).take(16).mkString\n         \
    \   Some(md5)\n        }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val md5 = digest.map(_.toHexString)\n \
    \       val md5 = md5.getOrElse(\"\")\n        Some(md5)", "        if (text.isEmpty)\
    \ {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString\
    \ = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n    \
    \    }", "        if (text.isEmpty) None\n        else Some(md5(text))", "   \
    \     if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n      \
    \      val md5String = new String(digest)\n            Some(md5String)\n     \
    \   }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val bytes =\
    \ text.getBytes(\"UTF-8\")\n        val hash = md5.digest(bytes)\n        val\
    \ hexString = hash.toString(\"hex\")\n        Some(hexString)", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.hashString(text).hexValue)", "      \
    \  if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        if (text.isEmpty) None\n        else Some(text.map(_.hashCode).map(_.toString).mkString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n\
    \        }", "        if (text.isEmpty) None\n        else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hexString = digest.map(\"%02x\".format(_)).mkString\n       \
    \     Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(scala.util.hashing.Md5.hashString(text).hex)", "        if (text.isEmpty)\
    \ {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))"]
stop_tokens:
- "\n    }\n"

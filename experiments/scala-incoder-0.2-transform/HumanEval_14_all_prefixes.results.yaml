language: scala
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        for (c <- string) {\n            if (c.isLetter) {\n         \
    \       currentPrefix = currentPrefix + c\n            } else {\n            \
    \    prefixes += currentPrefix\n                currentPrefix = \"\"\n       \
    \     }\n        }\n        prefixes += currentPrefix\n        prefixes.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy7j0m8bc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0,currentLength)\n         \
    \   prefixes += currentPrefix\n            currentLength -= 1\n        }\n   \
    \     prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwstx0q1m.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805325
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0, currentLength)\n        \
    \    prefixes += currentPrefix\n            currentLength = currentLength - 1\n\
    \        }\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxhha4fzd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.foreach(x => prefixes\
    \ += x)\n        prefixes.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeuzp2hqs.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805323
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var currentPrefix = \"\"\n        var\
    \ currentLength = string.length\n        var currentIndex = 0\n        while (currentIndex\
    \ < currentLength) {\n            currentPrefix = string.substring(currentIndex,\
    \ currentIndex + currentLength)\n            prefixes ::= currentPrefix\n    \
    \        currentIndex += currentLength\n            currentLength -= 1\n     \
    \   }\n        prefixes\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpk71uqnto.scala:22)\n\tat Problem.main(tmpk71uqnto.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659805421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        for (c <- string) {\n            if (currentPrefix.length > 0)\
    \ {\n                prefixes += currentPrefix\n            }\n            currentPrefix\
    \ = currentPrefix + c\n        }\n        prefixes += currentPrefix\n        prefixes\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12hddp4x.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var current = string\n\
    \        var length = 0\n        while (length < string.length) {\n          \
    \  length += current.length\n            current = current.substring(0,length)\n\
    \            prefixes += current\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu8_e45rw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0, currentLength)\n        \
    \    prefixes += currentPrefix\n            currentLength = currentLength - 1\n\
    \        }\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxhha4fzd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var current = string\n\
    \        while (current != \"\") {\n            prefixes += current\n        \
    \    current = current.dropRight(1)\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7sv5t94j.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.split(\"\").reverse.foreach(prefix\
    \ => prefixes += prefix)\n        prefixes.toList.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphuwkwk_j.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesHelper(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkkm685y_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkkm685y_.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesHelper(string, prefixes)\n\e[31m\e\
    [31m  |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesHelper\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var current = string\n\
    \        while (current != \"\") {\n            prefixes += current\n        \
    \    current = current.dropRight(1)\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7sv5t94j.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var i = 0\n       \
    \ while (i < string.length) {\n            prefixes += string.substring(0, i)\n\
    \            i += 1\n        }\n        prefixes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsktkhkz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.foreach(prefix =>\
    \ prefixes += prefix)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuo61_mjh.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length){\n            currentPrefix += string(i)\n\
    \            prefixes += currentPrefix\n        }\n        prefixes.toList\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjk0e9uf_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805420

name: HumanEval_51_remove_vowels
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // remove_vowels is a function that takes string and returns string without\
  \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
  abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\"\
  )\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
  zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\"\
  )).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
  bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
  \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
  acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\"\
  )));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
completions: ["        var result = \"\"\n        for(i <- 0 until text.length){\n\
    \            val c = text.charAt(i)\n            if(c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u'){\n                result += c\n            }\n\
    \        }\n        result", "        val vowels = \"aeiouAEIOU\"\n        val\
    \ result = text.filterNot(vowels.contains)\n        result", "        var newText\
    \ = text\n        val vowels = \"aeiouAEIOU\"\n        val vowelsSet = scala.collection.mutable.Set[Char](vowels)\n\
    \        val vowelsSetIterator = vowelsSet.iterator\n        val vowelsSetIteratorNext\
    \ = vowelsSetIterator.next\n        while(vowelsSetIteratorNext.isDefined) {\n\
    \            newText = newText.replaceAll(vowelsSetIteratorNext.get.toString(),\
    \ \"\")\n            vowelsSetIterator = vowelsSet.iterator\n            vowelsSetIteratorNext\
    \ = vowelsSetIterator.next\n        }\n        newText", "        val vowels =\
    \ \"aeiouAEIOU\".toSet\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        var newText = \"\"\n        for (i <- 0 until text.length){\n\
    \            if (text.charAt(i) == 'a' || text.charAt(i) == 'e' || text.charAt(i)\
    \ == 'i' || text.charAt(i) == 'o' || text.charAt(i) == 'u'){\n               \
    \ newText += text.charAt(i)\n            }\n        }\n        return newText",
  "        val vowels = \"aeiouAEIOU\".toSet\n        val result = text.filter(x =>\
    \ !vowels.contains(x))\n        result", "        val vowels = \"aeiouAEIOU\"\
    .toCharArray\n        val result = text.filter(c => !vowels.contains(c))\n   \
    \     result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n\
    \        val result = new StringBuilder\n        for (c <- text) {\n         \
    \   if (vowels.contains(c)) {\n                result.append(c)\n            }\
    \ else {\n                result.append(\" \")\n            }\n        }\n   \
    \     return result.toString", "        val vowels = Set(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\")\n        val result = text.filter(x => !vowels.contains(x))\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val newText =\
    \ text.filterNot(vowels.contains)\n        newText", "        val vowels = \"\
    aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n        result",
  "        val vowels = \"aeiouAEIOU\".toCharArray\n        val result = new StringBuilder\n\
    \        for (i <- 0 until text.length)\n            if (vowels(i) != text.charAt(i))\n\
    \                result.append(text.charAt(i))\n        return result.toString",
  "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val result = text.filterNot(vowels.contains)\n        result", "  \
    \      val vowels = \"aeiouAEIOU\".toSet\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        var newText : String = \"\"\n        for(i <- 0 until\
    \ text.length){\n            if(text.charAt(i) == 'a' || text.charAt(i) == 'e'\
    \ || text.charAt(i) == 'i' || text.charAt(i) == 'o' || text.charAt(i) == 'u'){\n\
    \                newText += text.charAt(i)\n            }\n        }\n       \
    \ return newText", "        val vowels = \"aeiouAEIOU\"\n        var result =\
    \ \"\"\n        for (i <- 0 until text.length) {\n            val c = text.charAt(i)\n\
    \            if (vowels.contains(c)) {\n                result += c\n        \
    \    }\n        }\n        result", "        var vowels = \"aeiouAEIOU\"\n   \
    \     var newText = \"\"\n        for (i <- 0 until text.length) {\n         \
    \   if (vowels.contains(text.charAt(i))) {\n                newText += text.charAt(i)\n\
    \            }\n        }\n        return newText", "        val vowels = \"aeiouAEIOU\"\
    \n        val result = text.filterNot(vowels.contains)\n        result", "   \
    \     val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\".toSet\n        val result\
    \ = text.filterNot(vowels.contains)\n        result", "        val vowels = \"\
    aeiouAEIOU\"\n        val vowelsSet = vowels.toSet\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNext", "        val vowels = Set(\"a\", \"e\", \"i\"\
    , \"o\", \"u\")\n        val result = text.filter(x => !vowels.contains(x))\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val vowelsSet\
    \ = scala.collection.mutable.Set[Char](vowels)\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n   \
    \     val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext", " \
    \       var vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var result\
    \ = \"\"\n        for (i <- 0 until text.length) {\n            val char = text.charAt(i)\n\
    \            if (vowels.contains(char)) {\n                result += char\n  \
    \          }\n        }\n        return result", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        var newText = \"\"\n        for (i <- 0 until text.length)\n\
    \            if (text(i) match {\n                case \"a\" | \"e\" | \"i\" |\
    \ \"o\" | \"u\" => newText += \"_\"\n                case _ => newText += text(i)\n\
    \            })\n        newText", "        val vowels = \"aeiouAEIOU\".toList\n\
    \        val result = text.filterNot(vowels.contains)\n        result", "    \
    \    val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result =\
    \ text.filter(x => !vowels.contains(x))\n        result", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n   \
    \     result", "        val vowels = \"aeiouAEIOU\"\n        val vowelsSet = scala.collection.mutable.Set[Char](vowels.toCharArray)\n\
    \        val result = text.filterNot(vowelsSet.contains)\n        result", " \
    \       val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"y\");\n        val result = new StringBuilder()\n        for (c <- text) {\n\
    \            if (vowels.contains(c)) {\n                result.append(c)\n   \
    \         }\n        }\n        return result.toString()", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n   \
    \     result", "        var newText : String = \"\"\n        for(i <- 0 until\
    \ text.length){\n            val c = text.charAt(i)\n            if(c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u'){\n                newText += c\n\
    \            }\n        }\n        return newText", "        val vowels = \"aeiouAEIOU\"\
    \n        val result = text.filterNot(vowels.contains)\n        result", "   \
    \     val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val newText =\
    \ new StringBuilder()\n        for (i <- 0 until text.length)\n            if\
    \ (vowels.indexOf(text.charAt(i)) != -1)\n                newText.append(text.charAt(i))\n\
    \            else\n                newText.append(text.charAt(i))\n        newText.toString()",
  "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val result = text.filterNot(vowels.contains)\n        result", "  \
    \      var newText = \"\"\n        for (i <- 0 until text.length) {\n        \
    \    if (text(i).isLetter) {\n                if (text(i).toString.toLowerCase\
    \ == \"a\" || text(i).toString.toLowerCase == \"e\" || text(i).toString.toLowerCase\
    \ == \"i\" || text(i).toString.toLowerCase == \"o\" || text(i).toString.toLowerCase\
    \ == \"u\" || text(i).toString.toLowerCase == \"y\")\n                    newText\
    \ += text(i)\n            }\n        }\n        return newText", "        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val newText =\
    \ text.toLowerCase // make text lowercase\n        val newTextWithoutVowels =\
    \ newText.replaceAll(vowels, \"\") // remove vowels from text\n        newTextWithoutVowels",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var result\
    \ = \"\"\n        for (c <- text) {\n            if (vowels.contains(c)) {\n \
    \               result += c\n            }\n        }\n        result", "    \
    \    val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        var result = text\n        for (i <- 0 until text.length)\n\
    \            if (text.charAt(i) == 'a' || text.charAt(i) == 'e' || text.charAt(i)\
    \ == 'i' || text.charAt(i) == 'o' || text.charAt(i) == 'u')\n                result\
    \ = result.substring(0, i) + result.substring(i + 1, text.length)\n        return\
    \ result", "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\".toCharArray\n        val\
    \ result = new StringBuilder\n        for (i <- 0 until text.length)\n       \
    \     if (vowels.contains(text.charAt(i)))\n                result.append(text.charAt(i))\n\
    \        return result.toString", "        val vowels = \"aeiouAEIOU\"\n     \
    \   val result = text.filterNot(vowels.contains)\n        result", "        var\
    \ newText = \"\"\n        for (c <- text) {\n            if (c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') {\n                newText += c\n \
    \           }\n        }\n        return newText", "        val vowels = \"aeiouAEIOU\"\
    .toCharArray\n        val result = new StringBuilder\n        for(i <- 0 until\
    \ text.length){\n            val c = text.charAt(i)\n            if(vowels.contains(c)){\n\
    \                result.append(c)\n            }\n        }\n        return result.toString",
  "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val result = text.filter(x => !vowels.contains(x))\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (i\
    \ <- 0 until text.length) {\n            val c = text.charAt(i)\n            if\
    \ (vowels.contains(c)) {\n                result = result + c\n            }\n\
    \        }\n        result", "        val vowels = \"aeiouAEIOU\"\n        var\
    \ result = \"\"\n        for (i <- 0 until text.length) {\n            if (vowels.contains(text.charAt(i)))\
    \ {\n                result += text.charAt(i)\n            }\n        }\n    \
    \    result", "        val vowels = \"aeiouAEIOU\"\n        var newText = text\n\
    \        for(i <- 0 until text.length){\n            val c = text.charAt(i)\n\
    \            if(vowels.contains(c)){\n                newText = newText.replace(c,\
    \ \"\")\n            }\n        }\n        newText", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val newText = text.replaceAll(\"[aeiou]\"\
    , \"\")\n        newText.toUpperCase", "        var vowels = Set(\"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n        var result = \"\"\n        for(i <- 0 until text.length){\n\
    \            result += text.charAt(i).toLowerCase\n        }\n        for(i <-\
    \ 0 until text.length){\n            if(vowels.contains(text.charAt(i).toLowerCase)){\n\
    \                result += text.charAt(i)\n            }\n        }\n        result",
  "        var vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        var index\
    \ = 0\n        for(i <- 0 until text.length){\n            val c = text.charAt(i)\n\
    \            if(vowels.indexOf(c) != -1){\n                result += text.charAt(i)\n\
    \            }\n        }\n        return result", "        var newText = \"\"\
    \n        for (i <- 0 until text.length)\n            if (text.charAt(i) == 'a'\
    \ || text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) == 'o' ||\
    \ text.charAt(i) == 'u')\n                newText += text.charAt(i)\n        \
    \    else\n                newText += text.charAt(i)\n        return newText",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result\
    \ = text.filterNot(vowels.contains)\n        result", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        var newText : String = \"\"\n        var vowels = \"\
    aeiouAEIOU\"\n        var vowelsSet = scala.collection.mutable.Set[Char]()\n \
    \       for (i <- 0 until text.length) {\n            if (vowels.contains(text(i)))\
    \ {\n                vowelsSet += text(i)\n            }\n        }\n        for\
    \ (i <- 0 until text.length) {\n            if (!vowelsSet.contains(text(i)))\
    \ {\n                newText += text(i)\n            }\n        }\n        return\
    \ newText", "        var result = \"\"\n        var vowels = \"aeiouAEIOU\"\n\
    \        var vowelsSet = scala.collection.mutable.Set[Char]()\n        for (c\
    \ <- text) {\n            if (vowels.contains(c)) {\n                vowelsSet.add(c)\n\
    \            }\n        }\n        for (c <- text) {\n            if (!vowelsSet.contains(c))\
    \ {\n                result += c\n            }\n        }\n        result", " \
    \       val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        val\
    \ result = text.filter(c => !vowels.contains(c))\n        result", "        val\
    \ vowels = \"aeiouAEIOU\"\n        val newText = new StringBuilder()\n       \
    \ for (i <- 0 until text.length) {\n            val c = text.charAt(i)\n     \
    \       if (vowels.contains(c)) {\n                newText.append(c)\n       \
    \     } else {\n                newText.append(\" \")\n            }\n       \
    \ }\n        newText.toString()", "        val vowels = \"aeiouAEIOU\"\n     \
    \   val result = text.filterNot(vowels.contains)\n        result", "        val\
    \ vowels = \"aeiouAEIOU\"\n        val noVowels = text.replaceAll(vowels, \"\"\
    )\n        return noVowels", "        val vowels = Set(\"a\", \"e\", \"i\", \"\
    o\", \"u\")\n        val result = text.filterNot(vowels.contains)\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val result = new StringBuilder()\n        for (c <- text) {\n     \
    \       if (vowels.contains(c)) {\n                result.append(c)\n        \
    \    }\n        }\n        return result.toString()", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val result = new StringBuilder\n   \
    \     for (c <- text) {\n            if (vowels.contains(c)) {\n             \
    \   result.append(c)\n            }\n        }\n        return result.toString",
  "        val vowels = \"aeiouAEIOU\"\n        val newText = text\n        val newTextWithoutVowels\
    \ = newText.filter(c => !vowels.contains(c))\n        newTextWithoutVowels", " \
    \       val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\".toCharArray\n        var\
    \ result = \"\"\n        for (i <- 0 until text.length)\n            if (vowels(i)\
    \ == text.charAt(i))\n                result += text.charAt(i)\n        return\
    \ result", "        val vowels = \"aeiouAEIOU\"\n        val result = new StringBuilder\n\
    \        for (i <- 0 until text.length)\n            if (vowels.indexOf(text.charAt(i))\
    \ != -1)\n                result.append(text.charAt(i))\n        return result.toString()",
  "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val newText =\
    \ text.filterNot(vowels.contains)\n        newText", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val result = text.filter(x => vowels.contains(x))\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        var result = \"\
    \"\n        for (i <- 0 until text.length) {\n            if (vowels.contains(text.charAt(i)))\
    \ {\n                result += text.charAt(i)\n            }\n        }\n    \
    \    result", "        val vowels = \"aeiouAEIOU\".toSet\n        val result =\
    \ text.filterNot(vowels.contains)\n        result", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        var newText = text\n        for(i <-\
    \ 0 until text.length){\n            if(vowels.contains(text.charAt(i))){\n  \
    \              newText = newText.substring(0, i) + newText.substring(i+1, newText.length)\n\
    \            }\n        }\n        newText", "        val vowels = \"aeiouAEIOU\"\
    \n        val result = text.filterNot(vowels.contains)\n        result", "   \
    \     val vowels = \"aeiouAEIOU\"\n        val vowelsSet = scala.collection.mutable.Set[Char](vowels.toCharArray)\n\
    \        val result = text.filterNot(vowelsSet.contains)\n        result", " \
    \       var result = \"\"\n        for (i <- 0 until text.length)\n          \
    \  if (text.charAt(i) == 'a' || text.charAt(i) == 'e' || text.charAt(i) == 'i'\
    \ || text.charAt(i) == 'o' || text.charAt(i) == 'u')\n                result =\
    \ result + text.charAt(i)\n        return result", "        var newText : String\
    \ = \"\"\n        for(i <- 0 until text.length){\n            if(text.charAt(i)\
    \ == 'a' || text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) ==\
    \ 'o' || text.charAt(i) == 'u'){\n                newText += text.charAt(i)\n\
    \            }\n        }\n        return newText", "        val vowels = \"aeiouAEIOU\"\
    \n        val vowelsSet = scala.collection.mutable.Set[Char](vowels)\n       \
    \ val result = text.filterNot(vowelsSet.contains)\n        result", "        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        var vowels = \"aeiouAEIOU\"\n        var newText =\
    \ \"\"\n        for(i <- 0 until text.length){\n            val c = text.charAt(i)\n\
    \            if(vowels.contains(c)){\n                newText += c\n         \
    \   }\n        }\n        return newText", "        val vowels = Set(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val result = new\
    \ StringBuilder\n        for(i <- 0 until text.length)\n            if(vowels.indexOf(text.charAt(i))\
    \ != -1)\n                result.append(text.charAt(i))\n        return result.toString()",
  "        val vowels = \"aeiouAEIOU\"\n        val newText = text.filterNot(vowels.contains)\n\
    \        newText", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\")\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val result = text.filter(x\
    \ => !vowels.contains(x))\n        result", "        val vowels = \"aeiouAEIOU\"\
    \n        val result = text.filterNot(vowels.contains)\n        result", "   \
    \     val vowels = \"aeiouAEIOU\".toCharArray\n        val vowelsSet = scala.collection.mutable.Set[Char]()\n\
    \        for (c <- text) {\n            if (vowels.contains(c)) {\n          \
    \      vowelsSet += c\n            }\n        }\n        val result = text.filterNot(vowelsSet.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val result = text.filterNot(vowels.contains)\n        result", "  \
    \      val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\".toSet\n        val result\
    \ = text.filterNot(vowels.contains)\n        result", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")\n        val\
    \ newText = text.filterNot(vowels.contains)\n        newText", "        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val newText =\
    \ text.filterNot(vowels.contains)\n        return newText", "        var vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        var result = \"\"\n        for (i <- 0\
    \ until text.length)\n            if (vowels.contains(text.charAt(i)))\n     \
    \           result += text.charAt(i)\n        return result", "        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        val result = new StringBuilder\n        for\
    \ (c <- text) {\n            if (vowels.contains(c)) {\n                result.append(c)\n\
    \            }\n        }\n        return result.toString()", "        var vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var result = \"\"\n      \
    \  for(i <- 0 until text.length){\n            val char = text.charAt(i)\n   \
    \         if(vowels.contains(char)){\n                result += char\n       \
    \     }\n        }\n        result", "        val vowels = Set(\"a\", \"e\", \"\
    i\", \"o\", \"u\")\n        val result = text.filterNot(vowels.contains)\n   \
    \     result", "        val vowels = \"aeiouAEIOU\"\n        val result = new\
    \ StringBuilder()\n        for(i <- 0 until text.length){\n            val c =\
    \ text.charAt(i)\n            if(vowels.indexOf(c) >= 0){\n                result.append(c)\n\
    \            }\n        }\n        return result.toString()", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowels_set = Set(vowels)\n        val vowels_list_str\
    \ = vowels.toList\n        val vowels_list_set = vowels_list_str.map(_.toChar)\n\
    \        val vowels_list_set_str = vowels_list_set.toList\n        val vowels_list_set_str_str\
    \ = vowels_list_set_str.toList\n        val vowels_list_set_str_str_str = vowels_list_set_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str = vowels_list_set_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str = vowels_list_set_str_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str_str = vowels_list_set_str_str_str_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str_str_str = vowels_list_set_str_str_str_str_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str_str_str_str = vowels_list_set_str_str_str_str_str_str_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str_str_str_str_str = vowels_list_set_str_str_str_str_str_str_str_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str_str_str_str_str_str = vowels_list_set_str_str_str_str_str_str_str_str_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str_str_str_str_str_str_str = vowels_list_set_str_str_str_str_str_str_str_str_str_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str_str_str_str_str_str_str_str =\
    \ vowels_list_set_str_str_str_str_str_str_str_str_str_str_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str_str_str_str_str_str_str_str_str\
    \ = vowels_list_set_str_str_str_str_str_str_str_str_str_str_str_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str_str_str_str_str_str_str_str_str_str\
    \ = vowels_list_set_str_str_str_str_str_str_str_str_str_str_str_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str\
    \ = vowels_list_set_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str.toList\n\
    \        val vowels_list_set_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str\
    \ = vowels_list_set_str_str_str_str_", "        val vowels = \"aeiouAEIOU\"\n\
    \        val result = text.filterNot(vowels.contains)\n        result", "    \
    \    val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val newText = text.toLowerCase // convert text to lowercase\n     \
    \   val newTextWithoutVowels = newText.filterNot(vowels.contains)\n        newTextWithoutVowels",
  "        val vowels = \"aeiouAEIOU\"\n        val newText = text.toList\n      \
    \  val vowelsRemoved = newText.filter(x => !vowels.contains(x))\n        vowelsRemoved.mkString",
  "        var newText = \"\"\n        for (i <- 0 until text.length)\n          \
    \  if (text.charAt(i) != 'a' && text.charAt(i) != 'e' && text.charAt(i) != 'i'\
    \ && text.charAt(i) != 'o' && text.charAt(i) != 'u')\n                newText\
    \ += text.charAt(i)\n        return newText", "        val vowels = \"aeiouAEIOU\"\
    \n        var newText = text\n        for (i <- 0 until text.length){\n      \
    \      if (vowels.contains(text.charAt(i))){\n                newText = newText.substring(0,\
    \ i) + newText.substring(i+1, newText.length)\n            }\n        }\n    \
    \    return newText", "        val vowels = \"aeiouAEIOU\"\n        val result\
    \ = text.filterNot(vowels.contains)\n        result", "        var result = \"\
    \"\n        for (i <- 0 until text.length)\n            if (text.charAt(i) ==\
    \ 'a' || text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) == 'o'\
    \ || text.charAt(i) == 'u')\n                result = result + text.charAt(i)\n\
    \        return result", "        val vowels = \"aeiouAEIOU\".toCharArray\n  \
    \      val result = new StringBuilder\n        for (i <- 0 until text.length)\
    \ {\n            if (vowels.contains(text.charAt(i))) {\n                result.append(text.charAt(i))\n\
    \            }\n        }\n        return result.toString", "        var vowels\
    \ = \"aeiouAEIOU\"\n        var newText = \"\"\n        for (i <- 0 until text.length)\
    \ {\n            if (vowels.indexOf(text.charAt(i)) >= 0) {\n                newText\
    \ += text.charAt(i)\n            }\n        }\n        return newText", "    \
    \    val vowels = \"aeiouAEIOU\"\n        val result = new StringBuilder\n   \
    \     for (i <- 0 until text.length)\n            if (vowels.indexOf(text.charAt(i))\
    \ != -1)\n                result.append(text.charAt(i))\n        return result.toString",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result\
    \ = text.filterNot(vowels.contains)\n        result", "        val vowels = \"\
    aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n        result",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result\
    \ = text.filterNot(vowels.contains)\n        result", "        val vowels = \"\
    aeiouAEIOU\".toList\n        val result = text.filterNot(vowels.contains)\n  \
    \      result", "        val vowels = \"aeiouAEIOU\"\n        var result = \"\"\
    \n        for (c <- text) {\n            if (vowels.contains(c)) {\n         \
    \       result += c\n            }\n        }\n        result", "        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\".toSet\n        val result\
    \ = text.filterNot(vowels.contains)\n        result", "        val vowels = \"\
    aeiouAEIOU\".toList\n        val result = text.filterNot(vowels.contains)\n  \
    \      result", "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val vowelsSet\
    \ = vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorIterator = vowelsSetIterator.iterator\n        val\
    \ vowelsSetIteratorIteratorSize = vowelsSetIteratorIterator.size\n        val\
    \ vowelsSetIteratorIteratorIterator = vowelsSetIteratorIterator.iterator\n   \
    \     val vowelsSetIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIterator = vowelsSetIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIterator = vowelsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIterator = vowelsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n     \
    \   val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n \
    \       val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator",
  "        var vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var newText\
    \ = text\n        for(i <- 0 until text.length){\n            val c = text.charAt(i)\n\
    \            if(vowels.contains(c)){\n                newText = newText.replace(c,\
    \ \"\")\n            }\n        }\n        newText", "        val vowels = \"\
    aeiouAEIOU\"\n        val result = text.filter(c => !vowels.contains(c))\n   \
    \     result", "        val vowels = \"aeiouAEIOU\"\n        var result = \"\"\
    \n        for (c <- text) {\n            if (vowels.contains(c)) {\n         \
    \       result += c\n            }\n        }\n        result", "        var result\
    \ = text\n        val vowels = \"aeiouAEIOU\"\n        val vowelsSet = vowels.toSet\n\
    \        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator = vowelsSet.iterator\n\
    \        val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextValue\
    \ = vowelsSetIteratorNext.toString.toUpperCase\n        val vowelsSetIteratorNextNext\
    \ = vowelsSetIteratorNext.next\n        val vowelsSetIteratorNextNextValue = vowelsSetIteratorNextNext.toString.toUpperCase\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextValue = vowelsSetIteratorNextNextNext.toString.toUpperCase\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextValue = vowelsSetIteratorNextNextNextNext.toString.toUpperCase\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextValue = vowelsSetIteratorNextNextNextNextNext.toString.toUpperCase\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextValue = vowelsSetIteratorNextNextNextNextNextNext.toString.toUpperCase\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextValue = vowelsSetIteratorNextNextNextNextNextNextNextNext.toString.toUpperCase\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextValue = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.toString.toUpperCase\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextValue = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.toString.toUpperCase\n\
    \        val vowels", "        val vowels = \"aeiouAEIOU\"\n        val newText\
    \ = text.filterNot(vowels.contains)\n        newText", "        val vowels = \"\
    aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n        result",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result\
    \ = text.filterNot(vowels.contains)\n        result", "        var newText : String\
    \ = \"\"\n        for (i <- 0 until text.length)\n            if (text.charAt(i)\
    \ == 'a' || text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) ==\
    \ 'o' || text.charAt(i) == 'u')\n                newText += text.charAt(i)\n \
    \           else\n                newText += text.charAt(i)\n        newText",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result\
    \ = text.filterNot(vowels.contains)\n        result", "        val vowels = \"\
    aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\".toCharArray\n        val\
    \ result = new StringBuilder\n        for(i <- 0 until text.length){\n       \
    \     val c = text.charAt(i)\n            if(vowels.contains(c)){\n          \
    \      result.append(c)\n            }\n        }\n        return result.toString()",
  "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val result = text.filterNot(vowels.contains)\n        result", "  \
    \      val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val newText = text\n        val newTextWithoutVowels = newText.filterNot(vowels.contains)\n\
    \        newTextWithoutVowels", "        val vowels = \"aeiouAEIOU\"\n       \
    \ val vowelsSet = vowels.toSet\n        val textSet = text.toSet\n        val\
    \ result = textSet.filterNot(vowelsSet.contains)\n        result.toString", " \
    \       val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result\
    \ = text.filterNot(vowels.contains)\n        result", "        var newText : String\
    \ = \"\"\n        for(i <- 0 until text.length){\n            if(text.charAt(i)\
    \ == 'a' || text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) ==\
    \ 'o' || text.charAt(i) == 'u'){\n                newText += text.charAt(i)\n\
    \            }\n        }\n        return newText", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")\n        val\
    \ result = text.filterNot(vowels.contains)\n        result", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n   \
    \     result", "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\".toSet\n        val result\
    \ = text.filterNot(vowels.contains)\n        result", "        var vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        var newText = text\n        for(i <-\
    \ 0 until text.length){\n            if(!vowels.contains(text.charAt(i))){\n \
    \               newText = newText.substring(0, i) + newText.substring(i+1, newText.length)\n\
    \            }\n        }\n        return newText", "        val vowels = \"aeiouAEIOU\"\
    \n        val result = text.filterNot(vowels.contains)\n        result", "   \
    \     var newText = \"\"\n        var vowels = \"aeiouAEIOU\"\n        for (i\
    \ <- 0 until text.length){\n            if (vowels.contains(text.charAt(i))){\n\
    \                newText += text.charAt(i)\n            }\n        }\n       \
    \ return newText", "        var newText = \"\"\n        for(i <- 0 until text.length){\n\
    \            val c = text.charAt(i)\n            if(c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u'){\n                newText += c\n           \
    \ }\n        }\n        return newText", "        val vowels = \"aeiouAEIOU\"\n\
    \        val result = text.filterNot(vowels.contains)\n        result", "    \
    \    val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val vowelsSet\
    \ = vowels.toSet\n        val result = text.filterNot(vowelsSet.contains)\n  \
    \      result", "        val vowels = \"aeiouAEIOU\"\n        val result = new\
    \ StringBuilder\n        for (i <- 0 until text.length) {\n            val c =\
    \ text.charAt(i)\n            if (vowels.indexOf(c) >= 0) {\n                result.append(c)\n\
    \            } else {\n                result.append(\" \")\n            }\n \
    \       }\n        return result.toString()", "        val vowels = \"aeiouAEIOU\"\
    \n        val newText = text.filter(c => !vowels.contains(c))\n        newText",
  "        val vowels = \"aeiouAEIOU\"\n        val vowelsSet = vowels.toSet\n   \
    \     val vowelsSetIterator = vowelsSet.iterator\n        val vowelsSetIteratorNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext", " \
    \       val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val newText = text.toList.filter(x => !vowels.contains(x))\n      \
    \  newText.mkString(\"\")", "        val vowels = \"aeiouAEIOU\"\n        val\
    \ vowelsSet = vowels.toSet\n        val textSet = text.toSet\n        val result\
    \ = textSet.filterNot(vowelsSet.contains)\n        result", "        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        var result = \"\"\n        for (c <- text)\
    \ {\n            if (vowels.contains(c)) {\n                result += c\n    \
    \        }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n\
    \        val result = text.filterNot(vowels.contains)\n        result", "    \
    \    val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var result =\
    \ \"\"\n        for (c <- text) {\n            if (vowels.contains(c)) {\n   \
    \             result += c\n            }\n        }\n        result", "      \
    \  var newText : String = \"\"\n        for (i <- 0 until text.length){\n    \
    \        if (text.charAt(i) == 'a' || text.charAt(i) == 'e' || text.charAt(i)\
    \ == 'i' || text.charAt(i) == 'o' || text.charAt(i) == 'u'){\n               \
    \ newText += text.charAt(i)\n            }\n        }\n        return newText",
  "        val vowels = \"aeiouAEIOU\"\n        val newText = text.filterNot(vowels.contains)\n\
    \        newText", "        val vowels = \"aeiouAEIOU\"\n        val result =\
    \ text.filterNot(vowels.contains)\n        result", "        var newText = \"\"\
    \n        for (i <- 0 until text.length) {\n            if (text(i) == 'a' ||\
    \ text(i) == 'e' || text(i) == 'i' || text(i) == 'o' || text(i) == 'u') {\n  \
    \              newText += text(i)\n            }\n        }\n        return newText",
  "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val result = text.filterNot(vowels.contains)\n        result", "  \
    \      val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\");\n        val\
    \ result = new StringBuilder();\n        for (i <- 0 until text.length)\n    \
    \        if (vowels.contains(text.charAt(i)))\n                result.append(text.charAt(i));\n\
    \            else\n                result.append(text.charAt(i));\n        return\
    \ result.toString();", "        val vowels = \"aeiouAEIOU\"\n        var result\
    \ = \"\"\n        for (i <- 0 until text.length) {\n            val c = text.charAt(i)\n\
    \            if (vowels.contains(c)) {\n                result += c\n        \
    \    }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n   \
    \     val result = text.filterNot(vowels.contains)\n        result", "       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var newText = text\n\
    \        for(i <- 0 until text.length){\n            val char = text.charAt(i)\n\
    \            if(vowels.contains(char)){\n                newText = newText.substring(0,\
    \ i) + newText.substring(i+1, newText.length)\n            }\n        }\n    \
    \    newText", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n\
    \        val result = text.filterNot(vowels.contains)\n        result", "    \
    \    val vowels = \"aeiouAEIOU\"\n        val vowelsSet = scala.collection.mutable.Set[Char](vowels.toCharArray)\n\
    \        val vowelsSetIterator = vowelsSet.iterator\n        val vowelsSetIteratorNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val newText = text\n        for(i <- 0 until text.length){\n\
    \            val char = text.charAt(i)\n            if(vowels.contains(char)){\n\
    \                newText = newText.replaceFirst(char, \"\")\n            }\n \
    \       }\n        newText", "        val vowels = \"aeiouAEIOU\"\n        val\
    \ newText = text.replaceAll(\"[\" + vowels + \"]\", \"\")\n        newText", " \
    \       val vowels = \"aeiouAEIOU\"\n        val vowelsSet = scala.collection.mutable.Set[Char](vowels.toCharArray)\n\
    \        val result = text.filterNot(vowelsSet.contains)\n        result", " \
    \       val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        var result = \"\"\n        for(i <- 0 until text.length){\n\
    \            val c = text.charAt(i)\n            if(c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u'){\n                result = result + c\n    \
    \        }\n        }\n        result", "        var newText : String = \"\"\n\
    \        for (i <- 0 until text.length)\n            if (text(i) != \"a\")\n \
    \               newText += text(i)\n        newText", "        var vowels = \"\
    aeiouAEIOU\".toCharArray\n        var newText = \"\"\n        var i = 0\n    \
    \    var j = 0\n        var k = 0\n        var l = 0\n        var count = 0\n\
    \        while(i < text.length){\n            while(j < vowels.length){\n    \
    \            if(text.charAt(i) == vowels[j]){\n                    newText +=\
    \ text.charAt(i)\n                    i += 1\n                    j += 1\n   \
    \                 k += 1\n                    l += 1\n                    count\
    \ += 1\n                }\n                j += 1\n            }\n           \
    \ i += 1\n        }\n        if(count == 0){\n            newText = text\n   \
    \     }\n        return newText", "        val vowels = \"aeiouAEIOU\".toCharArray\n\
    \        val result = new StringBuilder\n        for (c <- text) {\n         \
    \   if (vowels.contains(c)) {\n                result.append(c)\n            }\n\
    \        }\n        return result.toString()", "        val vowels = \"aeiouAEIOU\"\
    \n        val result = new StringBuilder\n        for (i <- 0 until text.length)\n\
    \            if (vowels.indexOf(text.charAt(i)) != -1)\n                result.append(text.charAt(i))\n\
    \        return result.toString()", "        val vowels = \"aeiouAEIOU\"\n   \
    \     val result = new StringBuilder\n        for (c <- text) {\n            if\
    \ (vowels.contains(c)) {\n                result.append(c)\n            }\n  \
    \      }\n        return result.toString()", "        var result = \"\"\n    \
    \    for (i <- 0 until text.length)\n            if (text.charAt(i) == 'a' ||\
    \ text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) == 'o' || text.charAt(i)\
    \ == 'u')\n                result += text.charAt(i)\n        return result", " \
    \       val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val vowelsSet\
    \ = vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n       \
    \ val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextNext\
    \ = vowelsSetIteratorNext.next\n        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowel", "        val vowels = \"aeiouAEIOU\"\n        var newText\
    \ = \"\"\n        for (i <- 0 until text.length) {\n            val c = text.charAt(i)\n\
    \            if (vowels.contains(c)) {\n                newText += c\n       \
    \     }\n        }\n        return newText", "        var result = \"\"\n    \
    \    for(i <- 0 until text.length){\n            val c = text.charAt(i)\n    \
    \        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'){\n     \
    \           result += c\n            }\n        }\n        result", "        val\
    \ vowels = \"aeiouAEIOU\"\n        var newText = text\n        for (i <- 0 until\
    \ text.length)\n        {\n            if (vowels.contains(text.charAt(i)))\n\
    \                newText = newText.substring(0, i) + newText.substring(i + 1,\
    \ newText.length)\n        }\n        newText"]
stop_tokens:
- "\n    }\n"

name: HumanEval_51_remove_vowels
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // remove_vowels is a function that takes string and returns string without\
  \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
  abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\"\
  )\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
  zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\"\
  )).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
  bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
  \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
  acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\"\
  )));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
completions: ["        var result = \"\"\n        for(i <- 0 until text.length){\n\
    \            val c = text.charAt(i)\n            if(c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u'){\n                result += c\n            }\n\
    \        }\n        result", "        val vowels = \"aeiouAEIOU\"\n        val\
    \ result = text.filterNot(vowels.contains)\n        result", "        var newText\
    \ = text\n        val vowels = \"aeiouAEIOU\"\n        val vowelsSet = scala.collection.mutable.Set[Char](vowels)\n\
    \        val vowelsSetIterator = vowelsSet.iterator\n        val vowelsSetIteratorNext\
    \ = vowelsSetIterator.next\n        while(vowelsSetIteratorNext.isDefined) {\n\
    \            newText = newText.replaceAll(vowelsSetIteratorNext.get.toString(),\
    \ \"\")\n            vowelsSetIterator = vowelsSet.iterator\n            vowelsSetIteratorNext\
    \ = vowelsSetIterator.next\n        }\n        newText", "        val vowels =\
    \ \"aeiouAEIOU\".toSet\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        var newText = \"\"\n        for (i <- 0 until text.length){\n\
    \            if (text.charAt(i) == 'a' || text.charAt(i) == 'e' || text.charAt(i)\
    \ == 'i' || text.charAt(i) == 'o' || text.charAt(i) == 'u'){\n               \
    \ newText += text.charAt(i)\n            }\n        }\n        return newText",
  "        val vowels = \"aeiouAEIOU\".toSet\n        val result = text.filter(x =>\
    \ !vowels.contains(x))\n        result", "        val vowels = \"aeiouAEIOU\"\
    .toCharArray\n        val result = text.filter(c => !vowels.contains(c))\n   \
    \     result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n\
    \        val result = new StringBuilder\n        for (c <- text) {\n         \
    \   if (vowels.contains(c)) {\n                result.append(c)\n            }\
    \ else {\n                result.append(\" \")\n            }\n        }\n   \
    \     return result.toString", "        val vowels = Set(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\")\n        val result = text.filter(x => !vowels.contains(x))\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val newText =\
    \ text.filterNot(vowels.contains)\n        newText", "        val vowels = \"\
    aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n        result",
  "        val vowels = \"aeiouAEIOU\".toCharArray\n        val result = new StringBuilder\n\
    \        for (i <- 0 until text.length)\n            if (vowels(i) != text.charAt(i))\n\
    \                result.append(text.charAt(i))\n        return result.toString",
  "        val vowels = \"aeiouAEIOU\"\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val result = text.filterNot(vowels.contains)\n        result", "  \
    \      val vowels = \"aeiouAEIOU\".toSet\n        val result = text.filterNot(vowels.contains)\n\
    \        result", "        var newText : String = \"\"\n        for(i <- 0 until\
    \ text.length){\n            if(text.charAt(i) == 'a' || text.charAt(i) == 'e'\
    \ || text.charAt(i) == 'i' || text.charAt(i) == 'o' || text.charAt(i) == 'u'){\n\
    \                newText += text.charAt(i)\n            }\n        }\n       \
    \ return newText", "        val vowels = \"aeiouAEIOU\"\n        var result =\
    \ \"\"\n        for (i <- 0 until text.length) {\n            val c = text.charAt(i)\n\
    \            if (vowels.contains(c)) {\n                result += c\n        \
    \    }\n        }\n        result", "        var vowels = \"aeiouAEIOU\"\n   \
    \     var newText = \"\"\n        for (i <- 0 until text.length) {\n         \
    \   if (vowels.contains(text.charAt(i))) {\n                newText += text.charAt(i)\n\
    \            }\n        }\n        return newText", "        val vowels = \"aeiouAEIOU\"\
    \n        val result = text.filterNot(vowels.contains)\n        result"]
stop_tokens:
- "\n    }\n"

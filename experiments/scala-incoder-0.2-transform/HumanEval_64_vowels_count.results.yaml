language: scala
name: HumanEval_64_vowels_count
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        var count = 0\n        var lastVowel = vowels.last\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                if (lastVowel == s.charAt(i)) {\n                    count +=\
    \ 1\n                    lastVowel = vowels.last\n                }\n        \
    \        else {\n                    count = 0\n                    lastVowel\
    \ = s.charAt(i)\n                }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppgg516h9.scala:30)\n\tat Problem.main(tmppgg516h9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793604
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ s.toCharArray.filter(x => vowels.contains(x)).length\n        vowelsCount\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpx3b67eid.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (x : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793603
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a','e','i','o','u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for(i <- 0 until s.length){\n            val c = s.charAt(i)\n      \
    \      if(vowels.contains(c)){\n                vowelsCount += c\n           \
    \ }\n        }\n        vowelsCount.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuykerwho.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793602
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for (i <- 0 until s.length)\n            if (vowels(i) == s(i)) {\n  \
    \              count += 1\n            }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp82s_4fip.scala:17:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types String and Char cannot be compared with == or !=\n1 error found\n"
  stdout: ''
  timestamp: 1659793461
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a','e','i','o','u')\n        val vowels_count = s.length\n \
    \       val vowels_count_in_string = vowels.count(s contains _)\n        vowels_count_in_string\
    \ * vowels_count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgftp3l85.scala:20)\n\tat Problem.main(tmpgftp3l85.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793604
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = s.toCharArray.filter(c =>\
    \ vowels.contains(c.toString)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbrfpgy06.scala:21)\n\tat Problem.main(tmpbrfpgy06.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowelCount = 0\n        var vowelIndex = 0\n        var vowel = s.charAt(0)\n\
    \        var vowel\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx6hc10ep.scala:105:4 ---------------------------\e\
    [0m\e[0m\n\e[31m105 |\e[0m    }\n\e[31m\e[31m    |\e[0m    ^\e[0m\n\e[31m    |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx6hc10ep.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mvowelCount\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelCount is already defined as \e[33mvariable\e[0m \e[35mvowelCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx6hc10ep.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mvar\e[0m \e[36mvowelIndex\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvowelIndex is already\
    \ defined as \e[33mvariable\e[0m \e[35mvowelIndex\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx6hc10ep.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mvowel\e[0m = s.charAt(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowel is already defined as \e[33mvariable\e[0m \e[35mvowel\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx6hc10ep.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mvar\e[0m \e[36mvowelCount\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvowelCount is already\
    \ defined as \e[33mvariable\e[0m \e[35mvowelCount\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx6hc10ep.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mvowelIndex\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m  "
  stdout: ''
  timestamp: 1659793603
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for (i <- 0 until s.length)\n            if (vowels(i) == s(i) && s(i)\
    \ != \"y\")\n                count += 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpzr395rb6.scala:17:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i) && s(i)\
    \ != \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types String and Char cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpzr395rb6.scala:17:37 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i) && s(i)\
    \ != \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m                                \
    \     ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and String\
    \ cannot be compared with == or !=\n2 errors found\n"
  stdout: ''
  timestamp: 1659793454
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for(i <- 0 until s.length)\n            if(s.charAt(i) ==\
    \ 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u')\n                count += 1\n        for(i <- 0 until s.length)\n  \
    \          if(s.charAt(i) == 'y')\n                count += 1\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpekx13g4m.scala:25)\n\tat Problem.main(tmpekx13g4m.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793604
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ s.count(vowels)\n        vowelsCount\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphjdf16uk.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(vowels)\n\e[31m\e[31m   |\e[0m                                 \
    \ ^^^^^^\e[0m\n\e[31m   |\e[0m                                  Found:    (vowels\
    \ : Array[String])\n\e[31m   |\e[0m                                  Required:\
    \ Char => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793603
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ s.toCharArray.filter(x => vowels.contains(x)).length\n        vowelsCount\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpx3b67eid.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (x : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793603
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var vowels = \"aeiou\"\n        var vowelsCount = 0\n   \
    \     var vowelsCountArray = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n      \
    \  var vowelsCountArrayLength = vowelsCountArray.length\n        var vowelsCountArrayIndex\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n        var vowelsCountArrayIndexLength\
    \ = 0\n        var vowelsCountArrayIndexLength = 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphmpehv_5.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCountArrayIndexLength\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCountArrayIndexLength is already defined as \e[33mvariable\e\
    [0m \e[35mvowelsCountArrayIndexLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmphmpehv_5.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCountArrayIndexLength\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCountArrayIndexLength is already defined as \e[33mvariable\e\
    [0m \e[35mvowelsCountArrayIndexLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmphmpehv_5.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCountArrayIndexLength\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCountArrayIndexLength is already defined as \e[33mvariable\e\
    [0m \e[35mvowelsCountArrayIndexLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmphmpehv_5.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCountArrayIndexLength\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCountArrayIndexLength is already defined as \e[33mvariable\e\
    [0m \e[35mvowelsCountArrayIndexLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmphmpehv_5.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |"
  stdout: ''
  timestamp: 1659793603
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toSet\n        val vowelsCount = s.toCharArray.filter(vowels.contains).length\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfgennjpl.scala:21)\n\tat Problem.main(tmpfgennjpl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793604
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = s.count(vowels.indexOf)\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpbeqsj3ng.scala:15:41 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = s.count(vowels.indexOf)\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mindexOf\e\
    [0m in \e[33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e[0m (x$0: String,\
    \ x$1: Int): Int\n\e[31m   |\e[0m (x$0: String): Int\n\e[31m   |\e[0m (x$0: Int,\
    \ x$1: Int): Int\n\e[31m   |\e[0m (x$0: Int): Int\n\e[31m   |\e[0mmatch expected\
    \ type Char => Boolean\n1 error found\n"
  stdout: ''
  timestamp: 1659793602
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.toCharArray.filter(x => vowels.contains(x)).size\n        vowels_count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp133b_xcw.scala:15:69\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_count\e\
    [0m = s.toCharArray.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \     ^\e[0m\n\e[31m   |\e[0m                                                \
    \    Found:    (x : Char)\n\e[31m   |\e[0m                                   \
    \                 Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793603
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnlqq3r7b.scala:20)\n\tat Problem.main(tmpnlqq3r7b.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793456
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = s.count(vowels.indexOf)\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpbeqsj3ng.scala:15:41 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = s.count(vowels.indexOf)\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mindexOf\e\
    [0m in \e[33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e[0m (x$0: String,\
    \ x$1: Int): Int\n\e[31m   |\e[0m (x$0: String): Int\n\e[31m   |\e[0m (x$0: Int,\
    \ x$1: Int): Int\n\e[31m   |\e[0m (x$0: Int): Int\n\e[31m   |\e[0mmatch expected\
    \ type Char => Boolean\n1 error found\n"
  stdout: ''
  timestamp: 1659793602
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4eoqdizs.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprqdo145d.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[Char]()\n    \
    \    for (c <- s) {\n            if (vowels.contains(c)) {\n                vowelsCount\
    \ += c\n            }\n        }\n        vowelsCount.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3e3zs8cc.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793438

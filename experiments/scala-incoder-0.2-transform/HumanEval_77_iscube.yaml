name: HumanEval_77_iscube
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that takes an integer a and returns True \n    // if this\
  \ ingeger is a cube of some integer number.\n    // Note: you may assume the input\
  \ is always valid.\n    // Examples:\n    // >>> iscube((1l))\n    // (true)\n \
  \   // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n    // (true)\n\
  \    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n    // (true)\n\
  \    // >>> iscube((180l))\n    // (false)\n    def iscube(a : Long) : Boolean =\
  \ {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(iscube((1l)) == (true));\n\
  \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n  \
  \  assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n  \
  \  assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n   \
  \ assert(iscube((1729l)) == (false));\n    }\n\n}\n"
completions: ["        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        cubes += cube\n        cubes.toList.forall(cubes.contains)", "      \
    \  val cube = a.toString.toInt\n        cube == cube * cube * cube", "       \
    \ val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        cubes += cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       val cubes = cube.toString.toInt\n        val cubesString = cubes.toString\n\
    \        val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.Set[Long]()\n        cubes += a\n        cubes += a * a\n        cubes\
    \ += a * a * a\n        cubes += a * a * a * a\n        cubes += a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        ",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toString.toInt\n        val cubes = cube.toString.toInt\n \
    \       cubes % 3 == 0", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.ListBuffer(cube)\n        cubes += cube\n        cubes.toList.forall(cubes.contains)",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong",
  "        val cube = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n  \
    \      cubes += a\n        cubes += a * a\n        cubes += a * a * a\n      \
    \  cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a\n        ", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += cube\n\
    \        cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(cube)",
  "        val n = a.toInt\n        val cube = n * n * n\n        cube == a.toLong",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        cube == (a.toString.toInt * a.toString.toInt * a.toString.toInt)", " \
    \       val n = a.toInt\n        if (n == 1) true\n        else if (n % 2 == 0)\
    \ iscube(n / 2)\n        else false", "        val cube = a.toString.toLong *\
    \ a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong", " \
    \       val n = a.toInt\n        val m = a.toInt\n        val l = a.toInt\n  \
    \      val k = a.toInt\n        val q = a.toInt\n        val r = a.toInt\n   \
    \     val s = a.toInt\n        val t = a.toInt\n        val u = a.toInt\n    \
    \    val v = a.toInt\n        val w = a.toInt\n        val x = a.toInt\n     \
    \   val y = a.toInt\n        val z = a.toInt\n        val cube = a.toInt\n   \
    \     val cube2 = a.toInt\n        val cube3 = a.toInt\n        val cube4 = a.toInt\n\
    \        val cube5 = a.toInt\n        val cube6 = a.toInt\n        val cube7 =\
    \ a.toInt\n        val cube8 = a.toInt\n        val cube9 = a.toInt\n        val\
    \ cube10 = a.toInt\n        val cube11 = a.toInt\n        val cube12 = a.toInt\n\
    \        val cube13 = a.toInt\n        val cube14 = a.toInt\n        val cube15\
    \ = a.toInt\n        val cube16 = a.toInt\n        val cube17 = a.toInt\n    \
    \    val cube18 = a.toInt\n        val cube19 = a.toInt\n        val cube20 =\
    \ a.toInt\n        val cube21 = a.toInt\n        val cube22 = a.toInt\n      \
    \  val cube23 = a.toInt\n        val cube24 = a.toInt\n        val cube25 = a.toInt\n\
    \        val cube26 = a.toInt\n        val cube27 = a.toInt\n        val cube28\
    \ = a.toInt\n        val cube29 = a.toInt\n        val cube30 = a.toInt\n    \
    \    val cube31 = a.toInt\n        val cube32 = a.toInt\n        val cube33 =\
    \ a.toInt\n        val cube34 = a.toInt\n        val cube35 = a.toInt\n      \
    \  val cube36 = a.toInt\n        val cube37 = a.toInt\n        val cube38 = a.toInt\n\
    \        val cube39 = a.toInt\n        val cube40 = a.toInt\n        val cube41\
    \ = a.toInt\n        val cube42 = a.toInt\n        val cube43 = a.toInt\n    \
    \    val cube44 = a.toInt\n        val cube45 = a.toInt\n        val cube46 =\
    \ a.toInt\n        val cube47 = a.toInt\n        val cube", "        val cube\
    \ = a.toString.toInt\n        cube == cube * cube * cube"]
stop_tokens:
- "\n    }\n"

name: HumanEval_77_iscube
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that takes an integer a and returns True \n    // if this\
  \ ingeger is a cube of some integer number.\n    // Note: you may assume the input\
  \ is always valid.\n    // Examples:\n    // >>> iscube((1l))\n    // (true)\n \
  \   // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n    // (true)\n\
  \    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n    // (true)\n\
  \    // >>> iscube((180l))\n    // (false)\n    def iscube(a : Long) : Boolean =\
  \ {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(iscube((1l)) == (true));\n\
  \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n  \
  \  assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n  \
  \  assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n   \
  \ assert(iscube((1729l)) == (false));\n    }\n\n}\n"
completions: ["        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        cubes += cube\n        cubes.toList.forall(cubes.contains)", "      \
    \  val cube = a.toString.toInt\n        cube == cube * cube * cube", "       \
    \ val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        cubes += cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       val cubes = cube.toString.toInt\n        val cubesString = cubes.toString\n\
    \        val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.Set[Long]()\n        cubes += a\n        cubes += a * a\n        cubes\
    \ += a * a * a\n        cubes += a * a * a * a\n        cubes += a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        ",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toString.toInt\n        val cubes = cube.toString.toInt\n \
    \       cubes % 3 == 0", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.ListBuffer(cube)\n        cubes += cube\n        cubes.toList.forall(cubes.contains)",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong",
  "        val cube = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n  \
    \      cubes += a\n        cubes += a * a\n        cubes += a * a * a\n      \
    \  cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a\n        ", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += cube\n\
    \        cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(cube)",
  "        val n = a.toInt\n        val cube = n * n * n\n        cube == a.toLong",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        cube == (a.toString.toInt * a.toString.toInt * a.toString.toInt)", " \
    \       val n = a.toInt\n        if (n == 1) true\n        else if (n % 2 == 0)\
    \ iscube(n / 2)\n        else false", "        val cube = a.toString.toLong *\
    \ a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong", " \
    \       val n = a.toInt\n        val m = a.toInt\n        val l = a.toInt\n  \
    \      val k = a.toInt\n        val q = a.toInt\n        val r = a.toInt\n   \
    \     val s = a.toInt\n        val t = a.toInt\n        val u = a.toInt\n    \
    \    val v = a.toInt\n        val w = a.toInt\n        val x = a.toInt\n     \
    \   val y = a.toInt\n        val z = a.toInt\n        val cube = a.toInt\n   \
    \     val cube2 = a.toInt\n        val cube3 = a.toInt\n        val cube4 = a.toInt\n\
    \        val cube5 = a.toInt\n        val cube6 = a.toInt\n        val cube7 =\
    \ a.toInt\n        val cube8 = a.toInt\n        val cube9 = a.toInt\n        val\
    \ cube10 = a.toInt\n        val cube11 = a.toInt\n        val cube12 = a.toInt\n\
    \        val cube13 = a.toInt\n        val cube14 = a.toInt\n        val cube15\
    \ = a.toInt\n        val cube16 = a.toInt\n        val cube17 = a.toInt\n    \
    \    val cube18 = a.toInt\n        val cube19 = a.toInt\n        val cube20 =\
    \ a.toInt\n        val cube21 = a.toInt\n        val cube22 = a.toInt\n      \
    \  val cube23 = a.toInt\n        val cube24 = a.toInt\n        val cube25 = a.toInt\n\
    \        val cube26 = a.toInt\n        val cube27 = a.toInt\n        val cube28\
    \ = a.toInt\n        val cube29 = a.toInt\n        val cube30 = a.toInt\n    \
    \    val cube31 = a.toInt\n        val cube32 = a.toInt\n        val cube33 =\
    \ a.toInt\n        val cube34 = a.toInt\n        val cube35 = a.toInt\n      \
    \  val cube36 = a.toInt\n        val cube37 = a.toInt\n        val cube38 = a.toInt\n\
    \        val cube39 = a.toInt\n        val cube40 = a.toInt\n        val cube41\
    \ = a.toInt\n        val cube42 = a.toInt\n        val cube43 = a.toInt\n    \
    \    val cube44 = a.toInt\n        val cube45 = a.toInt\n        val cube46 =\
    \ a.toInt\n        val cube47 = a.toInt\n        val cube", "        val cube\
    \ = a.toString.toInt\n        cube == cube * cube * cube", "        val cube =\
    \ a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n    \
    \    cubes += a\n        cubes += a * a\n        cubes += a * a * a\n        cubes\
    \ += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n \
    \       cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        ", "        val cube = a.toInt\n      \
    \  val cubes = mutable.ArrayBuffer(cube)\n        val cubesCount = cubes.length\n\
    \        val cubesSum = cubes.sum\n        val cubesSumSquare = cubesSum * cubesSum\n\
    \        val cubesSumCube = cubesSum * cubes\n        val cubesSumCube2 = cubesSumCube\
    \ * cubes\n        val cubesSumCube3 = cubesSumCube2 * cubes\n        val cubesSumCube4\
    \ = cubesSumCube3 * cubes\n        val cubesSumCube5 = cubesSumCube4 * cubes\n\
    \        val cubesSumCube6 = cubesSumCube5 * cubes\n        val cubesSumCube7\
    \ = cubesSumCube6 * cubes\n        val cubesSumCube8 = cubesSumCube7 * cubes\n\
    \        val cubesSumCube9 = cubesSumCube8 * cubes\n        val cubesSumCube10\
    \ = cubesSumCube9 * cubes\n        val cubesSumCube11 = cubesSumCube10 * cubes\n\
    \        val cubesSumCube12 = cubesSumCube11 * cubes\n        val cubesSumCube13\
    \ = cubesSumCube12 * cubes\n        val cubesSumCube14 = cubesSumCube13 * cubes\n\
    \        val cubesSumCube15 = cubesSumCube14 * cubes\n        val cubesSumCube16\
    \ = cubesSumCube15 * cubes\n        val cubesSumCube17 = cubesSumCube16 * cubes\n\
    \        val cubesSumCube18 = cubesSumCube17 * cubes\n        val cubesSumCube19\
    \ = cubesSumCube18 * cubes\n        val cubesSumCube20 = cubesSumCube19 * cubes\n\
    \        val cubesSumCube21 = cubesSumCube20 * cubes\n        val cubesSumCube22\
    \ = cubesSumCube21 * cubes\n        val cubesSumCube23 = cubesSumCube22 * cubes\n\
    \        val cubesSumCube24 = cubesSumCube23 * cubes\n        val cubesSumCube25\
    \ = cubesSumCube24 * cubes\n        val cubesSumCube26 = cubesSumCube25 * cubes\n\
    \        val cubesSumCube27 = cubesSumCube26 * cubes\n        val cubesSumCube28\
    \ = cubesSumCube27 * cubes\n        val cubes", "        val cube = a.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.HashSet[Long]()\n\
    \        cubesSet += cube\n        cubesSet += cube * cube\n        cubesSet +=\
    \ cube * cube * cube\n        cubesSet += cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube\n        cubesSet += cube * cube * cube\
    \ * cube * cube * cube\n        cubesSet += cube * cube * cube * cube * cube *\
    \ cube * cube\n        cubesSet += cube * cube * cube * cube * cube * cube * cube\
    \ * cube\n        cubesSet += cube * cube * cube * cube * cube * cube * cube *\
    \ cube * cube\n        cubesSet += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube\n        cubesSet += cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube\n        cubesSet += cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubesSet += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube ", "        val\
    \ cube = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n        cubes\
    \ += cube\n        cubes += cube * cube\n        cubes += cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cu",
  "        val n = a.toInt\n        if (n == 1) true\n        else if (n == 0) true\n\
    \        else if (n % 2 == 0) true\n        else false", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toString.toInt\n        cube == cube * cube * cube", "    \
    \    val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesSet = mutable.Set[Long]()\n        cubesSet += cube\n      \
    \  cubesSet += cube*cube\n        cubesSet += cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube\n     \
    \   cubesSet += cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toString.toInt\n        cube == cube * cube * cube", "    \
    \    val cube = a.toString.toInt\n        cube == cube * cube * cube", "     \
    \   val cube = a.toString.toInt\n        cube == cube * cube * cube", "      \
    \  val cube = a.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n \
    \       cubes += a\n        cubes += a * a\n        cubes += a * a * a\n     \
    \   cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += a\n        cubes\
    \ += a * a\n        cubes += a * a * a\n        cubes += a * a * a * a\n     \
    \   cubes += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        ", " \
    \       val cube = a.toString.toInt\n        cube == cube * cube * cube", "  \
    \      val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * ", "        val cube = a.toString.toInt\n        cube == (a.toString.toInt\
    \ * a.toString.toInt * a.toString.toInt)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.Set[Long]()\n        cubes += 1\n        cubes +=\
    \ cube * cube\n        cubes += cube * cube * cube\n        cubes += cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cu", "        val cube = a.toString.toInt\n\
    \        cube == (a.toString.toInt * a.toString.toInt * a.toString.toInt)", " \
    \       val cube = a.toInt\n        val cubes = cube.toLong * cube.toLong * cube.toLong\n\
    \        cubes.toInt % 1 == 0", "        val cube = a.toString.toInt\n       \
    \ val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += a\n        cubes\
    \ += a * a\n        cubes += a * a * a\n        cubes += a * a * a * a\n     \
    \   cubes += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        ", " \
    \       val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        cubes += cube\n        cubes.toList.forall(cubes.contains)", "      \
    \  val cube = a.toString.toInt\n        cube == cube * cube * cube", "       \
    \ val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesSet = mutable.Set[Long](cube)\n        val cubesSet2 = mutable.Set[Long](cube)\n\
    \        val cubesSet3 = mutable.Set[Long](cube)\n        val cubesSet4 = mutable.Set[Long](cube)\n\
    \        val cubesSet5 = mutable.Set[Long](cube)\n        val cubesSet6 = mutable.Set[Long](cube)\n\
    \        val cubesSet7 = mutable.Set[Long](cube)\n        val cubesSet8 = mutable.Set[Long](cube)\n\
    \        val cubesSet9 = mutable.Set[Long](cube)\n        val cubesSet10 = mutable.Set[Long](cube)\n\
    \        val cubesSet11 = mutable.Set[Long](cube)\n        val cubesSet12 = mutable.Set[Long](cube)\n\
    \        val cubesSet13 = mutable.Set[Long](cube)\n        val cubesSet14 = mutable.Set[Long](cube)\n\
    \        val cubesSet15 = mutable.Set[Long](cube)\n        val cubesSet16 = mutable.Set[Long](cube)\n\
    \        val cubesSet17 = mutable.Set[Long](cube)\n        val cubesSet18 = mutable.Set[Long](cube)\n\
    \        val cubesSet19 = mutable.Set[Long](cube)\n        val cubesSet20 = mutable.Set[Long](cube)\n\
    \        val cubesSet21 = mutable.Set[Long](cube)\n        val cubesSet22 = mutable.Set[Long](cube)\n\
    \        val cubesSet23 = mutable.Set[Long](cube)\n        val cubesSet24 = mutable.Set[Long](cube)\n\
    \        val cubesSet25 = mutable.Set[Long](cube)\n        val cubesSet26 = mutable.Set[Long](cube)\n\
    \        val cubesSet27 = mutable.Set[Long](cube)\n        val cubesSet28 = mutable.Set[Long](cube)\n\
    \        val cubesSet29 = mutable.Set[Long](cube)\n        val cubesSet30 = mutable.Set[Long](cube)\n\
    \        val cubesSet31 = mutable.Set[Long](cube)\n        val cubesSet32 = ",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a", "        val cube = a.toInt\n\
    \        val cubes = cube.toLong * cube.toLong * cube.toLong\n        if (cubes\
    \ == a) true else false", "        val cube = a.toString.toInt\n        cube ==\
    \ cube * cube * cube", "        val n = a.toInt\n        val cube = n * n * n\n\
    \        cube == a", "        val cube = a.toString.toInt\n        val cubes =\
    \ mutable.ArrayBuffer(cube)\n        cubes += cube\n        cubes.toList.forall(cubes.contains)",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cube", "        val cube\
    \ = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n        val cubesCount\
    \ = cubes.length\n        val cubesSum = cubes.sum\n        val cubesSumSquare\
    \ = cubes.sum * cubes.sum\n        val cubesSumCube = cubes.sum * cubes.sum *\
    \ cubes.sum\n        val cubesSumCube2 = cubes.sum * cubes.sum * cubes.sum * cubes.sum\n\
    \        val cubesSumCube3 = cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\n\
    \        val cubesSumCube4 = cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum\n        val cubesSumCube5 = cubes.sum * cubes.sum * cubes.sum *\
    \ cubes.sum * cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube6 = cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\n\
    \        val cubesSumCube7 = cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube8 =\
    \ cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube9 = cubes.sum *\
    \ cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube10 = cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube11\
    \ = cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\n  \
    \      val cubesSumCube12 = cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * ", "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cube", "        val cube\
    \ = a.toString.toInt\n        cube == cube * cube * cube", "        val cube =\
    \ a.toString.toInt\n        val cubes = mutable.Set[Long]()\n        cubes +=\
    \ cube\n        cubes += cube * cube\n        cubes += cube * cube * cube\n  \
    \      cubes.contains(a)", "        val cube = a.toString.toInt\n        cube\
    \ == cube * cube * cube", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.Set[Long]()\n  \
    \      cubesSet += cube\n        cubesSet += cube*cube\n        cubesSet += cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube ", "        val cube = a.toString.toInt\n        cube == cube * cube\
    \ * cube", "        val cube = a.toString.toInt\n        cube == cube * cube *\
    \ cube", "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesCount = cubes.length\n        val cubesSum = cubes.sum\n   \
    \     val cubesSumSquare = cubes.sum * cubes.sum\n        val cubesProduct = cubes.product\n\
    \        val cubesProductSquare = cubes.product * cubes.product\n        val cubesProductSum\
    \ = cubes.product * cubesSum\n        val cubesProductSumSquare = cubes.product\
    \ * cubesSumSquare\n        val cubesProductSumProduct = cubes.product * cubesSum\
    \ * cubesSum\n        val cubesProductSumProductSquare = cubes.product * cubesSum\
    \ * cubesSumSquare\n        val cubesProductSumProductProduct = cubes.product\
    \ * cubesSum * cubesSum * cubesSum\n        val cubesProductSumProductProductSquare\
    \ = cubes.product * cubesSum * cubesSum * cubesSumSquare\n        val cubesProductSumProductProductProduct\
    \ = cubes.product * cubesSum * cubesSum * cubesSum * cubesSum\n        val cubesProductSumProductProductProductSquare\
    \ = cubes.product * cubesSum * cubesSum * cubesSum * cubesSumSquare\n        val\
    \ cubesProductSumProductProductProductProduct = cubes.product * cubesSum * cubesSum\
    \ * cubesSum * cubesSum * cubesSum\n        val cubesProductSumProductProductProductProductSquare\
    \ = cubes.product * cubesSum * cubesSum * cubesSum * cubesSum * cubesSumSquare\n\
    \        val cubesProductSumProductProductProductProductProduct = cubes.product\
    \ * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum\n        val\
    \ cubesProductSumProductProductProductProductSquare = cubes.product * cubesSum\
    \ * cubesSum * cubesSum * cubesSum * cubesSum * cubesSumSquare\n        val cubesProductSumProductProductProductProductProduct\
    \ = cubes.product * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum\
    \ * cubesSum\n        val cubesProductSumProductProductProductProductProductSquare\
    \ = cubes.product * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum\
    \ * cubesSumSquare\n        val ", "        val cube = a.toString.toInt\n    \
    \    cube == cube * cube * cube", "        val cube = a.toString.toInt\n     \
    \   cube == cube * cube * cube", "        val cube = a.toString.toLong * a.toString.toLong\
    \ * a.toString.toLong\n        cube == a.toString.toLong * a.toString.toLong *\
    \ a.toString.toLong", "        val cube = a.toInt\n        val cubes = cube.toLong\
    \ * cube.toLong * cube.toLong\n        cubes % 1 == 0", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += cube\n\
    \        cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * ", "        val cube\
    \ = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n        cubes.takeWhile(cubes.head\
    \ * cubes.head <= cubes.last)\n            .forall(cubes.head * cubes.head <=\
    \ cubes.last)", "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a\n        ", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += a\n        cubes\
    \ += a * a\n        cubes += a * a * a\n        cubes += a * a * a * a\n     \
    \   cubes += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cube",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube ", "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cu", "        val cube = a.toString.toInt\n        cube\
    \ == cube * cube * cube", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        cubes += cube\n        cubes.toList.forall(x\
    \ => x*x*x == a)", "        val cube = a.toString.toLong * a.toString.toLong *\
    \ a.toString.toLong\n        cube == a.toString.toLong", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        cubes.takeWhile(cubes\
    \ => cubes % cubes == 0)", "        val cube = a.toInt\n        val cubes = mutable.ListBuffer(cube)\n\
    \        val cubesCount = cubes.toList.length\n        val cubesSum = cubes.sum\n\
    \        val cubesSumSquare = cubesSum * cubesSum\n        val cubesSumSquareRoot\
    \ = cubesSumSquare / 3\n        val cubesSumSquareRoot2 = cubesSumSquareRoot /\
    \ 2\n        val cubesSumSquareRoot3 = cubesSumSquareRoot / 3\n        val cubesSumSquareRoot4\
    \ = cubesSumSquareRoot / 4\n        val cubesSumSquareRoot5 = cubesSumSquareRoot\
    \ / 5\n        val cubesSumSquareRoot6 = cubesSumSquareRoot / 6\n        val cubesSumSquareRoot7\
    \ = cubesSumSquareRoot / 7\n        val cubesSumSquareRoot8 = cubesSumSquareRoot\
    \ / 8\n        val cubesSumSquareRoot9 = cubesSumSquareRoot / 9\n        val cubesSumSquareRoot10\
    \ = cubesSumSquareRoot / 10\n        val cubesSumSquareRoot11 = cubesSumSquareRoot\
    \ / 11\n        val cubesSumSquareRoot12 = cubesSumSquareRoot / 12\n        val\
    \ cubesSumSquareRoot13 = cubesSumSquareRoot / 13\n        val cubesSumSquareRoot14\
    \ = cubesSumSquareRoot / 14\n        val cubesSumSquareRoot15 = cubesSumSquareRoot\
    \ / 15\n        val cubesSumSquareRoot16 = cubesSumSquareRoot / 16\n        val\
    \ cubesSumSquareRoot17 = cubesSumSquareRoot / 17\n        val cubesSumSquareRoot18\
    \ = cubesSumSquareRoot / 18\n        val cubesSumSquareRoot19 = cubesSumSquareRoot\
    \ / 19\n        val cubesSumSquareRoot20 = cubesSumSquareRoot / 20\n        val\
    \ cubesSumSquareRoot21 = cubesSumSquareRoot / 21\n        val cubesSumSquareRoot22\
    \ = cubesSumSquareRoot / 22\n        val cubesSumSquareRoot23 = cubesSumSquareRoot\
    \ / 23\n        val cubesSumSquareRoot24 = cubesSumSquareRoot / 24\n        val\
    \ cubesSumSquareRoot25 = cubesSumSquareRoot / 25\n        val cubesSumSquareRoot26\
    \ = cubesSumSquareRoot / 26\n        val cubesSumSquareRoot27 = cubesSumSquareRoot\
    \ / 27\n        val cubesSumSquareRoot28 = cube", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += a\n    \
    \    cubes += a * a\n        cubes += a * a * a\n        cubes += a * a * a *\
    \ a\n        cubes += a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a", "        val cube = a.toString.toLong * a.toString.toLong\
    \ * a.toString.toLong\n        cube == a.toString.toLong", "        val cube =\
    \ a.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes\
    \ += a\n        cubes += a * a\n        cubes += a * a * a\n        cubes += a\
    \ * a * a * a\n        cubes += a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n     \
    \   cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes +=\
    \ cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * ", "        val cube\
    \ = a.toString.toInt\n        cube == cube * cube * cube", "        val cube =\
    \ a.toString.toInt\n        cube == cube * cube * cube", "        val cube = a.toString.toLong\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n     \
    \   cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes +=\
    \ cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube ", "        val n = a.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += n\n        cubes\
    \ += n * n\n        cubes += n * n * n\n        cubes += n * n * n * n\n     \
    \   cubes += n * n * n * n * n\n        cubes += n * n * n * n * n * n\n     \
    \   cubes += n * n * n * n * n * n * n\n        cubes += n * n * n * n * n * n\
    \ * n * n\n        cubes += n * n * n * n * n * n * n * n * n\n        cubes +=\
    \ n * n * n * n * n * n * n * n * n * n\n        cubes += n * n * n * n * n *\
    \ n * n * n * n * n * n\n        cubes += n * n * n * n * n * n * n * n * n *\
    \ n * n * n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n\n\
    \        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n\
    \        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n\n        cubes += n * n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * n\n        cubes += n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes += n *\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n\
    \        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n\n        cubes += n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * n * n\n        cubes += n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes\
    \ += n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n\n        cubes += n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes\
    \ += n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n\n        ", "        val cube = a.toString.toInt\n        val\
    \ cubes = mutable.Set[Long]()\n        cubes += cube\n        cubes += cube *\
    \ cube\n        cubes += cube * cube * cube\n        cubes.contains(a)", "   \
    \     val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cube", "        val cube\
    \ = a.toString.toInt\n        cube == cube * cube * cube", "        val cube =\
    \ a.toString.toInt\n        cube == cube * cube * cube", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        cubes.takeWhile(cubes.head\
    \ % cubes.head == 0).length == 1", "        val cube = a.toString.toInt\n    \
    \    cube == cube * cube * cube", "        val cube = a.toString.toInt\n     \
    \   cube == cube * cube * cube", "        val cube = a.toString.toInt\n      \
    \  val cubes = mutable.ListBuffer[Long]()\n        cubes += a\n        while(cubes.nonEmpty)\
    \ {\n            val c = cubes.head\n            cubes -= c\n            if(c\
    \ == cube) {\n                return true\n            }\n            cubes +=\
    \ c\n        }\n        return false", "        val cube = a.toInt\n        val\
    \ cubes = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.HashSet[Long]()\n\
    \        cubesSet += cube\n        cubesSet += cube * cube\n        cubesSet +=\
    \ cube * cube * cube\n        cubesSet += cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube\n        cubesSet += cube * cube * cube\
    \ * cube * cube * cube\n        cubesSet += cube * cube * cube * cube * cube *\
    \ cube * cube\n        cubesSet += cube * cube * cube * cube * cube * cube * cube\
    \ * cube\n        cubesSet += cube * cube * cube * cube * cube * cube * cube *\
    \ cube * cube\n        cubesSet += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube\n        cubesSet += cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube\n        cubesSet += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubesSet += cube * cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube\n        cubesSet += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube\n        cubesSet += cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubesSet += cu", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(a)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.Set[Long]()\n        cubes.add(cube)\n        cubes.add(cube\
    \ * cube)\n        cubes.add(cube * cube * cube)\n        cubes.add(cube * cube\
    \ * cube * cube)\n        cubes.add(cube * cube * cube * cube * cube)\n      \
    \  cubes.add(cube * cube * cube * cube * cube * cube)\n        cubes.add(cube\
    \ * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube)\n\
    \        cubes.add(cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube)\n        cubes.add(cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube *\
    \ cube * cube)\n        cubes.add(cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cu", "    \
    \    val n = a.toInt\n        if (n == 1l) true\n        else if (n % 2 == 0l)\
    \ iscube(n * 3l)\n        else false", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        cubes += cube\n      \
    \  cubes.toList.forall(cubes.contains)", "        val cube = a.toString.toInt\n\
    \        val cubes = cube.pow(3).toInt\n        cubes % a == 0", "        val\
    \ cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n        val cubesCount\
    \ = cubes.length\n        val cubesSum = cubes.sum\n        val cubesSumSquare\
    \ = cubes.sum * cubes.sum\n        val cubesProduct = cubes.product\n        val\
    \ cubesProductSquare = cubes.product * cubes.product\n        val cubesProductSum\
    \ = cubes.product * cubesSum\n        val cubesProductSumSquare = cubes.product\
    \ * cubesSumSquare\n        val cubesProductSumProduct = cubes.product * cubesSum\
    \ * cubesProduct\n        val cubesProductSumProductSquare = cubes.product * cubesSum\
    \ * cubesProductSquare\n        val cubesProductSumProductSum = cubes.product\
    \ * cubesSum * cubesProductSum\n        val cubesProductSumProductSumSquare =\
    \ cubes.product * cubesSum * cubesProductSumSquare\n        val cubesProductSumProductSumProduct\
    \ = cubes.product * cubesSum * cubesProductSumProduct\n        val cubesProductSumProductSumProductSquare\
    \ = cubes.product * cubesSum * cubesProductSumProductSquare\n        val cubesProductSumProductSumProductSum\
    \ = cubes.product * cubesSum * cubesProductSumProductSum\n        val cubesProductSumProductSumProductSumSquare\
    \ = cubes.product * cubesSum * cubesProductSumProductSumSquare\n        val cubesProductSumProductSumProductSumProduct\
    \ = cubes.product * cubesSum * cubesProductSumProductSumProduct\n        val cubesProductSumProductSumProductSumProductSquare\
    \ = cubes.product * cubesSum * cubesProductSumProductSumProductSquare\n      \
    \  val cubesProductSumProductSumProductSumProductSum = cubes.product * cubesSum\
    \ * cubesProductSumProductSumProductSum\n        val cubesProductSumProductSumProductSumProductSumSquare\
    \ = cubes.product * cubesSum * cubesProductSumProductSumProductSumSquare\n   \
    \     val cubesProductSumProductSumProductSumProductSumProduct = cubes.product\
    \ * cubesSum * cubesProductSumProductSumProductSumProduct\n        val cubesProductSumProductSumProductSumProductSumProductSquare\
    \ = cubes.product * cubesSum * cubesProductSumProductSumProductSumProductSquare\n\
    \        val cubesProductSumProductSumProductSumProductSumProduct = cubes.product\
    \ * cubesSum * cubesProduct", "        val cube = a.toString.toInt\n        val\
    \ cubes = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.HashSet(cubes)\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSet", "        val\
    \ cube = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n        cubes\
    \ += cube\n        cubes += cube * cube\n        cubes += cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cu",
  "        val cube = a.toString.toInt\n        cube == (a.toString.toInt * a.toString.toInt\
    \ * a.toString.toInt)", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.HashSet(cubes)\n\
    \        cubesSet.contains(cube)", "        val cube = a.toInt\n        val cubes\
    \ = mutable.Set[Long]()\n        cubes.add(cube)\n        cubes.add(cube * cube)\n\
    \        cubes.add(cube * cube * cube)\n        cubes.add(cube * cube * cube *\
    \ cube)\n        cubes.add(cube * cube * cube * cube * cube)\n        cubes.add(cube\
    \ * cube * cube * cube * cube * cube)\n        cubes.add(cube * cube * cube *\
    \ cube * cube * cube * cube)\n        cubes.add(cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube)\n        cubes.add(cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube)\n   \
    \     cubes.add(cube * cube * cube * cube * cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube)\n        cubes.add(cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube)\n        cubes.add(cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube *\
    \ cube)\n        cubes.add(cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube)\n   \
    \     cubes.add(cube * cube * cube * cube * cube * cube * cube * cube * cube *\
    \ cube * cube * ", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a", "        val n = a.toInt\n\
    \        val cube = n * n * n\n        if (cube == a) true else false", "    \
    \    val cube = a.toString.toInt\n        cube == cube * cube * cube", "     \
    \   val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n      \
    \  val cubesSet = mutable.Set[Long]()\n        cubesSet += cube\n        cubesSet\
    \ += cube * cube\n        cubesSet += cube * cube * cube\n        cubesSet +=\
    \ cube * cube * cube * cube\n        cubesSet += cube * cube * cube * cube * cube\n\
    \        cubesSet += cube * cube * cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube * cube * cube\n        cubesSet += cube\
    \ * cube * cube * cube * cube * cube * cube * cube\n        cubesSet += cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube\n        cubesSet += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubesSet += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube\n        cubesSet += cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube\n        cubesSet += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubesSet += cube * cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube\n        cubesSet += cube ", "        val\
    \ cube = a.toString.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n       \
    \ cubes += cube\n        cubes += cube * cube\n        cubes += cube * cube *\
    \ cube\n        cubes += cube * cube * cube * cube\n        cubes += cube * cube\
    \ * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * ", "        val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong", "        val cube = a.toString.toInt\n  \
    \      val cubes = mutable.ListBuffer(cube)\n        cubes += cube\n        cubes\
    \ += cube*cube\n        cubes += cube*cube*cube\n        cubes += cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube\n        cubes += cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube\n        cubes += cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubes\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*", "        val cube\
    \ = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n        val\
    \ cubesCount = cubes.length\n        val cubesSum = cubes.sum\n        val cubesSumSquare\
    \ = cubesSum * cubesSum\n        val cubesSumCube = cubesSum * cubesSum\n    \
    \    val cubesSumCube2 = cubesSumCube * cubesSum\n        val cubesSumCube3 =\
    \ cubesSumCube2 * cubesSum\n        val cubesSumCube4 = cubesSumCube3 * cubesSum\n\
    \        val cubesSumCube5 = cubesSumCube4 * cubesSum\n        val cubesSumCube6\
    \ = cubesSumCube5 * cubesSum\n        val cubesSumCube7 = cubesSumCube6 * cubesSum\n\
    \        val cubesSumCube8 = cubesSumCube7 * cubesSum\n        val cubesSumCube9\
    \ = cubesSumCube8 * cubesSum\n        val cubesSumCube10 = cubesSumCube9 * cubesSum\n\
    \        val cubesSumCube11 = cubesSumCube10 * cubesSum\n        val cubesSumCube12\
    \ = cubesSumCube11 * cubesSum\n        val cubesSumCube13 = cubesSumCube12 * cubesSum\n\
    \        val cubesSumCube14 = cubesSumCube13 * cubesSum\n        val cubesSumCube15\
    \ = cubesSumCube14 * cubesSum\n        val cubesSumCube16 = cubesSumCube15 * cubesSum\n\
    \        val cubesSumCube17 = cubesSumCube16 * cubesSum\n        val cubesSumCube18\
    \ = cubesSumCube17 * cubesSum\n        val cubesSumCube19 = cubesSumCube18 * cubesSum\n\
    \        val cubesSumCube20 = cubesSumCube19 * cubesSum\n        val cubesSumCube21\
    \ = cubesSumCube20 * cubesSum\n        val cubesSumCube22 = cubesSumCube21 * cubesSum\n\
    \        val cubesSumCube23 = cubesSumCube22 * cubesSum\n        val cubesSumCube24\
    \ = cubesSumCube23 * cubesSum\n        val cubesSumCube25 = cubesSumCube24 * cubesSum\n\
    \        val cubesSumCube26 = cubesSumCube25 * cubesSum\n        val cubesSumCube27\
    \ = cubes", "        val n = a.toInt\n        val m = a.toInt\n        val r =\
    \ a.toInt\n        val s = a.toInt\n        val t = a.toInt\n        val u = a.toInt\n\
    \        val v = a.toInt\n        val w = a.toInt\n        val x = a.toInt\n \
    \       val y = a.toInt\n        val z = a.toInt\n        val cube = n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * ", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer(cube)\n        val cubesCount = cubes.length\n\
    \        val cubesSum = cubes.sum\n        val cubesSumSquare = cubesSum * cubesSum\n\
    \        val cubesSumCube = cubesSum * cubesSum\n        val cubesSumCube2 = cubesSumCube\
    \ * cubesSum\n        val cubesSumCube3 = cubesSumCube2 * cubesSum\n        val\
    \ cubesSumCube4 = cubesSumCube3 * cubesSum\n        val cubesSumCube5 = cubesSumCube4\
    \ * cubesSum\n        val cubesSumCube6 = cubesSumCube5 * cubesSum\n        val\
    \ cubesSumCube7 = cubesSumCube6 * cubesSum\n        val cubesSumCube8 = cubesSumCube7\
    \ * cubesSum\n        val cubesSumCube9 = cubesSumCube8 * cubesSum\n        val\
    \ cubesSumCube10 = cubesSumCube9 * cubesSum\n        val cubesSumCube11 = cubesSumCube10\
    \ * cubesSum\n        val cubesSumCube12 = cubesSumCube11 * cubesSum\n       \
    \ val cubesSumCube13 = cubesSumCube12 * cubesSum\n        val cubesSumCube14 =\
    \ cubesSumCube13 * cubesSum\n        val cubesSumCube15 = cubesSumCube14 * cubesSum\n\
    \        val cubesSumCube16 = cubesSumCube15 * cubesSum\n        val cubesSumCube17\
    \ = cubesSumCube16 * cubesSum\n        val cubesSumCube18 = cubesSumCube17 * cubesSum\n\
    \        val cubesSumCube19 = cubesSumCube18 * cubesSum\n        val cubesSumCube20\
    \ = cubesSumCube19 * cubesSum\n        val cubesSumCube21 = cubesSumCube20 * cubesSum\n\
    \        val cubesSumCube22 = cubesSumCube21 * cubesSum\n        val cubesSumCube23\
    \ = cubesSumCube22 * cubesSum\n        val cubesSumCube24 = cubesSumCube23 * cubesSum\n\
    \        val cubesSumCube25 = cubesSumCube24 * cubesSum\n        val cubesSumCube26\
    \ = cubesSumCube25 * cubesSum\n        val cubesSumCube27 = cubes", "        val\
    \ cube = a.toString.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n       \
    \ cubes += cube\n        cubes += cube * cube\n        cubes += cube * cube *\
    \ cube\n        cubes += cube * cube * cube * cube\n        cubes += cube * cube\
    \ * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube ", " \
    \       val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong", "        val cube = a.toInt\n        val\
    \ cubes = cube.toLong * cube.toLong * cube.toLong\n        cubes % 1 == 0", " \
    \       val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer(cube)\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(cube)", "        val cube = a.toInt\n  \
    \      val cubes = mutable.ArrayBuffer(cube)\n        val cubesCount = cubes.length\n\
    \        val cubesSum = cubes.sum\n        val cubesSumSquare = cubesSum * cubesSum\n\
    \        val cubesProduct = cubes.product\n        val cubesProductSquare = cubesProduct\
    \ * cubesProduct\n        val cubesProductSquareRoot = cubesProductSquare / cubesCount\n\
    \        val cubesProductSquareRoot2 = cubesProductSquare / cubesCount\n     \
    \   val cubesProductSquareRoot3 = cubesProductSquare / cubesCount\n        val\
    \ cubesProductSquareRoot4 = cubesProductSquare / cubesCount\n        val cubesProductSquareRoot5\
    \ = cubesProductSquare / cubesCount\n        val cubesProductSquareRoot6 = cubesProductSquare\
    \ / cubesCount\n        val cubesProductSquareRoot7 = cubesProductSquare / cubesCount\n\
    \        val cubesProductSquareRoot8 = cubesProductSquare / cubesCount\n     \
    \   val cubesProductSquareRoot9 = cubesProductSquare / cubesCount\n        val\
    \ cubesProductSquareRoot10 = cubesProductSquare / cubesCount\n        val cubesProductSquareRoot11\
    \ = cubesProductSquare / cubesCount\n        val cubesProductSquareRoot12 = cubesProductSquare\
    \ / cubesCount\n        val cubesProductSquareRoot13 = cubesProductSquare / cubesCount\n\
    \        val cubesProductSquareRoot14 = cubesProductSquare / cubesCount\n    \
    \    val cubesProductSquareRoot15 = cubesProductSquare / cubesCount\n        val\
    \ cubesProductSquareRoot16 = cubesProductSquare / cubesCount\n        val cubesProductSquareRoot17\
    \ = cubesProductSquare / cubesCount\n        val cubesProductSquareRoot18 = cubesProductSquare\
    \ / cubesCount\n        val cubesProductSquareRoot19 = cubesProductSquare / cubesCount\n\
    \        val cubesProductSquareRoot20 = cubesProductSquare / cubesCount\n    \
    \    val cubesProductSquareRoot21 = cubesProductSquare / cubesCount\n        val\
    \ cubesProductSquareRoot22 = cubesProductSquare / cubesCount\n        val cubesProductSquareRoot23\
    \ = cubesProductSquare / cubesCount\n        val cubesProductSquareRoot24 = cube",
  "        val n = a.toInt\n        if (n == 0 || n == 1) return true\n        if\
    \ (n % 2 == 0) return false\n        if (n % 3 == 0) return false\n        val\
    \ cube = n * n * n\n        if (cube % n == 0) return false\n        return true",
  "        val n = a.toInt\n        val cube = n * n * n\n        cube == a.toLong",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesSet = mutable.HashSet(cubes)\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSet", "        val cube = a.toString.toInt\n        cube ==\
    \ cube * cube * cube", "        val cube = a.toString.toLong\n        val cubes\
    \ = mutable.Set[Long]()\n        cubes += cube\n        cubes += cube * cube\n\
    \        cubes += cube * cube * cube\n        cubes.contains(cube)", "       \
    \ val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n        val\
    \ cubesSet = mutable.Set[Long]()\n        cubesSet += cube\n        cubesSet +=\
    \ cube * cube\n        cubesSet += cube * cube * cube\n        cubesSet += cube\
    \ * cube * cube * cube\n        cubesSet += cube * cube * cube * cube * cube\n\
    \        cubesSet += cube * cube * cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube * cube * cube\n        cubesSet += cube\
    \ * cube * cube * cube * cube * cube * cube * cube\n        cubesSet += cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube\n        cubesSet += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubesSet += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube\n        cubesSet += cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube\n        cubesSet += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubesSet += cube * cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube\n        cubesSet += cube ", "        val\
    \ cube = a.toString.toInt\n        val cubes = mutable.ListBuffer(cube)\n    \
    \    cubes foreach { x =>\n            cubes foreach { y =>\n                cubes\
    \ foreach { z =>\n                    if (x*x*x + y*y*y + z*z*z == cube) {\n \
    \                       return true\n                    }\n                }\n\
    \            }\n        }\n        return false", "        val cube = a.toInt\n\
    \        val cubes = cube.toLong\n        val cubesArray = cubes.toArray\n   \
    \     val cubesArrayLength = cubesArray.length\n        val cubesArrayLength =\
    \ cubesArrayLength.toInt\n        val cubesArrayLength = cubesArrayLength.toLong\n\
    \        val cubesArrayLength = cubesArrayLength.toInt\n        val cubesArrayLength\
    \ = cubesArrayLength.toLong\n        val cubesArrayLength = cubesArrayLength.toInt\n\
    \        val cubesArrayLength = cubesArrayLength.toLong\n        val cubesArrayLength\
    \ = cubesArrayLength.toInt\n        val cubesArrayLength = cubesArrayLength.toLong\n\
    \        val cubesArrayLength = cubesArrayLength.toInt\n        val cubesArrayLength\
    \ = cubesArrayLength.toLong\n        val cubesArrayLength = cubesArrayLength.toInt\n\
    \        val cubesArrayLength = cubesArrayLength.toLong\n        val cubesArrayLength\
    \ = cubesArrayLength.toInt\n        val cubesArrayLength = cubesArrayLength.toLong\n\
    \        val cubesArrayLength = cubesArrayLength.toInt\n        val cubesArrayLength\
    \ = cubesArrayLength.toLong\n        val cubesArrayLength = cubesArrayLength.toInt\n\
    \        val cubesArrayLength = cubesArrayLength.toLong\n        val cubesArrayLength\
    \ = cubesArrayLength.toInt\n        val cubesArrayLength = cubesArrayLength.toLong\n\
    \        val cubesArrayLength = cubesArrayLength.toInt\n        val cubesArrayLength\
    \ = cubesArrayLength.toLong\n        val cubesArrayLength = cubesArrayLength.toInt\n\
    \        val cubesArrayLength = cubesArrayLength.toLong\n        val cubesArrayLength\
    \ = cubesArrayLength.toInt\n        val cubesArrayLength = cubesArrayLength.toLong\n\
    \        val cubesArrayLength = cubesArrayLength.toInt\n        val cubesArrayLength\
    \ = cubesArrayLength.toLong\n        val cubesArrayLength = cubesArrayLength.toInt\n\
    \        val cubesArrayLength = cubesArrayLength.toLong\n        val cubesArrayLength\
    \ = cubesArrayLength.toInt\n        val cubesArrayLength = cubesArrayLength.toLong\n\
    \        val cubesArrayLength = cubesArrayLength.toInt\n        val cubesArrayLength\
    \ = cubesArrayLength.toLong\n        val cubesArrayLength = cubesArrayLength.toInt\n\
    \        val cubesArrayLength = cubesArrayLength.toLong\n        val cubesArrayLength\
    \ = ", "        val cube = a.toString.toInt\n        cube == cube * cube * cube",
  "        val cube = a.toString.toInt\n        val cubes = mutable.Set[Long]()\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cube", "        val\
    \ cube = a.toString.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n  \
    \      cubes += cube\n        cubes += cube * cube\n        cubes += cube * cube\
    \ * cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += cube\n\
    \        cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cu", "    \
    \    val n = a.toInt\n        val cube = n * n * n\n        cube == a.toLong",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesSet = mutable.Set[Long]()\n        cubes.foreach(cubesSet +=\
    \ _)\n        cubesSet.size == 1", "        val cube = a.toString.toInt\n    \
    \    cube == cube * cube * cube", "        val cube = a.toString.toInt\n     \
    \   cube == (a.toString.toInt * a.toString.toInt * a.toString.toInt)", "     \
    \   val cube = a.toString.toInt\n        cube == cube * cube * cube", "      \
    \  val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer(cube)\n\
    \        cubes foreach { x =>\n            val y = cube.pow(x)\n            cubes\
    \ += y\n        }\n        cubes.size == 1", "        val cube = a.toInt\n   \
    \     val cubes = cube.toLong * cube.toLong * cube.toLong\n        cubes % 1L\
    \ == 0", "        val cube = a.toString.toInt\n        cube == cube * cube * cube",
  "        val cube = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n  \
    \      cubes += a\n        while(cubes.nonEmpty) {\n            val c = cubes.head\n\
    \            cubes -= c\n            if (c*c*c == a) {\n                return\
    \ true\n            }\n            cubes += c\n        }\n        return false",
  "        val cube = a.toString.toInt\n        val cubes = cube.toString.toInt\n\
    \        val cubesString = cubes.toString\n        cubesString.contains(\"1\")",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer(cube)\n        val cubesCount = cubes.toList.length\n\
    \        val cubesSum = cubes.sum\n        val cubesSumSquare = cubes.sum * cubes.sum\n\
    \        val cubesProduct = cubes.product\n        val cubesProductSquare = cubes.product\
    \ * cubes.product\n        val cubesProductSum = cubes.product * cubesSum\n  \
    \      val cubesProductSumSquare = cubes.product * cubesSumSquare\n        val\
    \ cubesProductSumSquare = cubes.product * cubesSumSquare\n        val cubesProductSumSquare\
    \ = cubes.product * cubesSumSquare\n        val cubesProductSumSquare = cubes.product\
    \ * cubesSumSquare\n        val cubesProductSumSquare = cubes.product * cubesSumSquare\n\
    \        val cubesProductSumSquare = cubes.product * cubesSumSquare\n        val\
    \ cubesProductSumSquare = cubes.product * cubesSumSquare\n        val cubesProductSumSquare\
    \ = cubes.product * cubesSumSquare\n        val cubesProductSumSquare = cubes.product\
    \ * cubesSumSquare\n        val cubesProductSumSquare = cubes.product * cubesSumSquare\n\
    \        val cubesProductSumSquare = cubes.product * cubesSumSquare\n        val\
    \ cubesProductSumSquare = cubes.product * cubesSumSquare\n        val cubesProductSumSquare\
    \ = cubes.product * cubesSumSquare\n        val cubesProductSumSquare = cubes.product\
    \ * cubesSumSquare\n        val cubesProductSumSquare = cubes.product * cubesSumSquare\n\
    \        val cubesProductSumSquare = cubes.product * cubesSumSquare\n        val\
    \ cubesProductSumSquare = cubes.product * cubesSumSquare\n        val cubesProductSumSquare\
    \ = cubes.product * cubesSumSquare\n        val cubesProductSumSquare = cubes.product\
    \ * cubesSumSquare\n        val cubesProductSumSquare = cubes.product * cubesSumSquare\n\
    \        val cubesProductSumSquare = cubes.product * cubesSumSquare\n        val\
    \ cubesProductSumSquare = cubes.product * cubesSumSquare\n        val cubesProductSumSquare\
    \ = cubes.product * cubesSumSquare\n        val cubesProductSumSquare = cubes.product\
    \ * cubesSumSquare\n        val cubesProductSumSquare", "        val cube = a.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n     \
    \   cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(cube)",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesSet = mutable.Set[Long]()\n        cubesSet += cube\n      \
    \  cubesSet += cube*cube\n        cubesSet += cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube\n     \
    \   cubesSet += cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*",
  "        val n = a.toInt\n        if (n == 1) true\n        else if (n % 2 == 0)\
    \ iscube(n / 2)\n        else iscube(3 * n + 1)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        cubes.takeWhile(_ < cubes.last)\n\
    \            .forall(cubes.take(_).forall(_ == cube))", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       val cubes = mutable.Set[Long]()\n        cubes += a\n        cubes +=\
    \ a * a\n        cubes += a * a * a\n        cubes += a * a * a * a\n        cubes\
    \ += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cube",
  "        val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong", "        val cube = a.toString.toInt\n  \
    \      val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += a\n     \
    \   cubes += a * a\n        cubes += a * a * a\n        cubes += a * a * a * a\n\
    \        cubes += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n \
    \       cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a\n        ", "        val cube\
    \ = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n  \
    \      cubes += a\n        cubes += a * a\n        cubes += a * a * a\n      \
    \  cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cube", "        val cube = a.toInt\n\
    \        if (cube == 1)\n            return true\n        if (cube == 3)\n   \
    \         return true\n        if (cube == 5)\n            return true\n     \
    \   if (cube == 7)\n            return true\n        if (cube == 9)\n        \
    \    return true\n        if (cube == 11)\n            return true\n        if\
    \ (cube == 13)\n            return true\n        if (cube == 15)\n           \
    \ return true\n        if (cube == 17)\n            return true\n        if (cube\
    \ == 19)\n            return true\n        if (cube == 21)\n            return\
    \ true\n        if (cube == 23)\n            return true\n        if (cube ==\
    \ 25)\n            return true\n        if (cube == 27)\n            return true\n\
    \        if (cube == 29)\n            return true\n        if (cube == 31)\n \
    \           return true\n        if (cube == 33)\n            return true\n  \
    \      if (cube == 35)\n            return true\n        if (cube == 37)\n   \
    \         return true\n        if (cube == 39)\n            return true\n    \
    \    if (cube == 41)\n            return true\n        if (cube == 43)\n     \
    \       return true\n        if (cube == 45)\n            return true\n      \
    \  if (cube == 47)\n            return true\n        if (cube == 49)\n       \
    \     return true\n        if (cube == 51)\n            return true\n        if\
    \ (cube == 53)\n            return true\n        if (cube == 55)\n           \
    \ return true\n        if (cube == 57)\n            return true\n        if (cube\
    \ == 59)\n            return true\n        if (cube == 61)\n            return\
    \ true\n        if (cube == 63)\n            return true\n        if (cube ==\
    \ 65)\n            return true\n        if (cube == 67)\n            return true\n\
    \        if (cube == 69)\n            return true\n        if (cube == 71)\n \
    \           return true\n        if (cube == 73)\n            return true\n  \
    \      if (cube == 75)\n            return true\n        if (cube == 77)\n   \
    \         return true\n        if (cube == 79)\n            return true\n    \
    \    if (cube == 81)\n            return true\n        if (cube == 83)\n     \
    \       return true\n        if (cube == 85)\n            return true\n      \
    \  if (cube == 87)\n            return true\n        if (cube == 89)\n       \
    \     return true\n        if (cube == 91)\n            return true\n        if\
    \ (cube == 93)\n            return true\n        if (cube == 95)\n           \
    \ return true\n        if (cube == 97)\n            return true\n        if (cube\
    \ == 99)\n            return true\n        if (cube == 101)\n            return\
    \ true\n        if (cube == 103)\n", "        val cube = a.toInt\n        val\
    \ cubes = cube.toLong * cube.toLong * cube.toLong\n        cubes.toInt == a",
  "        val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong", "        val cube = a.toString.toInt\n  \
    \      cube == cube * cube * cube", "        val cube = a.toString.toLong * a.toString.toLong\
    \ * a.toString.toLong\n        cube == a.toString.toLong", "        val n = a.toInt\n\
    \        val cubes = mutable.Set[Long]()\n        cubes.add(1l)\n        cubes.add(3l)\n\
    \        cubes.add(5l)\n        cubes.add(7l)\n        cubes.add(9l)\n       \
    \ cubes.add(11l)\n        cubes.add(13l)\n        cubes.add(15l)\n        cubes.add(17l)\n\
    \        cubes.add(19l)\n        cubes.add(21l)\n        cubes.add(23l)\n    \
    \    cubes.add(25l)\n        cubes.add(27l)\n        cubes.add(29l)\n        cubes.add(31l)\n\
    \        cubes.add(33l)\n        cubes.add(35l)\n        cubes.add(37l)\n    \
    \    cubes.add(39l)\n        cubes.add(41l)\n        cubes.add(43l)\n        cubes.add(45l)\n\
    \        cubes.add(47l)\n        cubes.add(49l)\n        cubes.add(51l)\n    \
    \    cubes.add(53l)\n        cubes.add(55l)\n        cubes.add(57l)\n        cubes.add(59l)\n\
    \        cubes.add(61l)\n        cubes.add(63l)\n        cubes.add(65l)\n    \
    \    cubes.add(67l)\n        cubes.add(69l)\n        cubes.add(71l)\n        cubes.add(73l)\n\
    \        cubes.add(75l)\n        cubes.add(77l)\n        cubes.add(79l)\n    \
    \    cubes.add(81l)\n        cubes.add(83l)\n        cubes.add(85l)\n        cubes.add(87l)\n\
    \        cubes.add(89l)\n        cubes.add(91l)\n        cubes.add(93l)\n    \
    \    cubes.add(95l)\n        cubes.add(97l)\n        cubes.add(99l)\n        cubes.add(101l)\n\
    \        cubes.add(103l)\n        cubes.add(105l)\n        cubes.add(107l)\n \
    \       cubes.add(109l)\n        cubes.add(111l)\n        cubes.add(113l)\n  \
    \      cubes.add(115l)\n        cubes.add(117l)\n        cubes.add(119l)\n   \
    \     cubes.add(121l)\n        cubes.add(123l)\n        cubes.add(125l)\n    \
    \    cubes.add(127l)\n        cubes.add(129l)\n        cubes.add(131l)\n     \
    \   cubes.add(133l)\n        cubes.add(135l)\n        cubes.add(137l)\n      \
    \  cubes.add(139l)\n        cubes.add(141l)\n        cubes.add(143l)\n       \
    \ cubes.add(145l)\n        cubes.add(147l)\n        cubes.add(149l)\n        cubes.add(151l)\n\
    \        cubes.add(153l)\n        cubes.add(155l)\n        cubes.add(157l)\n \
    \       cubes.add(159l)\n        cubes.add(161l)\n", "        val n = a.toInt\n\
    \        if (n == 1) true\n        else if (n % 2 == 0) true\n        else false",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * ", "        val cube = a.toString.toLong * a.toString.toLong\
    \ * a.toString.toLong\n        cube == a.toString.toLong", "        val cube =\
    \ a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n    \
    \    cubes += a\n        cubes += a\n        cubes += a\n        cubes += a\n\
    \        cubes += a\n        cubes += a\n        cubes += a\n        cubes +=\
    \ a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a\n        cubes += a\n        cubes\
    \ += a\n        cubes += a\n        cubes += a", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        val cubesCount = cubes.length\n\
    \        val cubesSum = cubes.sum\n        val cubesSumSquare = cubes.sum * cubes.sum\n\
    \        val cubesSumCube = cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube2\
    \ = cubes.sum * cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube3 =\
    \ cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube4\
    \ = cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\n  \
    \      val cubesSumCube5 = cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * cubes.sum\n        val cubesSumCube6 = cubes.sum * cubes.sum *\
    \ cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\n    \
    \    val cubesSumCube7 = cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube8 =\
    \ cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube9 = cubes.sum *\
    \ cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube10 = cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum * cubes.sum\n        val cubesSumCube11\
    \ = cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\n  \
    \      val cubesSumCube12 = cubes.sum * cubes.sum * cubes.sum * cubes.sum * cubes.sum\
    \ * cubes.", "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.Set[Long]()\n\
    \        cubesSet += cube\n        cubesSet += cube*cube\n        cubesSet +=\
    \ cube*cube*cube\n        cubesSet += cube*cube*cube*cube\n        cubesSet +=\
    \ cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        cubes += cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n     \
    \   cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes +=\
    \ cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube ", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       val cubes = cube.toString.toInt\n        cubes % a == 0", "        val\
    \ cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer(cube)\n        cubes foreach { x => cubes\
    \ += x*x*x }\n        cubes.size == a.toString.toInt", "        val cube = a.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        cubes += cube\n      \
    \  cubes.toList.forall(cubes.contains)", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       cube == cube * cube * cube", "        val cube = a.toString.toInt\n  \
    \      val cubes = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.HashSet(cubes)\n\
    \        cubesSet.contains(cube)", "        val cube = a.toInt\n        val cubes\
    \ = cube.pow(3).toInt\n        cubes % a == 0", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       val cubes = cube.pow(3).toInt\n        cubes % 1 == 0", "        val cube\
    \ = a.toInt\n        val cubes = cube.toLong\n        val cubesArray = Array(cube,\
    \ cubes, cube*cube, cube*cubes, cube*cube*cube, cube*cube*cubes)\n        cubesArray.contains(cube)",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toInt\n        val cubes = cube.pow(3).toInt\n        cubes\
    \ % a == 0", "        val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong", "        val cube = a.toString.toInt\n  \
    \      val cubes = mutable.Set[Long]()\n        cubes += cube\n        cubes +=\
    \ cube * cube\n        cubes += cube * cube * cube\n        cubes += cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * ", "        val cube = a.toString.toInt\n\
    \        cube == (a.toString.toInt * a.toString.toInt * a.toString.toInt)", " \
    \       val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n  \
    \      val cubesSet = mutable.HashSet[Long]()\n        val cubesSet2 = mutable.HashSet[Long]()\n\
    \        cubesSet += cube\n        cubesSet2 += cube\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach(cubesSet2.remove)\n\
    \        cubesSet.foreach(cubesSet.remove)\n        cubesSet2.foreach", "    \
    \    val cube = a.toString.toInt\n        val cubes = cube.toString.toInt\n  \
    \      val cubesString = cubes.toString\n        cubesString.length == cube",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        cubes += cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.HashSet(cubes)\n\
    \        cubesSet.contains(cube)", "        val cube = a.toString.toInt\n    \
    \    val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += cube\n    \
    \    cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(cube)",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * ", "        val cube = a.toString.toInt\n        cube == cube\
    \ * cube * cube", "        val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cu", "        val cube = a.toString.toInt\n        val\
    \ cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += a\n        cubes +=\
    \ a * a\n        cubes += a * a * a\n        cubes += a * a * a * a\n        cubes\
    \ += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a"]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_23_strlen
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += 1\n            i += 1\n        }\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qzxr0f7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qzxr0f7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        val result = new mutable.ListBuffer[Long]()\n        for(i\
    \ <- 0 until length){\n            val c = chars(i)\n            if(c == '.' ||\
    \ c == '-' || c == '_' || c == '~'){\n                result.add(i)\n        \
    \    }\n        }\n        result.toList.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpafwq6b00.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpafwq6b00.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpafwq6b00.scala:14:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e\
    [0m \e[36mc\e[0m = chars(i)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    \e[33mvalue\e[0m \e[35mchars\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793267
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += 1\n            i += 1\n        }\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdxssftue.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            len += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean len.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var count = 0\n        for(i <- 0 until string.length)\n\
    \            count += string.charAt(i).toChar\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvtkh0lrz.scala:17)\n\tat Problem.main(tmpvtkh0lrz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793179
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val charLen\
    \ = string.toCharArray().length\n        val strLen = strLen + charLen\n     \
    \   strLen\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp356u1h0z.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mstrLen\e[0m = strLen + charLen\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mstrLen is already defined as \e[33mvalue\e[0m \e[35mstrLen\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659793266
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLen\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp2mnnxutj.scala:18:45 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m  \
    \                                           ^\e[0m\n\e[31m   |\e[0m          \
    \     Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLen\e[0m needs\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp2mnnxutj.scala:19:48\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^\e[0m\n\e\
    [31m   |\e[0m            Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp2mnnxutj.scala:20:54\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                      ^\e\
    [0m\n\e[31m   |\e[0m      Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2mnnxutj.scala:26:75\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e["
  stdout: ''
  timestamp: 1659793267
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var count = 0\n        for(i <- 0 until string.length)\n\
    \            count += string.charAt(i).toChar\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvtkh0lrz.scala:17)\n\tat Problem.main(tmpvtkh0lrz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793179
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168

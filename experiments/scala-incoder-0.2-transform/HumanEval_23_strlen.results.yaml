language: scala
name: HumanEval_23_strlen
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += 1\n            i += 1\n        }\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qzxr0f7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qzxr0f7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        val result = new mutable.ListBuffer[Long]()\n        for(i\
    \ <- 0 until length){\n            val c = chars(i)\n            if(c == '.' ||\
    \ c == '-' || c == '_' || c == '~'){\n                result.add(i)\n        \
    \    }\n        }\n        result.toList.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpafwq6b00.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpafwq6b00.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpafwq6b00.scala:14:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e\
    [0m \e[36mc\e[0m = chars(i)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    \e[33mvalue\e[0m \e[35mchars\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793267
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += 1\n            i += 1\n        }\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdxssftue.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            len += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean len.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var count = 0\n        for(i <- 0 until string.length)\n\
    \            count += string.charAt(i).toChar\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvtkh0lrz.scala:17)\n\tat Problem.main(tmpvtkh0lrz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793179
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val charLen\
    \ = string.toCharArray().length\n        val strLen = strLen + charLen\n     \
    \   strLen\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp356u1h0z.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mstrLen\e[0m = strLen + charLen\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mstrLen is already defined as \e[33mvalue\e[0m \e[35mstrLen\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659793266
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLen\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp2mnnxutj.scala:18:45 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m  \
    \                                           ^\e[0m\n\e[31m   |\e[0m          \
    \     Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLen\e[0m needs\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp2mnnxutj.scala:19:48\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^\e[0m\n\e\
    [31m   |\e[0m            Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp2mnnxutj.scala:20:54\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                      ^\e\
    [0m\n\e[31m   |\e[0m      Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2mnnxutj.scala:26:75\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e["
  stdout: ''
  timestamp: 1659793267
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var count = 0\n        for(i <- 0 until string.length)\n\
    \            count += string.charAt(i).toChar\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvtkh0lrz.scala:17)\n\tat Problem.main(tmpvtkh0lrz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793179
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ 0\n        for (i <- 0 until chars.length) {\n            val char = chars(i)\n\
    \            if (char == '.') {\n                length += 2\n            } else\
    \ {\n                length += 1\n            }\n        }\n        length\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmm_4vr8_.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until chars.length)\
    \ {\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m              value length is not a member of java.util.stream.IntStream\n\
    \e[31m\e[31m-- [E050] Type Error: /tmp/tmpmm_4vr8_.scala:13:23 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36mchar\e[0m = chars(i)\n\
    \e[31m\e[31m   |\e[0m                       ^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                 \e[33mvalue\e[0m \e[35mchars\e[0m does not take parameters\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmm_4vr8_.scala:15:23\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                length +=\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m               value += is not a member of Int - did you mean length.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmm_4vr8_.scala:17:23 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                length += \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               value\
    \ += is not a member of Int - did you mean length.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string(i)\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxillxi34.scala:17)\n\tat Problem.main(tmpxillxi34.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val len =\
    \ (strLen / 2).toLong\n        len\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmps_emvxdt.scala:16)\n\tat Problem.main(tmps_emvxdt.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978519
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        chars.toList.map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0\n        for(i <- 0 until string.length)\
    \ len += string(i)\n        len\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpafzvimvw.scala:11:44 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until string.length)\
    \ len += string(i)\n\e[31m\e[31m   |\e[0m                                    \
    \    ^^^^^^\e[0m\n\e[31m   |\e[0m                  value += is not a member of\
    \ Int - did you mean len.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string(i)\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpikjn_run.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string(i)\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean len.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978519
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        return len\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv9xkieba.scala:17)\n\tat Problem.main(tmpv9xkieba.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        for(i <- 0 until string.length)\
    \ length += string(i)\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptpqm5_y2.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until string.length)\
    \ length += string(i)\n\e[31m\e[31m   |\e[0m                                 \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m              value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toLong\n        return strLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        for(i <- 0 until string.length)\n\
    \            length += string(i)\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1bt92yjc.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += string(i)\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        for(i <- 0 until string.length)\n\
    \            length += string.charAt(i).toLong\n        length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvh16hur5.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += string.charAt(i).toLong\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qzxr0f7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val charArray = string.toCharArray\n        val\
    \ len = charArray.length\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978520
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder()\n        str.append(string)\n\
    \        str.length()\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978521
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var length = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            length += 1\n            i += 1\n       \
    \ }\n        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = str\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmprcsgezds.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmprcsgezds.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprcsgezds.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprcsgezds.scala:21:57\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                            "
  stdout: ''
  timestamp: 1659978520
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = new mutable.HashMap[String, Long]()\n\
    \        for(i <- 0 until string.length){\n            val key = string.charAt(i)\n\
    \            if(len.contains(key)){\n                len += (key -> len(key) +\
    \ 1)\n            } else {\n                len += (key -> 1)\n            }\n\
    \        }\n        len.map{case (k, v) => v}.toList.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx6mfd9sn.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = \e[33mnew\e[0m\
    \ mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978518
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0pc0yuze.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmp0pc0yuze.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0pc0yuze.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0pc0yuze.scala:22:60\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                     "
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        chars.toList.map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        strLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2i6nmevy.scala:15)\n\tat Problem.main(tmp2i6nmevy.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += string.charAt(i).toChar\n        length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpet5pbsg5.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += string.charAt(i).toChar\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            val c = string.charAt(i)\n            if\
    \ (c == '\\0' || c == '\\n' || c == '\\r' || c == '\\t') {\n                len\
    \ += 1\n            } else {\n                len += c.toInt.toLong\n        \
    \    }\n            i += 1\n        }\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpmfc_92np.scala:14:22 -----------------------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mif\e[0m (c == \e[31m'\\0'\e[0m || c\
    \ == \e[31m'\\n'\e[0m || c == \e[31m'\\r'\e[0m || c == \e[31m'\\t'\e[0m) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \  octal escape literals are unsupported: use \\u0000 instead\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpmfc_92np.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                len += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean len.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpmfc_92np.scala:17:20 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m                len += c.toInt.toLong\n\e[31m\e[31m   |\e[0m              \
    \  ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member of Int\
    \ - did you mean len.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += 1\n            i += 1\n        }\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toLong\n        strLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        chars.toList.map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        chars.toList.map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpuhji30b7.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuhji30b7.scala:25:78\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuhji30b7.scala:22:66\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m    Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuhji30b7.scala:24:75\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                    "
  stdout: ''
  timestamp: 1659978520
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = new mutable.ListBuffer[Long]()\n        var i = 0\n        while (i < length)\
    \ {\n            val c = string.charAt(i)\n            if (c == '.') {\n     \
    \           result += length\n            }\n            i += 1\n        }\n \
    \       result.toList.last\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"\
    asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7qokmd9b.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var length = 0\n        for(i <- 0 until string.length)\n\
    \            length += string.charAt(i).toChar\n        length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp0u1h63w6.scala:17)\n\tat Problem.main(tmp0u1h63w6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978530
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = new mutable.ListBuffer[Long]()\n        var i = 0\n        while (i < length)\
    \ {\n            val c = string.charAt(i)\n            if (c == '.') {\n     \
    \           result.add(0)\n            } else {\n                result.add((c\
    \ - 'a' + 1).toLong)\n            }\n            i += 1\n        }\n        result.toList.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx1bkml3b.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string(i).length\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfxrs_1cu.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string(i).length\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfxrs_1cu.scala:12:29\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m            len += string(i).length\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                   value length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659978531
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toLong\n        return strLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += string.charAt(i).toChar\n        length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpet5pbsg5.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += string.charAt(i).toChar\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = new mutable.HashMap[String, Long]()\n\
    \        for (i <- 0 until string.length)\n            len += (string.charAt(i)\
    \ -> 1L)\n        len.foldLeft(0L)(_ + _._2)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbm5sps4y.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = \e[33mnew\e[0m\
    \ mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978527
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += string(i)\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl79_bnoh.scala:17)\n\tat Problem.main(tmpl79_bnoh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978531
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder()\n        str.append(string)\n\
    \        str.length()\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978521
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        chars.toList.foldLeft(0l) { (sum, char) =>\n         \
    \   sum + (if (char == '\\n') 1 else 0)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp07894lyg.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp07894lyg.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.foldLeft(\e[31m0l\e[0m) { (\e[36msum\e\
    [0m, \e[36mchar\e[0m) =>\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m        value toList is not a member of java.util.stream.IntStream\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = str\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmprcsgezds.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmprcsgezds.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprcsgezds.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprcsgezds.scala:21:57\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                            "
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var length =\
    \ 0\n        for (c <- chars) length += c.length\n        length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpac9k_yna.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (c <- chars) length += c.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^\e[0m\n\e[31m   |\e[0mvalue foreach\
    \ is not a member of java.util.stream.IntStream - did you mean chars.forEach?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978530
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpeicivlb6.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmpeicivlb6.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeicivlb6.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeicivlb6.scala:22:60\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                               "
  stdout: ''
  timestamp: 1659978529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        val sum = 0\n        for (i <- 0 until length) {\n   \
    \         val c = chars(i)\n            sum += c.toLong\n        }\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpnak6n1qf.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E050] Type Error: /tmp/tmpnak6n1qf.scala:14:20 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e[0m \e[36mc\e[0m = chars(i)\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m   |\e[0m           \
    \         \e[33mvalue\e[0m \e[35mchars\e[0m does not take parameters\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpnak6n1qf.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += c.toLong\n\e[31m\e[31m   |\e[0m  \
    \          ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659978531
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var count =\
    \ 0\n        for (c <- chars) {\n            count += c.length\n        }\n  \
    \      count\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7b8clqjk.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (c <- chars) {\n\e[31m\e[31m \
    \  |\e[0m                  ^^^^^\e[0m\n\e[31m   |\e[0mvalue foreach is not a member\
    \ of java.util.stream.IntStream - did you mean chars.forEach?\n1 error found\n"
  stdout: ''
  timestamp: 1659978531
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len + 1\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpg_iduokx.scala:16)\n\tat Problem.main(tmpg_iduokx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978531
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen + 1\n        val strLenLenLen = strLenLen + 1\n        val strLenLenLenLen\
    \ = strLenLenLen + 1\n        val strLenLenLenLenLen = strLenLenLenLen + 1\n \
    \       val strLenLenLenLenLenLen = strLenLenLenLenLen + 1\n        val strLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLen + 1\n        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0c25a5lf.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0c25a5lf.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLen is already defined\
    \ as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp0c25a5lf.scala:28:12 ---------------------------\e[0m\e[0m\n\e[31m28\
    \ |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen + \e[31m1\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen is\
    \ already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmp0c25a5lf.scala:18:45 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLen\e[0m\
    \ = strLenLenLenLenLenLenLenLenLen + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \                                        ^\e[0m\n\e[31m   |\e[0m             \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLen\e[0m needs\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /"
  stdout: ''
  timestamp: 1659978530
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toLong\n        val strLenLenLen = strLenLen.toLong\n        val strLenLenLenLen\
    \ = strLenLenLen.toLong\n        val strLenLenLenLenLen = strLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLen = strLenLenLenLenLen.toLong\n        val strLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLen.toLong\n        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toLong\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphm21_p9l.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmphm21_p9l.scala:18:45 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLen\e[0m\
    \ = strLenLenLenLenLenLenLenLenLen.toLong\n\e[31m\e[31m   |\e[0m             \
    \                                ^\e[0m\n\e[31m   |\e[0m               Recursive\
    \ \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLen\e[0m needs type\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmphm21_p9l.scala:19:48 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLen.toLong\n\e[31m\e[31m   |\e[0m        \
    \                                        ^\e[0m\n\e[31m   |\e[0m            Recursive\
    \ \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLen\e[0m needs type\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmphm21_p9l.scala:20:51\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toLong\n\
    \e[31m\e[31m   |\e[0m                                                   ^\e[0m\n\
    \e[31m   |\e[0m         Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explana"
  stdout: ''
  timestamp: 1659978530
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val lengths = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 0 until string.length)\n            lengths += string(i)\n\
    \        lengths.sum\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8y0d6vu9.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlengths\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978527
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var count = 0\n        var index = 0\n       \
    \ while (index < string.length) {\n            count += 1\n            index +=\
    \ 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978530
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLen\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpce6y3oa7.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpce6y3oa7.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpce6y3oa7.scala:26:75\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpce6y3oa7.scala:22:60\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \          Not found: strLe"
  stdout: ''
  timestamp: 1659978531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n \
    \   assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpeeckx8ss.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpeeckx8ss.scala:26:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmpeeckx8ss.scala:18:45 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLen\e[0m\
    \ = strLenLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m    \
    \                                         ^\e[0m\n\e[31m   |\e[0m            \
    \   Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLen\e[0m needs\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpeeckx8ss.scala:19:48\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^\e[0m\n\e\
    [31m   |\e[0m            Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpeeckx8ss.scala:20:54\
    \ ----------------------"
  stdout: ''
  timestamp: 1659978531
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        if (length\
    \ == 0) 0\n        else length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978530
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val strLen\
    \ = length.toLong\n        return strLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978530
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val len =\
    \ (strLen / 2).toInt\n        return len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1hkjrjrt.scala:16)\n\tat Problem.main(tmp1hkjrjrt.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        for(i <- 0 until string.length)\
    \ length += (string.charAt(i).toInt - 'a' + 1)\n        length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa4q3qhak.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until string.length)\
    \ length += (string.charAt(i).toInt - \e[31m'a'\e[0m + \e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m                                        ^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m              value += is not a member of Long - did you mean length.!=?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978531
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += string(i).length\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj5cxqnd4.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string(i).length\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj5cxqnd4.scala:12:29\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m            len += string(i).length\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                   value length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659978532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += 1\n            i += 1\n        }\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\
    \ length += string.charAt(i).toChar\n        length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplikmq_av.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until string.length)\
    \ length += string.charAt(i).toChar\n\e[31m\e[31m   |\e[0m                   \
    \                     ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               value += is\
    \ not a member of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string(i)\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxillxi34.scala:17)\n\tat Problem.main(tmpxillxi34.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder()\n        str.append(string)\n\
    \        str.length()\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978521
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcu7i29x5.scala:17)\n\tat Problem.main(tmpcu7i29x5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978537
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val charArray = string.toCharArray\n        val\
    \ length = charArray.length\n        val sum = 0\n        for (i <- 0 until length)\
    \ {\n            val c = charArray(i)\n            sum += if (c == '.') 1 else\
    \ 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n   \
    \ assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpqc5xebad.scala:15:19 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += \e[33mif\e[0m (c == \e[31m'.'\e[0m)\
    \ \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m           \
    \        ^^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqc5xebad.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            sum += \e[33mif\e\
    [0m (c == \e[31m'.'\e[0m) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659978537
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\
    \ len += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwpz58s2l.scala:16)\n\tat Problem.main(tmpwpz58s2l.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder\n        str.append(string)\n\
    \        str.length()\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978541
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string(i)\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxillxi34.scala:17)\n\tat Problem.main(tmpxillxi34.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0pc0yuze.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmp0pc0yuze.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0pc0yuze.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0pc0yuze.scala:22:60\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                     "
  stdout: ''
  timestamp: 1659978520
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        chars.toList.map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLen\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n  \
    \  assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpn3tyv0ah.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpn3tyv0ah.scala:18:45\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                             ^\e[0m\n\e[31m\
    \   |\e[0m               Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpn3tyv0ah.scala:19:48\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^\e[0m\n\e\
    [31m   |\e[0m            Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpn3tyv0ah.scala:20:54\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                      ^\e\
    [0m\n\e[31m   |\e[0m      Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn3tyv0ah.scala:23:63\
    \ -----------------------"
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen / 2\n        val strLenLenLen = strLenLen / 2\n        val strLenLenLenLen\
    \ = strLenLenLen / 2\n        val strLenLenLenLenLen = strLenLenLenLen / 2\n \
    \       val strLenLenLenLenLenLen = strLenLenLenLenLen / 2\n        val strLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLen / 2\n        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLen\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n  \
    \  assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp6oy4m8ce.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp6oy4m8ce.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen is already defined\
    \ as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp6oy4m8ce.scala:27:12 ---------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen / \e[31m2\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen is already\
    \ defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp6oy4m8ce.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen / \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen is already\
    \ defined as \e[33mvalue\e[0m \e[35mstr"
  stdout: ''
  timestamp: 1659978540
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while(i\
    \ < string.length){\n            len += 1\n            i += 1\n        }\n   \
    \     len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978540
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var count =\
    \ 0\n        for (c <- chars) {\n            count += 1\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplmm3wc29.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (c <- chars) {\n\e[31m\e[31m \
    \  |\e[0m                  ^^^^^\e[0m\n\e[31m   |\e[0mvalue foreach is not a member\
    \ of java.util.stream.IntStream - did you mean chars.forEach?\n1 error found\n"
  stdout: ''
  timestamp: 1659978541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toInt * Math.pow(2,i)\n        len\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplmd22_1e.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string.charAt(i).toInt * Math.pow(\e\
    [31m2\e[0m,i)\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m \
    \           value += is not a member of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        chars.toList.map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj_q_vj9g.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len > 0)\
    \ len.toLong\n        else 0l\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = new mutable.ListBuffer[Long]()\n   \
    \     for (i <- 0 until string.length)\n            len += string(i)\n       \
    \ len.toList.length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpffynnlt7.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = \e[33mnew\e[0m\
    \ mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m               \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0L\n        var i = 0\n        while\
    \ (i < string.length) {\n            val c = string.charAt(i)\n            if\
    \ (c == '\\0') len += 1\n            else len += c.length\n            i += 1\n\
    \        }\n        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpfm04155h.scala:14:22 -----------------------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mif\e[0m (c == \e[31m'\\0'\e[0m) len\
    \ += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m               octal escape literals are unsupported: use \\u0000 instead\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfm04155h.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mif\e[0m (c == \e[31m'\\0'\e[0m) len\
    \ += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                           ^^^^^^\e[0m\n\
    \e[31m   |\e[0m                 value += is not a member of Long - did you mean\
    \ len.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfm04155h.scala:15:21\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            \e[33melse\e\
    [0m len += c.length\n\e[31m\e[31m   |\e[0m                 ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                 value += is not a member of Long - did you mean len.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfm04155h.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33melse\e[0m len += c.length\n\e[31m\e\
    [31m   |\e[0m                        ^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \              value length is not a member of Char\n4 errors found\n"
  stdout: ''
  timestamp: 1659978542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var count = 0\n        for (x <- string) {\n \
    \           count += 1\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = new mutable.HashMap[String, Long]()\n\
    \        for (i <- 0 until string.length)\n            len += (string -> string.length)\n\
    \        len.foldLeft(0l)((x, y) => x + y)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsf7lg9e6.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = \e[33mnew\e[0m\
    \ mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpy9orbcr5.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy9orbcr5.scala:23:69\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy9orbcr5.scala:22:63\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m    Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy9orbcr5.scala:26:84\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \             "
  stdout: ''
  timestamp: 1659978540
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val len =\
    \ new mutable.HashMap[String, Long]()\n        for(i <- 0 until strLen){\n   \
    \         val str = string.substring(i)\n            val len = len.getOrElse(str,\
    \ 0L)\n            len += str.length\n            len += 1 // for space\n    \
    \        len += 1 // for \"\n            len += 1 // for \"\n            len +=\
    \ 1 // for \"\n            len += 1 // for \"\n            len += 1 // for \"\n\
    \            len += 1 // for \"\n            len += 1 // for \"\n            len\
    \ += 1 // for \"\n            len += 1 // for \"\n            len += 1 // for\
    \ \"\n            len += 1 // for \"\n            len += 1 // for \"\n       \
    \     len += 1 // for \"\n            len += 1 // for \"\n            len += 1\
    \ // for \"\n            len += 1 // for \"\n            len += 1 // for \"\n\
    \            len += 1 // for \"\n            len += 1 // for \"\n            len\
    \ += 1 // for \"\n            len += 1 // for \"\n            len += 1 // for\
    \ \"\n            len += 1 // for \"\n            len += 1 // for \"\n       \
    \     len += 1 // for \"\n            len += 1 // for \"\n            len += 1\
    \ // for \"\n            len += 1 // for \"\n            len += 1 // for \"\n\
    \            len += 1 // for \"\n            len += 1 // for \"\n            len\
    \ += 1 // for \"\n            len += 1 // for \"\n            len += 1 // for\
    \ \"\n            len += 1 // for \"\n            len += 1 // for \"\n       \
    \     len += 1 // for \"\n            len += 1 // for \"\n            len += 1\
    \ // for \"\n            len += 1 // for \"\n            len += 1 // for \"\n\
    \            len += 1 // for \"\n            len += 1 // for \"\n            len\
    \ += 1 // for \"\n            len += 1 // for \"\n            len += 1 // for\
    \ \"\n            len += 1 // for \"\n            len += 1 // for \"\n       \
    \     len += 1 // for \"\n            len += 1 // for \"\n            len += 1\
    \ // for \"\n            len += 1 // for \"\n            len += 1 // for \"\n\
    \            len += 1 // for \"\n            len += 1 // for \"\n            len\
    \ += 1 // for \"\n\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpu_ob_x65.scala:82:0 ----------------------------\e\
    [0m\e[0m\n\e[31m82 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu_ob_x65.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mlen\e[0m = \e[33mnew\e[0m mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpu_ob_x65.scala:81:1 ---------------------\e\
    [0m\e[0m\n\e[31m81 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:\
    \    Unit\n\e[31m   |\e[0m Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[33m\e[33m-- Warning:\
    \ /tmp/tmpu_ob_x65.scala:75:4 ----------------------------------------\e[0m\e\
    [0m\n\e[33m75 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e\
    [0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m\
    \    Line is indented too far to the left, or a `}` is missing\n1 warning found\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659978541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val lengths\
    \ = chars.map(_.length).toArray\n        val sum = lengths.sum\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd2ad3m9a.scala:11:34 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlengths\e[0m = chars.map(_.length).toArray\n\
    \e[31m\e[31m   |\e[0m                                ^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                value length is not a member of Int\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978541
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpgt1wd18f.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen is\
    \ already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgt1wd18f.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLen\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen is\
    \ already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmpgt1wd18f.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgt1wd18f.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = st"
  stdout: ''
  timestamp: 1659978542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyqh8mllo.scala:27:4 ----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpyqh8mllo.scala:17:42\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyqh8mllo.scala:21:60\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m       Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyqh8mllo.scala:22:66\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyqh8mllo.scala:23:72\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenL"
  stdout: ''
  timestamp: 1659978541
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9nx0vxjq.scala:27:4 ----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmp9nx0vxjq.scala:17:42 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9nx0vxjq.scala:20:54\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9nx0vxjq.scala:25:78\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9nx0vxjq.scala:22:63\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLe"
  stdout: ''
  timestamp: 1659978541
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcu7i29x5.scala:17)\n\tat Problem.main(tmpcu7i29x5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978537
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += 1\n            i += 1\n        }\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = new mutable.ListBuffer[Long]()\n        var i = 0\n        while (i < length)\
    \ {\n            val char = string.charAt(i)\n            if (char == '.') {\n\
    \                result.add(length)\n            } else {\n                result.add(i)\n\
    \            }\n            i += 1\n        }\n        result.toList.foldLeft(0l)(_\
    \ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\"\
    )) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprc5dfnqc.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978539
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += string.charAt(i).toLong\n        length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpnytwil0s.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += string.charAt(i).toLong\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = str\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmprcsgezds.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmprcsgezds.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprcsgezds.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprcsgezds.scala:21:57\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                            "
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var count =\
    \ 0\n        for (i <- 0 until chars.length)\n            count += chars(i).length\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1j68zu09.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1j68zu09.scala:13:18 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            count += chars(i).length\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp1j68zu09.scala:13:21\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            count +=\
    \ chars(i).length\n\e[31m\e[31m   |\e[0m                     ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     \e[33mvalue\e[0m \e[35mchars\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toInt * (string.length.toLong - i)\n    \
    \    len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\"\
    )) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhbghbvr.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string.charAt(i).toInt * (string.length.toLong\
    \ - i)\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \    value += is not a member of Int - did you mean len.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978547
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += string(i)\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl79_bnoh.scala:17)\n\tat Problem.main(tmpl79_bnoh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978531
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val lengthOfString\
    \ = 0\n        for(i <- 0 until length){\n            lengthOfString += string.charAt(i).toString.length\n\
    \        }\n        lengthOfString\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmcexrdz0.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            lengthOfString += string.charAt(i).toString.length\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \  value += is not a member of Int - did you mean lengthOfString.!=?\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978547
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val charArray = string.toCharArray\n        val\
    \ charArrayLength = charArray.length\n        var length = 0\n        for(i <-\
    \ 0 until charArrayLength) {\n            length += charArray(i).length\n    \
    \    }\n        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvaev_qv9.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            length += charArray(i).length\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpvaev_qv9.scala:14:35 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m            length += charArray(i).length\n\e[31m\e[31m   |\e[0m          \
    \            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      value\
    \ length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659978548
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder()\n        str.append(string)\n\
    \        str.length()\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978521
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toLong\n        return strLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978520
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978547
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += (string.charAt(i).toInt * (string.length.toLong - i.toLong))\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbdy9z48d.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += (string.charAt(i).toInt * (string.length.toLong\
    \ - i.toLong))\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978548
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var count = 0\n        for (x <- string) {\n \
    \           count += 1\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val charLen\
    \ = string.toCharArray().length\n        val strLenChar = strLen + charLen\n \
    \       strLenChar\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc5c_qk2y.scala:17)\n\tat Problem.main(tmpc5c_qk2y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978548
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0pc0yuze.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmp0pc0yuze.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0pc0yuze.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0pc0yuze.scala:22:60\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                     "
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdh4yge9n.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpdh4yge9n.scala:17:42\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdh4yge9n.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdh4yge9n.scala:21:57\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \        Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdh4yge9n.scala:26:78 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |"
  stdout: ''
  timestamp: 1659978548
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ 0\n        for (i <- 0 until chars.length)\n            length += chars(i).length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpii_36ex8.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpii_36ex8.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += chars(i).length\n\e[31m\e[31m \
    \  |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean length.!=?\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmpii_36ex8.scala:13:22 -----------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m            length += chars(i).length\n\e[31m\e[31m   |\e[0m         \
    \             ^^^^^\e[0m\n\e[31m   |\e[0m                      \e[33mvalue\e[0m\
    \ \e[35mchars\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978548
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val lengthLong\
    \ = length.toLong\n        lengthLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978549
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0L\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toLong\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc2ausmms.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string.charAt(i).toLong\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Long - did you mean len.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978548
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2az7gavt.scala:27:4 ----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp2az7gavt.scala:17:42\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2az7gavt.scala:21:60\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m       Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2az7gavt.scala:22:66\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2az7gavt.scala:23:72\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenL"
  stdout: ''
  timestamp: 1659978548
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder(string).reverse\n\
    \        str.size\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978549
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0L\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpleb7p9av.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string.charAt(i).toChar\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Long - did you mean len.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978548
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += 1\n            i += 1\n        }\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder\n        str.append(string)\n\
    \        str.length()\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val lengthOfString\
    \ = string.lengthOf\n        val lengthOfChar = string.lengthOfChar\n        val\
    \ lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOfCharInString\n        val lengthOfCharInString = string.lengthOfCharInString\n\
    \        val lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOfCharInString\n        val lengthOfCharInString = string.lengthOfCharInString\n\
    \        val lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOfCharInString\n        val lengthOfCharInString = string.lengthOfCharInString\n\
    \        val lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOfCharInString\n        val lengthOfCharInString = string.lengthOfCharInString\n\
    \        val lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOfCharInString\n        val lengthOfCharInString = string.lengthOfCharInString\n\
    \        val lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOfCharInString\n        val lengthOfCharInString = string.lengthOfCharInString\n\
    \        val lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOfCharInString\n        val lengthOfCharInString = string.lengthOfCharInString\n\
    \        val lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOfCharInString\n        val lengthOfCharInString = string.lengthOfCharInString\n\
    \        val lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOfCharInString\n        val lengthOfCharInString = string.lengthOfCharInString\n\
    \        val lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOfCharInString\n        val lengthOfCharInString = string.lengthOfCharInString\n\
    \        val lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOfCharInString\n        val lengthOfCharInString = string.lengthOfCharInString\n\
    \        val lengthOfCharInString = string.lengthOfCharInString\n        val lengthOfCharInString\
    \ = string.lengthOf\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpja3hjtoy.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mlengthOfCharInString\e[0m\
    \ = string.lengthOfCharInString\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlengthOfCharInString is already defined as \e[33mvalue\e[0m\
    \ \e[35mlengthOfCharInString\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpja3hjtoy.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mlengthOfCharInString\e[0m\
    \ = string.lengthOfCharInString\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlengthOfCharInString is already defined as \e[33mvalue\e[0m\
    \ \e[35mlengthOfCharInString\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpja3hjtoy.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mlengthOfCharInString\e[0m\
    \ = string.lengthOfCharInString\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlengthOfCharInString is already defined as \e[33mvalue\e[0m\
    \ \e[35mlengthOfCharInString\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpja3hjtoy.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mlengthOfCharInString\e[0m\
    \ = string.lengthOfCharInString\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlengthOfCharInString is already defined as \e[33mvalue\e[0m\
    \ \e[35mlengthOfCharInString\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpja3hjtoy.scala:18:"
  stdout: ''
  timestamp: 1659978549
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        if (length\
    \ == 0) {\n            return 0\n        }\n        else {\n            return\
    \ length\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978549

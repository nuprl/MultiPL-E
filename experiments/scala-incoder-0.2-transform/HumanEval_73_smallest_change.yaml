name: HumanEval_73_smallest_change
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given an array arr of integers, find the minimum number of elements that\n\
  \    // need to be changed to make the array palindromic. A palindromic array is\
  \ an array that\n    // is read the same backwards and forwards. In one change,\
  \ you can change one element to any other element.\n    // For example:\n    //\
  \ >>> smallestChange((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 5l.toLong, 4l.toLong,\
  \ 7l.toLong, 9l.toLong, 6l.toLong)))\n    // (4l)\n    // >>> smallestChange((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 2l.toLong)))\n    // (1l)\n\
  \    // >>> smallestChange((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
  \ 1l.toLong)))\n    // (0l)\n    def smallestChange(arr : List[Long]) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(smallestChange((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 5l.toLong, 4l.toLong, 7l.toLong, 9l.toLong, 6l.toLong)))\
  \ == (4l));\n    assert(smallestChange((List[Long](1l.toLong, 2l.toLong, 3l.toLong,\
  \ 4l.toLong, 3l.toLong, 2l.toLong, 2l.toLong))) == (1l));\n    assert(smallestChange((List[Long](1l.toLong,\
  \ 4l.toLong, 2l.toLong))) == (1l));\n    assert(smallestChange((List[Long](1l.toLong,\
  \ 4l.toLong, 4l.toLong, 2l.toLong))) == (1l));\n    assert(smallestChange((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 2l.toLong, 1l.toLong))) == (0l));\n    assert(smallestChange((List[Long](3l.toLong,\
  \ 1l.toLong, 1l.toLong, 3l.toLong))) == (0l));\n    assert(smallestChange((List[Long](1l.toLong)))\
  \ == (0l));\n    assert(smallestChange((List[Long](0l.toLong, 1l.toLong))) == (1l));\n\
  \    }\n\n}\n"
completions: ["        val n = arr.size\n        val m = arr.head\n        val r =\
    \ arr.last\n        val s = arr.init.reverse\n        val a = arr.toList\n   \
    \     val b = a.toList\n        val c = b.toList\n        val d = c.toList\n \
    \       val e = d.toList\n        val f = e.toList\n        val g = f.toList\n\
    \        val h = g.toList\n        val i = h.toList\n        val j = i.toList\n\
    \        val k = j.toList\n        val l = k.toList\n        val m = l.toList\n\
    \        val n = m.toList\n        val o = n.toList\n        val p = o.toList\n\
    \        val q = p.toList\n        val r = q.toList\n        val s = r.toList\n\
    \        val t = s.toList\n        val u = t.toList\n        val v = u.toList\n\
    \        val w = v.toList\n        val x = w.toList\n        val y = x.toList\n\
    \        val z = y.toList\n        val a = z.toList\n        val b = a.toList\n\
    \        val c = b.toList\n        val d = c.toList\n        val e = d.toList\n\
    \        val f = e.toList\n        val g = f.toList\n        val h = g.toList\n\
    \        val i = h.toList\n        val j = i.toList\n        val k = j.toList\n\
    \        val l = k.toList\n        val m = l.toList\n        val n = m.toList\n\
    \        val o = n.toList\n        val p = o.toList\n        val q = p.toList\n\
    \        val r = q.toList\n        val s = r.toList\n        val t = s.toList\n\
    \        val u = t.toList\n        val v = u.toList\n        val w = v.toList\n\
    \        val x = w.toList\n        val y = x.toList\n        val z = y.toList\n\
    \        val a = z.toList\n        val b = a.toList\n        val c = b.toList\n\
    \        val d = c.toList\n        val e = d.toList\n        val f = e.toList\n\
    \        val g = f.toList\n        val h = g.toList\n        val i = h.toList\n\
    \        val j = i.toList\n        val k = j.toList\n        val l = k.toList\n\
    \        val m = l.toList\n        val n = m.toList\n        val o = n.toList\n\
    \        val p = o.toList\n        val q = p.toList\n        val r = q", "   \
    \     val n = arr.length\n        val m = arr.head\n        val result = new Array[Long](n)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var temp = 0\n\
    \        var min = 0\n        var minIndex = 0\n        var max = 0\n        var\
    \ maxIndex = 0\n        while (i < n) {\n            while (j < n) {\n       \
    \         if (arr(i) == arr(j)) {\n                    temp = 1\n            \
    \        j++\n                }\n                else {\n                    temp\
    \ = 0\n                }\n                k = j\n                while (k < n)\
    \ {\n                    if (arr(i) != arr(k)) {\n                        temp\
    \ = 0\n                        k++\n                    }\n                  \
    \  else {\n                        temp = 1\n                    }\n         \
    \       }\n                if (temp == 1) {\n                    result(i) = arr(i)\n\
    \                    i++\n                    j++\n                }\n       \
    \         else {\n                    result(i) = arr(j)\n                   \
    \ j++\n                }\n            }\n            while (j < n) {\n       \
    \         k = j\n                while (k < n) {\n                    if (arr(i)\
    \ != arr(k)) {\n                        temp = 0\n                        k++\n\
    \                    }\n                    else {\n                        temp\
    \ = 1\n                    }\n                }\n                if (temp == 1)\
    \ {\n                    result(i) = arr(i)\n                    i++\n       \
    \         }\n                else {\n                    result(i) = arr(j)\n\
    \                    j++\n                }\n            }\n        }\n      \
    \  var i = 0\n        while (i < n) {\n            if (result(i) == arr(i)) {\n\
    \                i++\n            }\n            else {\n                j = 0\n\
    \                while (j < n) {\n                    if (result(i) != arr(j))\
    \ {\n                        temp = 0\n                        j++\n         \
    \           }\n                    else {\n                        temp = 1\n\
    \                    }\n                }\n                if (temp == 1) {\n\
    \                    result(i) = arr(i)\n                    i++\n           \
    \     }\n                else {\n                    result(i) = arr(j)\n    \
    \                j++\n                }\n            }\n        }\n        i =\
    \ 0\n        while (i < n) {\n            if (result(i) == arr(i)) {\n       \
    \         i++\n            }\n            else {\n                j = 0\n    \
    \            while (j < n) {\n                    if (result(i) != arr(j)) {\n\
    \                        temp = 0\n                        j++\n             \
    \       }\n                    else {\n                        temp = 1\n    \
    \                }\n                }\n                if (temp == 1) {\n    \
    \                result(i) = arr(i)\n                    i++\n               \
    \ }\n                else {\n                    result(i) = arr(j)\n        \
    \            j++\n                }\n            }\n        }\n        i = 0\n\
    \        while (i < n) {\n            if (result(i) == arr(i)) {\n           \
    \     i++\n            }\n            else {\n                j = 0\n        \
    \        while (j < n) {\n                    if (result(i) != arr(j)) {\n   \
    \                     temp = 0\n                        j++\n                \
    \    }\n                    else {\n                        temp = 1\n       \
    \             }\n                }\n                if (temp == 1) {", "     \
    \   val arr = arr.sortBy(_).reverse\n        val len = arr.length\n        var\
    \ count = 0\n        var i = 0\n        var j = 0\n        while (i < len) {\n\
    \            if (arr(i) == arr(len - 1 - j)) {\n                count += 1\n \
    \               j++\n            } else {\n                j = 0\n           \
    \ }\n            i += 1\n        }\n        count", "        val arr = arr.toList\n\
    \        val len = arr.length\n        val min = arr.min\n        val max = arr.max\n\
    \        val mid = len/2\n        val midVal = arr(mid)\n        val leftArr =\
    \ (arr.take(mid).reverse).reverse\n        val rightArr = (arr.drop(mid+1).reverse).reverse\n\
    \        val leftMin = smallestChange(leftArr)\n        val leftMax = smallestChange(leftArr)\n\
    \        val rightMin = smallestChange(rightArr)\n        val rightMax = smallestChange(rightArr)\n\
    \        if (leftMin < leftMax) {\n            if (rightMin < rightMax) {\n  \
    \              if (leftMin < midVal) {\n                    return leftMin\n \
    \               }\n                if (rightMin < midVal) {\n                \
    \    return rightMin\n                }\n            }\n        }\n        if\
    \ (rightMin < rightMax) {\n            if (leftMin < midVal) {\n             \
    \   return leftMin\n            }\n            if (rightMin < midVal) {\n    \
    \            return rightMin\n            }\n        }\n        if (leftMin <\
    \ midVal) {\n            return leftMin\n        }\n        if (rightMin < midVal)\
    \ {\n            return rightMin\n        }\n        if (leftMin < max) {\n  \
    \          return leftMin\n        }\n        if (rightMin < max) {\n        \
    \    return rightMin\n        }\n        if (leftMin < min) {\n            return\
    \ leftMin\n        }\n        if (rightMin < min) {\n            return rightMin\n\
    \        }\n        return 0", "        val arr = arr.toList\n        val len\
    \ = arr.length\n        val maxLen = len / 2\n        val maxLen2 = len / 4\n\
    \        val maxLen3 = len / 8\n        val maxLen4 = len / 16\n        val maxLen5\
    \ = len / 32\n        val maxLen6 = len / 64\n        val maxLen7 = len / 128\n\
    \        val maxLen8 = len / 256\n        val maxLen9 = len / 512\n        val\
    \ maxLen10 = len / 1024\n        val maxLen11 = len / 2048\n        val maxLen12\
    \ = len / 4096\n        val maxLen13 = len / 8192\n        val maxLen14 = len\
    \ / 16384\n        val maxLen15 = len / 32768\n        val maxLen16 = len / 65536\n\
    \        val maxLen17 = len / 131072\n        val maxLen18 = len / 262144\n  \
    \      val maxLen19 = len / 524288\n        val maxLen20 = len / 1048576\n   \
    \     val maxLen21 = len / 2097152\n        val maxLen22 = len / 4194304\n   \
    \     val maxLen23 = len / 8388608\n        val maxLen24 = len / 16777216\n  \
    \      val maxLen25 = len / 33554432\n        val maxLen26 = len / 67108864\n\
    \        val maxLen27 = len / 134217728\n        val maxLen28 = len / 268435456\n\
    \        val maxLen29 = len / 536870912\n        val maxLen30 = len / 1073741824\n\
    \        val maxLen31 = len / 2147483648\n        val maxLen32 = len / 4294967296\n\
    \        val maxLen33 = len / 8589934592\n        val maxLen34 = len / 17179869184\n\
    \        val maxLen35 = len / 34359738368\n        val maxLen36 = len / 68719476736\n\
    \        val maxLen37 = len / 137438953472\n        val maxLen38 = len / 274877906944\n\
    \        val maxLen39 = len / 549755813888\n        val maxLen40 = len / 1099511627776\n\
    \        val maxLen41 = len / 2199023255552\n        val maxLen42 = len / 4398046511104\n\
    \        val ", "        val arr = arr.toList\n        val len = arr.length\n\
    \        val min = len\n        var i = 0\n        var j = 0\n        var k =\
    \ 0\n        var temp = 0\n        var count = 0\n        while(i < len) {\n \
    \           while(j < len) {\n                if(arr(i) == arr(j)) {\n       \
    \             temp = arr(i)\n                    arr(i) = arr(j)\n           \
    \         arr(j) = temp\n                    j++\n                }\n        \
    \        else {\n                    j++\n                }\n            }\n \
    \           i = i + 1\n            j = len\n            k = k + 1\n          \
    \  while(k >= 0) {\n                if(arr(k) == arr(len - k)) {\n           \
    \         temp = arr(k)\n                    arr(k) = arr(len - k)\n         \
    \           arr(len - k) = temp\n                    k--\n                }\n\
    \                else {\n                    k--\n                }\n        \
    \    }\n            count = count + 1\n        }\n        if(count < min) {\n\
    \            min = count\n        }\n        min", "        val arr = arr.toList\n\
    \        val n = arr.size\n        val max = (arr.lastOption.getOrElse(0l) + arr.headOption.getOrElse(0l)).toLong\n\
    \        val min = arr.headOption.getOrElse(0l)\n        val mid = max / 2\n \
    \       val left = arr.take(mid)\n        val right = arr.drop(mid)\n        val\
    \ leftMin = smallestChange(left)\n        val rightMin = smallestChange(right)\n\
    \        val leftMax = smallestChange(left.reverse)\n        val rightMax = smallestChange(right.reverse)\n\
    \        val leftMinMax = smallestChange(left.reverse ++ right)\n        val rightMinMax\
    \ = smallestChange(right ++ left.reverse)\n        val leftMinMaxMax = smallestChange(left.reverse\
    \ ++ right.reverse)\n        val leftMinMaxMaxMax = smallestChange(left.reverse\
    \ ++ right.reverse ++ right)\n        val leftMinMaxMaxMaxMax = smallestChange(left.reverse\
    \ ++ right.reverse ++ right.reverse ++ right)\n        val leftMinMaxMaxMaxMaxMax\
    \ = smallestChange(left.reverse ++ right.reverse ++ right.reverse ++ right.reverse\
    \ ++ right)\n        val leftMinMaxMaxMaxMaxMaxMax = smallestChange(left.reverse\
    \ ++ right.reverse ++ right.reverse ++ right.reverse ++ right.reverse ++ right)\n\
    \        val leftMinMaxMaxMaxMaxMaxMaxMax = smallestChange(left.reverse ++ right.reverse\
    \ ++ right.reverse ++ right.reverse ++ right.reverse ++ right.reverse ++ right)\n\
    \        val leftMinMaxMaxMaxMaxMaxMaxMax = smallestChange(left.reverse ++ right.reverse\
    \ ++ right.reverse ++ right.reverse ++ right.reverse ++ right.reverse ++ right.reverse\
    \ ++ right)\n        val leftMinMaxMaxMaxMaxMaxMaxMaxMax = smallestChange(left.reverse\
    \ ++ right.reverse ++ right.reverse ++ right.reverse ++ right.reverse ++ right.reverse\
    \ ++ right.reverse ++ right.reverse ++ right)\n        val leftMinMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = smallestChange(left.reverse ++ right.reverse ++ right.reverse ++ right.reverse\
    \ ++ right.reverse ++ right.reverse ++ right.reverse ++ right.reverse ++ right.reverse\
    \ ++ right)\n        val leftMinMaxMaxMaxMaxMaxMaxMaxMaxMax = smallestChange(left.reverse\
    \ ++ right.reverse ++ right.reverse ++ right.reverse ++ right", "        val arr\
    \ = arr.toList\n        val n = arr.length\n        val minChange = arr.take(n/2).foldLeft(0)((acc,\
    \ x) => acc + x)\n        val maxChange = arr.takeRight(n/2).foldLeft(0)((acc,\
    \ x) => acc + x)\n        minChange < maxChange ? minChange : maxChange", "  \
    \      val n = arr.length\n        val m = arr.head\n        val arr = arr.tail\n\
    \        val changes = mutable.ArrayBuffer(0)\n        val change = mutable.ArrayBuffer(0)\n\
    \        val changed = mutable.ArrayBuffer(0)\n        val changeIndex = mutable.ArrayBuffer(0)\n\
    \        val changeIndex2 = mutable.ArrayBuffer(0)\n        val changeIndex3 =\
    \ mutable.ArrayBuffer(0)\n        val changeIndex4 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex5 = mutable.ArrayBuffer(0)\n        val changeIndex6 =\
    \ mutable.ArrayBuffer(0)\n        val changeIndex7 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex8 = mutable.ArrayBuffer(0)\n        val changeIndex9 =\
    \ mutable.ArrayBuffer(0)\n        val changeIndex10 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex11 = mutable.ArrayBuffer(0)\n        val changeIndex12\
    \ = mutable.ArrayBuffer(0)\n        val changeIndex13 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex14 = mutable.ArrayBuffer(0)\n        val changeIndex15\
    \ = mutable.ArrayBuffer(0)\n        val changeIndex16 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex17 = mutable.ArrayBuffer(0)\n        val changeIndex18\
    \ = mutable.ArrayBuffer(0)\n        val changeIndex19 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex20 = mutable.ArrayBuffer(0)\n        val changeIndex21\
    \ = mutable.ArrayBuffer(0)\n        val changeIndex22 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex23 = mutable.ArrayBuffer(0)\n        val changeIndex24\
    \ = mutable.ArrayBuffer(0)\n        val changeIndex25 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex26 = mutable.ArrayBuffer(0)\n        val changeIndex27\
    \ = mutable.ArrayBuffer(0)\n        val changeIndex28 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex29 = mutable.ArrayBuffer(0)\n        val changeIndex30\
    \ = mutable.ArrayBuffer(0)\n        val changeIndex31 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex32 = mutable.ArrayBuffer(0)\n        val changeIndex33\
    \ = mutable.ArrayBuffer(0)\n        val changeIndex34 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex35 = mutable.ArrayBuffer(0)\n        val changeIndex36\
    \ = mutable.ArrayBuffer(0)\n        val changeIndex37 = mutable.ArrayBuffer(0)\n\
    \        val changeIndex38 = mutable.ArrayBuffer(0)\n        val changeIndex39\
    \ = mutable.ArrayBuffer(0)\n        val changeIndex40 = mutable.Array", "    \
    \    val n = arr.size\n        val m = arr.last\n        val d = arr.head\n  \
    \      val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n\
    \        val r = arr.init.reverse\n        val m = arr.last\n        val d = arr.head\n",
  "        val n = arr.size\n        val m = arr.head\n        val arr = arr.tail\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var min = n\n\
    \        var max = 0\n        while(i < n && j < m) {\n            if(arr(i) <\
    \ arr(j)) {\n                min = Math.min(min, k + 1)\n                k = k\
    \ + 1\n            }\n            else if(arr(i) > arr(j)) {\n               \
    \ max = Math.max(max, k + 1)\n                k = k + 1\n            }\n     \
    \       else {\n                i = i + 1\n                j = j + 1\n       \
    \     }\n        }\n        if(min < n) {\n            min = n\n        }\n  \
    \      if(max < m) {\n            max = m\n        }\n        if(min == n) {\n\
    \            min = 0\n        }\n        if(max == m) {\n            max = 0\n\
    \        }\n        min", "        val n = arr.length\n        val m = arr.head\n\
    \        val p = new Array[Long](n + 1)\n        var i = 0\n        var j = 0\n\
    \        var k = 0\n        var min = 0\n        var max = 0\n        var temp\
    \ = 0\n        var count = 0\n        while (i < n) {\n            while (j <\
    \ n) {\n                if (arr(i) == arr(j)) {\n                    p(i) = arr(i)\n\
    \                    j = j + 1\n                    k = k + 1\n              \
    \  }\n                else {\n                    p(i) = arr(j)\n            \
    \        j = j + 1\n                }\n            }\n            i = i + 1\n\
    \            j = k\n            k = k + 1\n        }\n        val l = p.length\n\
    \        val r = p.last\n        while (l > 1) {\n            temp = p.last\n\
    \            p.last = p(l - 1)\n            p(l - 1) = temp\n            l = l\
    \ - 1\n        }\n        while (l > 0) {\n            temp = p.last\n       \
    \     p.last = p(l - 1)\n            p(l - 1) = temp\n            l = l - 1\n\
    \        }\n        while (l > 0) {\n            temp = p.last\n            p.last\
    \ = p(l - 1)\n            p(l - 1) = temp\n            l = l - 1\n        }\n\
    \        while (l > 0) {\n            temp = p.last\n            p.last = p(l\
    \ - 1)\n            p(l - 1) = temp\n            l = l - 1\n        }\n      \
    \  while (l > 0) {\n            temp = p.last\n            p.last = p(l - 1)\n\
    \            p(l - 1) = temp\n            l = l - 1\n        }\n        while\
    \ (l > 0) {\n            temp = p.last\n            p.last = p(l - 1)\n      \
    \      p(l - 1) = temp\n            l = l - 1\n        }\n        while (l > 0)\
    \ {\n            temp = p.last\n            p.last = p(l - 1)\n            p(l\
    \ - 1) = temp\n            l = l - 1\n        }\n        while (l > 0) {\n   \
    \         temp = p.last\n            p.last = p(l - 1)\n            p(l - 1) =\
    \ temp\n            l = l - 1\n        }\n        while (l > 0) {\n          \
    \  temp = p.last\n            p.last = p(l - 1)\n            p(l - 1) = temp\n\
    \            l = l - 1\n        }\n        while (l > 0) {\n            temp =\
    \ p.last\n            p.last = p(l - 1)\n            p(l - 1) = temp\n       \
    \     l = l - 1\n        }\n        while (l > 0) {\n            temp = p.last\n\
    \            p.last = p(l - 1)\n            p(l - 1) = temp\n            l = l\
    \ - 1\n        }\n        while (l > 0) {\n            temp = p.last\n       \
    \     p.last = p(l - 1)\n            p(l - 1) = temp\n            ", "       \
    \ val n = arr.size\n        val m = arr.head\n        val arr = arr.tail\n   \
    \     val max = (arr.head + arr.last) / 2\n        val max2 = max / 2\n      \
    \  val max3 = max / 3\n        val max4 = max / 4\n        val max5 = max / 5\n\
    \        val max6 = max / 6\n        val max7 = max / 7\n        val max8 = max\
    \ / 8\n        val max9 = max / 9\n        val max10 = max / 10\n        val max11\
    \ = max / 11\n        val max12 = max / 12\n        val max13 = max / 13\n   \
    \     val max14 = max / 14\n        val max15 = max / 15\n        val max16 =\
    \ max / 16\n        val max17 = max / 17\n        val max18 = max / 18\n     \
    \   val max19 = max / 19\n        val max20 = max / 20\n        val max21 = max\
    \ / 21\n        val max22 = max / 22\n        val max23 = max / 23\n        val\
    \ max24 = max / 24\n        val max25 = max / 25\n        val max26 = max / 26\n\
    \        val max27 = max / 27\n        val max28 = max / 28\n        val max29\
    \ = max / 29\n        val max30 = max / 30\n        val max31 = max / 31\n   \
    \     val max32 = max / 32\n        val max33 = max / 33\n        val max34 =\
    \ max / 34\n        val max35 = max / 35\n        val max36 = max / 36\n     \
    \   val max37 = max / 37\n        val max38 = max / 38\n        val max39 = max\
    \ / 39\n        val max40 = max / 40\n        val max41 = max / 41\n        val\
    \ max42 = max / 42\n        val max43 = max / 43\n        val max44 = max / 44\n\
    \        val max45 = max / 45\n        val max46 = max / 46\n        val max47\
    \ = max / 47\n        val max48 = max / 48\n        val max49 = max / 49\n   \
    \     val max50 = max / 50\n        val max51 = max / 51\n        val max52 =\
    \ max / 52\n        val max53 = max / 53\n        val max54 = max / 54\n     \
    \   val max55 = max / 55\n        val max56 = max / 56", "        val arr = arr.toList\n\
    \        val len = arr.length\n        val maxLen = len / 2\n        val maxLen2\
    \ = maxLen / 2\n        var count = 0\n        var i = 0\n        var j = 0\n\
    \        var k = 0\n        var temp = 0\n        var temp2 = 0\n        var temp3\
    \ = 0\n        var temp4 = 0\n        var temp5 = 0\n        var temp6 = 0\n \
    \       var temp7 = 0\n        var temp8 = 0\n        var temp9 = 0\n        var\
    \ temp10 = 0\n        var temp11 = 0\n        var temp12 = 0\n        var temp13\
    \ = 0\n        var temp14 = 0\n        var temp15 = 0\n        var temp16 = 0\n\
    \        var temp17 = 0\n        var temp18 = 0\n        var temp19 = 0\n    \
    \    var temp20 = 0\n        var temp21 = 0\n        var temp22 = 0\n        var\
    \ temp23 = 0\n        var temp24 = 0\n        var temp25 = 0\n        var temp26\
    \ = 0\n        var temp27 = 0\n        var temp28 = 0\n        var temp29 = 0\n\
    \        var temp30 = 0\n        var temp31 = 0\n        var temp32 = 0\n    \
    \    var temp33 = 0\n        var temp34 = 0\n        var temp35 = 0\n        var\
    \ temp36 = 0\n        var temp37 = 0\n        var temp38 = 0\n        var temp39\
    \ = 0\n        var temp40 = 0\n        var temp41 = 0\n        var temp42 = 0\n\
    \        var temp43 = 0\n        var temp44 = 0\n        var temp45 = 0\n    \
    \    var temp46 = 0\n        var temp47 = 0\n        var temp48 = 0\n        var\
    \ temp49 = 0\n        var temp50 = 0\n        var temp51 = 0\n        var temp52\
    \ = 0\n        var temp53 = 0\n        var temp54 = 0\n        var temp55 = 0\n\
    \        var temp56 = 0\n        var temp57 = 0\n        var temp58 = 0\n    \
    \    var temp59 = 0\n        var temp60 = 0\n        var temp61 = 0\n        var\
    \ temp62 = 0\n        var temp63 = 0\n        var temp64 = 0\n        var temp65\
    \ = 0\n        var temp66 = 0\n        var temp67 = 0\n        var temp68 = 0\n\
    \        var temp69 = 0\n        var temp70 = 0\n        var temp71 = 0\n    \
    \    var temp72 = 0\n        var temp73 = 0\n        var temp74 = 0\n        var\
    \ temp75 = 0\n        var temp76 = 0\n        var temp77 = 0\n        var temp78\
    \ = 0\n        var temp79 = 0\n        var temp80 = 0\n        var temp81 = 0\n\
    \        var temp82 = 0\n        var temp83 = 0\n        var temp84 = 0\n    \
    \    var temp85 = 0\n        var temp86 = 0\n        var temp87 = 0\n        var\
    \ temp88 = 0\n        var temp89 = 0\n        var temp90 = 0\n        var temp91\
    \ = 0\n        var temp92 = 0\n        var temp93 = 0\n        var temp", "  \
    \      val arr = arr.toList\n        val len = arr.length\n        var i = 0\n\
    \        var j = 0\n        var k = 0\n        var minChange = 0\n        while\
    \ (i < len) {\n            while (j < len) {\n                if (arr(i) == arr(j))\
    \ {\n                    j++\n                } else {\n                    k++\n\
    \                }\n            }\n            minChange = k\n            i =\
    \ j\n            j = k\n            k = 0\n        }\n        minChange", "  \
    \      val arr = arr.sortBy(_).reverse\n        val len = arr.length\n       \
    \ var i = 0\n        var j = 0\n        var k = 0\n        var min = Long.MaxValue\n\
    \        while (i < len) {\n            val x = arr(i)\n            val y = arr(j)\n\
    \            val z = arr(k)\n            if (x == y && x == z) {\n           \
    \     min = Math.min(min, i - k + 1)\n                i = i + 1\n            \
    \    j = j + 1\n                k = k + 1\n            } else if (x == y || x\
    \ == z) {\n                i = i + 1\n            } else if (y == z) {\n     \
    \           j = j + 1\n            } else {\n                k = k + 1\n     \
    \       }\n        }\n        min", "        val arr = arr.toList\n        val\
    \ len = arr.length\n        val minChange = len\n        val minChangeIndex =\
    \ 0\n        val minChangeIndexArr = 0\n        val minChangeIndexArr2 = len\n\
    \        val minChangeIndexArr3 = len\n        val minChangeIndexArr4 = len\n\
    \        val minChangeIndexArr5 = len\n        val minChangeIndexArr6 = len\n\
    \        val minChangeIndexArr7 = len\n        val minChangeIndexArr8 = len\n\
    \        val minChangeIndexArr9 = len\n        val minChangeIndexArr10 = len\n\
    \        val minChangeIndexArr11 = len\n        val minChangeIndexArr12 = len\n\
    \        val minChangeIndexArr13 = len\n        val minChangeIndexArr14 = len\n\
    \        val minChangeIndexArr15 = len\n        val minChangeIndexArr16 = len\n\
    \        val minChangeIndexArr17 = len\n        val minChangeIndexArr18 = len\n\
    \        val minChangeIndexArr19 = len\n        val minChangeIndexArr20 = len\n\
    \        val minChangeIndexArr21 = len\n        val minChangeIndexArr22 = len\n\
    \        val minChangeIndexArr23 = len\n        val minChangeIndexArr24 = len\n\
    \        val minChangeIndexArr25 = len\n        val minChangeIndexArr26 = len\n\
    \        val minChangeIndexArr27 = len\n        val minChangeIndexArr28 = len\n\
    \        val minChangeIndexArr29 = len\n        val minChangeIndexArr30 = len\n\
    \        val minChangeIndexArr31 = len\n        val minChangeIndexArr32 = len\n\
    \        val minChangeIndexArr33 = len\n        val minChangeIndexArr34 = len\n\
    \        val minChangeIndexArr35 = len\n        val minChangeIndexArr36 = len\n\
    \        val minChangeIndexArr37 = len\n        val minChangeIndexArr38 = len\n\
    \        val minChangeIndexArr39 = len\n        val minChangeIndexArr40 = len\n\
    \        val minChangeIndexArr41 = len\n        val minChangeIndexArr42 = len\n\
    \        val minChangeIndexArr43 = len\n        val minChangeIndexArr44 = len\n\
    \        val minChangeIndexArr45 = len\n        val minChangeIndexArr46 = len\n\
    \        val minChangeIndexArr47 = len\n        val minChangeIndexArr48 = len\n\
    \        val minChangeIndexArr49 = len\n        val minChangeIndexArr50 = ", " \
    \       val n = arr.length\n        val m = arr.head\n        val r = arr.last\n\
    \        val changes = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n\
    \        val change = mutable.ArrayBuffer(r.toLong)\n        val changed = mutable.ArrayBuffer(r.toLong)\n",
  "        val n = arr.length\n        val m = arr.head\n        val d = arr.last\n\
    \        val r = arr.init\n        val s = arr.tail\n        val c = arr.init\n\
    \        val d = arr.last\n        val r = arr.init\n        val s = arr.tail\n\
    \        val c = arr.init\n        val d = arr.last\n        val r = arr.init\n\
    \        val s = arr.tail\n        val c = arr.init\n        val d = arr.last\n\
    \        val r = arr.init\n        val s = arr.tail\n        val c = arr.init\n\
    \        val d = arr.last\n        val r = arr.init\n        val s = arr.tail\n\
    \        val c = arr.init\n        val d = arr.last\n        val r = arr.init\n\
    \        val s = arr.tail\n        val c = arr.init\n        val d = arr.last\n\
    \        val r = arr.init\n        val s = arr.tail\n        val c = arr.init\n\
    \        val d = arr.last\n        val r = arr.init\n        val s = arr.tail\n\
    \        val c = arr.init\n        val d = arr.last\n        val r = arr.init\n\
    \        val s = arr.tail\n        val c = arr.init\n        val d = arr.last\n\
    \        val r = arr.init\n        val s = arr.tail\n        val c = arr.init\n\
    \        val d = arr.last\n        val r = arr.init\n        val s = arr.tail\n\
    \        val c = arr.init\n        val d = arr.last\n        val r = arr.init\n\
    \        val s = arr.tail\n        val c = arr.init\n        val d = arr.last\n\
    \        val r = arr.init\n        val s = arr.tail\n        val c = arr.init\n\
    \        val d = arr.last\n        val r = arr.init\n        val s = arr.tail\n\
    \        val c = arr.init\n        val d = arr.last\n        val r = arr.init\n\
    \        val s = arr.tail\n        val c = arr.init\n        val d = arr.last\n\
    \        val r = arr.init\n        val s = arr.tail\n        val c = arr.init\n\
    \        val d = arr.last\n        val r = arr.init\n        val s = arr.tail\n\
    \        val c = arr.init\n        val d = arr.last\n        val r = arr.init\n\
    \        val s = arr.tail\n        val c = arr.init\n        val d = arr.last\n\
    \        val r = arr.init\n        val s = arr.tail\n        val c = arr.init\n\
    \        val d = arr.last\n        val r = arr.init\n        val s = arr.tail\n\
    \        val c = arr.init\n        val d = arr.last\n        val r = arr.init\n\
    \        val s = arr.tail\n        val ", "        val arr = arr.toList\n    \
    \    val len = arr.length\n        val min = len\n        val max = (len - 1)\
    \ * 2\n        var i = 0\n        var j = 0\n        var k = 0\n        var count\
    \ = 0\n        while (i < len) {\n            while (j < len) {\n            \
    \    if (arr(i) == arr(j)) {\n                    j++\n                    k++\n\
    \                } else {\n                    j++\n                }\n      \
    \      }\n            while (k < len) {\n                if (arr(i) == arr(k))\
    \ {\n                    k++\n                } else {\n                    k++\n\
    \                }\n            }\n            if (j == len) {\n             \
    \   count += 1\n                j = 0\n            }\n            if (k == len)\
    \ {\n                count += 1\n                k = 0\n            }\n      \
    \      i += 1\n        }\n        if (count < min) {\n            min = count\n\
    \        }\n        if (count > max) {\n            max = count\n        }\n \
    \       min"]
stop_tokens:
- "\n    }\n"

name: HumanEval_81_numerical_letter_grade
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // It is the last week of the semester and the teacher has to give the grades\n\
  \    // to students. The teacher has been making her own algorithm for grading.\n\
  \    // The only problem is, she has lost the code she used for grading.\n    //\
  \ She has given you a list of GPAs for some students and you have to write \n  \
  \  // a function that can output a list of letter grades using the following table:\n\
  \    // GPA       |    Letter grade\n    // 4.0                A+\n    // > 3.7\
  \                A \n    // > 3.3                A- \n    // > 3.0             \
  \   B+\n    // > 2.7                B \n    // > 2.3                B-\n    // >\
  \ 2.0                C+\n    // > 1.7                C\n    // > 1.3           \
  \     C-\n    // > 1.0                D+ \n    // > 0.7                D \n    //\
  \ > 0.0                D-\n    // 0.0                E\n    // Example:\n    //\
  \ >>> gradeEquation((List[Float](4.0f.toFloat, 3l.toFloat, 1.7f.toFloat, 2l.toFloat,\
  \ 3.5f.toFloat)))\n    // (List[String](\"A+\", \"B\", \"C-\", \"C\", \"A-\"))\n\
  \    def numericalLetterGrade(grades : List[Float]) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(numericalLetterGrade((List[Float](4.0f.toFloat,\
  \ 3l.toFloat, 1.7f.toFloat, 2l.toFloat, 3.5f.toFloat))).equals((List[String](\"\
  A+\", \"B\", \"C-\", \"C\", \"A-\"))));\n    assert(numericalLetterGrade((List[Float](1.2f.toFloat))).equals((List[String](\"\
  D+\"))));\n    assert(numericalLetterGrade((List[Float](0.5f.toFloat))).equals((List[String](\"\
  D-\"))));\n    assert(numericalLetterGrade((List[Float](0.0f.toFloat))).equals((List[String](\"\
  E\"))));\n    assert(numericalLetterGrade((List[Float](1.0f.toFloat, 0.3f.toFloat,\
  \ 1.5f.toFloat, 2.8f.toFloat, 3.3f.toFloat))).equals((List[String](\"D\", \"D-\"\
  , \"C-\", \"B\", \"B+\"))));\n    assert(numericalLetterGrade((List[Float](0.0f.toFloat,\
  \ 0.7f.toFloat))).equals((List[String](\"E\", \"D-\"))));\n    }\n\n}\n"
completions: ["        val gradesMap = grades.map(x => x.toInt)\n        val gradesMapSorted\
    \ = gradesMap.sortBy(x => x)\n        val gradesMapSortedReversed = gradesMapSorted.reverse\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversed.length\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1\n\
    \        val gradesMapSortedReversedLength = gradesMapSortedReversedLength - 1",
  "        val gradesMap = grades.toMap\n        val gradesArray = grades.toArray\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grade", "        val gradesMap = grades.map(x => (x.toInt,\
    \ x)).toMap\n        val gradesSortedByKey = grades.sortBy(x => x)\n        val\
    \ gradesSortedByValue = grades.sortBy(x => x)\n        val gradesSortedByKeyReversed\
    \ = gradesSortedByKey.reverse\n        val gradesSortedByValueReversed = gradesSortedByValue.reverse\n\
    \        val gradesSortedByKeyReversedReversed = gradesSortedByKeyReversed.reverse\n\
    \        val gradesSortedByValueReversedReversed = gradesSortedByValueReversed.reverse\n\
    \        val gradesSortedByKeyReversedReversedReversed = gradesSortedByKeyReversedReversed.reverse\n\
    \        val gradesSortedByKeyReversedReversedReversedReversed = gradesSortedByKeyReversedReversedReversed.reverse\n\
    \        val gradesSortedByKeyReversedReversedReversedReversedReversed = gradesSortedByKeyReversedReversedReversedReversed.reverse\n\
    \        val gradesSortedByKeyReversedReversedReversedReversedReversedReversed\
    \ = gradesSortedByKeyReversedReversedReversedReversedReversed.reverse\n      \
    \  val gradesSortedByKeyReversedReversedReversedReversedReversedReversedReversed\
    \ = gradesSortedByKeyReversedReversedReversedReversedReversedReversed.reverse\n\
    \        val gradesSortedByKeyReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = gradesSortedByKeyReversedReversedReversedReversedReversedReversedReversed.reverse\n\
    \        val gradesSortedByKeyReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = gradesSortedByKeyReversedReversedReversedReversedReversedReversedReversedReversedReversed.reverse\n\
    \        val gradesSortedByKeyReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = gradesSortedByKeyReversedReversedReversedReversedReversedReversedReversedReversedReversed.reverse\n\
    \        val gradesSortedByKeyReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = gradesSortedByKeyReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.reverse\n\
    \        val gradesSortedByKeyReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = grade", "        val gradesMap = grades.groupBy(_ / 10).mapValues(_.map(_\
    \ % 10).sum)\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n        val\
    \ gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedMap\
    \ = gradesMapSortedReversed.toMap\n        val gradesMapSortedReversedMapKeys\
    \ = gradesMapSortedReversedMap.keys\n        val gradesMapSortedReversedMapValues\
    \ = gradesMapSortedReversedMap.values.toList\n        val gradesMapSortedReversedMapValuesSorted\
    \ = gradesMapSortedReversedMapValues.sortBy(_._1)\n        val gradesMapSortedReversedMapValuesSortedReversed\
    \ = gradesMapSortedReversedMapValuesSortedReversed.reverse\n        val gradesMapSortedReversedMapValuesSortedReversedMap\
    \ = gradesMapSortedReversedMapValuesSortedReversed.toMap\n        val gradesMapSortedReversedMapValuesSortedReversedMapKeys\
    \ = gradesMapSortedReversedMapValuesSortedReversedMapKeys.toList\n        val\
    \ gradesMapSortedReversedMapValuesSortedReversedMapValuesSorted = gradesMapSortedReversedMapValuesSortedReversedMapValuesSorted.sortBy(_._1)\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversed\
    \ = gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversed.reverse\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMap\
    \ = gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMap.toMap\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapKeys\
    \ = gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapKeys.toList\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapValuesSortedSorted\
    \ = gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapValuesSortedSorted.sortBy(_._1)\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapValuesSortedSortedReversed\
    \ = gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapValuesSortedSortedReversed.reverse\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValues", "     \
    \   val gradesMap = grades.toMap\n        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n        val\
    \ gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n        val\
    \ gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPA = gradesSortedByGPAReversedValues.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversed = gradesSortedByGPAReversedValuesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedMap = gradesSortedByGPAReversedValuesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedKeys = gradesSortedByGPAReversedValuesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValues = gradesSortedByGPAReversedValuesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPA\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValues.sortBy(_._1)\n  \
    \      val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversed\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedMap\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedKeys\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedValues\
    \ = grades", "        val gradesMap = grades.groupBy(_ / 10).mapValues(_.map(_\
    \ % 10).sum)\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n        val\
    \ gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysSorted\
    \ = gradesMapSortedReversedKeys.sortBy(_)\n        val gradesMapSortedReversedValuesSorted\
    \ = gradesMapSortedReversedValues.sortBy(_)\n        val gradesMapSortedReversedKeysSortedReversed\
    \ = gradesMapSortedReversedKeysSorted.reverse\n        val gradesMapSortedReversedValuesSortedReversed\
    \ = gradesMapSortedReversedValuesSorted.reverse\n        val gradesMapSortedReversedKeysSortedReversedSorted\
    \ = gradesMapSortedReversedKeysSortedReversed.sortBy(_)\n        val gradesMapSortedReversedValuesSortedReversedSorted\
    \ = gradesMapSortedReversedValuesSortedReversed.sortBy(_)\n        val gradesMapSortedReversedKeysSortedReversedSortedSorted\
    \ = gradesMapSortedReversedKeysSortedReversedSorted.reverse\n        val gradesMapSortedReversedValuesSortedReversedSortedSorted\
    \ = gradesMapSortedReversedValuesSortedReversedSorted.reverse\n        val gradesMapSortedReversedKeysSortedReversedSortedSortedSorted\
    \ = gradesMapSortedReversedKeysSortedReversedSortedSorted.sortBy(_)\n        val\
    \ gradesMapSortedReversedValuesSortedReversedSortedSortedSorted = gradesMapSortedReversedValuesSortedReversedSortedSorted.sortBy(_)\n\
    \        val gradesMapSortedReversedKeysSortedReversedSortedSortedSortedSorted\
    \ = gradesMapSortedReversedKeysSortedReversedSortedSortedSorted.reverse\n    \
    \    val gradesMapSortedReversedValuesSortedReversedSortedSortedSortedSorted =\
    \ gradesMapSortedReversedValuesSortedReversedSortedSortedSorted.reverse\n    \
    \    val gradesMapSortedReversedKeysSortedReversedSortedSortedSortedSortedSorted\
    \ = gradesMapSortedReversedKeysSortedReversedSortedSortedSortedSorted.sortBy(_)\n\
    \        val gradesMapSortedReversedValuesSortedReversedSortedSortedSortedSortedSorted\
    \ = gradesMapSortedReversedValuesSortedReverse", "        val gradesMap = grades.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesKeys = gradesMap.keys\n        val\
    \ gradesValues = gradesMap.values.toList\n        val gradesSum = gradesValues.sum\n\
    \        val gradesCount = gradesValues.size\n        val gradesAvg = (gradesSum\
    \ / gradesCount).toFloat\n        val gradesSumOfSquares = gradesValues.map(x\
    \ => x * x).sum\n        val gradesSumOfSquaresAvg = gradesSumOfSquares / gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvg * gradesSumOfSquaresAvg\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOfSquaresAvgSqr * gradesCount\n\
    \        val gradesSumOfSquaresAvgSqr = gradesSumOf", "        val gradesMap =\
    \ grades.map(x => x.toInt).toMap\n        val gradesKeys = gradesMap.keys\n  \
    \      val gradesValues = gradesMap.values.toList\n        val gradesSum = gradesValues.sum\n\
    \        val gradesAvg = gradesSum / gradesKeys.size\n        val gradesDiff =\
    \ gradesAvg - gradesValues.head\n        val gradesDiffs = gradesValues.tail.zip(gradesDiff)\n\
    \        val gradesDiffsMap = gradesDiffs.map(x => x._1 -> x._2)\n        val\
    \ gradesDiffsKeys = gradesDiffsMap.keys\n        val gradesDiffsValues = gradesDiffsMap.values.toList\n\
    \        val gradesDiffsSum = gradesDiffsValues.sum\n        val gradesDiffsAvg\
    \ = gradesDiffsSum / gradesDiffsKeys.size\n        val gradesDiffsDiff = gradesDiffsAvg\
    \ - gradesDiffsValues.head\n        val gradesDiffsDiffs = gradesDiffsValues.tail.zip(gradesDiffsDiff)\n\
    \        val gradesDiffsDiffsMap = gradesDiffsDiffs.map(x => x._1 -> x._2)\n \
    \       val gradesDiffsDiffsKeys = gradesDiffsDiffsMap.keys\n        val gradesDiffsDiffsValues\
    \ = gradesDiffsDiffsMap.values.toList\n        val gradesDiffsDiffsSum = gradesDiffsDiffsValues.sum\n\
    \        val gradesDiffsDiffsAvg = gradesDiffsDiffsSum / gradesDiffsDiffsKeys.size\n\
    \        val gradesDiffsDiffsDiff = gradesDiffsDiffsAvg - gradesDiffsDiffsValues.head\n\
    \        val gradesDiffsDiffsDiffs = gradesDiffsDiffsValues.tail.zip(gradesDiffsDiffsDiff)\n\
    \        val gradesDiffsDiffsDiffsMap = gradesDiffsDiffsDiffs.map(x => x._1 ->\
    \ x._2)\n        val gradesDiffsDiffsDiffsKeys = gradesDiffsDiffsDiffsMap.keys\n\
    \        val gradesDiffsDiffsDiffsValues = gradesDiffsDiffsDiffsMap.values.toList\n\
    \        val gradesDiffsDiffsDiffsSum = gradesDiffsDiffsDiffsValue", "       \
    \ val gradesMap = grades.toMap\n        val gradesSortedByKey = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedByValue = gradesSortedByKey.sortBy(_._2)\n        val\
    \ gradesSortedByKeyReversed = gradesSortedByKey.reverse\n        val gradesSortedByValueReversed\
    \ = gradesSortedByValue.reverse\n        val gradesSortedByKeyReversedMap = gradesSortedByKeyReversed.toMap\n\
    \        val gradesSortedByValueReversedMap = gradesSortedByValueReversed.toMap\n\
    \        val gradesSortedByKeyReversedKeys = gradesSortedByKeyReversedMap.keys\n\
    \        val gradesSortedByValueReversedValues = gradesSortedByValueReversedMap.values\n\
    \        val gradesSortedByKeyReversedValuesMap = gradesSortedByValueReversedValues.toMap\n\
    \        val gradesSortedByKeyReversedValuesKeys = gradesSortedByKeyReversedValuesMap.keys\n\
    \        val gradesSortedByKeyReversedValuesValues = gradesSortedByKeyReversedValuesMap.values.toList\n\
    \        val gradesSortedByKeyReversedValuesValuesMap = gradesSortedByKeyReversedValuesValues.toMap\n\
    \        val gradesSortedByKeyReversedValuesValuesKeys = gradesSortedByKeyReversedValuesValuesMap.keys\n\
    \        val gradesSortedByKeyReversedValuesValuesValues = gradesSortedByKeyReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByKeyReversedValuesValuesValuesMap = gradesSortedByKeyReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByKeyReversedValuesValuesValuesKeys = gradesSortedByKeyReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByKeyReversedValuesValuesValuesValues = gradesSortedByKeyReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByKeyReversedValuesValuesValuesValuesMap = gradesSortedByKeyReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByKeyReversedValuesValuesValuesValuesKeys = gradesSortedByKeyReversedValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByKeyReversedValuesValuesValuesValuesValues = gradesSortedByKeyReversedValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByKeyReversedValuesValuesValuesValuesValuesMap = gradesSortedByKeyReversedValuesValuesValuesValuesValues.toMap",
  "        val gradesSorted = grades.sortWith(_ < _)\n        val gradesSum = gradesSorted.sum\n\
    \        val gradesAverage = gradesSum / gradesSorted.length\n        val gradesSumOfSquares\
    \ = gradesSorted.map(x => x * x).sum\n        val gradesAverageOfSquares = gradesSumOfSquares\
    \ / gradesSorted.length\n        val gradesSumOfSquaresOfDifferences = gradesSorted.map(x\
    \ => x - gradesAverage).sum\n        val gradesAverageOfSquaresOfDifferences =\
    \ gradesSumOfSquaresOfDifferences / gradesSorted.length\n        val gradesSumOfSquaresOfSquaresOfDifferences\
    \ = gradesSorted.map(x => x * x - gradesAverageOfSquares).sum\n        val gradesAverageOfSquaresOfSquaresOfDifferences\
    \ = gradesSumOfSquaresOfSquaresOfDifferences / gradesSorted.length\n        val\
    \ gradesSumOfSquaresOfSquaresOfSquaresOfDifferences = gradesSorted.map(x => x\
    \ * x * x - gradesAverageOfSquaresOfSquares).sum\n        val gradesAverageOfSquaresOfSquaresOfSquaresOfDifferences\
    \ = gradesSumOfSquaresOfSquaresOfSquaresOfDifferences / gradesSorted.length\n\
    \        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences = gradesSorted.map(x\
    \ => x * x * x * x - gradesAverageOfSquaresOfSquaresOfSquares).sum\n        val\
    \ gradesAverageOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences = gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences\
    \ / gradesSorted.length\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences\
    \ = gradesSorted.map(x => x * x * x * x * x - gradesAverageOfSquaresOfSquaresOfSquaresOfSquares).sum\n\
    \        val gradesAverageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences\
    \ = gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences / gradesSorted.length\n\
    \        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences\
    \ = gradesSorted.map(x => x * x * x * x * x * x - gradesAverageOfSquares", " \
    \       grades.map(grade => {\n            val gpa = grade\n            val letterGrade\
    \ = if (gpa > 3.0) \"B+\" else if (gpa > 2.7) \"B\" else if (gpa > 2.3) \"B-\"\
    \ else if (gpa > 2.0) \"C+\" else if (gpa > 1.7) \"C\" else if (gpa > 1.3) \"\
    C-\" else if (gpa > 1.0) \"D+\" else if (gpa > 0.7) \"D\" else if (gpa > 0.0)\
    \ \"D-\" else \"E\"\n            (gpa, letterGrade)\n        }).sortBy(_._1).map(_._2).reverse",
  "        val gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedKeys = gradesMapSorted.keys\n        val gradesMapSortedValues\
    \ = gradesMapSorted.values\n        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n\
    \        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n      \
    \  val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength\
    \ = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n\
    \        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n      \
    \  val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength\
    \ = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n\
    \        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n      \
    \  val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength\
    \ = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n\
    \        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n      \
    \  val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength\
    \ = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n\
    \        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n      \
    \  val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength\
    \ = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n\
    \        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n      \
    \  val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength\
    \ = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n\
    \        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n      \
    \  val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength\
    \ = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n\
    \        val gradesMapSorted", "        val gradesMap = grades.toMap\n       \
    \ val gradesMapKeys = gradesMap.keys\n        val gradesMapValues = gradesMap.values.toList\n\
    \        val gradesMapKeysSortedByValue = gradesMapKeys.sortBy(_._2)\n       \
    \ val gradesMapValuesSortedByKey = gradesMapValues.sortBy(_._1)\n        val gradesMapKeysSortedByValueReversed\
    \ = gradesMapKeysSortedByValue.reverse\n        val gradesMapValuesSortedByKeyReversed\
    \ = gradesMapValuesSortedByKey.reverse\n        val gradesMapKeysSortedByValueReversedLength\
    \ = gradesMapKeysSortedByValueReversed.length\n        val gradesMapValuesSortedByKeyReversedLength\
    \ = gradesMapValuesSortedByKeyReversed.length\n        val gradesMapKeysSortedByValueReversedLength\
    \ = gradesMapKeysSortedByValueReversedLength - 1\n        val gradesMapValuesSortedByKeyReversedLength\
    \ = gradesMapValuesSortedByKeyReversedLength - 1\n        val gradesMapKeysSortedByValueReversedLength\
    \ = gradesMapKeysSortedByValueReversedLength - 1\n        val gradesMapValuesSortedByKeyReversedLength\
    \ = gradesMapValuesSortedByKeyReversedLength - 1\n        val gradesMapKeysSortedByValueReversedLength\
    \ = gradesMapKeysSortedByValueReversedLength - 1\n        val gradesMapValuesSortedByKeyReversedLength\
    \ = gradesMapValuesSortedByKeyReversedLength - 1\n        val gradesMapKeysSortedByValueReversedLength\
    \ = gradesMapKeysSortedByValueReversedLength - 1\n        val gradesMapValuesSortedByKeyReversedLength\
    \ = gradesMapValuesSortedByKeyReversedLength - 1\n        val gradesMapKeysSortedByValueReversedLength\
    \ = gradesMapKeysSortedByValueReversedLength - 1\n        val gradesMapValuesSortedByKeyReversedLength\
    \ = gradesMapValuesSortedByKeyReversedLength - 1\n        val gradesMapKeysSortedByValueReversedLength\
    \ = gradesMapKeysSortedByValueReversedLength - 1\n        val gradesMapValuesSortedByKeyReversedLength\
    \ = gradesMapValuesSortedByKeyReversedLength - 1\n        val gradesMapKeysSortedByValueReversedLength\
    \ = gradesMapKeysSortedByValueReversedLength - 1\n        val gradesMapValuesSortedByKeyReversedLength\
    \ = gradesMapValuesSortedByKey", "        val gradesSet = grades.toSet\n     \
    \   val gradesSortedSet = grades.toSeq.sortBy(_.toFloat)\n        val gradesSortedSetIterator\
    \ = gradesSortedSet.iterator\n        val gradesSortedSetIteratorNext = gradesSortedSetIterator.next\n\
    \        val gradesSortedSetIteratorNextNext = gradesSortedSetIteratorNext.next\n\
    \        val gradesSortedSetIteratorNextNextNext = gradesSortedSetIteratorNextNext.next\n\
    \        val gradesSortedSetIteratorNextNextNextNext = gradesSortedSetIteratorNextNextNext.next\n\
    \        val gradesSortedSetIteratorNextNextNextNextNext = gradesSortedSetIteratorNextNextNextNext.next\n\
    \        val gradesSortedSetIteratorNextNextNextNextNextNext = gradesSortedSetIteratorNextNextNextNextNext.next\n\
    \        val gradesSortedSetIteratorNextNextNextNextNextNextNext = gradesSortedSetIteratorNextNextNextNextNextNext.next\n\
    \        val gradesSortedSetIteratorNextNextNextNextNextNextNextNext = gradesSortedSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val gradesSortedSetIteratorNextNextNextNextNextNextNextNextNext = gradesSortedSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNext =\
    \ gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n     \
    \   val gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNextNext =\
    \ gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ = gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = gradesSortedSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val ", "        val gradesMap = grades.groupBy(_ / 4.0f).mapValues(_.map(_\
    \ % 4.0f)).toMap\n        grades.map(grade => gradesMap(grade).map(letter => letter\
    \ + \"\").mkString(\"\"))", "        val gradesMap = grades.toMap\n        val\
    \ gradesSortedByKey = grades.sortBy(_._1)\n        val gradesSortedByValue = grades.sortBy(_._2)\n\
    \        val gradesSortedByKeyReversed = gradesSortedByKey.reverse\n        val\
    \ gradesSortedByValueReversed = gradesSortedByValue.reverse\n        val gradesSortedByKeyReversedMap\
    \ = gradesSortedByKeyReversed.toMap\n        val gradesSortedByValueReversedMap\
    \ = gradesSortedByValueReversed.toMap\n        val gradesSortedByKeyReversedMap2\
    \ = gradesSortedByKeyReversedMap.toList\n        val gradesSortedByValueReversedMap2\
    \ = gradesSortedByValueReversedMap.toList\n        val gradesSortedByKeyReversedMap3\
    \ = gradesSortedByKeyReversedMap2.toList\n        val gradesSortedByValueReversedMap3\
    \ = gradesSortedByValueReversedMap2.toList\n        val gradesSortedByKeyReversedMap4\
    \ = gradesSortedByKeyReversedMap3.toList\n        val gradesSortedByValueReversedMap4\
    \ = gradesSortedByValueReversedMap3.toList\n        val gradesSortedByKeyReversedMap5\
    \ = gradesSortedByKeyReversedMap4.toList\n        val gradesSortedByValueReversedMap5\
    \ = gradesSortedByValueReversedMap4.toList\n        val gradesSortedByKeyReversedMap6\
    \ = gradesSortedByKeyReversedMap5.toList\n        val gradesSortedByValueReversedMap6\
    \ = gradesSortedByValueReversedMap5.toList\n        val gradesSortedByKeyReversedMap7\
    \ = gradesSortedByKeyReversedMap6.toList\n        val gradesSortedByValueReversedMap7\
    \ = gradesSortedByValueReversedMap6.toList\n        val gradesSortedByKeyReversedMap8\
    \ = gradesSortedByKeyReversedMap7.toList\n        val gradesSortedByValueReversedMap8\
    \ = gradesSortedByValueReversedMap7.toList\n        val gradesSortedByKeyReversedMap9\
    \ = gradesSortedByKeyReversedMap8.toList\n        val gradesSortedByValueReversedMap9\
    \ = gradesSortedByValueReversedMap8.toList\n        val gradesSortedByKeyReversedMap10\
    \ = gradesSortedByKeyReversedMap9.toList\n        val gradesSortedByValueReversedMap10\
    \ = ", "        val gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSorted", "      \
    \  val gradesMap = grades.toMap\n        val gradesMapKeys = gradesMap.keys\n\
    \        val gradesMapValues = gradesMap.values.toList\n        val gradesMapKeysSorted\
    \ = gradesMapKeys.sorted\n        val gradesMapValuesSorted = gradesMapValues.sorted\n\
    \        val gradesMapKeysSortedLength = gradesMapKeysSorted.length\n        val\
    \ gradesMapValuesSortedLength = gradesMapValuesSorted.length\n        val gradesMapKeysSortedLength\
    \ = gradesMapKeysSorted.length\n        val gradesMapValuesSortedLength = gradesMapValuesSorted.length\n\
    \        val gradesMapKeysSortedLength = gradesMapKeysSorted.length\n        val\
    \ gradesMapValuesSortedLength = gradesMapValuesSorted.length\n        val gradesMapKeysSortedLength\
    \ = gradesMapKeysSorted.length\n        val gradesMapValuesSortedLength = gradesMapValuesSorted.length\n\
    \        val gradesMapKeysSortedLength = gradesMapKeysSorted.length\n        val\
    \ gradesMapValuesSortedLength = gradesMapValuesSorted.length\n        val gradesMapKeysSortedLength\
    \ = gradesMapKeysSorted.length\n        val gradesMapValuesSortedLength = gradesMapValuesSorted.length\n\
    \        val gradesMapKeysSortedLength = gradesMapKeysSorted.length\n        val\
    \ gradesMapValuesSortedLength = gradesMapValuesSorted.length\n        val gradesMapKeysSortedLength\
    \ = gradesMapKeysSorted.length\n        val gradesMapValuesSortedLength = gradesMapValuesSorted.length\n\
    \        val gradesMapKeysSortedLength = gradesMapKeysSorted.length\n        val\
    \ gradesMapValuesSortedLength = gradesMapValuesSorted.length\n        val gradesMapKeysSortedLength\
    \ = gradesMapKeysSorted.length\n        val gradesMapValuesSortedLength = gradesMapValuesSorted.length\n\
    \        val gradesMapKeysSortedLength = gradesMapKeysSorted.length\n        val\
    \ gradesMapValuesSortedLength = gradesMapValuesSorted.length\n        val gradesMapKeysSortedLength\
    \ = gradesMapKeysSorted.length\n        val gradesMapValuesSortedLength = gradesMapValuesSorted.length\n\
    \        val gradesMapKeysSortedLength = gradesMapKeysSorted.length\n        val\
    \ gradesMapValuesSortedLength = gradesMapValuesSorted.length\n        val grade",
  "        val gradesMap = grades.groupBy(_ / 4).mapValues(_.toList.sortBy(_ * -1)).mapValues(_.map(_\
    \ % 4).map(letter => letter + \"+\"))\n        val gradesMap2 = grades.groupBy(_\
    \ / 4).mapValues(_.toList.sortBy(_ * -1)).mapValues(_.map(_ % 4).map(letter =>\
    \ letter + \"-\"))\n        val gradesMap3 = grades.groupBy(_ / 4).mapValues(_.toList.sortBy(_\
    \ * -1)).mapValues(_.map(_ % 4).map(letter => letter + \"+\"))\n        val gradesMap4\
    \ = grades.groupBy(_ / 4).mapValues(_.toList.sortBy(_ * -1)).mapValues(_.map(_\
    \ % 4).map(letter => letter + \"-\"))\n        val gradesMap5 = grades.groupBy(_\
    \ / 4).mapValues(_.toList.sortBy(_ * -1)).mapValues(_.map(_ % 4).map(letter =>\
    \ letter + \"+\"))\n        val gradesMap6 = grades.groupBy(_ / 4).mapValues(_.toList.sortBy(_\
    \ * -1)).mapValues(_.map(_ % 4).map(letter => letter + \"-\"))\n        val gradesMap7\
    \ = grades.groupBy(_ / 4).mapValues(_.toList.sortBy(_ * -1)).mapValues(_.map(_\
    \ % 4).map(letter => letter + \"+\"))\n        val gradesMap8 = grades.groupBy(_\
    \ / 4).mapValues(_.toList.sortBy(_ * -1)).mapValues(_.map(_ % 4).map(letter =>\
    \ letter + \"-\"))\n        val gradesMap9 = grades.groupBy(_ / 4).mapValues(_.toList.sortBy(_\
    \ * -1)).mapValues(_.map(_ % 4).map(letter => letter + \"+\"))\n        val gradesMap10\
    \ = grades.groupBy(_ / 4).mapValues(_.toList.sortBy(_ * -1)).mapValues(_.map(_\
    \ % 4).map(letter => letter + \"-\"))\n        val gradesMap11 = grades.groupBy(_\
    \ / 4).mapValues(_.toList.sortBy(_ * -1)).mapValues(_.map(_ % 4).map(letter =>\
    \ letter + \"+\"))\n        val gradesMap12 = grades.groupBy(_ / 4).mapValues(_.toList.sortBy(_\
    \ * -1)).mapValues(_.map(_ % 4).map(letter => letter + \"-\"))\n        val gradesMap13\
    \ = grades.groupBy(_ / 4).mapValues(_.toList.sort", "        val gradesMap = grades.toMap\n\
    \        val gradesKeys = gradesMap.keys\n        val gradesValues = gradesMap.values.toList\n\
    \        val gradesKeysSorted = gradesKeys.sortBy(x => x)\n        val gradesValuesSorted\
    \ = gradesValues.sortBy(x => x)\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesValuesSortedLength = gradesValuesSorted.length\n        val\
    \ gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSor"]
stop_tokens:
- "\n    }\n"

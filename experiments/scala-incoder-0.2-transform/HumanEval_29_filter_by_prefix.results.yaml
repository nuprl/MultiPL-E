language: scala
name: HumanEval_29_filter_by_prefix
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp41j9h0th.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(_.startsWith(prefix))\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found: stringList\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979019
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979021
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.length\
    \ match {\n            case 0 => strings\n            case _ => {\n          \
    \      val prefixedStrings = strings.map(s => s.startsWith(prefix))\n        \
    \        prefixedStrings.filter(_.nonEmpty).map(s => s.head)\n            }\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgm3dnlfj.scala:14:41 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                prefixedStrings.filter(_.nonEmpty).map(\e\
    [36ms\e[0m => s.head)\n\e[31m\e[31m   |\e[0m                                 \
    \      ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                               value nonEmpty\
    \ is not a member of Boolean\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgm3dnlfj.scala:14:62\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                prefixedStrings.filter(_.nonEmpty).map(\e\
    [36ms\e[0m => s.head)\n\e[31m\e[31m   |\e[0m                                 \
    \                           ^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \              value head is not a member of Boolean\n2 errors found\n"
  stdout: ''
  timestamp: 1659979020
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979021
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.length\
    \ match {\n            case 0 => strings\n            case _ => strings.filter(s\
    \ => s.startsWith(prefix))\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979021
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979021
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp41j9h0th.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(_.startsWith(prefix))\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found: stringList\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979019
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709

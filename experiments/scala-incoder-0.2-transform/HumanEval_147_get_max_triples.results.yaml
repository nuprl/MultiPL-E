language: scala
name: HumanEval_147_get_max_triples
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = a.length - 1\n        val n = a.length - 1\n        val s = a.length\
    \ - 1\n        val t = a.length - 1\n        val r = a.length - 1\n        val\
    \ p = a.length - 1\n        val q = a.length - 1\n        val l = a.length - 1\n\
    \        val u = a.length - 1\n        val v = a.length - 1\n        val w = a.length\
    \ - 1\n        val x = a.length - 1\n        val y = a.length - 1\n        val\
    \ z = a.length - 1\n        val w = a.length - 1\n        val x = a.length - 1\n\
    \        val y = a.length - 1\n        val z = a.length - 1\n        val w = a.length\
    \ - 1\n        val x = a.length - 1\n        val y = a.length - 1\n        val\
    \ z = a.length - 1\n        val w = a.length - 1\n        val x = a.length - 1\n\
    \        val y = a.length - 1\n        val z = a.length - 1\n        val w = a.length\
    \ - 1\n        val x = a.length - 1\n        val y = a.length - 1\n        val\
    \ z = a.length - 1\n        val w = a.length - 1\n        val x = a.length - 1\n\
    \        val y = a.length - 1\n        val z = a.length - 1\n        val w = a.length\
    \ - 1\n        val x = a.length - 1\n        val y = a.length - 1\n        val\
    \ z = a.length - 1\n        val w = a.length - 1\n        val x = a.length - 1\n\
    \        val y = a.length - 1\n        val z = a.length - 1\n        val w = a.length\
    \ - 1\n        val x = a.length - 1\n        val y = a.length - 1\n        val\
    \ z = a.length - 1\n        val w = a.length - 1\n        val x = a.length - 1\n\
    \        val y = a.length - 1\n        val z = a.length - 1\n        val w = a.length\
    \ - 1\n        val x = a.length - 1\n        val y = a.length - 1\n        val\
    \ z = a.length - 1\n        val w = a.length - 1\n        val x = a.length - 1\n\
    \        val y = a.length - 1\n        val z = a.length - 1\n        val w = a.length\
    \ - 1\n        val x = a.length - 1\n        val y = a.length - 1\n        val\
    \ z = a.length - 1\n        val w = a.length - 1\n        val x = a.length - 1\n\
    \        val y = a.length - 1\n        val z = a.length - 1\n        val w = a.length\
    \ - 1\n        val x = a.length - 1\n        val y = a.length - 1\n        val\
    \ z = a.length - 1\n        val w = a.length - 1\n        val x = a.\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpydi17z4p.scala:88:4 ----------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpydi17z4p.scala:30:12 ---------------------------\e[0m\e[0m\n\e[31m30\
    \ |\e[0m        \e[33mval\e[0m \e[36mw\e[0m = a.length - \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mw is already defined\
    \ as \e[33mvalue\e[0m \e[35mw\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpydi17z4p.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mx\e[0m = a.length - \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mx\
    \ is already defined as \e[33mvalue\e[0m \e[35mx\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpydi17z4p.scala:32:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36my\e[0m = a.length - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0my is already defined as \e[33mvalue\e[0m \e[35my\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpydi17z4p.scala:33:12 ---------------------------\e[0m\e[0m\n\e[31m33\
    \ |\e[0m        \e[33mval\e[0m \e[36mz\e[0m = a.length - \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mz is already defined\
    \ as \e[33mvalue\e[0m \e[35mz\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpydi17z4p.scala:34:12 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \e[36mw\e[0m = a.length - \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mw\
    \ is already de"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = Array.ofDim[Long](n)\n\
    \        var count = 0\n        var i = 0\n        var j = 0\n        var k =\
    \ 0\n        while(i < n && j < n && k < n) {\n            a(i) = i * i - i +\
    \ 1\n            i += 1\n            j += 1\n            k += 1\n        }\n \
    \       while(i < n) {\n            a(i) = i * i - i + 1\n            i += 1\n\
    \        }\n        while(j < n) {\n            a(j) = j * j - j + 1\n       \
    \     j += 1\n        }\n        while(k < n) {\n            a(k) = k * k - k\
    \ + 1\n            k += 1\n        }\n        for(i <- 0 until n) {\n        \
    \    for(j <- 0 until n) {\n                for(k <- 0 until n) {\n          \
    \          if(i == j && j == k) {\n                        count += 1\n      \
    \              }\n                    if(a(i) == a(j) && a(j) == a(k)) {\n   \
    \                     count += 1\n                    }\n                }\n \
    \           }\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp748xgx5q.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp748xgx5q.scala:38:25\
    \ --------------------\e[0m\e[0m\n\e[31m38 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp748xgx5q.scala:39:29 --------------------\e[0m\e\
    [0m\n\e[31m39 |\e[0m            \e[33mfor\e[0m(j <- \e[31m0\e[0m until n) {\n\e\
    [31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m      \
    \                       Found:    (n : Long)\n\e[31m   |\e[0m                \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp748xgx5q.scala:40:33 --------------------\e[0m\e[0m\n\e[31m40\
    \ |\e[0m                \e[33mfor\e[0m(k <- \e[31m0\e[0m until n) {\n\e[31m\e\
    [31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m        \
    \                         Found:    (n : Long)\n\e[31m   |\e[0m              \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcesgi7j6.scala:58:4 ----------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:19:12 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:22:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val count = mutable.Map[Long, Long]()\n        val sum = 0\n        for(i\
    \ <- 0 until n){\n            val j = i * i - i + 1\n            val k = i * i\
    \ + j\n            val sum = sum + k\n            val key = sum % 3\n        \
    \    val value = a(i) + a(j) + a(k)\n            if(value.equals(k)){\n      \
    \          count(key) = count(key) + 1\n            }\n            a(i) = value\n\
    \        }\n        count(0)\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl28gc7td.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl28gc7td.scala:16:20\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mcount\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl28gc7td.scala:18:25\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val count = mutable.Map[Long, Long]()\n        val maxCount = 0\n   \
    \     val maxTriples = mutable.Map[Long, Long]()\n        for(i<- 1 to n) {\n\
    \            val j = i * i - i + 1\n            val k = i * i + i + j\n      \
    \      if(i<j && i<k && j<k) {\n                a(i) = i\n                count(i)\
    \ = 1\n                count(k) = 1\n                count(j) = 1\n          \
    \      maxCount = max(maxCount, count(i))\n                maxCount = max(maxCount,\
    \ count(k))\n                maxCount = max(maxCount, count(j))\n            }\n\
    \        }\n        for(i<- 1 to n) {\n            val j = i * i - i + 1\n   \
    \         val k = i * i + i + j\n            if(a(i) == i && a(i) == k && a(i)\
    \ == j) {\n                maxTriples(i) = 1\n            }\n        }\n     \
    \   maxCount\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpay4jsh3x.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpay4jsh3x.scala:16:20\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mcount\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpay4jsh3x.scala:18:25\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxTriples\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpay4jsh3x.scala:19:21 --------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mfor\e[0m(i<- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m\
    \                     ^\e[0m\n\e[31m   |\e[0m                     Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                     Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E052] Type Error: /tmp/tmpay4jsh3x.scala:27:25 -----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                maxCount = max(maxCount, count(i))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                Reassignment to val maxCount\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E052] Type Error: /tmp/tmp"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = Array.ofDim[Long](n+1)\n\
    \        a(0) = 1\n        a(1) = 3\n        a(2) = 7\n        a(3) = 13\n   \
    \     a(4) = 21\n        var count = 0\n        var i = 0\n        var j = 0\n\
    \        var k = 0\n        while(i < a.length && j < a.length && k < a.length)\
    \ {\n            if(a(i) + a[j] + a(k) == 3) {\n                count += 1\n \
    \               i += 1\n                j += 1\n                k += 1\n     \
    \       }\n            if(a(i) + a[j] + a(k) == 7) {\n                count +=\
    \ 1\n                i += 1\n                j += 1\n                k += 1\n\
    \            }\n            if(a(i) + a[j] + a(k) == 13) {\n                count\
    \ += 1\n                i += 1\n                j += 1\n                k += 1\n\
    \            }\n            if(a(i) + a[j] + a(k) == 21) {\n                count\
    \ += 1\n                i += 1\n                j += 1\n                k += 1\n\
    \            }\n        }\n        return count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpybfwtni4.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                              ^^^\e[0m\n\e[31m   |\e[0m                     \
    \             Found:    Long\n\e[31m   |\e[0m                                \
    \  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpybfwtni4.scala:26:24\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m            \e[33mif\e[0m(a(i)\
    \ + a[\e[35mj\e[0m] + a(k) == \e[31m3\e[0m) {\n\e[31m\e[31m   |\e[0m         \
    \               ^\e[0m\n\e[31m   |\e[0m                        Not found: type\
    \ j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpybfwtni4.scala:32:24\
    \ ------------------------\e[0m\e[0m\n\e[31m32 |\e[0m            \e[33mif\e[0m(a(i)\
    \ + a[\e[35mj\e[0m] + a(k) == \e[31m7\e[0m) {\n\e[31m\e[31m   |\e[0m         \
    \               ^\e[0m\n\e[31m   |\e[0m                        Not found: type\
    \ j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpybfwtni4.scala:38:24\
    \ ------------------------\e[0m\e[0m\n\e[31m38 |\e[0m            \e[33mif\e[0m(a(i)\
    \ + a[\e[35mj\e[0m] + a(k) == \e[31m13\e[0m) {\n\e[31m\e[31m   |\e[0m        \
    \                ^\e[0m\n\e[31m   |\e[0m                        Not found: type\
    \ j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpybfwtni4.scala:44:24\
    \ ------------------------\e[0m\e[0m\n\e[31m44 |\e[0m            \e[33mif\e[0m(a(i)\
    \ + a[\e[35mj\e[0m] + a(k) == \e[31m21\e[0m) {\n\e[31m\e[31m   |\e[0m        \
    \                ^\e[0m\n\e[31m   |\e[0m                        Not found: type\
    \ j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = a.length\n        val n = m\n        val k = m\n        val i\
    \ = 1 \n        val j = 1\n        val k = 1\n        val sum = 0\n        while(i\
    \ < n && j < n && k < n) {\n            val sum = sum + a(i) + a(j) + a(k) \n\
    \            i = i + 1\n            j = j + 1\n            k = k + 1\n       \
    \ }\n        if(sum % 3 == 0) {\n            return sum\n        }\n        else\
    \ {\n            return 0\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbpxaqdbc.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = \e[31m1\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mk is already defined\
    \ as \e[33mvalue\e[0m \e[35mk\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbpxaqdbc.scala:16:16 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = a.length\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E045]\
    \ Cyclic Error: /tmp/tmpbpxaqdbc.scala:24:22 ---------------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m            \e[33mval\e[0m \e[36msum\e[0m = sum + a(i) + a(j)\
    \ + a(k) \n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m\
    \                      Recursive \e[33mvalue\e[0m \e[35msum\e[0m needs type\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpbpxaqdbc.scala:25:14 -----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            i = i + \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val\
    \ i\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpbpxaqdbc.scala:26:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m26 |\e[0m            j = j +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpbpxaqdbc.scala:27:14 -----------------------------\e[0m\e\
    [0m\n\e[31m27 |\e[0m            k = k + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m  \
    \          ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val k\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer ex"
  stdout: ''
  timestamp: 1659798427
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = a.length - 1\n        val n = a.length - 1\n        val k = a.length\
    \ - 1\n        val i = a.length - 1\n        val j = a.length - 1\n        val\
    \ k = a.length - 1\n        val m = a.length - 1\n        val n = a.length - 1\n\
    \        val k = a.length - 1\n        val i = a.length - 1\n        val j = a.length\
    \ - 1\n        val k = a.length - 1\n        val m = a.length - 1\n        val\
    \ n = a.length - 1\n        val k = a.length - 1\n        val i = a.length - 1\n\
    \        val j = a.length - 1\n        val k = a.length - 1\n        val m = a.length\
    \ - 1\n        val n = a.length - 1\n        val k = a.length - 1\n        val\
    \ i = a.length - 1\n        val j = a.length - 1\n        val k = a.length - 1\n\
    \        val m = a.length - 1\n        val n = a.length - 1\n        val k = a.length\
    \ - 1\n        val i = a.length - 1\n        val j = a.length - 1\n        val\
    \ k = a.length - 1\n        val m = a.length - 1\n        val n = a.length - 1\n\
    \        val k = a.length - 1\n        val i = a.length - 1\n        val j = a.length\
    \ - 1\n        val k = a.length - 1\n        val m = a.length - 1\n        val\
    \ n = a.length - 1\n        val k = a.length - 1\n        val i = a.length - 1\n\
    \        val j = a.length - 1\n        val k = a.length - 1\n        val m = a.length\
    \ - 1\n        val n = a.length - 1\n        val k = a.length - 1\n        val\
    \ i = a.length - 1\n        val j = a.length - 1\n        val k = a.length - 1\n\
    \        val m = a.length - 1\n        val n = a.length - 1\n        val k = a.length\
    \ - 1\n        val i = a.length - 1\n        val j = a.length - 1\n        val\
    \ k = a.length - 1\n        val m = a.length - 1\n        val n = a.length - 1\n\
    \        val k = a.length - 1\n        val i = a.length - 1\n        val j = a.length\
    \ - 1\n        val k = a.length - 1\n        val m = a.length - 1\n        val\
    \ n = a.length - 1\n        val k = a.length - 1\n        val i = a.length - 1\n\
    \        val j = a.length - 1\n        val k = a.length - 1\n        val m = a.length\
    \ - 1\n        val n = a.length - 1\n        val k = a.length - 1\n        val\
    \ i = a.length - 1\n        val j = a.length - 1\n        val k = a.\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpba8dkv2m.scala:88:4 ----------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpba8dkv2m.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = a.length - \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mk is already defined\
    \ as \e[33mvalue\e[0m \e[35mk\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpba8dkv2m.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = a.length - \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mm\
    \ is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpba8dkv2m.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = a.length - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpba8dkv2m.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = a.length - \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mk is already defined\
    \ as \e[33mvalue\e[0m \e[35mk\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpba8dkv2m.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mi\e[0m = a.length - \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mi\
    \ is already de"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val i = mutable.ArrayBuffer.empty[Long]\n        val j = mutable.ArrayBuffer.empty[Long]\n\
    \        val k = mutable.ArrayBuffer.empty[Long]\n        val m = mutable.ArrayBuffer.empty[Long]\n\
    \        val n = mutable.ArrayBuffer.empty[Long]\n        val i = mutable.ArrayBuffer.empty[Long]\n\
    \        val j = mutable.ArrayBuffer.empty[Long]\n        val k = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val i = mutable.ArrayBuffer.empty[Long]\n        val j = mutable.ArrayBuffer.empty[Long]\n\
    \        val k = mutable.ArrayBuffer.empty[Long]\n        val m = mutable.ArrayBuffer.empty[Long]\n\
    \        val n = mutable.ArrayBuffer.empty[Long]\n        val i = mutable.ArrayBuffer.empty[Long]\n\
    \        val j = mutable.ArrayBuffer.empty[Long]\n        val k = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val i = mutable.ArrayBuffer.empty[Long]\n        val j = mutable.ArrayBuffer.empty[Long]\n\
    \        val k = mutable.ArrayBuffer.empty[Long]\n        val m = mutable.ArrayBuffer.empty[Long]\n\
    \        val n = mutable.ArrayBuffer.empty[Long]\n        val i = mutable.ArrayBuffer.empty[Long]\n\
    \        val j = mutable.ArrayBuffer.empty[Long]\n        val k = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val i = mutable.ArrayBuffer.empty[Long]\n        val j = mutable.ArrayBuffer.empty[Long]\n\
    \        val k = mutable.ArrayBuffer.empty[Long]\n        val m = mutable.ArrayBuffer.empty[Long]\n\
    \        val n = mutable.ArrayBuffer.empty[Long]\n        val i = mutable.ArrayBuffer.empty[Long]\n\
    \        val j = mutable.ArrayBuffer.empty[Long]\n        val k = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpar3oa4vw.scala:58:4 ----------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpar3oa4vw.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpar3oa4vw.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpar3oa4vw.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mval\e[0m \e[36mi\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mi is already defined as \e[33mvalue\e[0m \e[35mi\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpar3oa4vw.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mj\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mj is already defined as \e[33mvalue\e[0m \e[35mj\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpar3oa4vw.scala:25:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = a.length\n        val n = n - 1\n        val m = m - 2\n    \
    \    val i = 2\n        val j = 0\n        val k = 0\n        var count = 0\n\
    \        while (i < m && j < n && k < m) {\n            val temp = a(i)\n    \
    \        a(i) = a(i) + a(i + 1) + a(i + 2)\n            val temp1 = a(i)\n   \
    \         a(i) = temp + temp1 + temp2\n            val temp2 = a(i)\n        \
    \    a(i) = temp + temp1 + temp2\n            val temp3 = a(i)\n            a(i)\
    \ = temp + temp1 + temp2\n            count += 1\n            i += 1\n       \
    \     j += 1\n            k += 1\n        }\n        count * 3\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpn0ojy9tc.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = m - \e[31m2\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mm is already defined\
    \ as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpn0ojy9tc.scala:17:16 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = n - \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpn0ojy9tc.scala:33:14 ------------------------\e[0m\e\
    [0m\n\e[31m33 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean i.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpn0ojy9tc.scala:34:14\
    \ ------------------------\e[0m\e[0m\n\e[31m34 |\e[0m            j += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean j.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpn0ojy9tc.scala:35:14 ------------------------\e[0m\e[0m\n\e[31m35\
    \ |\e[0m            k += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ k.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val count = mutable.Map[Long, Long]()\n        val maxTriples = mutable.Map[Long,\
    \ Long]()\n        val maxTriple = mutable.Map[Long, Long]()\n        var i =\
    \ 0\n        while (i < n) {\n            a(i) = i * i - i + 1\n            i\
    \ += 1\n        }\n        val triples = a.zipWithIndex.filter(_._2 % 3 == 0).map(_._1)\n\
    \        triples.foreach { triple =>\n            val tripleCount = triples.count(_._1\
    \ == triple)\n            if (tripleCount > maxTriples(triple)) {\n          \
    \      maxTriples(triple) = tripleCount\n                maxTriple(triple) = triple\n\
    \            }\n        }\n        val maxTripleCount = maxTriples.values.max\n\
    \        if (maxTripleCount == 0) {\n            return 0\n        }\n       \
    \ val maxTriple = maxTriples.maxBy(_._1)._2\n        val maxTripleCount = maxTriples.values.max\n\
    \        if (maxTripleCount == 0) {\n            return 0\n        }\n       \
    \ val maxTripleCount = maxTriples.values.max\n        if (maxTripleCount == 0)\
    \ {\n            return 0\n        }\n        val maxTripleCount = maxTriples.values.max\n\
    \        if (maxTripleCount == 0) {\n            return 0\n        }\n       \
    \ val maxTripleCount = maxTriples.values.max\n        if (maxTripleCount == 0)\
    \ {\n            return 0\n        }\n        val maxTripleCount = maxTriples.values.max\n\
    \        if (maxTripleCount == 0) {\n            return 0\n        }\n       \
    \ val maxTripleCount = maxTriples.values.max\n        if (maxTripleCount == 0)\
    \ {\n            return 0\n        }\n        val maxTripleCount = maxTriples.values.max\n\
    \        if (maxTripleCount == 0) {\n            return 0\n        }\n       \
    \ val maxTripleCount = maxTriples.values.max\n        if (maxTripleCount == 0)\
    \ {\n            return 0\n        }\n        val maxTripleCount = maxTriples.values.max\n\
    \        if (maxTripleCount == 0) {\n            return 0\n        }\n       \
    \ val maxTripleCount = maxTriples.values.max\n        if (maxTripleCount == 0)\
    \ {\n            return 0\n        }\n        val maxTripleCount = maxTriples.values.max\n\
    \        if (maxTripleCount == 0) {\n            return 0\n        }\n       \
    \ val maxTripleCount = maxTriples.values.max\n        if (maxTripleCount == 0)\
    \ {\n            return 0\n        }\n        val maxTripleCount = maxTriples.values.max\n\
    \        if (maxTripleCount == 0) {\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp55hzj7x0.scala:96:0 ----------------------------\e\
    [0m\e[0m\n\e[31m96 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp55hzj7x0.scala:36:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m36 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTriple\e[0m = maxTriples.maxBy(_._1)._2\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmaxTriple\
    \ is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp55hzj7x0.scala:37:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m37 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTripleCount\e[0m = maxTriples.values.max\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmaxTripleCount\
    \ is already defined as \e[33mvalue\e[0m \e[35mmaxTripleCount\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp55hzj7x0.scala:41:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTripleCount\e[0m = maxTriples.values.max\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmaxTripleCount\
    \ is already defined as \e[33mvalue\e[0m \e[35mmaxTripleCount\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp55hzj7x0.scala:45:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m45 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTripleCount\e[0m = maxTriples.values.max\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmaxTripleCount\
    \ is already defined as \e[33mvalue\e[0m \e[35mmaxTripleCount\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = scala.math.BigInt(3)\n        var i = 0\n        var j = 0\n\
    \        var k = 0\n        var count = 0\n        while (i < n && j < n && k\
    \ < n) {\n            a(i) = i * i - i + 1\n            i += 1\n            j\
    \ += 1\n            k += 1\n            count += 1\n        }\n        if (count\
    \ > 0) {\n            val max = scala.math.max(scala.math.max(a(i), a(i)), a(i))\n\
    \            val min = scala.math.min(scala.math.min(a(i), a(i)), a(i))\n    \
    \        val sum = scala.math.sum(a(i))\n            val product = scala.math.prod(scala.math.prod(a(i),\
    \ a(i), a(i)))\n            val triples = scala.math.ceil(product / m)\n     \
    \       val triple = scala.math.ceil(sum / m)\n            val triple2 = scala.math.ceil(sum\
    \ / triple)\n            val triple3 = scala.math.ceil(sum / triple2)\n      \
    \      val triple4 = scala.math.ceil(sum / triple3)\n            val triple5 =\
    \ scala.math.ceil(sum / triple4)\n            val triple6 = scala.math.ceil(sum\
    \ / triple5)\n            val triple7 = scala.math.ceil(sum / triple6)\n     \
    \       val triple8 = scala.math.ceil(sum / triple7)\n            val triple9\
    \ = scala.math.ceil(sum / triple8)\n            val triple10 = scala.math.ceil(sum\
    \ / triple9)\n            val triple11 = scala.math.ceil(sum / triple10)\n   \
    \         val triple12 = scala.math.ceil(sum / triple11)\n            val triple13\
    \ = scala.math.ceil(sum / triple12)\n            val triple14 = scala.math.ceil(sum\
    \ / triple13)\n            val triple15 = scala.math.ceil(sum / triple14)\n  \
    \          val triple16 = scala.math.ceil(sum / triple15)\n            val triple17\
    \ = scala.math.ceil(sum / triple16)\n            val triple18 = scala.math.ceil(sum\
    \ / triple17)\n            val triple19 = scala.math.ceil(sum / triple18)\n  \
    \          val triple20 = scala.math.ceil(sum / triple19)\n            val triple21\
    \ = scala.math.ceil(sum / triple20)\n            val triple22 = scala.math.ceil(sum\
    \ / triple21)\n            val triple23 = scala.math.ceil(sum / triple22)\n  \
    \          val triple24 = scala.math.ceil(sum / triple23)\n            val triple25\
    \ = scala.math.ceil(sum / triple24)\n            val triple26 = scala.math.ceil(sum\
    \ / triple25)\n\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkjqkmk2f.scala:70:0 ----------------------------\e\
    [0m\e[0m\n\e[31m70 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpkjqkmk2f.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkjqkmk2f.scala:31:33\
    \ ------------------------\e[0m\e[0m\n\e[31m31 |\e[0m            \e[33mval\e[0m\
    \ \e[36msum\e[0m = scala.math.sum(a(i))\n\e[31m\e[31m   |\e[0m               \
    \       ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      value sum is\
    \ not a member of math\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkjqkmk2f.scala:32:37\
    \ ------------------------\e[0m\e[0m\n\e[31m32 |\e[0m            \e[33mval\e[0m\
    \ \e[36mproduct\e[0m = scala.math.prod(scala.math.prod(a(i), a(i), a(i)))\n\e\
    [31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                          value prod is not a member of math\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpkjqkmk2f.scala:32:53 ------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m            \e[33mval\e[0m \e[36mproduct\e[0m = scala.math.prod(scala.math.prod(a(i),\
    \ a(i), a(i)))\n\e[31m\e[31m   |\e[0m                                        \
    \  ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                     \
    \ value prod is not a member of math\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpkjqkmk2f.scala:69:1 ---------------------\e[0m\e[0m\n\e[31m69 |\e[0m}\n\
    \e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m   |\e[0m\
    \ Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[33m\e[33m-- Warning: /tmp/tmpkjqkmk2f.scala:62:4\
    \ ----------------------------------------\e[0m\e[0m\n\e[33m62 |\e[0m   "
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcesgi7j6.scala:58:4 ----------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:19:12 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:22:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val i = mutable.ArrayBuffer.empty[Long]\n        val j = mutable.ArrayBuffer.empty[Long]\n\
    \        val k = mutable.ArrayBuffer.empty[Long]\n        val count = mutable.ArrayBuffer.empty[Long]\n\
    \        val triple = mutable.ArrayBuffer.empty[Long]\n        val triples = mutable.ArrayBuffer.empty[Long]\n\
    \        val tripleSum = mutable.ArrayBuffer.empty[Long]\n        val tripleSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val tripleSumsSums = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val tripleSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n       \
    \ val tripleSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSumsSumsSums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSumsSumsSumsSum =\
    \ mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val tripleSumsSums\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj5wqs6ay.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj5wqs6ay.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mn\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj5wqs6ay.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mm\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj5wqs6ay.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e\
    [36mi\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj5wqs6ay.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mj\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj5wqs6ay.scala:20:16\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e\
    [36mk\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m--"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = Array.ofDim[Long](n\
    \ + 1)\n        a(0) = 1\n        a(1) = 3\n        a(2) = 7\n        a(3) = 13\n\
    \        a(4) = 21\n        var count = 0\n        var i = 0\n        while (i\
    \ < n) {\n            var j = i + 1\n            while (j < n) {\n           \
    \     var k = j + 1\n                while (k < n) {\n                    if (a(i)\
    \ + a(j) + a(k) == 3) {\n                        count += 1\n                \
    \    }\n                    k += 1\n                }\n                j += 1\n\
    \            }\n            i += 1\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9anzpiy7.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \                                ^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \                 Found:    Long\n\e[31m   |\e[0m                            \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[Long]\n\
    \        val m = mutable.ArrayBuffer.empty[Long]\n        val n = mutable.ArrayBuffer.empty[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcesgi7j6.scala:58:4 ----------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:19:12 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcesgi7j6.scala:22:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var i = 0\n        var j\
    \ = 0\n        var k = 0\n        var a = new Array[Long](n)\n        while(i\
    \ < n) {\n            a(i) = i * i - i + 1\n            i += 1\n        }\n  \
    \      while(j < n) {\n            a(j) = a(j) + a(j) + a(j)\n            j +=\
    \ 1\n        }\n        while(k < n) {\n            if(a(k) % 3 == 0) {\n    \
    \            return k\n            }\n            k += 1\n        }\n        return\
    \ 0\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn8wpqga6.scala:18:32\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (n : Long)\n\e[31m   |\e[0m                          \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = a.length - 1\n        val n = a.length - 1\n        val triples\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 0 until n) {\n            a(i)\
    \ = i * i - i + 1\n        }\n        for (i <- 0 until n) {\n            for\
    \ (j <- 0 until n) {\n                for (k <- 0 until n) {\n               \
    \     if (a(i) + a(j) + a(k) % 3 == 0) {\n                        triples += a(i)\
    \ + a(j) + a(k) \n                    }\n                }\n            }\n  \
    \      }\n        triples.toList.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpe2o9mc27.scala:17:16 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = a.length - \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m            \
    \    Recursive \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe2o9mc27.scala:18:22 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798428
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n && j < n && k < n) {\n            a(i) = i * i - i +\
    \ 1\n            i += 1\n            j += 1\n            k += 1\n            count\
    \ += 1\n        }\n        while(i < n) {\n            a(i) = i * i - i + 1\n\
    \            i += 1\n            count += 1\n        }\n        while(j < n) {\n\
    \            a(j) = i * i - i + 1\n            j += 1\n            count += 1\n\
    \        }\n        while(k < n) {\n            a(k) = i * i - i + 1\n       \
    \     k += 1\n            count += 1\n        }\n        val triples = a.filter(_\
    \ % 3 == 0).length\n        count * triples\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg0w1617k.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of\
    \ a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n\
    \    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val result = mutable.ArrayBuffer.empty[Long]\n        val max = 0\n \
    \       val min = 0\n        val maxTriples = 0\n        val minTriples = 0\n\
    \        val maxTriple = 0\n        val minTriple = 0\n        val maxTriples\
    \ = 0\n        val minTriples = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val maxTriples = 0\n        val minTriples = 0\n        val maxTriples\
    \ = 0\n        val minTriples = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val maxTriples = 0\n        val minTriples = 0\n        val maxTriples\
    \ = 0\n        val minTriples = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val maxTriples = 0\n        val minTriples = 0\n        val maxTriples\
    \ = 0\n        val minTriples = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val maxTriples = 0\n        val minTriples = 0\n        val maxTriples\
    \ = 0\n        val minTriples = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val maxTriples = 0\n        val minTriples = 0\n        val maxTriples\
    \ = 0\n        val minTriples = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val maxTriples = 0\n        val minTriples = 0\n        val maxTriples\
    \ = 0\n        val minTriples = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val maxTriples = 0\n        val minTriples = 0\n        val maxTriples\
    \ = 0\n        val minTriples = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val maxTriples = 0\n        val minTriples = 0\n        val maxTriples\
    \ = 0\n        val minTriples = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val maxTriples = 0\n        val minTriples = 0\n        val maxTriples\
    \ = 0\n        val minTriples = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val maxTriples = 0\n        val minTriples = 0\n        val maxTriples\
    \ = 0\n        val minTriples = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val max\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpakncki4s.scala:88:4 ----------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpakncki4s.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTriples\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpakncki4s.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mminTriples\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mminTriples is already\
    \ defined as \e[33mvalue\e[0m \e[35mminTriples\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpakncki4s.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTriples\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpakncki4s.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36mminTriples\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mminTriples is already\
    \ defined as \e[33mvalue\e[0m \e[35mminTriples\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpakncki4s.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTriples\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^"
  stdout: ''
  timestamp: 1659798430

name: HumanEval_67_fruit_distribution
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // In this task, you will be given a string that represents a number of apples\
  \ and oranges \n    // that are distributed in a basket of fruit this basket contains\
  \ \n    // apples, oranges, and mango fruits. Given the string that represents the\
  \ total number of \n    // the oranges and apples and an integer that represent\
  \ the total number of the fruits \n    // in the basket return the number of the\
  \ mango fruits in the basket.\n    // for examble:\n    // >>> fruitDistribution((\"\
  5 apples and 6 oranges\"), (19l))\n    // (8l)\n    // >>> fruitDistribution((\"\
  0 apples and 1 oranges\"), (3l))\n    // (2l)\n    // >>> fruitDistribution((\"\
  2 apples and 3 oranges\"), (100l))\n    // (95l)\n    // >>> fruitDistribution((\"\
  100 apples and 1 oranges\"), (120l))\n    // (19l)\n    def fruitDistribution(s\
  \ : String, n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fruitDistribution((\"\
  5 apples and 6 oranges\"), (19l)) == (8l));\n    assert(fruitDistribution((\"5 apples\
  \ and 6 oranges\"), (21l)) == (10l));\n    assert(fruitDistribution((\"0 apples\
  \ and 1 oranges\"), (3l)) == (2l));\n    assert(fruitDistribution((\"1 apples and\
  \ 0 oranges\"), (3l)) == (2l));\n    assert(fruitDistribution((\"2 apples and 3\
  \ oranges\"), (100l)) == (95l));\n    assert(fruitDistribution((\"2 apples and 3\
  \ oranges\"), (5l)) == (0l));\n    assert(fruitDistribution((\"1 apples and 100\
  \ oranges\"), (120l)) == (19l));\n    }\n\n}\n"
completions: ["        val apples = n.toInt\n        val oranges = s.split(\" \").last.toInt\n\
    \        val fruits = s.split(\" \").dropRight(1).mkString(\"\")\n        val\
    \ fruitMap : Map[String, Long] = fruits.split(\"\").map(x => (x.toLong, 1)).toMap\n\
    \        val fruitCount = fruitMap.values.sum\n        val mangoCount = fruitCount\
    \ - apples\n        fruitMap(\"mango\")", "        val apples = n.toLong - s.toLong\n\
    \        val oranges = s.toLong\n        val mangos = apples - oranges\n     \
    \   mangos", "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\"\
    \ \")(1)\n        val fruits = s.split(\" \")(2)\n        val applesAndOranges\
    \ = apples + \" \" + oranges\n        val fruitsInBasket = fruits.split(\"and\"\
    ).length\n        val mangos = fruitsInBasket - oranges\n        val mangoFruits\
    \ = mangos * oranges\n        fruitsInBasket * mangoFruits", "        val apples\
    \ = n.toInt\n        val oranges = apples - 1\n        val mangos = oranges -\
    \ 1\n        val fruits = s.split(\" \")\n        val fruitCount = fruits.length\n\
    \        val appleCount = fruits(0).toInt\n        val orangeCount = fruits(1).toInt\n\
    \        val mangoCount = fruits(2).toInt\n        val totalCount = appleCount\
    \ + orangeCount + mangoCount\n        val appleFruits = appleCount * appleCount\n\
    \        val orangeFruits = orangeCount * orangeCount\n        val mangoFruits\
    \ = mangoCount * mangoCount\n        val totalFruits = appleFruits + orangeFruits\
    \ + mangoFruits\n        val totalMangoFruits = totalFruits - totalCount\n   \
    \     val mangoFruitPercentage = (totalMangoFruits/totalFruits).toInt\n      \
    \  val appleFruitPercentage = (appleFruits/totalFruits).toInt\n        val orangeFruitPercentage\
    \ = (orangeFruits/totalFruits).toInt\n        val totalPercentage = appleFruitPercentage\
    \ + orangeFruitPercentage + mangoFruitPercentage\n        val applePercentage\
    \ = appleFruitPercentage * appleCount\n        val orangePercentage = orangeFruitPercentage\
    \ * orangeCount\n        val mangoPercentage = mangoFruitPercentage * mangoCount\n\
    \        val totalPercentagePercentage = applePercentage + orangePercentage +\
    \ mangoPercentage\n        val totalPercentagePercentagePercentage = totalPercentage/totalCount\n\
    \        val totalPercentagePercentagePercentagePercentage = totalPercentagePercentage/totalFruits\n\
    \        val totalPercentagePercentagePercentagePercentagePercentage = totalPercentagePercentagePercentage/totalMangoFruits\n\
    \        val totalPercentagePercentagePercentagePercentagePercentagePercentage\
    \ = totalPercentagePercentagePercentagePercentage/totalPercentage\n        val\
    \ totalPercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = totalPercentagePercentagePercentagePercentagePercentage/totalFruits\n    \
    \    val totalPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = totalPercentagePercentagePercentagePercentagePercentagePercentage/totalMangoFruits\n\
    \        val totalPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = totalPercentagePercentagePercentagePercentagePercentagePercentage/totalPercentage\n\
    \        val totalPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = totalPercentagePercentagePercentagePercentagePercentagePercentagePercentage/totalFruits\n\
    \        val totalPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = totalPercentagePercentage", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples\
    \ ++ oranges\n        val appleCount = apples.sum\n        val orangeCount = oranges.sum\n\
    \        val mangoCount = fruits.filter(_ % 2 == 0).sum\n        val mangoCount\
    \ = fruits.filter(_ % 2 == 1).sum\n        val mangoCount = fruits.filter(_ %\
    \ 3 == 0).sum\n        val mangoCount = fruits.filter(_ % 3 == 1).sum\n      \
    \  val mangoCount = fruits.filter(_ % 5 == 0).sum\n        val mangoCount = fruits.filter(_\
    \ % 5 == 1).sum\n        val mangoCount = fruits.filter(_ % 7 == 0).sum\n    \
    \    val mangoCount = fruits.filter(_ % 7 == 1).sum\n        val mangoCount =\
    \ fruits.filter(_ % 11 == 0).sum\n        val mangoCount = fruits.filter(_ % 11\
    \ == 1).sum\n        val mangoCount = fruits.filter(_ % 13 == 0).sum\n       \
    \ val mangoCount = fruits.filter(_ % 13 == 1).sum\n        val mangoCount = fruits.filter(_\
    \ % 17 == 0).sum\n        val mangoCount = fruits.filter(_ % 17 == 1).sum\n  \
    \      val mangoCount = fruits.filter(_ % 19 == 0).sum\n        val mangoCount\
    \ = fruits.filter(_ % 19 == 1).sum\n        val mangoCount = fruits.filter(_ %\
    \ 23 == 0).sum\n        val mangoCount = fruits.filter(_ % 23 == 1).sum\n    \
    \    val mangoCount = fruits.filter(_ % 29 == 0).sum\n        val mangoCount =\
    \ fruits.filter(_ % 29 == 1).sum\n        val mangoCount = fruits.filter(_ % 31\
    \ == 0).sum\n        val mangoCount = fruits.filter(_ % 31 == 1).sum\n       \
    \ val mangoCount = fruits.filter(_ % 37 == 0).sum\n        val mangoCount = fruits.filter(_\
    \ % 37 == 1).sum\n        val mangoCount = fruits.filter(_ % 41 == 0).sum\n  \
    \      val mangoCount = fruits.filter(_ % 41 == 1).sum\n        val mangoCount\
    \ = fruits.filter(_ % 47 == 0).sum\n        val mangoCount = fruits.filter(_ %\
    \ 47 == 1).sum\n        val mangoCount = fruits.filter(_ % 53 == 0).sum\n    \
    \    val mangoCount = fruits.filter(_ % 53 == 1).sum\n        val mangoCount =\
    \ fruits.filter(_ % 59 == 0).", "        val apples = n.toLong - s.toLong\n  \
    \      val oranges = s.toLong\n        val mangos = apples - oranges\n       \
    \ mangos", "        val apples = n.toLong - s.toLong\n        val oranges = s.toLong\
    \ - apples.toLong\n        val mangos = apples.toLong - oranges.toLong\n     \
    \   mangos", "        val apples = n.toInt\n        val oranges = s.split(\"and\"\
    ).map(_.toInt).sum\n        val mangos = apples - oranges\n        mangos", " \
    \       val apples = n.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangos = fruits - apples - oranges\n       \
    \ mangos", "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\"\
    \ \")(1)\n        val fruits = s.split(\" \")(2)\n        val applesAndOranges\
    \ = apples + \" \" + oranges\n        val fruitsInBasket = fruits.split(\" \"\
    )\n        val applesAndOrangesInBasket = applesAndOranges.split(\" \")\n    \
    \    val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n   \
    \     val fruitsInBasketCount = fruitsInBasket.length\n        val mangoFruitsInBasketCount\
    \ = fruitsInBasketCount - applesAndOrangesInBasketCount\n        val mangoFruitsInBasket\
    \ = fruitsInBasket.filter(_ == \"mango\")\n        val mangoFruitsInBasketCount\
    \ = mangoFruitsInBasket.length\n        val mangoFruitsInBasketCountInBasket =\
    \ mangoFruitsInBasketCount - applesAndOrangesInBasketCount\n        val mangoFruitsInBasketInBasket\
    \ = fruitsInBasket.filter(_ == \"mango\").filter(_ == \"mango\")\n        val\
    \ mangoFruitsInBasketCountInBasketInBasket = mangoFruitsInBasketInBasket.length\n\
    \        val mangoFruitsInBasketInBasketCount = mangoFruitsInBasketInBasket.length\n\
    \        val mangoFruitsInBasketInBasketCountInBasket = mangoFruitsInBasketInBasketCount\
    \ - applesAndOrangesInBasketCount\n        val mangoFruitsInBasketInBasketCountInBasketInBasket\
    \ = mangoFruitsInBasketInBasketCountInBasket.length\n        val mangoFruitsInBasketInBasketCountInBasketInBasketInBasket\
    \ = mangoFruitsInBasketInBasketCountInBasketInBasket.length\n        val mangoFruitsInBasketInBasketCountInBasketInBasketInBasketInBasket\
    \ = mangoFruitsInBasketInBasketCountInBasketInBasketInBasket.length\n        val\
    \ mangoFruitsInBasketInBasketCountInBasketInBasketInBasketInBasketInBasket = mangoFruitsInBasketInBasketCountIn",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val fruitsInBasket = fruits.split(\" \")\n      \
    \  val applesAndOrangesInBasket = applesAndOranges.split(\" \")\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val fruitsInBasketCount = fruitsInBasket.length\n\
    \        val mangoFruitsInBasketCount = fruitsInBasketCount - applesAndOrangesInBasketCount\n\
    \        val mangoFruitsInBasket = fruitsInBasket.filter(_ == \"mango\")\n   \
    \     val mangoFruitsInBasketCount = mangoFruitsInBasket.length\n        val mangoFruitsInBasketCount\
    \ = mangoFruitsInBasketCount + applesAndOrangesInBasketCount\n        mangoFruitsInBasketCount",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges\n        val appleAndOranges\
    \ = fruits.filter(x => x >= 0 && x <= n)\n        val mangos = appleAndOranges.filter(x\
    \ => x % 2 == 0)\n        mangos.size", "        val apples = n.toInt\n      \
    \  val oranges = s.toInt\n        val mangos = apples - oranges\n        val basket\
    \ = new mutable.HashMap[String, Long]()\n        basket.put(\"apples\", apples)\n\
    \        basket.put(\"oranges\", oranges)\n        basket.put(\"mangos\", mangos)\n\
    \        basket.size", "        val apples = n.toLong - s.split(\" \").filter(_\
    \ != \"\").length\n        val oranges = s.split(\" \").filter(_ != \"\").length\n\
    \        val mangos = apples - oranges\n        mangos", "        val apples =\
    \ n.toLong - s.toLong\n        val oranges = s.toLong\n        val mangos = apples\
    \ - oranges\n        mangos", "        val apples = s.split(\"apples and \")\n\
    \        val oranges = s.split(\"oranges and \")\n        val mangos = s.split(\"\
    mango and \")\n        val appleAndOranges = apples.zip(oranges).map(x => x._1\
    \ + x._2)\n        val mangoAndOranges = mangos.zip(oranges).map(x => x._1 + x._2)\n\
    \        val appleAndMangos = apples.zip(mangos).map(x => x._1 + x._2)\n     \
    \   val orangeAndMangos = oranges.zip(mangos).map(x => x._1 + x._2)\n        val\
    \ appleAndOrangesAndMangos = appleAndOranges.zip(orangeAndMangos).map(x => x._1\
    \ + x._2)\n        val appleAndMangosAndOranges = appleAndMangos.zip(orangeAndMangos).map(x\
    \ => x._1 + x._2)\n        val appleAndOrangesAndMangosAndOranges = appleAndOrangesAndMangos.zip(orangeAndMangos).map(x\
    \ => x._1 + x._2)\n        val appleAndMangosAndOrangesAndMangos = appleAndMangosAndOranges.zip(orangeAndMangos).map(x\
    \ => x._1 + x._2)\n        val appleAndOrangesAndMangosAndOrangesAndMangos = appleAndOrangesAndMangosAndOranges.zip(orangeAndMangos).map(x\
    \ => x._1 + x._2)\n        val appleAndMangosAndOrangesAndMangosAndOranges = appleAndMangosAndOrangesAndMangos.zip(orangeAndMangos).map(x\
    \ => x._1 + x._2)\n        val appleAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = appleAndOrangesAndMangosAndOrangesAndMangos.zip(orangeAndMangos).map(x =>\
    \ x._1 + x._2)\n        val appleAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = appleAndMangosAndOrangesAndMangosAndOranges.zip(orangeAndMangos).map(x =>\
    \ x._1 + x._2)\n        val appleAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = appleAndOrangesAndMangosAndOrangesAndMangosAnd", "        val apples = s.split(\"\
    apples and \")(0).trim\n        val oranges = s.split(\"oranges and \")(0).trim\n\
    \        val mangos = s.split(\"mango and \")(0).trim\n        val applesAndOranges\
    \ = apples + oranges\n        val applesAndMangos = apples + mangos\n        val\
    \ orangesAndMangos = oranges + mangos\n        val applesAndOrangesAndMangos =\
    \ applesAndOranges + mangos\n        val applesAndOrangesAndMangosAndOranges =\
    \ applesAndOranges + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + mangos + oranges + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos\n        val\
    \ applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges =\
    \ applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\
    \ + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\
    \ + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\
    \ + mangos + oranges + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + mang", "        val apples = n.toInt\n        val oranges\
    \ = s.split(\" \").last.toInt\n        val fruits = s.split(\" \").dropRight(1).mkString(\"\
    \")\n        val mangos = apples - oranges\n        val count = fruits.split(\"\
    \ \").length\n        val totalFruits = apples + oranges + mangos\n        val\
    \ totalFruitsPerApple = totalFruits / apples\n        val totalFruitsPerOrange\
    \ = totalFruits / oranges\n        val totalFruitsPerMango = totalFruits / mangos\n\
    \        val totalFruitsPerAppleAndOrange = totalFruitsPerApple * oranges\n  \
    \      val totalFruitsPerAppleAndMango = totalFruitsPerApple * mangos\n      \
    \  val totalFruitsPerOrangeAndMango = totalFruitsPerOrange * mangos\n        val\
    \ totalFruitsPerMangoAndApple = totalFruitsPerMango * apples\n        val totalFruitsPerMangoAndOrange\
    \ = totalFruitsPerMango * oranges\n        val totalFruitsPerMangoAndMango = totalFruitsPerMango\
    \ * mangos\n        val totalFruitsPerAppleAndOrangeAndMango = totalFruitsPerAppleAndOrange\
    \ * mangos\n        val totalFruitsPerAppleAndMangoAndOrange = totalFruitsPerAppleAndMango\
    \ * oranges\n        val totalFruitsPerAppleAndOrangeAndMango = totalFruitsPerAppleAndOrange\
    \ * mangos\n        val totalFruitsPerOrangeAndMangoAndApple = totalFruitsPerOrangeAndMango\
    \ * apples\n        val totalFruitsPerOrangeAndMangoAndOrange = totalFruitsPerOrangeAndMango\
    \ * oranges\n        val totalFruitsPerOrangeAndMangoAndMango = totalFruitsPerOrangeAndMango\
    \ * mangos\n        val totalFruitsPerMangoAndAppleAndOrange = totalFruitsPerMangoAndApple\
    \ * oranges\n        val totalFruitsPerMangoAndAppleAndMango = totalFruitsPerMangoAndApple\
    \ * mangos\n        val totalFruitsPerMangoAnd", "        val apples = n.toLong\
    \ - s.toLong\n        val oranges = s.toLong\n        val mangos = apples + oranges\n\
    \        mangos", "        val apples = n.toInt\n        val oranges = s.toInt\n\
    \        val mangos = apples - oranges\n        val fruits = apples + oranges\
    \ + mangos\n        fruits", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = apples - oranges\n        mangos", "       \
    \ val apples = n.toInt\n        val oranges = s.toInt\n        val fruits = apples\
    \ + oranges\n        val mangos = fruits - apples - oranges\n        mangos",
  "        val apples = n.toInt\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples + oranges.sum\n        val mangos = fruits.filter(_\
    \ % 2 == 1).length\n        mangos", "        val apples = n.toInt\n        val\
    \ oranges = apples - 1\n        val mangos = oranges - 1\n        val fruits =\
    \ apples + oranges + mangos\n        val basket = s.split(\" \")\n        val\
    \ appleFruits = basket.filter(_.contains(\"apples\")).map(_.toInt)\n        val\
    \ orangeFruits = basket.filter(_.contains(\"oranges\")).map(_.toInt)\n       \
    \ val mangoFruits = basket.filter(_.contains(\"mango\")).map(_.toInt)\n      \
    \  val appleFruitCount = appleFruits.sum\n        val orangeFruitCount = orangeFruits.sum\n\
    \        val mangoFruitCount = mangoFruits.sum\n        val appleFruitPercentage\
    \ = appleFruitCount / fruits\n        val orangeFruitPercentage = orangeFruitCount\
    \ / fruits\n        val mangoFruitPercentage = mangoFruitCount / fruits\n    \
    \    val mangoFruitPercentage = appleFruitPercentage * orangeFruitPercentage\n\
    \        appleFruitPercentage.toLong + orangeFruitPercentage.toLong + mangoFruitPercentage.toLong",
  "        val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\"\
    \ \")(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n        val applesAndOranges\
    \ = apples + oranges\n        val fruitsInBasket = fruits - applesAndOranges\n\
    \        val mangoFruits = fruitsInBasket - oranges\n        mangoFruits", " \
    \       val apples = n.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = apples - oranges\n        val fruits = apples + oranges + mangos\n       \
    \ fruits", "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\"\
    \ \")(1)\n        val fruits = s.split(\" \")(2)\n        val applesAndOranges\
    \ = apples + \" \" + oranges\n        val fruitsAndOranges = fruits + \" \" +\
    \ oranges\n        val fruitsAndApples = fruits + \" \" + apples\n        val\
    \ applesAndMango = apples + \" \" + mango\n        val fruitsAndMango = fruits\
    \ + \" \" + mango\n        val fruitsAndMangoAndApples = fruits + \" \" + mango\
    \ + \" \" + apples\n        val applesAndMangoAndOranges = apples + \" \" + mango\
    \ + \" \" + oranges\n        val fruitsAndMangoAndOranges = fruits + \" \" + mango\
    \ + \" \" + oranges\n        val fruitsAndMangoAndOrangesAndApples = fruits +\
    \ \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApplesAndOranges\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges\n\
    \        val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMango = fruits + \"\
    \ \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges + \" \" + mango\n\
    \        val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMangoAndApples = fruits\
    \ + \" \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges + \" \"\
    \ + mango + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMangoAndApplesAndOranges\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges\
    \ + \" \" + mango + \" \" + apples + \" \" + oranges\n        val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMango\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges\
    \ + \" \" + mango + \" \" + apples + \" \" + oranges + \" \" + mango\n       \
    \ val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges\
    \ + \" \" + mango + \" \" + apples + \" \" + oranges + \" \" + mango + \" \" +\
    \ apples\n        val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges\
    \ = fruits + \" \" + mang", "        val apples = s.split(\" \")(0)\n        val\
    \ oranges = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n      \
    \  val applesAndOranges = apples + \" \" + oranges\n        val fruitsAndOranges\
    \ = fruits + \" \" + oranges\n        val fruitsAndApples = fruits + \" \" + apples\n\
    \        val applesAndMango = apples + \" \" + mango\n        val fruitsAndMango\
    \ = fruits + \" \" + mango\n        val mangoFruits = fruits.split(\" \").last\n\
    \        val applesAndMangoFruits = apples + \" \" + mangoFruits\n        val\
    \ fruitsAndMangoFruits = fruits + \" \" + mangoFruits\n        val applesAndMangoFruitsAndOranges\
    \ = apples + \" \" + mangoFruits + \" \" + oranges\n        val fruitsAndMangoFruitsAndOranges\
    \ = fruits + \" \" + mangoFruits + \" \" + oranges\n        val applesAndMangoFruitsAndOrangesAndApples\
    \ = apples + \" \" + mangoFruits + \" \" + oranges + \" \" + apples\n        val\
    \ fruitsAndMangoFruitsAndOrangesAndApples = fruits + \" \" + mangoFruits + \"\
    \ \" + oranges + \" \" + apples\n        val applesAndMangoFruitsAndOrangesAndApplesAndOranges\
    \ = apples + \" \" + mangoFruits + \" \" + oranges + \" \" + apples + \" \" +\
    \ oranges\n        val fruitsAndMangoFruitsAndOrangesAndApplesAndOranges = fruits\
    \ + \" \" + mangoFruits + \" \" + oranges + \" \" + apples + \" \" + oranges\n\
    \        val applesAndMangoFruitsAndOrangesAndApplesAndOrangesAndMango = apples\
    \ + \" \" + mangoFruits + \" \" + oranges + \" \" + apples + \" \" + oranges +\
    \ \" \" + mango\n        val fruitsAndMangoFruitsAndOrangesAndApplesAndOrangesAndMango\
    \ = fruits + \" \" + mangoFruits + \" \" + oranges + \" \" + apples + \" \" +\
    \ oranges + \" \" + mango\n        val applesAndMangoFruitsAndOrangesAndApplesAndOrangesAndMangoFruits\
    \ = apples + \" \" + mangoFruits + \" \" + oranges + \" \" + apples + \" \" +\
    \ oranges + \" \" + mangoFruits\n        val fruitsAndMangoFruitsAndOrangesAndApplesAndOrangesAndMangoFruits\
    \ = fruits + \" \" + ", "        val apples = s.split(\" \").map(_.toInt)\n  \
    \      val oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples\
    \ ++ oranges\n        val appleCount = apples.sum\n        val orangeCount = oranges.sum\n\
    \        val mangoCount = fruits.filter(_ % 2 == 0).sum\n        val mangoFruitCount\
    \ = fruits.filter(_ % 2 == 1).sum\n        val totalFruitCount = appleCount +\
    \ orangeCount + mangoCount\n        val totalMangoFruitCount = appleCount + orangeCount\
    \ + mangoFruitCount\n        val totalMangoFruits = totalMangoFruitCount / totalFruitCount\n\
    \        val totalMangoFruitsPerApple = totalMangoFruitCount / appleCount\n  \
    \      val totalMangoFruitsPerOrange = totalMangoFruitCount / orangeCount\n  \
    \      val totalMangoFruitsPerMango = totalMangoFruitCount / mangoCount\n    \
    \    val totalMangoFruitsPerAppleAndOrange = totalMangoFruitsPerApple + totalMangoFruitsPerOrange\n\
    \        val totalMangoFruitsPerAppleAndMango = totalMangoFruitsPerApple + totalMangoFruitsPerMango\n\
    \        val totalMangoFruitsPerOrangeAndMango = totalMangoFruitsPerOrange + totalMangoFruitsPerMango\n\
    \        val totalMangoFruitsPerAppleAndOrangeAndMango = totalMangoFruitsPerAppleAndOrange\
    \ + totalMangoFruitsPerMango\n        val totalMangoFruitsPerAppleAndOrangeAndMangoAndTotal\
    \ = totalMangoFruitsPerAppleAndOrangeAndMango + totalMangoFruitsPerTotal\n   \
    \     val totalMangoFruitsPerAppleAndOrangeAndMangoAndTotalPerApple = totalMangoFruitsPerAppleAndOrangeAndMangoAndTotal\
    \ / appleCount\n        val totalMangoFruitsPerAppleAndOrangeAndMangoAndTotalPerOrange\
    \ = totalMangoFruitsPerAppleAndOrangeAndMangoAnd", "        val apples = s.split(\"\
    \ \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n        val fruits\
    \ = s.split(\" \")(2).toLong\n        val mangos = apples + oranges - fruits\n\
    \        mangos", "        val apples = s.split(\" \").map(_.toInt)\n        val\
    \ oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples ++ oranges\n\
    \        val mangos = fruits.filter(x => x % 2 == 0)\n        val total = mangos.length\n\
    \        val count = mangos.count(x => x == n)\n        count * total", "    \
    \    val apples = n.toLong - s.toLong\n        val oranges = s.toLong\n      \
    \  val mangos = apples - oranges\n        mangos", "        val apples = s.split(\"\
    \ \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n      \
    \  val fruits = apples ++ oranges\n        val appleAndOranges = fruits.filter(f\
    \ => f > 0)\n        val mango = appleAndOranges.filter(f => f == appleAndOranges.size)\n\
    \        val appleAndOrangesAndMango = appleAndOranges.size + mango.size\n   \
    \     appleAndOrangesAndMango", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = apples - oranges\n        val appleFruits =\
    \ apples.toLong\n        val orangeFruits = oranges.toLong\n        val mangoFruits\
    \ = mangos.toLong\n        val appleFruitCount = appleFruits.toLong\n        val\
    \ orangeFruitCount = orangeFruits.toLong\n        val mangoFruitCount = mangoFruits.toLong\n\
    \        val appleFruitCount = appleFruitCount.toLong\n        val orangeFruitCount\
    \ = orangeFruitCount.toLong\n        val mangoFruitCount = mangoFruitCount.toLong\n\
    \        val appleFruitCount = appleFruitCount.toLong\n        val orangeFruitCount\
    \ = orangeFruitCount.toLong\n        val mangoFruitCount = mangoFruitCount.toLong\n\
    \        val appleFruitCount = appleFruitCount.toLong\n        val orangeFruitCount\
    \ = orangeFruitCount.toLong\n        val mangoFruitCount = mangoFruitCount.toLong\n\
    \        val appleFruitCount = appleFruitCount.toLong\n        val orangeFruitCount\
    \ = orangeFruitCount.toLong\n        val mangoFruitCount = mangoFruitCount.toLong\n\
    \        val appleFruitCount = appleFruitCount.toLong\n        val orangeFruitCount\
    \ = orangeFruitCount.toLong\n        val mangoFruitCount = mangoFruitCount.toLong\n\
    \        val appleFruitCount = appleFruitCount.toLong\n        val orangeFruitCount\
    \ = orangeFruitCount.toLong\n        val mangoFruitCount = mangoFruitCount.toLong\n\
    \        val appleFruitCount = appleFruitCount.toLong\n        val orangeFruitCount\
    \ = orangeFruitCount.toLong\n        val mangoFruitCount = mangoFruitCount.toLong\n\
    \        val appleFruitCount = appleFruitCount.toLong\n        val orangeFruitCount\
    \ = orangeFruitCount.toLong\n        val mangoFruitCount = mangoFruitCount.toLong\n\
    \        val apple", "        val apples = s.split(\" \")(0)\n        val oranges\
    \ = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n        val applesAndOranges\
    \ = apples + \" \" + oranges\n        val fruitsInBasket = fruits.toInt\n    \
    \    val applesAndOrangesInBasket = applesAndOranges.toInt\n        val mangoFruits\
    \ = fruitsInBasket - applesAndOrangesInBasket\n        mangoFruits", "       \
    \ val apples = n.toInt\n        val oranges = s.toInt\n        val fruits = apples\
    \ + oranges\n        val mangos = fruits - apples - oranges\n        mangos",
  "        val apples = n.toLong - s.toLong\n        val oranges = s.toLong\n    \
    \    val mangos = apples - oranges\n        mangos", "        val apples = n.toInt\n\
    \        val oranges = s.toInt\n        val fruits = apples + oranges\n      \
    \  val mangos = fruits - apples - oranges\n        mangos", "        val apples\
    \ = s.split(\" \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n\
    \        val mangos = s.split(\" \")(2).toLong\n        val fruits = apples +\
    \ oranges + mangos\n        val basket = fruits.toLong\n        val applesAndOranges\
    \ = apples + oranges\n        val mangoFruits = applesAndOranges - mangos\n  \
    \      val totalFruits = fruits.toLong\n        val totalApples = apples.toLong\n\
    \        val totalOranges = oranges.toLong\n        val totalMangos = mangos.toLong\n\
    \        val totalBasket = basket.toLong\n        val totalApplesAndOranges =\
    \ applesAndOranges.toLong\n        val totalMangoFruits = mangoFruits.toLong\n\
    \        val totalFruits = fruits.toLong\n        val totalApples = apples.toLong\n\
    \        val totalOranges = oranges.toLong\n        val totalMangos = mangos.toLong\n\
    \        val totalBasket = basket.toLong\n        val totalApplesAndOranges =\
    \ applesAndOranges.toLong\n        val totalMangoFruits = mangoFruits.toLong\n\
    \        val totalFruits = fruits.toLong\n        val totalApples = apples.toLong\n\
    \        val totalOranges = oranges.toLong\n        val totalMangos = mangos.toLong\n\
    \        val totalBasket = basket.toLong\n        val totalApplesAndOranges =\
    \ applesAndOranges.toLong\n        val totalMangoFruits = mangoFruits.toLong\n\
    \        val totalFruits = fruits.toLong\n        val totalApples = apples.toLong\n\
    \        val totalOranges = oranges.toLong\n        val totalMangos = mangos.toLong\n\
    \        val totalBasket = basket.toLong\n        val totalApplesAndOranges =\
    \ applesAndOranges.toLong\n        val totalMangoFruits = mangoFruits.toLong\n\
    \        val totalFruits = fruits.toLong\n        val totalApples = apples.toLong\n\
    \        val totalOranges = oranges.toLong\n        val totalMangos = mangos.toLong\n\
    \        val totalBasket = basket.toLong\n        val totalApplesAndOranges = ",
  "        val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\"\
    \ \")(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n        val mangos\
    \ = n - apples - oranges - fruits\n        mangos", "        val apples = s.split(\"\
    \ \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits = s.split(\"\
    \ \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n        val\
    \ fruitsInBasket = fruits.split(\" \")\n        val applesAndOrangesInBasket =\
    \ applesAndOranges.split(\" \")\n        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val fruitsInBasketCount = fruitsInBasket.length\n        val applesAndOrangesInBasketSum\
    \ = applesAndOrangesInBasket.sum.toLong\n        val fruitsInBasketSum = fruitsInBasket.sum.toLong\n\
    \        val mangoFruits = fruitsInBasketSum - applesAndOrangesInBasketSum\n \
    \       val mangoFruitsCount = fruitsInBasketCount - applesAndOrangesInBasketCount\n\
    \        val mangoFruitsSum = mangoFruits.sum.toLong\n        val mangoFruitsCount\
    \ = fruitsInBasketCount - applesAndOrangesInBasketCount\n        val mangoFruitsSum\
    \ = mangoFruits.sum.toLong\n        val mangoFruitsCount = fruitsInBasketCount\
    \ - applesAndOrangesInBasketCount\n        val mangoFruitsSum = mangoFruits.sum.toLong\n\
    \        val mangoFruitsCount = fruitsInBasketCount - applesAndOrangesInBasketCount\n\
    \        val mangoFruitsSum = mangoFruits.sum.toLong\n        val mangoFruitsCount\
    \ = fruitsInBasketCount - applesAndOrangesInBasketCount\n        val mangoFruitsSum\
    \ = mangoFruits.sum.toLong\n        val mangoFruitsCount = fruitsInBasketCount\
    \ - applesAndOrangesInBasketCount\n        val mangoFruitsSum = mangoFruits.sum.toLong\n\
    \        val mangoFruitsCount = fruitsInBasketCount - applesAndOrangesInBasketCount\n\
    \        val mangoFruitsSum = mangoFruits.sum.toLong\n        val mangoFruitsCount\
    \ = fruitsInBasketCount - applesAndOrangesInBasketCount\n        val mangoFruitsSum\
    \ = mangoFruits.sum.toLong\n        val mangoFruitsCount = fruitsInBasketCount\
    \ - applesAnd", "        val apples = n.toLong\n        val oranges = s.toLong\n\
    \        val mangos = apples - oranges\n        val basket = s.split(\" \")\n\
    \        val fruits = basket.map(_.toLong)\n        fruits.sum", "        val\
    \ apples = s.split(\"apples and \")(1).trim\n        val oranges = s.split(\"\
    oranges and \")(1).trim\n        val mangos = s.split(\"mango and \")(1).trim\n\
    \        val applesAndOranges = apples + oranges\n        val mangoAndApples =\
    \ mangos + apples\n        val applesAndOrangesAndMangos = applesAndOranges +\
    \ mangos\n        val applesAndOrangesAndMangosAndApples = applesAndOrangesAndMangos\
    \ + apples\n        val applesAndOrangesAndMangosAndApplesAndOranges = applesAndOrangesAndMangosAndApples\
    \ + oranges\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOranges + mangos\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + apples\n        val\
    \ applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ + oranges\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + mangos\n        val\
    \ applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + apples\n        val\
    \ applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + oranges\n        val\
    \ applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + mangos\n        val\
    \ applesAndOrangesAndMangos", "        val apples = s.split(\" \")(0).toLong\n\
    \        val oranges = s.split(\" \")(1).toLong\n        val fruits = s.split(\"\
    \ \")(2).toLong\n        val mangos = apples + oranges - fruits\n        mangos",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges\n        val appleCount\
    \ = apples.sum\n        val orangeCount = oranges.sum\n        val mangoCount\
    \ = fruits.filter(_ % 2 == 0).sum\n        val mangoCount = fruits.filter(_ %\
    \ 2 == 1).sum\n        val totalCount = appleCount + orangeCount + mangoCount\n\
    \        val totalFruits = fruits.sum\n        val totalMangoFruits = fruits.filter(_\
    \ % 2 == 1).sum\n        val totalMangoFruits = fruits.filter(_ % 2 == 0).sum\n\
    \        val totalMangoFruits = fruits.filter(_ % 2 == 1).sum\n        val totalMangoFruits\
    \ = fruits.filter(_ % 2 == 0).sum\n        val totalMangoFruits = fruits.filter(_\
    \ % 2 == 1).sum\n        val totalMangoFruits = fruits.filter(_ % 2 == 0).sum\n\
    \        val totalMangoFruits = fruits.filter(_ % 2 == 1).sum\n        val totalMangoFruits\
    \ = fruits.filter(_ % 2 == 0).sum\n        val totalMangoFruits = fruits.filter(_\
    \ % 2 == 1).sum\n        val totalMangoFruits = fruits.filter(_ % 2 == 0).sum\n\
    \        val totalMangoFruits = fruits.filter(_ % 2 == 1).sum\n        val totalMangoFruits\
    \ = fruits.filter(_ % 2 == 0).sum\n        val totalMangoFruits = fruits.filter(_\
    \ % 2 == 1).sum\n        val totalMangoFruits = fruits.filter(_ % 2 == 0).sum\n\
    \        val totalMangoFruits = fruits.filter(_ % 2 == 1).sum\n        val totalMangoFruits\
    \ = fruits.filter(_ % 2 == 0).sum\n        val totalMangoFruits = fruits.filter(_\
    \ % 2 == 1).sum\n        val totalMangoFruits = fruits.filter(_ % 2 == 0).sum\n\
    \        val totalMangoFruits = fruits.filter(_ % 2 == 1).sum\n        val totalMangoFruits\
    \ = fruits.filter(_ % 2 == 0).sum\n        val totalMangoFruits = fruits.filter(_\
    \ % 2 == 1).sum\n        val totalMangoF", "        val apples = n.toInt\n   \
    \     val oranges = s.split(\"and\").map(_.toInt).sum\n        val mangos = apples\
    \ - oranges\n        mangos", "        val apples = s.split(\" \").map(_.toInt).sum\n\
    \        val oranges = s.split(\" \").map(_.toInt).sum\n        val mangos = s.split(\"\
    \ \").map(_.toInt).sum\n        val fruits = apples + oranges + mangos\n     \
    \   val applesAndOranges = apples + oranges\n        val applesAndMangos = apples\
    \ + mangos\n        val orangesAndMangos = oranges + mangos\n        val applesAndOrangesAndMangos\
    \ = applesAndOranges + mangos\n        val applesAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOranges + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOranges + mangos\n        val\
    \ applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges =\
    \ applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos + oranges\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos + mangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ + mangos\n        val applesAndOrange", "        val apples = s.split(\" \"\
    ).map(_.toInt)\n        val oranges = s.split(\"and\").map(_.toInt)\n        val\
    \ fruits = apples ++ oranges\n        val numOfApples = apples.sum\n        val\
    \ numOfOranges = oranges.sum\n        val numOfFruits = fruits.sum\n        val\
    \ numOfMango = (fruits - apples - oranges).sum\n        val numOfMangoFruits =\
    \ numOfMango - numOfFruits\n        numOfMangoFruits", "        val apples = s.split(\"\
    \ \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits = s.split(\"\
    \ \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n        val\
    \ fruitsInBasket = fruits.split(\" \").length\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.split(\" \").length\n        val mangoFruits = fruitsInBasket\
    \ - applesAndOrangesInBasket\n        mangoFruits", "        val apples = n.toInt\n\
    \        val oranges = s.toInt\n        val mangos = apples - oranges\n      \
    \  val fruits = apples + oranges + mangos\n        fruits", "        val apples\
    \ = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val mangos = s.split(\" \").map(_.toInt)\n        val appleCount = apples.sum\n\
    \        val orangeCount = oranges.sum\n        val mangoCount = mangos.sum\n\
    \        val appleSum = apples.sum\n        val orangeSum = oranges.sum\n    \
    \    val mangoSum = mangos.sum\n        val appleSumOfApples = apples.sum\n  \
    \      val orangeSumOfOranges = oranges.sum\n        val mangoSumOfMangos = mangos.sum\n\
    \        val appleSumOfApples = apples.sum\n        val orangeSumOfOranges = oranges.sum\n\
    \        val mangoSumOfMangos = mangos.sum\n        val appleSumOfApples = apples.sum\n\
    \        val orangeSumOfOranges = oranges.sum\n        val mangoSumOfMangos =\
    \ mangos.sum\n        val appleSumOfApples = apples.sum\n        val orangeSumOfOranges\
    \ = oranges.sum\n        val mangoSumOfMangos = mangos.sum\n        val appleSumOfApples\
    \ = apples.sum\n        val orangeSumOfOranges = oranges.sum\n        val mangoSumOfMangos\
    \ = mangos.sum\n        val appleSumOfApples = apples.sum\n        val orangeSumOfOranges\
    \ = oranges.sum\n        val mangoSumOfMangos = mangos.sum\n        val appleSumOfApples\
    \ = apples.sum\n        val orangeSumOfOranges = oranges.sum\n        val mangoSumOfMangos\
    \ = mangos.sum\n        val appleSumOfApples = apples.sum\n        val orangeSumOfOranges\
    \ = oranges.sum\n        val mangoSumOfMangos = mangos.sum\n        val appleSumOfApples\
    \ = apples.sum\n        val orangeSumOfOranges = oranges.sum\n        val mangoSumOfMangos\
    \ = mangos.sum\n        val appleSumOfApples = apples.sum\n        val orangeSumOfOranges\
    \ = oranges.sum\n        val mangoSumOfMangos = mangos.sum\n        val appleSumOfApples\
    \ = apples.sum\n        val orangeSumOfOranges = oranges.sum\n        val mangoSumOfMangos\
    \ = mangos.sum\n        val appleSumOfApples = apples.sum\n", "        val apples\
    \ = n.toLong - s.toLong\n        val oranges = s.toLong\n        val mangos =\
    \ apples - oranges\n        mangos", "        val apples = n.toLong\n        val\
    \ oranges = s.toLong\n        val mangos = apples - oranges\n        mangos",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val basket = new mutable.HashMap[String, Int]()\n        basket.put(\"apples\"\
    , apples.sum)\n        basket.put(\"oranges\", oranges.sum)\n        basket.put(\"\
    mangos\", mangos.sum)\n        val totalFruits = apples.sum + oranges.sum + mangos.sum\n\
    \        val totalFruitsCount = apples.sum + oranges.sum + mangos.sum\n      \
    \  val totalFruitsCount2 = apples.sum + oranges.sum + mangos.sum\n        val\
    \ totalFruitsCount3 = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount4\
    \ = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount5 = apples.sum\
    \ + oranges.sum + mangos.sum\n        val totalFruitsCount6 = apples.sum + oranges.sum\
    \ + mangos.sum\n        val totalFruitsCount7 = apples.sum + oranges.sum + mangos.sum\n\
    \        val totalFruitsCount8 = apples.sum + oranges.sum + mangos.sum\n     \
    \   val totalFruitsCount9 = apples.sum + oranges.sum + mangos.sum\n        val\
    \ totalFruitsCount10 = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount11\
    \ = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount12 = apples.sum\
    \ + oranges.sum + mangos.sum\n        val totalFruitsCount13 = apples.sum + oranges.sum\
    \ + mangos.sum\n        val totalFruitsCount14 = apples.sum + oranges.sum + mangos.sum\n\
    \        val totalFruitsCount15 = apples.sum + oranges.sum + mangos.sum\n    \
    \    val totalFruitsCount16 = apples.sum + oranges.sum + mangos.sum\n        val\
    \ totalFruitsCount17 = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount18\
    \ = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount19 = apples.sum\
    \ + oranges.sum + mangos.sum\n        val totalFruitsCount20 = apples.", "   \
    \     val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\"\
    \ \")(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n        val mangos\
    \ = apples + oranges - fruits\n        mangos", "        val apples = s.split(\"\
    \ \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n        val mangos\
    \ = s.split(\" \")(2).toLong\n        val fruits = apples + oranges + mangos\n\
    \        val totalFruits = fruits.toLong\n        val appleFruits = apples.toLong\n\
    \        val orangeFruits = oranges.toLong\n        val mangoFruits = mangos.toLong\n\
    \        val fruitsInBasket = totalFruits - appleFruits - orangeFruits - mangoFruits\n\
    \        val applesInBasket = appleFruits * appleFruits.toLong\n        val orangesInBasket\
    \ = orangeFruits * orangeFruits.toLong\n        val mangosInBasket = mangoFruits\
    \ * mangoFruits.toLong\n        val fruitsInBasketWithMango = fruitsInBasket +\
    \ mangosInBasket\n        val fruitsInBasketWithApples = fruitsInBasket + applesInBasket\n\
    \        val fruitsInBasketWithOranges = fruitsInBasket + orangesInBasket\n  \
    \      fruitsInBasketWithMango + fruitsInBasketWithApples + fruitsInBasketWithOranges",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val fruitsInBasket = fruits.toInt\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.toInt\n        val mangos = fruitsInBasket - applesAndOrangesInBasket\n\
    \        mangos.toLong", "        val apples = n.toInt\n        val oranges =\
    \ s.split(\"and\").map(_.toInt).sum\n        val fruits = s.split(\"and\").map(_.toLong).sum\n\
    \        val mango = fruits - apples - oranges\n        mango", "        val apples\
    \ = s.split(\" \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n\
    \        val fruits = s.split(\" \")(2).toLong\n        val mangos = n - apples\
    \ - oranges - fruits\n        mangos", "        val apples = s.split(\" \")(0).toLong\n\
    \        val oranges = s.split(\" \")(1).toLong\n        val fruits = s.split(\"\
    \ \")(2).toLong\n        val mangos = fruits - apples - oranges\n        fruits\
    \ - mangos", "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\"\
    \ \")(1)\n        val mangos = s.split(\" \")(2)\n        val applesAndOranges\
    \ = apples + \" \" + oranges\n        val applesAndMangos = apples + \" \" + mangos\n\
    \        val orangesAndMangos = oranges + \" \" + mangos\n        val applesAndOrangesAndMangos\
    \ = applesAndOranges + \" \" + mangos\n        val applesAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + \" \" + mangos + \" \" + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangos + \" \" + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangosAndOranges + \" \" + mangos + \" \" + oranges\n \
    \       val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos =\
    \ applesAndOrangesAndMangosAndOrangesAndMangos + \" \" + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOranges + \" \" + mangos +\
    \ \" \" + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOranges + \" \" + mangos +\
    \ \" \" + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOranges + \" \" + mangos +\
    \ \" \" + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOranges + \" \" + mangos +\
    \ \" \" + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = ", "        val apples = s.split(\" \").map(_.toInt)\n        val oranges\
    \ = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n\
    \        val applesAndOranges = apples ++ oranges\n        val applesAndOrangesAndMangos\
    \ = apples ++ oranges ++ mangos\n        val applesAndOrangesAndMangosCount =\
    \ applesAndOrangesAndMangos.length\n        val applesAndOrangesAndMangosCountSum\
    \ = applesAndOrangesAndMangosCount.reduce((a, b) => a + b)\n        val applesAndOrangesAndMangosCountSum2\
    \ = applesAndOrangesAndMangosCountSum * applesAndOrangesAndMangosCountSum\n  \
    \      val applesAndOrangesAndMangosCountSum3 = applesAndOrangesAndMangosCountSum2\
    \ * applesAndOrangesAndMangosCountSum\n        val applesAndOrangesAndMangosCountSum4\
    \ = applesAndOrangesAndMangosCountSum3 * applesAndOrangesAndMangosCountSum\n \
    \       val applesAndOrangesAndMangosCountSum5 = applesAndOrangesAndMangosCountSum4\
    \ * applesAndOrangesAndMangosCountSum\n        val applesAndOrangesAndMangosCountSum6\
    \ = applesAndOrangesAndMangosCountSum5 * applesAndOrangesAndMangosCountSum\n \
    \       val applesAndOrangesAndMangosCountSum7 = applesAndOrangesAndMangosCountSum6\
    \ * applesAndOrangesAndMangosCountSum\n        val applesAndOrangesAndMangosCountSum8\
    \ = applesAndOrangesAndMangosCountSum7 * applesAndOrangesAndMangosCountSum\n \
    \       val applesAndOrangesAndMangosCountSum9 = applesAndOrangesAndMangosCountSum8\
    \ * applesAndOrangesAndMangosCountSum\n        val applesAndOrangesAndMangosCountSum10\
    \ = applesAndOrangesAndMangosCountSum9 * applesAndOrangesAndMangosCountSum\n \
    \       val applesAndOrangesAndMangosCountSum11 = applesAndOrangesAndMangosCountSum10\
    \ * applesAndOrangesAndMangosCountSum\n        val applesAndOrangesAndMangosCountSum12\
    \ = applesAndOrangesAndMangosCountSum11 * applesAndOrangesAndMangosCount", " \
    \       val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = n - apples - oranges\n        val applesAndOranges\
    \ = apples + oranges\n        val applesAndOrangesAndMangos = applesAndOranges\
    \ + mangos\n        applesAndOrangesAndMangos", "        val apples = n.toInt\n\
    \        val oranges = s.split(\" \").last.toInt\n        val fruits = apples\
    \ + oranges\n        val mangos = fruits - apples - oranges\n        mangos",
  "        val apples = n.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = apples - oranges\n        val fruits = apples + oranges + mangos\n       \
    \ fruits", "        val apples = n.toInt\n        val oranges = s.toInt\n    \
    \    val mangos = apples - oranges\n        val fruits = apples + oranges + mangos\n\
    \        fruits", "        val apples = s.split(\" \").map(_.toInt)\n        val\
    \ oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples ++ oranges\n\
    \        val totalFruits = fruits.sum\n        val mangos = fruits.filter(_ %\
    \ 2 == 0)\n        val totalMangos = mangos.sum\n        val result = totalMangos\
    \ - totalFruits\n        result", "        val apples = n.toLong - s.toLong\n\
    \        val oranges = s.toLong - apples - n.toLong\n        val mangos = apples\
    \ - oranges\n        mangos", "        val apples = s.split(\" \")(0)\n      \
    \  val oranges = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n \
    \       val applesAndOranges = apples + \" \" + oranges\n        val fruitsInBasket\
    \ = fruits.split(\" \").length\n        val mangoFruits = fruitsInBasket - fruitsInBasket.toDouble\n\
    \        val applesAndOrangesInBasket = applesAndOranges.split(\" \").length\n\
    \        val applesAndOrangesInBasketInBasket = applesAndOrangesInBasket - applesAndOrangesInBasket.toDouble\n\
    \        val applesAndOrangesInBasketInBasketInBasket = applesAndOrangesInBasketInBasket\
    \ - applesAndOrangesInBasketInBasket.toDouble\n        val applesAndOrangesInBasketInBasketInBasketInBasket\
    \ = applesAndOrangesInBasketInBasketInBasket - applesAndOrangesInBasketInBasketInBasket.toDouble\n\
    \        val applesAndOrangesInBasketInBasketInBasketInBasketInBasket = applesAndOrangesInBasketInBasketInBasketInBasket\
    \ - applesAndOrangesInBasketInBasketInBasketInBasket.toDouble\n        val applesAndOrangesInBasketInBasketInBasketInBasketInBasketInBasket\
    \ = applesAndOrangesInBasketInBasketInBasketInBasketInBasket - applesAndOrangesInBasketInBasketInBasketInBasketInBasket.toDouble\n\
    \        val applesAndOrangesInBasketInBasketInBasketInBasketInBasketInBasketInBasket\
    \ = applesAndOrangesInBasketInBasketInBasketInBasketInBasketInBasket - applesAndOrangesInBasketInBasketInBasketInBasketInBasket.toDouble\n\
    \        val applesAndOrangesInBasketInBasketInBasketInBasketInBasketInBasketInBasketInBasket\
    \ = applesAndOrangesInBasketInBasketInBasketInBasketInBasketInBasketInBasket -\
    \ applesAndOrangesInBasketInBasketInBasketInBasketInBasket.toDouble\n        val\
    \ applesAndOrangesInBasketInBasketInBasketInBasket", "        val apples = n.toInt\n\
    \        val oranges = s.split(\" \")(1).split(\"and\")(1).split(\" \").last.toInt\n\
    \        val mango = apples - oranges\n        val fruits = apples + oranges +\
    \ mango\n        fruits", "        val apples = n.toInt\n        val oranges =\
    \ s.toInt\n        val mangos = apples - oranges\n        val fruits = apples\
    \ + oranges + mangos\n        fruits", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val basket = new mutable.HashMap[String, Long]()\n\
    \        basket.put(\"apples\", apples.sum)\n        basket.put(\"oranges\", oranges.sum)\n\
    \        basket.put(\"mangos\", mangos.sum)\n        basket.put(\"total\", apples.sum\
    \ + oranges.sum + mangos.sum)\n        basket.get(\"total\").toLong", "      \
    \  val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val fruits = apples ++ oranges ++ mangos\n        val appleCount = apples.sum\n\
    \        val orangeCount = oranges.sum\n        val mangoCount = mangos.sum\n\
    \        val appleFruits = apples.filter(_ > 0)\n        val orangeFruits = oranges.filter(_\
    \ > 0)\n        val mangoFruits = mangos.filter(_ > 0)\n        val appleFruitCount\
    \ = appleFruits.sum\n        val orangeFruitCount = orangeFruits.sum\n       \
    \ val mangoFruitCount = mangoFruits.sum\n        val appleFruitPercentage = (appleFruitCount\
    \ * 100) / appleCount\n        val orangeFruitPercentage = (orangeFruitCount *\
    \ 100) / orangeCount\n        val mangoFruitPercentage = (mangoFruitCount * 100)\
    \ / mangoCount\n        val appleFruitPercentagePercentage = (appleFruitPercentage\
    \ * 100) / appleFruitCount\n        val orangeFruitPercentagePercentage = (orangeFruitPercentage\
    \ * 100) / orangeFruitCount\n        val mangoFruitPercentagePercentage = (mangoFruitPercentage\
    \ * 100) / mangoFruitCount\n        val appleFruitPercentagePercentagePercentage\
    \ = (appleFruitPercentagePercentage * 100) / appleFruitFruitCount\n        val\
    \ orangeFruitPercentagePercentagePercentage = (orangeFruitPercentagePercentage\
    \ * 100) / orangeFruitFruitCount\n        val mangoFruitPercentagePercentagePercentage\
    \ = (mangoFruitPercentagePercentage * 100) / mangoFruitFruitCount\n        val\
    \ appleFruitPercentagePercentagePercentagePercentage = (appleFruitPercentagePercentagePercentage\
    \ * 100) / appleFruitFruitFruitCount\n        val orangeFruitPercentagePercentagePercentagePercentage\
    \ = (orangeFruitPercentagePercentagePercentage * 100) / orangeFruitFruitFruitCount\n\
    \        val mangoFruitPercentagePercentagePercentagePercentage = (mangoFruitPercentagePercentagePercentage\
    \ * 100) / mangoFruitFruitFruitCount\n        val appleFruitPercentagePercentagePercentagePercentagePercentage\
    \ = (appleFruit", "        val apples = n.toInt\n        val oranges = s.toInt\n\
    \        val fruits = apples + oranges\n        val mangos = fruits.toDouble /\
    \ 2\n        mangos.toLong", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = apples - oranges\n        val fruits = apples\
    \ + oranges + mangos\n        fruits", "        val apples = n.toInt\n       \
    \ val oranges = s.split(\" \").map(_.toInt).sum\n        val mangos = apples -\
    \ oranges\n        mangos", "        val apples = n.toLong - s.replaceAll(\"apples\"\
    , \"0\").length\n        val oranges = s.replaceAll(\"oranges\", \"0\").length\n\
    \        val mangos = s.replaceAll(\"mangos\", \"0\").length\n        val applesAndOranges\
    \ = apples + oranges\n        val applesAndMangos = apples + mangos\n        val\
    \ orangesAndMangos = oranges + mangos\n        val applesAndOrangesAndMangos =\
    \ applesAndOranges + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangos + orangesAndMangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndO", "  \
    \      val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges\n        val appleCount\
    \ = apples.sum\n        val orangeCount = oranges.sum\n        val mangoCount\
    \ = fruits.filter(_ > 0).sum\n        val mangoFruits = fruits.filter(_ == 0)\n\
    \        val totalFruits = fruits.sum\n        val totalMangoFruits = mangoFruits.sum\n\
    \        val totalMangoFruitsPerApple = totalMangoFruits / appleCount\n      \
    \  val totalMangoFruitsPerOrange = totalMangoFruits / orangeCount\n        val\
    \ totalMangoFruitsPerMango = totalMangoFruits / mangoCount\n        val totalMangoFruitsPerTotal\
    \ = totalMangoFruits / totalFruits\n        val totalMangoFruitsPerTotalPerApple\
    \ = totalMangoFruitsPerTotal / appleCount\n        val totalMangoFruitsPerTotalPerOrange\
    \ = totalMangoFruitsPerTotal / orangeCount\n        val totalMangoFruitsPerTotalPerMango\
    \ = totalMangoFruitsPerTotal / mangoCount\n        val totalMangoFruitsPerTotalPerTotal\
    \ = totalMangoFruitsPerTotal / totalFruits\n        val totalMangoFruitsPerTotalPerTotalPerApple\
    \ = totalMangoFruitsPerTotalPerTotal / appleCount\n        val totalMangoFruitsPerTotalPerTotalPerOrange\
    \ = totalMangoFruitsPerTotalPerTotal / orangeCount\n        val totalMangoFruitsPerTotalPerTotalPerMango\
    \ = totalMangoFruitsPerTotalPerTotal / mangoCount\n        val totalMangoFruitsPerTotalPerTotalPerTotal\
    \ = totalMangoFruitsPerTotalPerTotal / totalFruits\n        val totalMangoFruitsPerTotalPerTotalPerTotalPerApple\
    \ = totalMangoFruitsPerTotalPerTotalPerTotal / appleCount\n        val totalMangoFruitsPerTotalPerTotalPerTotalPerOrange\
    \ = totalMangoFruitsPerTotalPerTotalPerTotal ", "        val apples = s.split(\"\
    \ \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits = s.split(\"\
    \ \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n        val\
    \ fruitsInBasket = fruits.split(\"and\")\n        val fruitsInBasketCount = fruitsInBasket.length\n\
    \        val applesAndOrangesInBasket = applesAndOranges.split(\"and\")\n    \
    \    val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n   \
    \     val mangoFruits = fruitsInBasketCount - applesAndOrangesInBasketCount\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBas", "        val apples = s.split(\" \")(0)\n\
    \        val oranges = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n\
    \        val applesAndOranges = apples + \" \" + oranges\n        val fruitsInBasket\
    \ = fruits.split(\" \").length\n        val mangoFruits = fruitsInBasket - applesAndOranges.split(\"\
    \ \").length\n        fruitsInBasket - mangoFruits", "        val apples = n.toInt\n\
    \        val oranges = s.split(\"and\").map(_.toInt).sum\n        val mango =\
    \ apples - oranges\n        mango", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples\
    \ ++ oranges\n        val totalFruits = fruits.sum\n        val appleFruits =\
    \ apples.sum\n        val orangeFruits = oranges.sum\n        val mangoFruits\
    \ = fruits.filter(x => x % 2 == 1).sum\n        val totalMangoFruits = mangoFruits\
    \ - appleFruits - orangeFruits\n        val totalMangoFruitsPercentage = totalMangoFruits\
    \ / totalFruits\n        val totalMangoFruitsPercentageInt = totalMangoFruitsPercentage.toInt\n\
    \        val totalMangoFruitsPercentageIntInt = totalMangoFruitsPercentageInt\
    \ * n\n        val totalMangoFruitsPercentageIntIntInt = totalMangoFruitsPercentageIntInt\
    \ * n\n        val totalMangoFruitsPercentageIntIntIntInt = totalMangoFruitsPercentageIntIntInt\
    \ * n\n        val totalMangoFruitsPercentageIntIntIntIntInt = totalMangoFruitsPercentageIntIntIntInt\
    \ * n\n        val totalMangoFruitsPercentageIntIntIntIntIntInt = totalMangoFruitsPercentageIntIntIntIntInt\
    \ * n\n        val totalMangoFruitsPercentageIntIntIntIntIntIntInt = totalMangoFruitsPercentageIntIntIntIntIntInt\
    \ * n\n        val totalMangoFruitsPercentageIntIntIntIntIntIntIntInt = totalMangoFruitsPercentageIntIntIntIntIntIntIntInt\
    \ * n\n        val totalMangoFruitsPercentageIntIntIntIntIntIntIntIntIntInt =\
    \ totalMangoFruitsPercentageIntIntIntIntIntIntIntIntIntInt * n\n        val totalMangoFruitsPercentageIntIntIntIntIntIntIntIntIntIntIntInt\
    \ = totalMangoFruitsPercentageIntIntIntIntIntIntIntIntIntIntIntInt * n\n     \
    \   val totalMangoFruitsPercentageIntIntIntIntIntIntIntIntIntIntIntIntInt = totalMangoFruitsPercentageIntIntIntIntIntIntIntIntIntIntIntInt",
  "        val apples = n.toInt\n        val oranges = s.split(\" \").map(_.toInt).sum\n\
    \        val mangos = apples - oranges\n        mangos", "        val apples =\
    \ n.toInt\n        val oranges = s.toInt\n        val mangos = apples - oranges\n\
    \        val fruits = apples + oranges + mangos\n        fruits", "        val\
    \ apples = n.toInt\n        val oranges = apples - 1\n        val fruits = apples\
    \ + oranges + 1\n        val mangos = fruits - 1\n        fruits.toLong", "  \
    \      val apples = s.split(\"apples\")(1).trim\n        val oranges = s.split(\"\
    oranges\")(1).trim\n        val mangos = s.split(\"mango\")(1).trim\n        val\
    \ applesAndOranges = apples + oranges\n        val applesAndMangos = apples +\
    \ mangos\n        val orangesAndMangos = oranges + mangos\n        val applesAndOrangesAndMangos\
    \ = applesAndOranges + mangos\n        val applesAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + mangos + oranges + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos\n        val\
    \ applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges =\
    \ applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\
    \ + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\
    \ + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\
    \ + mangos + oranges + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + mang", "        val apples = s.split(\" \")(0)\n      \
    \  val oranges = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n \
    \       val applesAndOranges = apples + \" \" + oranges\n        val fruitsInBasket\
    \ = fruits.split(\"and\").map(_.trim).map(_.toInt)\n        val fruitsInBasketCount\
    \ = fruitsInBasket.length\n        val applesAndOrangesInBasket = applesAndOranges.split(\"\
    and\").map(_.trim).map(_.toInt)\n        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketSum = applesAndOrangesInBasket.sum\n    \
    \    val applesAndOrangesInBasketSumCount = applesAndOrangesInBasketSum.length\n\
    \        val applesAndOrangesInBasketSumCount2 = applesAndOrangesInBasketSumCount\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasketSumCount3 = applesAndOrangesInBasketSumCount2\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasketSumCount4 = applesAndOrangesInBasketSumCount3\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasketSumCount5 = applesAndOrangesInBasketSumCount4\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasketSumCount6 = applesAndOrangesInBasketSumCount5\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasketSumCount7 = applesAndOrangesInBasketSumCount6\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasketSumCount8 = applesAndOrangesInBasketSumCount7\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasketSumCount9 = applesAndOrangesInBasketSumCount8\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasketSumCount10 = applesAndOrangesInBasketSumCount9\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasketSumCount11 = applesAndOrangesInBasketSumCount10\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasketSumCount12 = applesAndOrangesInBasketSumCount11\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasketSumCount13 = applesAndOrangesInBasketSumCount12\
    \ * fruitsInBasketCount\n        val applesAndOrangesInBasket", "        val apples\
    \ = n.toInt\n        val oranges = s.toInt\n        val mangos = apples - oranges\n\
    \        val fruits = apples + oranges + mangos\n        fruits", "        val\
    \ apples = n.toLong - s.toLong\n        val oranges = s.toLong - apples.toLong\n\
    \        val mangos = apples.toLong - oranges.toLong\n        mangos", "     \
    \   val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\" \"\
    )(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n        val mango\
    \ = apples + oranges - fruits\n        mango", "        val apples = n.toInt\n\
    \        val oranges = s.split(\" \").map(_.toInt).sum\n        val fruits = s.split(\"\
    \ \").map(_.toInt).sum\n        val mango = fruits - apples - oranges\n      \
    \  mango", "        val apples = s.split(\" \").map(_.toInt)\n        val oranges\
    \ = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n\
    \        val basket = new mutable.HashMap[String, Long]()\n        basket.put(\"\
    apples\", apples.sum)\n        basket.put(\"oranges\", oranges.sum)\n        basket.put(\"\
    mangos\", mangos.sum)\n        basket.put(\"total\", apples.sum + oranges.sum\
    \ + mangos.sum)\n        basket.get(\"total\")", "        val apples = s.split(\"\
    apples and \").map(_.toInt)\n        val oranges = s.split(\"oranges and \").map(_.toInt)\n\
    \        val fruits = s.split(\"fruits\").map(_.toInt)\n        val applesAndOranges\
    \ = apples ++ oranges\n        val applesAndOrangesAndFruits = applesAndOranges\
    \ ++ fruits\n        val applesAndOrangesAndFruitsSum = applesAndOrangesAndFruits.sum\n\
    \        val applesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruits = applesAndOrangesAndFruitsSum\
    \ - applesAndOrangesAndFruits.sum\n        val applesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruits\
    \ = applesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruits - applesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruits.sum\n\
    \        val applesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruits\
    \ = applesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruits\
    \ - applesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruits.sum\n\
    \        val applesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFruitsSumOfApplesAndOrangesAndFru",
  "        val apples = s.split(\"apples and \")(0).trim\n        val oranges = s.split(\"\
    oranges and \")(0).trim\n        val mangos = s.split(\"mango and \")(0).trim\n\
    \        val applesAndOranges = apples + oranges\n        val applesAndMangos\
    \ = apples + mangos\n        val orangesAndMangos = oranges + mangos\n       \
    \ val applesAndOrangesAndMangos = applesAndOranges + mangos\n        val applesAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + mangos + oranges + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos\n        val\
    \ applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges =\
    \ applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\
    \ + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\
    \ + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOranges + mangos + oranges + mangos + oranges + mangos + oranges\
    \ + mangos + oranges + mangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOranges + mang", "        val apples = s.split(\" \")(0)\n      \
    \  val oranges = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n \
    \       val applesAndOranges = apples + \" \" + oranges\n        val fruitsInBasket\
    \ = fruits.split(\"and\").map(_.trim).map(_.toInt)\n        val mangoFruits =\
    \ fruitsInBasket.filter(_ % 2 == 1).length\n        fruitsInBasket.filter(_ %\
    \ 2 == 0).length", "        val apples = n.toLong - s.split(\" \").map(_.toLong).sum\n\
    \        val oranges = s.split(\" \").map(_.toLong).sum\n        val mangos =\
    \ apples - oranges\n        mangos", "        val apples = n.toInt\n        val\
    \ oranges = s.toInt\n        val mangos = apples - oranges\n        mangos", " \
    \       val apples = n.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = apples - oranges\n        val basket = s.split(\" \").map(_.toInt)\n     \
    \   val fruits = basket.filter(_ > 0)\n        val count = fruits.count(_ == 1)\n\
    \        val mangoCount = fruits.count(_ == 0)\n        mangos", "        val\
    \ apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n\
    \        val fruits = s.split(\" \")(2).toLong\n        val mangos = apples +\
    \ oranges - fruits\n        mangos", "        val apples = n.toInt\n        val\
    \ oranges = s.toInt\n        val mangos = apples - oranges\n        val fruits\
    \ = apples + oranges + mangos\n        fruits", "        val apples = s.split(\"\
    \ \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n      \
    \  val mangos = s.split(\" \").map(_.toInt)\n        val basket = new mutable.HashMap[String,\
    \ Int]()\n        basket.put(\"apples\", apples.sum)\n        basket.put(\"oranges\"\
    , oranges.sum)\n        basket.put(\"mangos\", mangos.sum)\n        val totalFruits\
    \ = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsPerApple = apples.sum\
    \ / totalFruits\n        val totalFruitsPerOrange = oranges.sum / totalFruits\n\
    \        val totalFruitsPerMango = mangos.sum / totalFruits\n        val totalFruitsPerAppleAndOrange\
    \ = apples.sum + oranges.sum\n        val totalFruitsPerAppleAndOrangeAndMango\
    \ = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsPerAppleAndOrangeAndMangoAndBasket\
    \ = apples.sum + oranges.sum + mangos.sum + basket.size\n        val totalFruitsPerAppleAndOrangeAndMangoAndBasketAndTotalFruits\
    \ = apples.sum + oranges.sum + mangos.sum + basket.size + totalFruits\n      \
    \  val totalFruitsPerAppleAndOrangeAndMangoAndBasketAndTotalFruitsPerApple = apples.sum\
    \ + oranges.sum + mangos.sum + basket.size + totalFruitsPerApple\n        val\
    \ totalFruitsPerAppleAndOrangeAndMangoAndBasketAndTotalFruitsPerOrange = apples.sum\
    \ + oranges.sum + mangos.sum + basket.size + totalFruitsPerOrange\n        val\
    \ totalFruitsPerAppleAndOrangeAndMangoAndBasketAndTotalFruitsPerMango = apples.sum\
    \ + oranges.sum + mangos.sum + basket.size + totalFruitsPerMango\n        val\
    \ totalFruitsPerAppleAndOrangeAndMangoAndBasketAndTotalFruitsPerAppleAndOrange\
    \ = apples.sum + oranges.sum + mangos.sum + basket.size + totalFruitsPerAppleAndOrange\n\
    \        val totalFruitsPerAppleAndO", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges ++ mangos\n       \
    \ val totalFruits = fruits.sum\n        val totalApples = apples.sum\n       \
    \ val totalOranges = oranges.sum\n        val totalMangos = mangos.sum\n     \
    \   val totalFruitsPerApple = fruits.map(x => x/totalApples).sum\n        val\
    \ totalFruitsPerOrange = fruits.map(x => x/totalOranges).sum\n        val totalFruitsPerMango\
    \ = fruits.map(x => x/totalMangos).sum\n        val totalFruitsPerAppleAndOrange\
    \ = fruits.map(x => x/totalApples + x/totalOranges).sum\n        val totalFruitsPerMangoAndOrange\
    \ = fruits.map(x => x/totalMangos + x/totalOranges).sum\n        val totalFruitsPerAppleAndOrangeAndMango\
    \ = fruits.map(x => x/totalApples + x/totalOranges + x/totalMangos).sum\n    \
    \    val totalFruitsPerMangoAndOrangeAndMango = fruits.map(x => x/totalMangos\
    \ + x/totalOranges + x/totalMangos).sum\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotal\
    \ = fruits.map(x => x/totalApples + x/totalOranges + x/totalMangos + x/totalFruits).sum\n\
    \        val totalFruitsPerMangoAndOrangeAndMangoAndTotal = fruits.map(x => x/totalMangos\
    \ + x/totalOranges + x/totalMangos + x/totalFruits).sum\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalAndTotal\
    \ = fruits.map(x => x/totalApples + x/totalOranges + x/totalMangos + x/totalFruits\
    \ + x/totalFruits).sum\n        val totalFruitsPerMangoAndOrangeAndMangoAndTotalAndTotal\
    \ = fruits.map(x => x/totalMangos + x/totalOranges + x/totalMangos + x/totalFruits\
    \ + x/totalFruits).sum\n        val totalFruitsPerAppleAnd", "        val apples\
    \ = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits\
    \ = s.split(\" \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n\
    \        val applesAndOrangesArray = applesAndOranges.split(\" \")\n        val\
    \ fruitArray = fruits.split(\" \")\n        val applesAndOrangesArrayLength =\
    \ applesAndOrangesArray.length\n        val fruitArrayLength = fruitArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val fruitArrayLength = fruitArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val fruitArrayLength = fruitArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val fruitArrayLength = fruitArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val fruitArrayLength = fruitArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val fruitArrayLength = fruitArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val fruitArrayLength = fruitArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val fruitArrayLength = fruitArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val fruitArrayLength = fruitArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val fruitArrayLength = fruitArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val fruitArrayLength = fruitArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val fruitArrayLength = fruitArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val fruitArrayLength = fruitArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val fruitArrayLength = fruitArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val fruitArrayLength = fruitArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val fruitArrayLength = fruitArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val fruitArrayLength = fruitArray.length\n\
    \        val applesAndOrangesArrayLength = apple", "        val apples = n.toInt\n\
    \        val oranges = s.split(\"and\").map(_.toInt).sum\n        val mangos =\
    \ apples - oranges\n        mangos", "        val apples = s.split(\"apples and\
    \ \")(1).trim\n        val oranges = s.split(\"oranges and \")(1).trim\n     \
    \   val mangos = s.split(\"mango and \")(1).trim\n        val applesAndOranges\
    \ = apples + oranges\n        val applesAndMangos = apples + mangos\n        val\
    \ orangesAndMangos = oranges + mangos\n        val applesAndOrangesAndMangos =\
    \ applesAndOranges + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangos + orangesAndMangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndO",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val appleAndOranges = apples\
    \ + \" \" + oranges\n        val fruitAndApples = fruits + \" \" + apples\n  \
    \      val fruitAndOranges = fruits + \" \" + oranges\n        val appleAndOrangesAndMango\
    \ = appleAndOranges + \" and \" + fruitAndApples\n        val fruitAndApplesAndMango\
    \ = fruitAndApples + \" and \" + fruitAndOranges\n        val appleAndOrangesAndMangoAndMango\
    \ = appleAndOrangesAndMango + \" and \" + fruitAndApplesAndMango\n        val\
    \ fruitAndApplesAndMangoAndMango = fruitAndApplesAndMango + \" and \" + fruitAndOrangesAndMango\n\
    \        val appleAndOrangesAndMangoAndMangoAndMango = appleAndOrangesAndMangoAndMango\
    \ + \" and \" + fruitAndApplesAndMangoAndMango\n        val fruitAndApplesAndMangoAndMangoAndMango\
    \ = fruitAndApplesAndMangoAndMango + \" and \" + fruitAndOrangesAndMangoAndMango\n\
    \        val appleAndOrangesAndMangoAndMangoAndMangoAndMango = appleAndOrangesAndMangoAndMangoAndMango\
    \ + \" and \" + fruitAndApplesAndMangoAndMangoAndMango\n        val fruitAndApplesAndMangoAndMangoAndMangoAndMango\
    \ = fruitAndApplesAndMangoAndMangoAndMango + \" and \" + fruitAndOrangesAndMangoAndMangoAndMango\n\
    \        val appleAndOrangesAndMangoAndMangoAndMangoAndMangoAndMango = appleAndOrangesAndMangoAndMangoAndMangoAndMango\
    \ + \" and \" + fruitAndApplesAndMangoAndMangoAndMangoAndMango\n        val fruitAndApplesAndMangoAndMangoAndMangoAndMangoAndMango\
    \ = fruitAndApplesAndMangoAndMangoAndMangoAndMango + \" and \" + fruitAndOrangesAndMangoAndMangoAndMangoAndMango\n\
    \        val apple", "        val apples = n.toInt\n        val oranges = s.toInt\n\
    \        val mangos = apples - oranges\n        val basket = new mutable.HashMap[String,\
    \ Long]()\n        basket.put(\"apples\", apples)\n        basket.put(\"oranges\"\
    , oranges)\n        basket.put(\"mangos\", mangos)\n        basket.size", "  \
    \      val apples = n.toInt\n        val oranges = s.split(\" \").last.toInt\n\
    \        val fruits = s.split(\" \").dropRight(1).mkString(\"\")\n        val\
    \ mangos = apples - oranges\n        fruits match {\n            case \"apples\"\
    \ => apples \n            case \"oranges\" => oranges\n            case \"mangos\"\
    \ => mangos\n            case _ => 0\n        }", "        val apples = n.toInt\n\
    \        val oranges = s.toInt\n        val mangos = apples - oranges\n      \
    \  mangos", "        val apples = n.toInt\n        val oranges = s.toInt\n   \
    \     val mangos = apples - oranges\n        val basket = s.split(\" \")\n   \
    \     val appleFruits = basket.filter(_ == \"apples\")\n        val orangeFruits\
    \ = basket.filter(_ == \"oranges\")\n        val mangoFruits = basket.filter(_\
    \ == \"mango\")\n        val appleFruitsCount = appleFruits.count\n        val\
    \ orangeFruitsCount = orangeFruits.count\n        val mangoFruitsCount = mangoFruits.count\n\
    \        val totalFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = appleFruitsCount + orangeFruitsCount + mangoFruitsCount\n\
    \        val mangoFruitsCount = ", "        val apples = n.toInt\n        val\
    \ oranges = apples - 1\n        val mangos = oranges - 1\n        val fruits =\
    \ s.split(\" \")\n        val appleFruits = fruits.filter(_.contains(\"apple\"\
    )).map(_.toInt)\n        val orangeFruits = fruits.filter(_.contains(\"orange\"\
    )).map(_.toInt)\n        val mangoFruits = fruits.filter(_.contains(\"mango\"\
    )).map(_.toInt)\n        val appleFruitCount = appleFruits.sum\n        val orangeFruitCount\
    \ = orangeFruits.sum\n        val mangoFruitCount = mangoFruits.sum\n        val\
    \ totalFruitCount = appleFruitCount + orangeFruitCount + mangoFruitCount\n   \
    \     val mangoFruitCount = mangoFruits.sum\n        val totalFruitCount = appleFruitCount\
    \ + orangeFruitCount + mangoFruitCount\n        val mangoFruitCount = mangoFruits.sum\n\
    \        val totalFruitCount = appleFruitCount + orangeFruitCount + mangoFruitCount\n\
    \        val mangoFruitCount = mangoFruits.sum\n        val totalFruitCount =\
    \ appleFruitCount + orangeFruitCount + mangoFruitCount\n        val mangoFruitCount\
    \ = mangoFruits.sum\n        val totalFruitCount = appleFruitCount + orangeFruitCount\
    \ + mangoFruitCount\n        val mangoFruitCount = mangoFruits.sum\n        val\
    \ totalFruitCount = appleFruitCount + orangeFruitCount + mangoFruitCount\n   \
    \     val mangoFruitCount = mangoFruits.sum\n        val totalFruitCount = appleFruitCount\
    \ + orangeFruitCount + mangoFruitCount\n        val mangoFruitCount = mangoFruits.sum\n\
    \        val totalFruitCount = appleFruitCount + orangeFruitCount + mangoFruitCount\n\
    \        val mangoFruitCount = mangoFruits.sum\n        val totalFruitCount =\
    \ appleFruitCount + orangeFruitCount + mangoFruitCount\n        val mangoFruit",
  "        val apples = n.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = apples - oranges\n        val appleAndOranges = apples + oranges\n       \
    \ val appleAndMangos = apples + mangos\n        val appleAndOrangesAndMangos =\
    \ appleAndOranges + mangos\n        val appleAndOrangesAndMangosAndApples = appleAndOrangesAndMangos\
    \ + apples\n        val appleAndOrangesAndMangosAndApplesAndOranges = appleAndOrangesAndMangosAndApples\
    \ + oranges\n        val appleAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = appleAndOrangesAndMangosAndApples + mangos\n        val appleAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = appleAndOrangesAndMangosAndApples + apples + oranges\n        val appleAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges\
    \ = appleAndOrangesAndMangosAndApplesAndOranges + mangos\n        val appleAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = appleAndOrangesAndMangosAndApplesAndOrangesAndMangos + apples\n        val\
    \ appleAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = appleAndOrangesAndMangosAndApplesAndOrangesAndMangos + oranges\n        val\
    \ appleAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges\
    \ = appleAndOrangesAndMangosAndApplesAndOrangesAndMangos + mangos\n        val\
    \ appleAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = appleAndOrangesAndMangosAndApplesAndOrangesAndMangos + apples + oranges\n\
    \        val appleAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = appleAndOrangesAndMangosAndApplesAndOrangesAndMang", "        val apples =\
    \ n.toInt\n        val oranges = s.split(\" \").map(_.toInt).sum\n        val\
    \ mangos = apples - oranges\n        mangos", "        val apples = s.split(\"\
    \ \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits = s.split(\"\
    \ \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n        val\
    \ fruitsInBasket = fruits.toInt\n        val applesAndOrangesInBasket = applesAndOranges.toInt\n\
    \        val mangoFruits = fruitsInBasket - applesAndOrangesInBasket\n       \
    \ mangoFruits", "        val apples = s.split(\" \").map(_.toInt)\n        val\
    \ oranges = s.split(\" \").map(_.toInt)\n        val mangos = n - apples - oranges\n\
    \        val applesAndOranges = apples + oranges\n        val applesAndOrangesAndMangos\
    \ = applesAndOranges + mangos\n        applesAndOrangesAndMangos", "        val\
    \ apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n      \
    \  val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples + \"\
    \ \" + oranges\n        val fruitsInBasket = fruits.split(\"and\").map(_.trim).map(_.toInt)\n\
    \        val fruitsInBasketCount = fruitsInBasket.size\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.split(\"and\").map(_.trim).map(_.toInt)\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.size\n        val mangoFruitsInBasket = fruitsInBasket.filter(_\
    \ % 2 == 0).sum\n        val mangoFruitsInBasketCount = fruitsInBasketCount -\
    \ mangoFruitsInBasket\n        val mangoFruitsInBasketPercentage = (mangoFruitsInBasket\
    \ / fruitsInBasketCount) * 100\n        val mangoFruitsInBasketPercentageInBasket\
    \ = mangoFruitsInBasketPercentage.toInt\n        val mangoFruitsInBasketPercentageInBasketInBasket\
    \ = fruitsInBasketCount * mangoFruitsInBasketPercentageInBasket\n        val mangoFruitsInBasketPercentageInBasketInBasket\
    \ = fruitsInBasketCount * mangoFruitsInBasketPercentageInBasketInBasket\n    \
    \    val mangoFruitsInBasketPercentageInBasketInBasketInBasket = fruitsInBasketCount\
    \ * mangoFruitsInBasketPercentageInBasketInBasketInBasket\n        val mangoFruitsInBasketPercentageInBasketInBasketInBasketInBasket\
    \ = fruitsInBasketCount * mangoFruitsInBasketPercentageInBasketInBasketInBasketInBasket\n\
    \        val mangoFruitsInBasketPercentageInBasketInBasketInBasketInBasketInBasket\
    \ = fruitsInBasketCount * mangoFruitsInBasketPercentageInBasketInBasketInBasketInBasketInBasket\n\
    \        val mangoFruitsInBasketPercentageInBasketInBasketInBasketInBasketInBasketInBasket\
    \ = fruitsInBasketCount * mangoFruitsInBasketPercentageInBasketInBasketInBasket",
  "        val apples = n.toInt\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples + oranges\n        val mangos = fruits.filter(_ %\
    \ 2 == 0)\n        fruits.filter(_ % 2 != 0)", "        val apples = s.split(\"\
    \ \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits = s.split(\"\
    \ \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n        val\
    \ fruitsInBasket = fruits.split(\"and\").map(_.trim).map(_.toInt)\n        val\
    \ fruitsInBasketCount = fruitsInBasket.size\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.split(\"and\").map(_.trim).map(_.toInt)\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.size\n        val applesAndOrangesInBasketSum = applesAndOrangesInBasket.sum\n\
    \        val applesAndOrangesInBasketProduct = applesAndOrangesInBasket.product\n\
    \        val applesAndOrangesInBasketProductSum = applesAndOrangesInBasketProduct.sum\n\
    \        val applesAndOrangesInBasketProductProduct = applesAndOrangesInBasketProduct.product\n\
    \        val applesAndOrangesInBasketProductProductSum = applesAndOrangesInBasketProductProduct.sum\n\
    \        val applesAndOrangesInBasketProductProductProduct = applesAndOrangesInBasketProductProduct.product\n\
    \        val applesAndOrangesInBasketProductProductProductSum = applesAndOrangesInBasketProductProductSum.product\n\
    \        val applesAndOrangesInBasketProductProductProductSum = applesAndOrangesInBasketProductProductSum.product\n\
    \        val applesAndOrangesInBasketProductProductProductProduct = applesAndOrangesInBasketProductProductProduct.product\n\
    \        val applesAndOrangesInBasketProductProductProductProductSum = applesAndOrangesInBasketProductProductProductSum.product\n\
    \        val applesAndOrangesInBasketProductProductProductProductProduct = applesAndOrangesInBasketProductProductProductProduct.product\n\
    \        val applesAndOrangesInBasketProductProductProductProductProductSum =\
    \ applesAndOrangesInBasketProductProductProductProduct.product\n        val applesAndOrangesInBasketProductProductProductProductProductProduct\
    \ = applesAndOrangesInBasketProductProductProductProductSum.product\n        val\
    \ applesAndOrangesInBasketProductProductProductProductProductProductSum = applesAndOrangesInBasketProductProductProductProductProduct.product\n\
    \        val applesAndOrangesInBasketProductProductProductProductProductProduct\
    \ = applesAndOrangesInBasketProductProductProductProductProductSum.product", " \
    \       val apples = n.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = apples - oranges\n        val fruits = apples + oranges + mangos\n       \
    \ fruits", "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\"\
    \ \")(1)\n        val fruits = s.split(\" \")(2)\n        val applesAndOranges\
    \ = apples + \" \" + oranges\n        val fruitsAndOranges = fruits + \" \" +\
    \ oranges\n        val fruitsAndApples = fruits + \" \" + apples\n        val\
    \ applesAndMango = apples + \" \" + mango\n        val fruitsAndMango = fruits\
    \ + \" \" + mango\n        val fruitsAndMangoAndApples = fruits + \" \" + mango\
    \ + \" \" + apples\n        val applesAndMangoAndOranges = apples + \" \" + mango\
    \ + \" \" + oranges\n        val fruitsAndMangoAndOranges = fruits + \" \" + mango\
    \ + \" \" + oranges\n        val fruitsAndMangoAndOrangesAndApples = fruits +\
    \ \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAnd",
  "        val apples = n.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangos = fruits - apples - oranges\n       \
    \ mangos", "        val apples = s.split(\" \").map(_.toInt)\n        val oranges\
    \ = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n\
    \        val applesAndOranges = apples ++ oranges\n        val applesAndMangos\
    \ = apples ++ mangos\n        val orangesAndMangos = oranges ++ mangos\n     \
    \   val applesAndOrangesAndMangos = applesAndOranges ++ applesAndMangos\n    \
    \    val applesAndOrangesAndMangosCount = applesAndOrangesAndMangos.length\n \
    \       val applesAndOrangesAndMangosSum = applesAndOrangesAndMangos.sum\n   \
    \     val applesAndOrangesAndMangosAverage = applesAndOrangesAndMangosSum / applesAndOrangesAndMangosCount\n\
    \        val applesAndOrangesAndMangosVariance = applesAndOrangesAndMangosSum\
    \ / applesAndOrangesAndMangosCount * (applesAndOrangesAndMangosSum - applesAndOrangesAndMangosAverage)\n\
    \        val applesAndOrangesAndMangosStandardDeviation = math.sqrt(applesAndOrangesAndMangosVariance)\n\
    \        val applesAndOrangesAndMangosStandardError = applesAndOrangesAndMangosStandardDeviation\
    \ / math.sqrt(applesAndOrangesAndMangosCount)\n        val applesAndOrangesAndMangosStandardErrorPercentage\
    \ = applesAndOrangesAndMangosStandardError / applesAndOrangesAndMangosAverage\n\
    \        val applesAndOrangesAndMangosStandardErrorPercentageInPercentage = applesAndOrangesAndMangosStandardErrorPercentage\
    \ * 100\n        val applesAndOrangesAndMangosStandardErrorPercentageInPercentageInPercentage\
    \ = applesAndOrangesAndMangosStandardErrorPercentageInPercentage * 100\n     \
    \   val applesAndOrangesAndMangosStandardErrorPercentageInPercentageInPercentageInPercentage\
    \ = applesAndOrangesAndMangosStandardErrorPercentageInPercentageInPercentage *\
    \ 100\n        val applesAndOrangesAndMangosStandardErrorPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = applesAndOrangesAndMangosStandardErrorPercentageInPercentageInPercentageInPercentage\
    \ * 100\n        val applesAndOrangesAndMangosStandardErrorPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = applesAndOrangesAndMang", "        val apples = n.toLong - s.split(\" \").filter(_\
    \ != \"\").length\n        val oranges = s.split(\" \").filter(_ != \"\").length\n\
    \        val mango = apples - oranges\n        val basket = s.split(\" \").filter(_\
    \ != \"\").mkString(\"\")\n        basket.toLong - mango", "        val apples\
    \ = n.toInt\n        val oranges = s.split(\" \").map(_.toInt).sum\n        val\
    \ mangos = apples - oranges\n        mangos", "        val apples = s.split(\"\
    \ \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n        val fruits\
    \ = s.split(\" \")(2).toLong\n        val mangos = n - apples - oranges - fruits\n\
    \        mangos", "        val apples = n.toLong - s.toLong\n        val oranges\
    \ = s.toLong\n        val mangos = apples - oranges\n        mangos", "      \
    \  val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val fruits = apples ++ oranges ++ mangos\n        val appleCount = apples.sum\n\
    \        val orangeCount = oranges.sum\n        val mangoCount = mangos.sum\n\
    \        val fruitCount = fruits.sum\n        val appleSum = apples.sum\n    \
    \    val orangeSum = oranges.sum\n        val mangoSum = mangos.sum\n        val\
    \ fruitSum = fruits.sum\n        val appleSum = apples.sum\n        val orangeSum\
    \ = oranges.sum\n        val mangoSum = mangos.sum\n        val fruitSum = fruits.sum\n\
    \        val appleSum = apples.sum\n        val orangeSum = oranges.sum\n    \
    \    val mangoSum = mangos.sum\n        val fruitSum = fruits.sum\n        val\
    \ appleSum = apples.sum\n        val orangeSum = oranges.sum\n        val mangoSum\
    \ = mangos.sum\n        val fruitSum = fruits.sum\n        val appleSum = apples.sum\n\
    \        val orangeSum = oranges.sum\n        val mangoSum = mangos.sum\n    \
    \    val fruitSum = fruits.sum\n        val appleSum = apples.sum\n        val\
    \ orangeSum = oranges.sum\n        val mangoSum = mangos.sum\n        val fruitSum\
    \ = fruits.sum\n        val appleSum = apples.sum\n        val orangeSum = oranges.sum\n\
    \        val mangoSum = mangos.sum\n        val fruitSum = fruits.sum\n      \
    \  val appleSum = apples.sum\n        val orangeSum = oranges.sum\n        val\
    \ mangoSum = mangos.sum\n        val fruitSum = fruits.sum\n        val appleSum\
    \ = apples.sum\n        val orangeSum = oranges.sum\n        val mangoSum = mangos.sum\n\
    \        val fruitSum = fruits.sum\n        val appleSum = apples.sum\n      \
    \  val orangeSum = oranges.sum\n        val mangoSum = mangos.sum\n        val\
    \ fruitSum = fruits.sum\n        val appleSum = apples.sum\n        val orangeSum\
    \ = oranges.sum\n        val mangoSum = mangos.sum\n        val fruitSum = fruits.sum\n\
    \        val appleSum = apples.sum\n        val orangeSum = oranges.sum\n", " \
    \       val apples = n.toInt\n        val oranges = apples - 1\n        val fruits\
    \ = s.split(\" \")\n        val appleFruits = fruits.filter(_ == \"apples\")\n\
    \        val orangeFruits = fruits.filter(_ == \"oranges\")\n        val mangoFruits\
    \ = fruits.filter(_ == \"mango\")\n        val appleFruitCount = appleFruits.toSet.size\
    \ // appleFruits.toSet is a Set[String]\n        val orangeFruitCount = orangeFruits.toSet.size\
    \ // orangeFruits.toSet is a Set[String]\n        val mangoFruitCount = mangoFruits.toSet.size\
    \ // mangoFruits.toSet is a Set[String]\n        val appleFruitCount = appleFruits.toSet.size\
    \ // appleFruits.toSet is a Set[String]\n        val orangeFruitCount = orangeFruits.toSet.size\
    \ // orangeFruits.toSet is a Set[String]\n        val mangoFruitCount = mangoFruits.toSet.size\
    \ // mangoFruits.toSet is a Set[String]\n        val appleFruitCount = appleFruits.toSet.size\
    \ // appleFruits.toSet is a Set[String]\n        val orangeFruitCount = orangeFruits.toSet.size\
    \ // orangeFruits.toSet is a Set[String]\n        val mangoFruitCount = mangoFruits.toSet.size\
    \ // mangoFruits.toSet is a Set[String]\n        val appleFruitCount = appleFruits.toSet.size\
    \ // appleFruits.toSet is a Set[String]\n        val orangeFruitCount = orangeFruits.toSet.size\
    \ // orangeFruits.toSet is a Set[String]\n        val mangoFruitCount = mangoFruits.toSet.size\
    \ // mangoFruits.toSet is a Set[String]\n        val appleFruitCount = appleFruits.toSet.size\
    \ // appleFruits.toSet is a Set[String]\n        val orangeFruitCount = orangeFruits.toSet.size\
    \ // orangeFruits.toSet is a Set[String]\n        val mangoFruitCount = mangoFruits.toSet.size\
    \ // mangoFruits.", "        val apples = n.toInt\n        val oranges = apples\
    \ - 1\n        val mangos = oranges - 1\n        val fruits = s.split(\" \")\n\
    \        val appleFruits = fruits.filter(_ == \"apples\")\n        val orangeFruits\
    \ = fruits.filter(_ == \"oranges\")\n        val mangoFruits = fruits.filter(_\
    \ == \"mango\")\n        val appleFruitCount = appleFruits.toSet.size \n     \
    \   val orangeFruitCount = orangeFruits.toSet.size \n        val mangoFruitCount\
    \ = mangoFruits.toSet.size \n        val totalFruitCount = appleFruitCount + orangeFruitCount\
    \ + mangoFruitCount\n        val mangoFruitCount = mangoFruits.toSet.size \n \
    \       val totalFruitCount = appleFruitCount + orangeFruitCount + mangoFruitCount\n\
    \        val mangoFruitCount = mangoFruits.toSet.size \n        val totalFruitCount\
    \ = appleFruitCount + orangeFruitCount + mangoFruitCount\n        val mangoFruitCount\
    \ = mangoFruits.toSet.size \n        val totalFruitCount = appleFruitCount + orangeFruitCount\
    \ + mangoFruitCount\n        val mangoFruitCount = mangoFruits.toSet.size \n \
    \       val totalFruitCount = appleFruitCount + orangeFruitCount + mangoFruitCount\n\
    \        val mangoFruitCount = mangoFruits.toSet.size \n        val totalFruitCount\
    \ = appleFruitCount + orangeFruitCount + mangoFruitCount\n        val mangoFruitCount\
    \ = mangoFruits.toSet.size \n        val totalFruitCount = appleFruitCount + orangeFruitCount\
    \ + mangoFruitCount\n        val mangoFruitCount = mangoFruits.toSet.size \n \
    \       val totalFruitCount = appleFruitCount + orangeFruitCount + mangoFruitCount\n\
    \        val mangoFruitCount = mangoFruits.toSet.size \n        val totalFruitCount\
    \ = appleFruitCount + orangeFruitCount + mangoFruitCount\n        val mangoFru",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges\n        val mangos\
    \ = fruits.filter(x => x % 2 == 0)\n        val count = mangos.length\n      \
    \  val totalMangos = mangos.sum\n        val totalFruits = fruits.sum\n      \
    \  val totalMangoFruits = totalMangos * totalFruits\n        val totalMangoFruitsPerApple\
    \ = totalMangoFruits / apples.sum\n        val totalMangoFruitsPerOrange = totalMangoFruits\
    \ / oranges.sum\n        val totalMangoFruitsPerMango = totalMangoFruits / mangos.sum\n\
    \        val totalMangoFruitsPerAppleAndOrange = totalMangoFruitsPerApple * totalMangoFruitsPerOrange\n\
    \        val totalMangoFruitsPerAppleAndMango = totalMangoFruitsPerApple * totalMangoFruitsPerMango\n\
    \        val totalMangoFruitsPerOrangeAndMango = totalMangoFruitsPerOrange * totalMangoFruitsPerMango\n\
    \        val totalMangoFruitsPerAppleAndOrangeAndMango = totalMangoFruitsPerAppleAndOrange\
    \ * totalMangoFruitsPerMango\n        val totalMangoFruitsPerOrangeAndAppleAndMango\
    \ = totalMangoFruitsPerOrangeAndAppleAndMango * totalMangoFruitsPerMango\n   \
    \     val totalMangoFruitsPerAppleAndOrangeAndMangoAndCount = totalMangoFruitsPerAppleAndOrangeAndMango\
    \ * count\n        totalMangoFruitsPerAppleAndOrangeAndMangoAndCount", "     \
    \   val apples = n.toLong - s.toLong\n        val oranges = s.toLong - apples.toLong\n\
    \        val mangos = apples - oranges\n        mangos", "        val apples =\
    \ s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits\
    \ = s.split(\" \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n\
    \        val fruitsInBasket = fruits.split(\" \").length\n        val mangoFruits\
    \ = fruitsInBasket - fruitsInBasket.toLong\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.split(\" \").length\n        val mangoFruitsInBasket = mangoFruits.toLong\n\
    \        val applesAndOrangesInBasketAndFruits = applesAndOrangesInBasket + fruitsInBasket\n\
    \        val mangoFruitsInBasketAndFruits = mangoFruitsInBasket + fruitsInBasket\n\
    \        val applesAndOrangesInBasketAndFruitsAndMangoFruits = applesAndOrangesInBasketAndFruits\
    \ + mangoFruits\n        val mangoFruitsInBasketAndFruitsAndMangoFruits = mangoFruitsInBasketAndFruits\
    \ + mangoFruits\n        val applesAndOrangesInBasketAndFruitsAndMangoFruitsAndMangoFruits\
    \ = applesAndOrangesInBasketAndFruitsAndMangoFruits\n        val mangoFruitsInBasketAndFruitsAndMangoFruitsAndMangoFruits\
    \ = mangoFruitsInBasketAndFruitsAndMangoFruits\n        val mangoFruitsInBasketAndFruitsAndMangoFruitsAndMangoFruitsAndMangoFruits\
    \ = mangoFruitsInBasketAndFruitsAndMangoFruitsAndMangoFruits\n        val mangoFruitsInBasketAndFruitsAndMangoFruitsAndMangoFruitsAndMangoFruitsAndMangoFruits\
    \ = mangoFruitsInBasketAndFruitsAndMangoFruitsAndMangoFruitsAndMangoFruits\n \
    \       val mangoFruitsInBasketAndFruitsAndMangoFruitsAndMangoFruitsAndM", " \
    \       val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val appleCount = apples.sum\n        val orangeCount = oranges.sum\n       \
    \ val mangoCount = mangos.sum\n        val totalCount = appleCount + orangeCount\
    \ + mangoCount\n        val applePercentage = apples.sum / totalCount * 100\n\
    \        val orangePercentage = oranges.sum / totalCount * 100\n        val mangoPercentage\
    \ = mangos.sum / totalCount * 100\n        val appleAndOrangePercentage = apples.sum\
    \ + oranges.sum / totalCount * 100\n        val mangoAndApplePercentage = mangos.sum\
    \ + apples.sum / totalCount * 100\n        val appleAndOrangeAndMangoPercentage\
    \ = appleAndOrangePercentage + mangoAndApplePercentage\n        val appleAndOrangeAndMangoPercentagePercentage\
    \ = appleAndOrangeAndMangoPercentage / totalCount * 100\n        val appleAndOrangeAndMangoPercentagePercentagePercentage\
    \ = appleAndOrangeAndMangoPercentagePercentage.toDouble\n        val appleAndOrangeAndMangoPercentagePercentagePercentagePercentage\
    \ = appleAndOrangeAndMangoPercentagePercentagePercentage.toInt\n        val appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangeAndMangoPercentagePercentagePercentagePercentage.toLong\n  \
    \      val appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentage.toFloat\n\
    \        val appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentagePercentage.toDouble\n\
    \        val appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentagePercentagePercentage.toInt\n\
    \        val appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentagePercentagePercentage.toLong\n\
    \        val appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentagePercentagePercentage.toFloat\n\
    \        val appleAndOrangeAndMangoPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangeAndMangoPercentagePercentagePercentagePercentage", "       \
    \ val apples = n.toInt\n        val oranges = s.split(\" \").map(_.toInt).sum\n\
    \        val mangos = s.split(\" \").map(_.toInt).filter(_ % 2 == 0).sum\n   \
    \     val totalFruits = apples + oranges + mangos\n        val totalMangos = apples\
    \ + mangos + oranges\n        val totalApples = apples + mangos + oranges\n  \
    \      val totalOranges = oranges + mangos\n        val totalMangoFruits = mangos\
    \ + oranges\n        val totalAppleFruits = apples + oranges\n        val totalOrangeFruits\
    \ = oranges\n        val totalFruitFruits = apples + oranges + mangos\n      \
    \  val totalFruitMangoFruits = apples + mangos + oranges\n        val totalFruitOrangeFruits\
    \ = oranges + mangos\n        val totalFruitAppleFruits = apples + oranges\n \
    \       val totalFruitOrangeMangoFruits = oranges + mangos\n        val totalFruitAppleMangoFruits\
    \ = apples + mangos + oranges\n        val totalFruitAppleOrangeFruits = apples\
    \ + oranges + mangos\n        val totalFruitAppleOrangeMangoFruits = apples +\
    \ oranges + mangos\n        val totalFruitAppleMangoOrangeFruits = apples + mangos\
    \ + oranges + mangos\n        val totalFruitAppleOrangeMangoOrangeFruits = apples\
    \ + oranges + mangos + oranges + mangos\n        val totalFruitAppleOrangeMangoOrangeMangoFruits\
    \ = apples + oranges + mangos + oranges + mangos + mangos\n        val totalFruitAppleOrangeMangoOrangeMangoOrangeFruits\
    \ = apples + oranges + mangos + oranges + mangos + oranges + mangos + mangos\n\
    \        val totalFruitAppleOrangeMangoOrangeMangoOrangeMangoFruits = apples +\
    \ oranges + mangos + oranges + mangos + oranges + mangos + mangos + mangos\n \
    \       val totalFruitAppleOrangeMangoOrangeMangoOrangeMangoOrangeFruits = apples\
    \ + oranges + mangos + orange", "        val apples = n.toInt\n        val oranges\
    \ = s.split(\" \")(1).split(\"and\")(0).toInt\n        val fruits = s.split(\"\
    \ \")(2).toInt\n        val mango = fruits - apples - oranges\n        mango",
  "        val apples = n.toLong - s.split(\" \").map(_.toLong).sum\n        val oranges\
    \ = s.split(\" \").map(_.toLong).sum\n        val mangos = apples - oranges\n\
    \        mangos", "        val apples = n.toInt\n        val oranges = s.split(\"\
    \ \").map(_.toInt).sum\n        val mangos = apples - oranges\n        mangos",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = apples.filter(_ % 2 == 0).sum\n     \
    \   val totalFruits = apples.sum + oranges.sum + mangos\n        val totalFruitsPerApple\
    \ = apples.sum / totalFruits\n        val totalFruitsPerOrange = oranges.sum /\
    \ totalFruits\n        val totalFruitsPerMango = mangos.sum / totalFruits\n  \
    \      val totalFruitsPerAppleAndOrange = totalFruitsPerApple * totalFruitsPerOrange\n\
    \        val totalFruitsPerAppleAndMango = totalFruitsPerApple * totalFruitsPerMango\n\
    \        val totalFruitsPerOrangeAndMango = totalFruitsPerOrange * totalFruitsPerMango\n\
    \        val totalFruitsPerAppleAndOrangeAndMango = totalFruitsPerAppleAndOrange\
    \ * totalFruitsPerMango\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruits\
    \ = totalFruitsPerAppleAndOrangeAndMango * totalFruits\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerApple\
    \ = totalFruitsPerAppleAndOrangeAndMango * totalFruitsPerApple\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerOrange\
    \ = totalFruitsPerAppleAndOrangeAndMango * totalFruitsPerOrange\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerMango\
    \ = totalFruitsPerAppleAndOrangeAndMango * totalFruitsPerMango\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerAppleAndOrange\
    \ = totalFruitsPerAppleAndOrangeAndMangoAndTotalFruits * totalFruitsPerAppleAndOrange\n\
    \        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerAppleAndOrangeAndMango\
    \ = totalFruitsPerAppleAndOrangeAndMangoAndTotalFruits * totalF", "        val\
    \ apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n      \
    \  val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples + \"\
    \ \" + oranges\n        val applesAndOrangesArray = applesAndOranges.split(\"\
    \ \")\n        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n\
    \        val applesAndOrangesArraySum = applesAndOrangesArray.reduceLeft(_ + _)\n\
    \        val applesAndOrangesArraySumInt = applesAndOrangesArraySum.toInt\n  \
    \      val fruitArray = fruits.split(\" \")\n        val fruitArrayLength = fruitArray.length\n\
    \        val fruitArraySum = fruitArray.reduceLeft(_ + _)\n        val fruitArraySumInt\
    \ = fruitArraySum.toInt\n        val applesAndOrangesArraySumInt = applesAndOrangesArraySumInt\
    \ * fruitArrayLength\n        val applesAndOrangesArraySum = applesAndOrangesArraySumInt\
    \ * applesAndOrangesArrayLength\n        val applesAndOrangesArraySum = applesAndOrangesArraySum\
    \ / applesAndOrangesArrayLength\n        val applesAndOrangesArraySumInt = applesAndOrangesArraySum.toInt\n\
    \        val fruitArraySumInt = fruitArraySumInt * fruitArrayLength\n        val\
    \ fruitArraySum = fruitArraySumInt * fruitArrayLength\n        val fruitArraySum\
    \ = fruitArraySum / fruitArrayLength\n        val fruitArraySumInt = fruitArraySum.toInt\n\
    \        val applesAndOrangesArraySumInt = applesAndOrangesArraySumInt * applesAndOrangesArrayLength\n\
    \        val applesAndOrangesArraySum = applesAndOrangesArraySumInt * applesAndOrangesArrayLength\n\
    \        val applesAndOrangesArraySum = applesAndOrangesArraySum / applesAndOrangesArrayLength\n\
    \        val applesAndOrangesArraySumInt = applesAndOrangesArraySum.toInt\n  \
    \      val applesAndOrangesArraySum = applesAndOrangesArraySumInt * applesAndOrangesArrayLength\n\
    \        val applesAndOrangesArraySum = applesAndOrangesArraySum / applesAndOrangesArrayLength\n\
    \        val applesAndOrangesArraySumInt = applesAndOrangesArraySum.toInt\n  \
    \      val applesAndOrangesArraySum = applesAndOrangesArray", "        val apples\
    \ = s.split(\"apples and \")(0).trim\n        val oranges = s.split(\"oranges\
    \ and \")(0).trim\n        val mangos = s.split(\"mango and \")(0).trim\n    \
    \    val appleAndOranges = apples + oranges\n        val appleAndMangos = apples\
    \ + mangos\n        val orangeAndMangos = oranges + mangos\n        val appleAndOrangesAndMangos\
    \ = appleAndOranges + mangos\n        val appleAndOrangesAndMangosAndApples =\
    \ appleAndOrangesAndMangos + apples\n        val appleAndOrangesAndMangosAndOranges\
    \ = appleAndOrangesAndMangos + oranges\n        val appleAndOrangesAndMangosAndOrangesAndApples\
    \ = appleAndOrangesAndMangosAndApples + apples\n        val appleAndOrangesAndMangosAndOrangesAndOranges\
    \ = appleAndOrangesAndMangosAndOranges + oranges\n        val appleAndOrangesAndMangosAndOrangesAndMangos\
    \ = appleAndOrangesAndMangosAndOrangesAndMangos + mangos\n        val appleAndOrangesAndMangosAndOrangesAndMangosAndApples\
    \ = appleAndOrangesAndMangosAndOrangesAndMangos + apples\n        val appleAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = appleAndOrangesAndMangosAndOrangesAndMangos + oranges\n        val appleAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndApples\
    \ = appleAndOrangesAndMangosAndOrangesAndMangosAndApples + apples\n        val\
    \ appleAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndOranges = appleAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ + oranges\n        val appleAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = appleAndOrangesAndMangosAndOrangesAndMangosAndOranges + mangos\n        val\
    \ appleAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndApples = appleAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ + apples\n", "        val apples = s.split(\" \").map(_.toInt)\n        val\
    \ oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples ++ oranges\n\
    \        val mangos = fruits.filter(x => x % 2 == 0)\n        val total = mangos.sum\n\
    \        val result = mangos.filter(x => x % n == 0).sum\n        total * result",
  "        val apples = n.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = apples - oranges\n        val basket = s.split(\" \")\n        val fruits\
    \ = basket.filter(_ != \"apples\" && _ != \"oranges\" && _ != \"mango\")\n   \
    \     fruits.size match {\n            case 0 => mangos\n            case 1 =>\
    \ fruits.head.toLong\n            case _ => fruits.toSet.size match {\n      \
    \          case 0 => mangos\n                case 1 => fruits.head.toLong\n  \
    \              case _ => fruits.toSet.size match {\n                    case 0\
    \ => mangos\n                    case 1 => fruits.head.toLong\n              \
    \      case _ => fruits.toSet.size match {\n                        case 0 =>\
    \ mangos\n                        case 1 => fruits.head.toLong\n             \
    \           case _ => fruits.toSet.size match {\n                            case\
    \ 0 => mangos\n                            case 1 => fruits.head.toLong\n    \
    \                        case _ => fruits.toSet.size match {\n               \
    \                 case 0 => mangos\n                                case 1 =>\
    \ fruits.head.toLong\n                                case _ => fruits.toSet.size\
    \ match {\n                                    case 0 => mangos\n            \
    \                        case 1 => fruits.head.toLong\n                      \
    \              case _ => fruits.toSet.size match {\n                         \
    \               case 0 => mangos\n                                        case\
    \ 1 => fruits.head.toLong\n                                        case _ => fruits.toSet.size\
    \ match {\n                                            case 0 => mangos\n    \
    \                                        case 1 => fruits.head.toLong\n      \
    \                                      case _ => fruits.toSet.size match {\n \
    \                                               case 0 => mangos\n           \
    \                                     case 1 => fruits.head.toLong\n         \
    \                                       case _ => fruits.toSet.size match {\n\
    \                                                    case 0 => mangos\n      \
    \                                              case 1 => fruits.head.toLong\n\
    \                                                    case _ => fruits.toSet.size\
    \ match {\n                                                        case 0 => mangos\n\
    \                                                        case 1 => fruits.head.toLong\n\
    \                                                        case _ => fruits.toSet.size\
    \ match {\n                                                            case 0\
    \ => mangos\n                                                            case\
    \ 1 => fruits.head.toLong\n                                                  \
    \          case _ => fruits.toSet.size match {\n                             \
    \                                   case 0 => mangos\n                       \
    \                                         case 1 => fruits.head.toLong\n     \
    \                                                           case _ => fruits.toSet.size\
    \ match {\n                                                                  \
    \  case 0 => mangos\n                                                        \
    \            case 1 => fruits.head.toLong\n                                  \
    \                                  case _ => fruits.toSet.size match {\n     \
    \                                                                   case 0 =>\
    \ mangos\n                                                                   \
    \     case 1 => fruits.head.toLong\n", "        val apples = n.toLong\n      \
    \  val oranges = s.toLong\n        val mangos = apples - oranges\n        val\
    \ fruits = apples + oranges + mangos\n        fruits", "        val apples = n.toLong\
    \ - s.toLong\n        val oranges = s.toLong\n        val mangos = apples - oranges\n\
    \        mangos", "        val apples = s.split(\" \").map(_.toInt)\n        val\
    \ oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges ++ mangos\n        val basket = fruits.toSet\n\
    \        val count = fruits.count(_ == 1)\n        val total = apples.sum + oranges.sum\
    \ + mangos.sum\n        val result = if (count == total) mangos.sum\n        else\
    \ mangos.sum - fruits.count(_ == 0)\n        result", "        val apples = s.split(\"\
    \ \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n        val fruits\
    \ = s.split(\" \")(2).toLong\n        val mango = apples + oranges - fruits\n\
    \        mango", "        val apples = n.toLong - s.toLong\n        val oranges\
    \ = s.toLong\n        val mangos = apples - oranges\n        mangos", "      \
    \  val apples = s.split(\"apples and \")(1).trim\n        val oranges = s.split(\"\
    oranges and \")(1).trim\n        val mangos = s.split(\"mango and \")(1).trim\n\
    \        val applesAndOranges = apples + oranges\n        val mangoAndApples =\
    \ mangos + apples\n        val applesAndOrangesAndMangos = applesAndOranges +\
    \ mangos\n        val applesAndOrangesAndMangosAndApples = applesAndOrangesAndMangos\
    \ + apples\n        val applesAndOrangesAndMangosAndApplesAndOranges = applesAndOrangesAndMangosAndApples\
    \ + oranges\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOranges + mangos\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + apples\n        val\
    \ applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ + oranges\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + mangos\n        val\
    \ applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + apples\n        val\
    \ applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + oranges\n        val\
    \ applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + mangos\n        val\
    \ applesAndOrangesAndMangos", "        val apples = n.toLong\n        val oranges\
    \ = apples.toLong - apples.toLong % 3\n        val mangos = oranges.toLong - oranges.toLong\
    \ % 3\n        val fruits = apples + oranges + mangos\n        fruits", "    \
    \    val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val fruitsInBasket = fruits.split(\"and\").map(_.trim).map(_.toInt)\n\
    \        val numberOfApples = fruitsInBasket.sum\n        val numberOfOranges\
    \ = fruitsInBasket.map(_.toInt).sum\n        val numberOfMangos = fruitsInBasket.filter(_.toInt\
    \ > 0).sum\n        val numberOfMangoFruits = numberOfMangos - numberOfApples\
    \ - numberOfOranges\n        numberOfMangoFruits", "        val apples = n.toLong\
    \ - s.toLong\n        val oranges = s.toLong\n        val mango = apples + oranges\n\
    \        mango", "        val apples = s.split(\" \")(0)\n        val oranges\
    \ = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n        val applesAndOranges\
    \ = apples + \" \" + oranges\n        val fruitsInBasket = fruits.toInt\n    \
    \    val applesAndOrangesInBasket = applesAndOranges.toInt\n        val mangoFruits\
    \ = fruitsInBasket - applesAndOrangesInBasket\n        mangoFruits", "       \
    \ val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \"\
    ).map(_.toInt)\n        val fruits = apples ++ oranges\n        val mango = fruits.filter(x\
    \ => x % 2 == 0)\n        val total = mango.sum\n        total % n == 0 ? total\
    \ / n : -1", "        val apples = s.split(\"apples\")(0).toLong\n        val\
    \ oranges = s.split(\"oranges\")(0).toLong\n        val mangos = s.split(\"mango\"\
    )(0).toLong\n        val basket = new mutable.HashMap[String, Long]()\n      \
    \  basket.put(\"apples\", apples)\n        basket.put(\"oranges\", oranges)\n\
    \        basket.put(\"mangos\", mangos)\n        val total = apples + oranges\
    \ + mangos\n        val numOfFruits = basket.filter(_._2 > 0).size\n        val\
    \ numOfMangos = basket.filter(_._2 == 0).size\n        val numOfMangoFruits =\
    \ numOfMangos - numOfFruits\n        val numOfMangoFruitsPerApple = numOfMangoFruits\
    \ / apples\n        val numOfMangoFruitsPerOrange = numOfMangoFruits / oranges\n\
    \        val numOfMangoFruitsPerMango = numOfMangoFruits / mangos\n        val\
    \ numOfMangoFruitsPerAppleAndOrange = numOfMangoFruitsPerApple * numOfMangoFruitsPerOrange\n\
    \        val numOfMangoFruitsPerAppleAndMango = numOfMangoFruitsPerApple * numOfMangoFruitsPerMango\n\
    \        val numOfMangoFruitsPerOrangeAndMango = numOfMangoFruitsPerOrange * numOfMangoFruitsPerMango\n\
    \        val numOfMangoFruitsPerAppleAndOrangeAndMango = numOfMangoFruitsPerAppleAndOrange\
    \ * numOfMangoFruitsPerMango\n        val numOfMangoFruitsPerAppleAndOrangeAndMangoAndTotal\
    \ = numOfMangoFruitsPerAppleAndOrangeAndMango * total\n        val numOfMangoFruitsPerAppleAndOrangeAndMangoAndTotalPerApple\
    \ = numOfMangoFruitsPerAppleAndOrangeAndMangoAndTotal / apples\n        val numOfMangoFruitsPerAppleAndOrangeAndMangoAndTotalPerOrange\
    \ = num", "        val apples = n.toLong - s.toLong\n        val oranges = s.toLong\
    \ - apples.toLong\n        val mango = apples + oranges\n        mango", "   \
    \     val apples = n.toInt\n        val oranges = apples - 1\n        val mangos\
    \ = oranges - 1\n        val fruits = s.split(\" \")\n        val fruitCount =\
    \ fruits.map(_.toInt).sum\n        val appleCount = fruitCount(0).toLong\n   \
    \     val orangeCount = fruitCount(1).toLong\n        val mangoCount = fruitCount(2).toLong\n\
    \        val totalCount = appleCount + orangeCount + mangoCount\n        val mangoFruits\
    \ = mangoCount * mangos\n        val totalFruits = fruitCount * fruits\n     \
    \   val totalFruitsCount = totalFruits.map(_.toInt).sum\n        val totalMangoFruits\
    \ = totalFruitsCount - mangoFruits\n        totalMangoFruits", "        val apples\
    \ = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits\
    \ = s.split(\" \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n\
    \        val fruitsInBasket = fruits.split(\" \").length\n        val mangoFruits\
    \ = fruitsInBasket - applesAndOranges.split(\" \").length\n        mangoFruits",
  "        val apples = n.toLong - s.toLong\n        val oranges = s.toLong - apples.toLong\n\
    \        val mango = apples.toLong - oranges.toLong\n        mango", "       \
    \ val apples = n.toInt\n        val oranges = s.split(\" \").last.toInt\n    \
    \    val fruits = s.split(\" \").dropRight(1).mkString(\"\")\n        val mangos\
    \ = fruits.split(\"\").filter(x => x == \"m\").length\n        apples + oranges\
    \ + mangos", "        val apples = n.toInt\n        val oranges = s.toInt\n  \
    \      val fruits = apples + oranges\n        val mangos = fruits.toDouble / 2\n\
    \        fruits - mangos", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples\
    \ ++ oranges\n        val totalFruits = fruits.sum\n        val mangoFruits =\
    \ fruits.filter(f => f > 0)\n        val totalMangoFruits = mangoFruits.sum\n\
    \        val mangoFruitsPerApple = mangoFruits.filter(f => apples.contains(f)).size\n\
    \        val mangoFruitsPerOrange = mangoFruits.filter(f => oranges.contains(f)).size\n\
    \        val mangoFruitsPerTotal = mangoFruitsPerApple + mangoFruitsPerOrange\n\
    \        val mangoFruitsPerTotalPerApple = mangoFruitsPerTotal / apples.sum\n\
    \        val mangoFruitsPerTotalPerOrange = mangoFruitsPerTotal / oranges.sum\n\
    \        val mangoFruitsPerTotalPerTotal = mangoFruitsPerTotalPerApple * mangoFruitsPerTotalPerOrange\n\
    \        val mangoFruitsPerTotalPerTotalPerApple = mangoFruitsPerTotalPerTotal\
    \ * mangoFruitsPerApple\n        val mangoFruitsPerTotalPerTotalPerOrange = mangoFruitsPerTotalPerTotal\
    \ * mangoFruitsPerOrange\n        val mangoFruitsPerTotalPerTotalPerTotal = mangoFruitsPerTotalPerTotalPerApple\
    \ + mangoFruitsPerTotalPerTotalPerOrange\n        mangoFruitsPerTotalPerTotalPerTotal",
  "        val apples = s.split(\"apples\")(1).trim\n        val oranges = s.split(\"\
    oranges\")(1).trim\n        val mangos = s.split(\"mango\")(1).trim\n        val\
    \ applesAndOranges = apples + oranges\n        val applesAndMangos = apples +\
    \ mangos\n        val orangesAndMangos = oranges + mangos\n        val applesAndOrangesAndMangos\
    \ = applesAndOranges + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangos + orangesAndMangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndM",
  "        val apples = n.toInt\n        val oranges = s.split(\"and\").last.split(\"\
    \ \").last.toInt\n        val mangos = apples - oranges\n        mangos", "  \
    \      val apples = s.split(\"apples\")(0).split(\" \").map(_.toInt)\n       \
    \ val oranges = s.split(\"oranges\")(0).split(\" \").map(_.toInt)\n        val\
    \ mangos = s.split(\"mango\")(0).split(\" \").map(_.toInt)\n        val basket\
    \ = apples ++ oranges ++ mangos\n        val totalFruits = apples.sum + oranges.sum\
    \ + mangos.sum\n        val totalFruitsCount = basket.sum\n        val fruitsInBasket\
    \ = totalFruits - totalFruitsCount\n        fruitsInBasket.toLong", "        val\
    \ apples = s.split(\" \").map(_.toInt).sum\n        val oranges = s.split(\" \"\
    ).map(_.toInt).sum\n        val fruits = apples + oranges\n        val mangos\
    \ = fruits - n\n        mangos", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = apples - oranges\n        val fruits = apples\
    \ + oranges + mangos\n        fruits", "        val apples = n.toInt\n       \
    \ val oranges = s.split(\" \").map(_.toInt).sum\n        val fruits = s.split(\"\
    \ \").map(_.toInt).sum\n        val mangos = apples - oranges\n        fruits\
    \ - mangos", "        val apples = s.split(\"apples\")(0).toLong\n        val\
    \ oranges = s.split(\"oranges\")(0).toLong\n        val mangos = s.split(\"mango\"\
    )(0).toLong\n        val fruits = apples + oranges + mangos\n        val totalFruits\
    \ = fruits.toLong\n        val basket = n.toLong\n        val fruitsInBasket =\
    \ basket - totalFruits\n        fruitsInBasket.toLong", "        val apples =\
    \ n.toInt\n        val oranges = s.toInt\n        val mangos = apples - oranges\n\
    \        val fruits = apples + oranges + mangos\n        fruits", "        val\
    \ apples = n.toInt\n        val oranges = s.toInt\n        val fruits = apples\
    \ + oranges\n        val mangos = fruits - apples - oranges\n        mangos",
  "        val apples = n.toInt\n        val oranges = s.split(\" \").map(_.toInt).sum\n\
    \        val mangos = apples - oranges\n        mangos", "        val apples =\
    \ s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits\
    \ = s.split(\" \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n\
    \        val fruitsInBasket = fruits.split(\"and\").map(_.trim).map(_.toInt)\n\
    \        val numberOfApples = applesInBasket.length\n        val numberOfOranges\
    \ = orangesInBasket.length\n        val numberOfFruits = fruitsInBasket.length\n\
    \        val numberOfMangos = fruitsInBasket.filter(x => x % 2 == 1).length\n\
    \        val numberOfMangoFruits = fruitsInBasket.filter(x => x % 2 == 0).length\n\
    \        val numberOfMangoFruitsPerApple = numberOfMangoFruits / numberOfApples\n\
    \        val numberOfMangoFruitsPerOrange = numberOfMangoFruits / numberOfOranges\n\
    \        val numberOfMangoFruitsPerFruit = numberOfMangoFruits / numberOfFruits\n\
    \        val numberOfMangoFruitsPerAppleAndOrange = numberOfMangoFruitsPerApple\
    \ * numberOfMangoFruitsPerOrange\n        val numberOfMangoFruitsPerAppleAndFruit\
    \ = numberOfMangoFruitsPerAppleAndOrange * numberOfMangoFruitsPerFruit\n     \
    \   val numberOfMangoFruitsPerAppleAndOrangeAndFruit = numberOfMangoFruitsPerAppleAndOrange\
    \ * numberOfMangoFruitsPerFruit\n        val numberOfMangoFruitsPerAppleAndOrangeAndFruitPerApple\
    \ = numberOfMangoFruitsPerAppleAndOrange * numberOfMangoFruitsPerFruit * numberOfMangoFruitsPerApple\n\
    \        val numberOfMangoFruitsPerAppleAndOrangeAndFruitPerOrange = numberOfMangoFruitsPerAppleAndOrange\
    \ * numberOfMangoFruitsPerFruit * numberOfMangoFruitsPerOrange\n        val numberOfMangoFruitsPerAppleAndOrangeAndFruitPerFruit\
    \ = numberOfMangoFruitsPerAppleAndOrange * numberOfMangoFruitsPerFruit * numberOfMangoFruitsPerFruit\n\
    \        val numberOfMango", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val fruits = apples + oranges\n        val mangos = fruits\
    \ - apples - oranges\n        mangos", "        val apples = s.split(\" \")(0).toLong\n\
    \        val oranges = s.split(\" \")(1).toLong\n        val fruits = s.split(\"\
    \ \")(2).toLong\n        val mango = apples + oranges - fruits\n        mango",
  "        val apples = n.toInt\n        val oranges = s.split(\" \").map(_.toInt).sum\n\
    \        val mangos = s.split(\" \").map(_.toInt).filter(_ % 2 == 0).sum\n   \
    \     val total = apples + oranges + mangos\n        val applesAndOranges = apples\
    \ + oranges\n        val mangoFruits = applesAndOranges - mangos\n        val\
    \ applesAndOrangesAndMangoFruits = applesAndOranges + mangos\n        val applesAndOrangesAndMangoFruitsAndTotal\
    \ = applesAndOrangesAndMangoFruits + total\n        applesAndOrangesAndMangoFruitsAndTotal",
  "        val apples = s.split(\"apples and \").map(_.toInt)\n        val oranges\
    \ = s.split(\"oranges and \").map(_.toInt)\n        val fruits = s.split(\"fruits\"\
    ).map(_.toInt)\n        val mangos = s.split(\"mango\").map(_.toInt)\n       \
    \ val basket = fruits.zip(apples).zip(oranges).zip(mangos)\n        val count\
    \ = basket.foldLeft(0)((a, b) => a + b)\n        count - n", "        val apples\
    \ = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits\
    \ = s.split(\" \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n\
    \        val fruitsInBasket = fruits.split(\" \").length\n        val mangoFruits\
    \ = fruitsInBasket - fruitsInBasket.toLong * 2\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.split(\" \").length\n        val applesAndOrangesInBasketAndMango\
    \ = applesAndOrangesInBasket + mangoFruits\n        applesAndOrangesInBasketAndMango",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val fruitsInBasket = fruits.split(\" \").length\n\
    \        val mangos = fruitsInBasket - applesAndOranges.split(\" \").length\n\
    \        mangos", "        val apples = n.toLong - s.split(\" \").map(_.toLong).sum\n\
    \        val oranges = s.split(\" \").map(_.toLong).sum\n        val mangos =\
    \ apples - oranges\n        mangos", "        val apples = n.toLong - s.replaceAll(\"\
    [^0-9]\", \"\").length\n        val oranges = s.replaceAll(\"[^0-9]\", \"\").length\n\
    \        val mangos = apples - oranges\n        mangos", "        val apples =\
    \ s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits\
    \ = s.split(\" \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n\
    \        val fruitsInBasket = fruits.split(\"and\").map(_.trim).map(_.toInt)\n\
    \        val applesAndOrangesInBasket = applesAndOranges.split(\"and\").map(_.trim).map(_.toInt)\n\
    \        val mangos = fruitsInBasket.filter(_ % 2 == 1).sum\n        val mangoInBasket\
    \ = fruitsInBasket.filter(_ % 2 == 1).sum\n        val mangoInBasketAndOranges\
    \ = fruitsInBasket.filter(_ % 2 == 1).filter(_ % 2 == 1).sum\n        val mangoInBasketAndOrangesInBasket\
    \ = fruitsInBasket.filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).sum\n\
    \        val mangoInBasketAndOrangesInBasketAndOranges = fruitsInBasket.filter(_\
    \ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).sum\n   \
    \     val mangoInBasketAndOrangesInBasketAndOrangesInBasket = fruitsInBasket.filter(_\
    \ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_\
    \ % 2 == 1).filter(_ % 2 == 1).sum\n        val mangoInBasketAndOrangesInBasketAndOrangesInBasketAndOranges\
    \ = fruitsInBasket.filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_\
    \ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_\
    \ % 2 == 1).sum\n        val mangoInBasketAndOrangesInBasketAndOrangesInBasketAndOrangesInBasket\
    \ = fruitsInBasket.filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_\
    \ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_\
    \ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).sum\n        val mangoInBasketAndOrangesInBasketAndOrangesInBasketAndOrangesInBasketAndOranges\
    \ = fruitsInBasket.filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_\
    \ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_ % 2 == 1).filter(_\
    \ % ", "        val apples = s.split(\" \").map(_.toInt)\n        val oranges\
    \ = s.split(\" \").map(_.toInt)\n        val fruits = apples ++ oranges\n    \
    \    val totalFruits = fruits.sum\n        val mangoFruits = fruits.filter(_ %\
    \ 2 == 1).sum\n        (mangoFruits - totalFruits)", "        val apples = s.split(\"\
    apples and \")(1).trim\n        val oranges = s.split(\"oranges and \")(1).trim\n\
    \        val mangos = s.split(\"mango and \")(1).trim\n        val applesAndOranges\
    \ = apples + oranges\n        val mangoAndApples = mangos + apples\n        val\
    \ applesAndOrangesAndMangos = applesAndOranges + mangos\n        val applesAndOrangesAndMangosAndApples\
    \ = applesAndOrangesAndMangos + apples\n        val applesAndOrangesAndMangosAndApplesAndOranges\
    \ = applesAndOrangesAndMangosAndApples + oranges\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOranges + mangos\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + apples\n        val\
    \ applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges = applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ + oranges\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples + mangos\n\
    \        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges +\
    \ mangos\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ + apples\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ + oranges\n        val apple", "        val apples = n.toInt\n        val oranges\
    \ = s.split(\" \").map(_.toInt).sum\n        val mangos = apples - oranges\n \
    \       mangos", "        val apples = n.toInt\n        val oranges = s.toInt\n\
    \        val mangos = apples - oranges\n        val basket = new mutable.HashMap[String,\
    \ Long]()\n        basket.put(\"apples\", apples)\n        basket.put(\"oranges\"\
    , oranges)\n        basket.put(\"mangos\", mangos)\n        basket.put(\"basket\"\
    , apples + oranges + mangos)\n        basket.get(\"basket\")", "        val apples\
    \ = n.toInt\n        val oranges = s.split(\" \")(1).split(\"and\")(1).split(\"\
    oranges\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and", "        val apples = s.split(\"\
    \ \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n      \
    \  val mangos = s.split(\" \").map(_.toInt)\n        val basket = new mutable.HashMap[String,\
    \ Long]()\n        basket.put(\"apples\", apples.sum)\n        basket.put(\"oranges\"\
    , oranges.sum)\n        basket.put(\"mangos\", mangos.sum)\n        basket.put(\"\
    total\", apples.sum + oranges.sum + mangos.sum)\n        basket.get(\"total\")",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val fruitsAndOranges = fruits + \" \" + oranges\n\
    \        val applesAndOrangesAndMangos = apples + \" \" + oranges + \" and \"\
    \ + fruits\n        val fruitsAndOrangesAndMangos = fruits + \" \" + oranges +\
    \ \" and \" + fruits\n        val applesAndOrangesAndMangos = apples + \" \" +\
    \ oranges + \" and \" + fruits\n        val fruitsAndOrangesAndMangos = fruits\
    \ + \" \" + oranges + \" and \" + fruits\n        val applesAndOrangesAndMangos\
    \ = apples + \" \" + oranges + \" and \" + fruits\n        val fruitsAndOrangesAndMangos\
    \ = fruits + \" \" + oranges + \" and \" + fruits\n        val applesAndOrangesAndMangos\
    \ = apples + \" \" + oranges + \" and \" + fruits\n        val fruitsAndOrangesAndMangos\
    \ = fruits + \" \" + oranges + \" and \" + fruits\n        val applesAndOrangesAndMangos\
    \ = apples + \" \" + oranges + \" and \" + fruits\n        val fruitsAndOrangesAndMangos\
    \ = fruits + \" \" + oranges + \" and \" + fruits\n        val applesAndOrangesAndMangos\
    \ = apples + \" \" + oranges + \" and \" + fruits\n        val fruitsAndOrangesAndMangos\
    \ = fruits + \" \" + oranges + \" and \" + fruits\n        val applesAndOrangesAndMangos\
    \ = apples + \" \" + oranges + \" and \" + fruits\n        val fruitsAndOrangesAndMangos\
    \ = fruits + \" \" + oranges + \" and \" + fruits\n        val applesAndOrangesAndMangos\
    \ = apples + \" \" + oranges + \" and \" + fruits\n        val fruitsAndOrangesAndMangos\
    \ = fruits + \" \" + oranges + \" and \" + fruits\n        val applesAndOrangesAndMangos\
    \ = apples + \" \" + oranges + \" and \" + fruits\n        val fruitsAndOrangesAndMangos\
    \ = fruits + \" \" + oranges + \" and \" + fruits\n        val applesAndOrangesAndMangos\
    \ = apples + \" \" + oranges + \" and \" + fruits\n        val fruitsAndOrangesAndMangos\
    \ = fruits + \" \" + oranges + \" and \" + fruits\n        val applesAndOrangesAndMangos\
    \ = apples + \" \" + oranges + \" and \" + fruits\n        val fruitsAndOrangesAndMangos\
    \ = fru", "        val apples = s.split(\" \").map(_.toInt)\n        val oranges\
    \ = s.split(\"and\").map(_.toInt)\n        val mangos = s.split(\"and\").map(_.toInt)\n\
    \        val applesAndOranges = apples ++ oranges\n        val applesAndMangos\
    \ = apples ++ mangos\n        val orangesAndMangos = oranges ++ mangos\n     \
    \   val applesAndOrangesAndMangos = applesAndOranges ++ applesAndMangos\n    \
    \    val applesAndOrangesAndMangosCount = applesAndOrangesAndMangos.length\n \
    \       val applesAndOrangesAndMangosCount2 = applesAndOrangesAndMangosCount *\
    \ 2\n        val applesAndOrangesAndMangosCount3 = applesAndOrangesAndMangosCount2\
    \ * 3\n        val applesAndOrangesAndMangosCount4 = applesAndOrangesAndMangosCount3\
    \ * 4\n        val applesAndOrangesAndMangosCount5 = applesAndOrangesAndMangosCount4\
    \ * 5\n        val applesAndOrangesAndMangosCount6 = applesAndOrangesAndMangosCount5\
    \ * 6\n        val applesAndOrangesAndMangosCount7 = applesAndOrangesAndMangosCount6\
    \ * 7\n        val applesAndOrangesAndMangosCount8 = applesAndOrangesAndMangosCount7\
    \ * 8\n        val applesAndOrangesAndMangosCount9 = applesAndOrangesAndMangosCount8\
    \ * 9\n        val applesAndOrangesAndMangosCount10 = applesAndOrangesAndMangosCount9\
    \ * 10\n        val applesAndOrangesAndMangosCount11 = applesAndOrangesAndMangosCount10\
    \ * 11\n        val applesAndOrangesAndMangosCount12 = applesAndOrangesAndMangosCount11\
    \ * 12\n        val applesAndOrangesAndMangosCount13 = applesAndOrangesAndMangosCount12\
    \ * 13\n        val applesAndOrangesAndMangosCount14 = applesAndOrangesAndMangosCount13\
    \ * 14\n        val applesAndOrangesAndMangosCount15 = applesAndOrangesAndMangosCount14\
    \ * 15\n        val applesAndOrangesAndMangosCount16 = applesAndOrangesAndMangosCount15\
    \ * 16\n        val applesAndOrangesAndMangosCount17 = apple", "        val apples\
    \ = n.toLong - s.toLong\n        val oranges = s.toLong\n        val mangos =\
    \ apples - oranges\n        mangos", "        val apples = n.toInt\n        val\
    \ oranges = s.toInt\n        val mangos = apples - oranges\n        val fruits\
    \ = apples + oranges + mangos\n        fruits", "        val apples = n.toLong\n\
    \        val oranges = s.toLong\n        val mangos = apples - oranges\n     \
    \   val fruits = apples + oranges + mangos\n        fruits", "        val apples\
    \ = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val totalFruits = fruits.sum\n\
    \        val mangoFruits = fruits.filter(x => x % 2 == 0)\n        val totalMangoFruits\
    \ = mangoFruits.sum\n        val result = totalMangoFruits - totalFruits\n   \
    \     result", "        val apples = n.toLong - s.toLong\n        val oranges\
    \ = s.toLong\n        val mangos = apples - oranges\n        mangos", "      \
    \  val apples = n.toInt\n        val oranges = s.toInt\n        val fruits = apples\
    \ + oranges\n        val mangos = fruits.toDouble / 2\n        mangos.toLong",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val fruitsInBasket = fruits.split(\" \").length\n\
    \        val applesAndOrangesInBasket = applesAndOranges.split(\" \").length\n\
    \        val mangoFruits = fruitsInBasket - applesAndOrangesInBasket\n       \
    \ fruitsInBasket + applesAndOrangesInBasket + mangoFruits", "        val apples\
    \ = s.split(\"apples and \")(1).trim\n        val oranges = s.split(\"oranges\
    \ and \")(1).trim\n        val mangos = s.split(\"mango and \")(1).trim\n    \
    \    val applesAndOranges = apples + oranges\n        val mangoAndOranges = mangos\
    \ + oranges\n        val applesAndMangos = apples + mangos\n        val orangesAndMangos\
    \ = oranges + mangos\n        val applesAndOrangesAndMangos = applesAndOranges\
    \ + mangoAndOranges\n        val applesAndOrangesAndMangosAndOranges = applesAndOrangesAndMangos\
    \ + orangesAndMangos\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOranges + mangoAndOrangesAndMangos\n        val\
    \ applesAndOrangesAndMangosAndOrangesAndMangosAndOranges = applesAndOrangesAndMangosAndOrangesAndMangos\
    \ + orangesAndMangosAndOranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOranges + mangoAndOrangesAndMangosAndOranges\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndOranges\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ + mangoAndOrangesAndMangosAndOrangesAndOrangesAndMangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ + orangesAndMangosAndOrangesAndOrangesAndMangosAndO", "        val apples =\
    \ n.toInt\n        val oranges = s.toInt\n        val mangos = apples - oranges\n\
    \        val fruits = apples + oranges + mangos\n        fruits", "        val\
    \ apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n      \
    \  val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples + \"\
    \ \" + oranges\n        val fruitsInBasket = fruits.split(\"and\").map(_.trim).map(_.toInt)\n\
    \        val fruitsInBasketCount = fruitsInBasket.size\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.split(\"and\").map(_.trim).map(_.toInt)\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.size\n        val mangoFruitsInBasket = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x\
    \ => x % 2 == 0).size\n        val mangoFruitsInBasketCount = fruitsInBasket.filter(x ",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges\n        val basket\
    \ = fruits.toSet\n        val mangos = fruits.filter(x => x % 2 == 0)\n      \
    \  val totalMangos = mangos.size\n        val totalFruits = fruits.size\n    \
    \    val totalMangoFruits = totalMangos * totalFruits\n        val totalMangoFruitsPerApple\
    \ = totalMangoFruits / apples.sum\n        val totalMangoFruitsPerOrange = totalMangoFruits\
    \ / oranges.sum\n        val totalMangoFruitsPerMango = totalMangoFruits / mangos.size\n\
    \        val totalMangoFruitsPerAppleAndOrange = totalMangoFruitsPerApple * totalMangoFruitsPerOrange\n\
    \        val totalMangoFruitsPerAppleAndMango = totalMangoFruitsPerAppleAndOrange\
    \ * totalMangoFruitsPerMango\n        val totalMangoFruitsPerAppleAndMangoAndOrange\
    \ = totalMangoFruitsPerAppleAndMango * oranges.sum\n        val totalMangoFruitsPerAppleAndMangoAndOrangeAndApple\
    \ = totalMangoFruitsPerAppleAndMangoAndOrangeAndApple * apples.sum\n        val\
    \ totalMangoFruitsPerAppleAndMangoAndOrangeAndAppleAndOrange = totalMangoFruitsPerAppleAndMangoAndOrangeAndApple\
    \ * oranges.sum\n        val totalMangoFruitsPerAppleAndMangoAndOrangeAndAppleAndOrangeAndMango\
    \ = totalMangoFruitsPerAppleAndMangoAndOrangeAndAppleAndOrangeAndMango * mangos.size\n\
    \        val totalMangoFruitsPerAppleAndMangoAndOrangeAndAppleAndOrangeAndMangoAndOrange\
    \ = totalMangoFruitsPerAppleAndMangoAndOrangeAndAppleAndOrangeAndMango * oranges.sum\n\
    \        val totalMangoFruitsPerAppleAndMangoAndOrange"]
stop_tokens:
- "\n    }\n"

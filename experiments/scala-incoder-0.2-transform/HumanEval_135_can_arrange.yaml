name: HumanEval_135_can_arrange
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function which returns the largest index of an element which\n\
  \    // is not greater than or equal to the element immediately preceding it. If\n\
  \    // no such element exists then return -1. The given array will not contain\n\
  \    // duplicate values.\n    // Examples:\n    // >>> canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong)))\n    // (3l)\n    // >>> canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong)))\n    // (-1l)\n    def canArrange(arr : List[Long]) :\
  \ Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))) == (3l));\n    assert(canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 5l.toLong))) == (-1l));\n    assert(canArrange((List[Long](1l.toLong,\
  \ 4l.toLong, 2l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong, 10l.toLong)))\
  \ == (2l));\n    assert(canArrange((List[Long](4l.toLong, 8l.toLong, 5l.toLong,\
  \ 7l.toLong, 3l.toLong))) == (4l));\n    assert(canArrange((List[Long]())) == (-1l));\n\
  \    }\n\n}\n"
completions: ["        var maxIndex = 0\n        var maxValue = arr(0)\n        for\
    \ (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n        \
    \        maxValue = arr(i)\n                maxIndex = i\n            }\n    \
    \    }\n        maxIndex", "        val maxIndex = arr.indexWhere(x => x >= arr.last)\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        var maxIndex =\
    \ 0\n        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n\
    \            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        maxIndex", "   \
    \     val maxIndex = 0\n        val maxValue = arr(0)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList == -1) {\n\
    \            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = ", "        var maxIndex = -1\n     \
    \   var maxVal = -1\n        arr.foreach(x => {\n            if (x > maxVal) {\n\
    \                maxVal = x\n                maxIndex = x\n            }\n   \
    \     })\n        maxIndex", "        val maxIndex = arr.indexWhere(x => x < arr.head)\n\
    \        if (maxIndex == -1) {\n            -1\n        } else {\n           \
    \ maxIndex + 1\n        }", "        val maxIndex = arr.indexOfMax\n        if\
    \ (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr(arr.length-1))\n        if (maxIndex == -1) return -1\n        arr(maxIndex)\
    \ + 1", "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n\
    \        else maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.indexOfMax\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.lastIndexWhere(_ >= arr.head)\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for(i <- 0 until arr.length) {\n            if(arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        if(maxIndex == arr.length-1)\n            -1\n   \
    \     else\n            maxIndex", "        val maxIndex = arr.lastIndexWhere(_\
    \ <= arr.head)\n        if (maxIndex == -1) -1\n        else maxIndex", "    \
    \    var maxIndex = 0\n        var maxValue = arr(0)\n        var maxIndexOfMaxValue\
    \ = -1\n        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \         maxIndexOfMaxValue = i\n            }\n        }\n        if (maxIndexOfMaxValue\
    \ == -1) {\n            return -1\n        }\n        return maxIndex", "    \
    \    val maxIndex = arr.lastIndexWhere(x => x >= arr.head)\n        if (maxIndex\
    \ == -1) return -1\n        maxIndex", "        val maxIndex = 0\n        var\
    \ maxValue = arr(0)\n        var index = 1\n        for(i <- 0 until arr.length)\
    \ {\n            if(arr(i) > maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndex = index\n            }\n            index += 1\n   \
    \     }\n        if(maxValue == arr(0)) {\n            return -1\n        }\n\
    \        return maxIndex", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.lastIndexWhere(x => x >= arr(0))\n        if (maxIndex == -1) return -1\n\
    \        arr.lastIndexWhere(x => x >= arr(maxIndex))", "        val max = arr.head\n\
    \        val maxIndex = arr.indexOfMax(max)\n        if (maxIndex == -1) {\n \
    \           return -1\n        }\n        val maxPrev = arr.take(maxIndex).last\n\
    \        if (maxPrev >= max) {\n            return maxIndex\n        }\n     \
    \   return -1", "        val maxIndex = arr.indexOfMax\n        if (maxIndex <\
    \ 0) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x => x\
    \ < arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex\
    \ = arr.indexOfMax\n        if (maxIndex == -1) return -1\n        arr.take(maxIndex\
    \ + 1)", "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n\
    \        else maxIndex", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n\
    \        if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n\
    \            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        maxIndex", "   \
    \     var maxIndex = 0\n        var maxVal = arr(0)\n        var i = 0\n     \
    \   while (i < arr.length) {\n            if (arr(i) <= maxVal) {\n          \
    \      maxIndex = i\n                maxVal = arr(i)\n            } else {\n \
    \               maxIndex = -1\n            }\n            i += 1\n        }\n\
    \        maxIndex", "        val maxIndex = arr.indexWhere(x => x < arr.head)\n\
    \        if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else maxIndex", "  \
    \      var maxIndex = 0\n        var maxValue = arr(0)\n        var maxIndexInList\
    \ = -1\n        for(i <- 0 until arr.length) {\n            if(arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n            if(arr(i) == maxValue) {\n                maxIndexInList\
    \ = i\n            }\n        }\n        if(maxIndexInList == -1) {\n        \
    \    return -1\n        }\n        return maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex - 1", "        val maxIndex = arr.indexOfMax\n   \
    \     if (maxIndex == -1) {\n            return -1\n        }\n        val maxValue\
    \ = arr(maxIndex)\n        val maxIndex2 = arr.indexOfMax(x => x <= maxValue)\n\
    \        if (maxIndex2 == -1) {\n            return -1\n        }\n        if\
    \ (maxIndex2 > maxIndex) {\n            return maxIndex2\n        }\n        return\
    \ maxIndex", "        val maxIndex = arr.indexWhere(x => x >= arr.head)\n    \
    \    if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x >= arr(arr.length-1))\n        if\
    \ (maxIndex == -1) -1\n        else maxIndex", "        var maxIndex = 0\n   \
    \     var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n       \
    \     if (arr(i) <= maxValue) {\n                maxIndex = i\n              \
    \  maxValue = arr(i)\n            }\n        }\n        if (maxIndex == arr.length\
    \ - 1) {\n            return -1\n        }\n        return maxIndex", "      \
    \  var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if\
    \ (maxIndex == arr.length) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.indexWhere(_ <= arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex",
  "        val maxIndex = arr.lastIndexWhere(x => x >= arr(0))\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = 0\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexWhere(x => x <= maxValue)\n      \
    \  if (maxIndex == -1) -1\n        else maxIndex", "        var maxIndex = 0\n\
    \        var maxValue = arr(0)\n        var maxIndexOfMaxValue = -1\n        var\
    \ index = 1\n        while (index < arr.length) {\n            if (arr(index)\
    \ < maxValue) {\n                maxValue = arr(index)\n                maxIndexOfMaxValue\
    \ = index\n            }\n            index += 1\n        }\n        if (maxIndexOfMaxValue\
    \ == -1) {\n            return -1\n        }\n        return maxIndexOfMaxValue",
  "        val maxIndex = arr.indexWhere(x => x < arr.last)\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for(i <- 0 until arr.length) {\n            if(arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        if(maxIndex == arr.length-1) {\n            return\
    \ -1\n        }\n        return maxIndex", "        val m = arr.head\n       \
    \ var maxIndex = -1\n        for (i <- 0 until arr.length) {\n            if (arr(i)\
    \ < m) {\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexWhere(x => x < arr.head)\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr.head)\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       val max = arr.head\n        val maxIndex = arr.indexWhere(x => x > max)\n\
    \        if(maxIndex == arr.length-1)\n            -1\n        else\n        \
    \    arr.lastIndex(maxIndex+1)", "        val max = arr.last\n        val maxIndex\
    \ = arr.lastIndexWhere(_ <= max)\n        if (maxIndex < 0) -1\n        else maxIndex",
  "        var maxIndex = -1\n        var maxVal = -1L\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxVal) {\n                maxVal =\
    \ arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = 0\n        val maxValue = arr(0)\n        val maxIndexInner\
    \ = -1\n        val maxValueInner = -1\n        for(i <- 0 until arr.length) {\n\
    \            if(arr(i) < maxValue) {\n                maxValue = arr(i)\n    \
    \            maxIndex = i\n            }\n            if(arr(i) > maxValueInner)\
    \ {\n                maxValueInner = arr(i)\n                maxIndexInner = i\n\
    \            }\n        }\n        if(maxIndexInner == -1) {\n            return\
    \ -1\n        }\n        if(maxIndexInner == maxIndex) {\n            return -1\n\
    \        }\n        if(maxIndexInner < maxIndex) {\n            return maxIndex\n\
    \        }\n        return maxIndexInner", "        val m = arr.head\n       \
    \ val n = arr.last\n        var maxIndex = -1\n        var index = 0\n       \
    \ while (index < arr.length) {\n            if (arr(index) <= m && arr(index)\
    \ > n) {\n                maxIndex = index\n            }\n            index +=\
    \ 1\n        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x < arr.head)\n        if (maxIndex < 0) -1\n        else maxIndex", "     \
    \   var maxIndex = 0\n        var maxValue = arr(0)\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if(maxIndex\
    \ == arr.length-1)\n            -1\n        else\n            maxIndex", "   \
    \     var maxIndex = 0\n        var maxValue = arr(0)\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if(maxIndex\
    \ == arr.length-1) {\n            return -1\n        }\n        return maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        var index = 0\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = index\n       \
    \     }\n            index += 1\n        }\n        if (maxIndex == arr.length\
    \ - 1) {\n            return -1\n        }\n        return maxIndex", "      \
    \  var maxIndex = -1\n        var maxVal = -1\n        var index = 0\n       \
    \ for(i <- 0 until arr.length) {\n            val currentVal = arr(i)\n      \
    \      if(currentVal > maxVal) {\n                maxVal = currentVal\n      \
    \          maxIndex = index\n            }\n            index += 1\n        }\n\
    \        if(maxIndex == -1) {\n            return -1\n        }\n        return\
    \ maxIndex", "        val maxIndex = arr.indexWhere(x => x >= arr.last)\n    \
    \    if (maxIndex < 0) -1 else maxIndex", "        val maxIndex = 0\n        val\
    \ maxValue = arr(0)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val max", "        val maxIndex = arr.indexWhere(x => x <= arr.head)\n\
    \        if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = arr.lastIndexWhere(x => x >= arr.last)\n        if (maxIndex < 0) -1 else\
    \ maxIndex", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n       \
    \ if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax(x\
    \ => x < arr(0))\n        if (maxIndex < 0) -1\n        else maxIndex", "    \
    \    var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) < maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexWhere(x => x < arr.head)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        val maxIndex = 0\n        val maxValue\
    \ = arr(0)\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        maxIndexInList", "     \
    \   val maxIndex = arr.indexOfMax(arr.head)\n        if(maxIndex == -1) -1\n \
    \       else maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) {\n            return -1\n        }\n        val maxValue = arr(maxIndex)\n\
    \        val prevIndex = maxIndex - 1\n        if (prevIndex >= 0) {\n       \
    \     if (arr(prevIndex) <= maxValue) {\n                return prevIndex\n  \
    \          }\n        }\n        return -1", "        var maxIndex = 0\n     \
    \   var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n         \
    \   if (arr(i) > maxValue) {\n                maxValue = arr(i)\n            \
    \    maxIndex = i\n            }\n        }\n        maxIndex", "        val maxIndex\
    \ = arr.lastIndexWhere(x => x <= arr.head)\n        if (maxIndex < 0) -1\n   \
    \     else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        if (maxIndex == arr.length-1)\n            -1\n      \
    \  else\n            maxIndex", "        val maxIndex = arr.indexWhere(x => x\
    \ <= arr.head)\n        if (maxIndex == -1) -1\n        else maxIndex", "    \
    \    val m = arr.head\n        val n = arr.last\n        var maxIndex = 0\n  \
    \      var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n      \
    \      if (arr(i) < maxValue) {\n                maxValue = arr(i)\n         \
    \       maxIndex = i\n            }\n        }\n        if (maxIndex == arr.length-1)\
    \ {\n            return -1\n        }\n        if (maxIndex == arr.length-2) {\n\
    \            return arr.last\n        }\n        if (maxIndex == arr.length-3)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-4)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-5)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-6)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-7)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-8)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-9)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-10)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-11)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-12)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-13)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-14)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-15)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-16)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-17)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-18)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-19)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-20)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-21)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-22)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-23)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-24)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-25)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-26)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-27)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-28)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-29)\
    \ {\n            return arr.last\n        }\n        if (maxIndex == arr.length-30)\
    \ {\n            return arr.last\n        }\n        if (maxIndex", "        var\
    \ maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndex = i\n            }\n        }\n        if (maxIndex\
    \ == arr.length - 1) {\n            return -1\n        } else {\n            return\
    \ maxIndex\n        }", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        val maxIndex : Long = -1\n       \
    \ val maxIndexInner = -1\n        val maxIndexInnerInner = -1\n        val maxIndexInnerInnerInner\
    \ = -1\n        val maxIndexInnerInnerInnerInner = -1\n        val maxIndexInnerInnerInnerInnerInner\
    \ = -1\n        val maxIndexInnerInnerInnerInnerInnerInner = -1\n        val maxIndexInnerInnerInnerInnerInnerInnerInner\
    \ = -1\n        val maxIndexInnerInnerInnerInnerInnerInnerInnerInnerInner = -1\n\
    \        val maxIndexInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInner =\
    \ -1\n        val maxIndexInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInner\
    \ = -1\n        val maxIndexInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInner\
    \ = -1\n        val maxIndexInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInner\
    \ = -1\n        val maxIndexInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInnerInner",
  "        val maxIndex = arr.indexWhere(x => x < arr.head)\n        if (maxIndex\
    \ == -1) return -1\n        val maxValue = arr.max\n        if (maxValue <= arr.head)\
    \ maxIndex\n        else maxIndex - 1", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x >= arr.head)\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x <= arr.head)\n        if (maxIndex == -1) {\n            -1\n        } else\
    \ {\n            maxIndex\n        }", "        var maxIndex = 0\n        var\
    \ maxValue = arr(0)\n        var index = 1\n        for (value <- arr) {\n   \
    \         if (value <= maxValue) {\n                maxValue = value\n       \
    \         maxIndex = index\n            }\n            index += 1\n        }\n\
    \        if (maxIndex == arr.length) -1\n        else maxIndex", "        val\
    \ maxIndex = 0\n        val maxValue = arr(0)\n        val maxIndexInArray = 0\n\
    \        val maxIndexInArray2 = -1\n        for(i <- 0 until arr.length) {\n \
    \           val value = arr(i)\n            if(value <= maxValue) {\n        \
    \        if(value == maxValue) {\n                    maxIndexInArray = i\n  \
    \              }\n                val value2 = arr(i-1)\n                if(value2\
    \ > maxValue) {\n                    maxIndexInArray2 = i\n                }\n\
    \            }\n        }\n        if(maxIndexInArray == maxIndexInArray2) {\n\
    \            return -1\n        }\n        return maxIndexInArray", "        val\
    \ maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n        else maxIndex\
    \ - 1", "        val max = arr.last\n        val maxIndex = arr.lastIndexWhere(x\
    \ => x >= max)\n        if (maxIndex == -1) {\n            return -1\n       \
    \ }\n        val maxIndex2 = arr.lastIndexWhere(x => x >= max && x < max)\n  \
    \      if (maxIndex2 == -1) {\n            return -1\n        }\n        val maxIndex3\
    \ = arr.lastIndexWhere(x => x >= max && x < max && x < max)\n        if (maxIndex3\
    \ == -1) {\n            return -1\n        }\n        maxIndex3", "        val\
    \ maxIndex = arr.lastIndexWhere(x => x <= arr.head)\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        if (maxIndex == arr.length) -1\n        else\
    \ maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n      \
    \  for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n   \
    \             maxValue = arr(i)\n                maxIndex = i\n            }\n\
    \        }\n        maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        var index = 1\n        for(i <- 0 until arr.length) {\n  \
    \          if(arr(i) <= maxValue) {\n                maxValue = arr(i)\n     \
    \           maxIndex = i\n            }\n        }\n        if(maxIndex == arr.length-1)\n\
    \            -1\n        else\n            maxIndex", "        val maxIndex =\
    \ arr.indexOfMax\n        if (maxIndex < 0) -1\n        else maxIndex", "    \
    \    var maxIndex = -1\n        var maxVal = -1L\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > maxVal) {\n                maxVal = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        maxIndex", "   \
    \     val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        var maxIndex = 0\n        var maxVal\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxVal) {\n                maxVal = arr(i)\n                maxIndex = i\n \
    \           }\n        }\n        maxIndex", "        var maxIndex = -1\n    \
    \    var maxVal = -1L\n        var index = 0\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > maxVal) {\n                maxVal = arr(i)\n   \
    \             maxIndex = index\n            }\n            index += 1\n      \
    \  }\n        if (maxIndex == -1) return -1\n        return maxIndex", "     \
    \   var maxIndex = -1\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1)\
    \ {\n            return -1\n        }\n        val maxValue = arr(maxIndex)\n\
    \        val prevIndex = maxIndex - 1\n        if (prevIndex >= 0) {\n       \
    \     if (arr(prevIndex) <= maxValue) {\n                return prevIndex\n  \
    \          }\n        }\n        return -1", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.indexOfMax\n        if (maxIndex == -1L) -1L\n        else maxIndex + 1L",
  "        val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ < 0) -1 else maxIndex", "        val max = arr.head\n        val maxIndex =\
    \ arr.indexWhere(_ >= max)\n        if (maxIndex == -1) {\n            return\
    \ -1\n        }\n        val maxPrev = arr.take(maxIndex).last\n        val maxNext\
    \ = arr.drop(maxIndex).last\n        if (maxNext >= max) {\n            return\
    \ maxIndex\n        }\n        canArrange(arr.drop(maxIndex + 1))", "        val\
    \ maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex < 0) -1\
    \ else maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex - 1", "        var maxIndex = 0\n        var\
    \ maxValue = arr(0)\n        for(i <- 0 until arr.length) {\n            if(arr(i)\
    \ < maxValue) {\n                maxValue = arr(i)\n                maxIndex =\
    \ i\n            }\n        }\n        if(maxIndex == arr.length-1)\n        \
    \    -1\n        else\n            maxIndex", "        var maxIndex = 0\n    \
    \    var maxValue = arr(0)\n        for(i <- 0 until arr.length) {\n         \
    \   if(arr(i) <= maxValue) {\n                maxIndex = i\n                maxValue\
    \ = arr(i)\n            }\n        }\n        if(maxIndex == arr.length - 1) -1\
    \ else maxIndex", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n  \
    \      if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.indexWhere(x => x >= arr.last)\n        if (maxIndex == -1) {\n        \
    \    -1\n        } else {\n            maxIndex + 1\n        }", "        var\
    \ maxIndex = 0\n        var maxVal = arr(0)\n        var currentIndex = 0\n  \
    \      for (i <- arr.indices) {\n            if (arr(i) > maxVal) {\n        \
    \        maxVal = arr(i)\n                maxIndex = i\n            }\n      \
    \  }\n        if (maxIndex == arr.size - 1) {\n            return -1\n       \
    \ }\n        return maxIndex", "        val max = arr.head\n        val maxIndex\
    \ = arr.indexOfMax(max)\n        if (maxIndex == -1) {\n            return -1\n\
    \        }\n        val maxPrev = arr.take(maxIndex).last\n        if (maxPrev\
    \ >= max) {\n            return maxIndex\n        }\n        val maxNext = arr.drop(maxIndex).last\n\
    \        if (maxNext >= max) {\n            return maxIndex\n        }\n     \
    \   canArrange(arr.drop(maxIndex + 1))", "        val maxIndex = 0\n        val\
    \ maxValue = arr(0)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val max", "        val maxIndex = arr.indexOfMax(arr.head)\n        if\
    \ (maxIndex == -1) {\n            -1\n        } else {\n            maxIndex\n\
    \        }", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n    \
    \    if (maxIndex == -1) -1\n        else maxIndex", "        var maxIndex = 0\n\
    \        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n    \
    \        if (arr(i) > maxValue) {\n                maxValue = arr(i)\n       \
    \         maxIndex = i\n            }\n        }\n        maxIndex", "       \
    \ val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else maxIndex",
  "        val max = arr.head\n        val maxIndex = arr.indexWhere(x => x >= max)\n\
    \        if (maxIndex == -1) {\n            return -1\n        }\n        val\
    \ maxPrev = arr.take(maxIndex).last\n        if (maxPrev >= max) {\n         \
    \   return maxIndex\n        }\n        val maxNext = arr.drop(maxIndex).last\n\
    \        if (maxNext >= max) {\n            return maxIndex\n        }\n     \
    \   val maxNextPrev = arr.drop(maxIndex).drop(1).last\n        if (maxNextPrev\
    \ >= max) {\n            return maxIndex\n        }\n        val maxNextNext =\
    \ arr.drop(maxIndex).drop(2).last\n        if (maxNextNext >= max) {\n       \
    \     return maxIndex\n        }\n        val maxNextNextPrev = arr.drop(maxIndex).drop(3).last\n\
    \        if (maxNextNextPrev >= max) {\n            return maxIndex\n        }\n\
    \        val maxNextNextNext = arr.drop(maxIndex).drop(4).last\n        if (maxNextNextNext\
    \ >= max) {\n            return maxIndex\n        }\n        val maxNextNextNextPrev\
    \ = arr.drop(maxIndex).drop(5).last\n        if (maxNextNextNextPrev >= max) {\n\
    \            return maxIndex\n        }\n        val maxNextNextNextNext = arr.drop(maxIndex).drop(6).last\n\
    \        if (maxNextNextNextNext >= max) {\n            return maxIndex\n    \
    \    }\n        val maxNextNextNextNextPrev = arr.drop(maxIndex).drop(7).last\n\
    \        if (maxNextNextNextNextPrev >= max) {\n            return maxIndex\n\
    \        }\n        val maxNextNextNextNextNext = arr.drop(maxIndex).drop(8).last\n\
    \        if (maxNextNextNextNextNext >= max) {\n            return maxIndex\n\
    \        }\n        val maxNextNextNextNextNextPrev = arr.drop(maxIndex).drop(9).last\n\
    \        if (maxNextNextNextNextNextPrev >= max) {\n            return maxIndex\n\
    \        }\n        val maxNextNextNextNextNextNext = arr.drop(maxIndex).drop(10).last\n\
    \        if (maxNextNextNextNextNextNext >= max) {\n            return maxIndex\n\
    \        }\n        val maxNextNextNextNextNextNextPrev = arr.drop(maxIndex).drop(11).last\n\
    \        if (maxNextNextNextNextNextNextPrev >= max) {\n            return maxIndex\n\
    \        }\n        val maxNextNextNextNextNextNextNext = arr.drop(maxIndex).drop(12).last\n\
    \        if (maxNextNextNextNextNextNextNext ", "        var maxIndex = 0\n  \
    \      var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n      \
    \      if (arr(i) > maxValue) {\n                maxValue = arr(i)\n         \
    \       maxIndex = i\n            }\n        }\n        maxIndex", "        val\
    \ m = arr.head\n        val n = arr.last\n        var maxIndex = -1\n        var\
    \ maxVal = -1\n        for (i <- 0 until arr.length) {\n            if (arr(i)\
    \ < m && arr(i) > maxVal) {\n                maxVal = arr(i)\n               \
    \ maxIndex = i\n            }\n        }\n        maxIndex", "        val maxIndex\
    \ = arr.indexOfMax\n        if (maxIndex == -1) -1\n        else arr.lastIndexWhere(x\
    \ => x <= arr(maxIndex))", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n\
    \        if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = 0\n        val maxValue = arr(0)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = ", "        val maxIndex = 0\n        val maxValue = arr(0)\n\
    \        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = ", "        var maxIndex = 0\n      \
    \  var maxVal = arr(0)\n        for (i <- 0 until arr.length) {\n            if\
    \ (arr(i) > maxVal) {\n                maxVal = arr(i)\n                maxIndex\
    \ = i\n            }\n        }\n        if (maxIndex == arr.length) -1\n    \
    \    else maxIndex", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n\
    \        if (maxIndex == -1)\n            -1\n        else\n            arr(maxIndex)\
    \ + 1", "        val maxIndex = arr.indexWhere(x => x >= arr.head)\n        if\
    \ (maxIndex == -1) {\n            -1\n        } else {\n            maxIndex +\
    \ 1\n        }", "        val maxIndex = arr.indexWhere(x => x < arr.head)\n \
    \       if (maxIndex == -1)\n            -1\n        else\n            maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1L) -1L\n     \
    \   else maxIndex + 1L", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr.head)\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       var maxIndex = 0\n        var maxVal = arr(0)\n        var currentIndex\
    \ = 0\n        for (i <- arr.indices) {\n            if (arr(i) > maxVal) {\n\
    \                maxVal = arr(i)\n                maxIndex = i\n            }\n\
    \        }\n        if (maxIndex == arr.size - 1) {\n            return -1\n \
    \       }\n        return maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        var index = 0\n        for (i <- 0 until arr.length) {\n \
    \           if (arr(i) <= maxValue) {\n                maxValue = arr(i)\n   \
    \             index = i\n            }\n        }\n        if (maxValue == arr(index))\
    \ {\n            maxIndex = index\n        }\n        return maxIndex", "    \
    \    val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.lastIndexWhere(x => x >= arr(0))\n  \
    \      if (maxIndex == -1) return -1\n        val maxValue = arr(maxIndex)\n \
    \       val maxIndex2 = arr.lastIndexWhere(x => x >= maxValue)\n        if (maxIndex2\
    \ == -1) return -1\n        if (maxIndex2 > maxIndex) return -1\n        maxIndex",
  "        val maxIndex = arr.indexWhere(x => x >= arr(arr.length-1))\n        if\
    \ (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x >= arr.head)\n        if (maxIndex == -1L) -1L\n        else maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        var maxIndexOfMaxValue\
    \ = -1\n        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \         maxIndexOfMaxValue = i\n            }\n        }\n        if (maxIndexOfMaxValue\
    \ == -1) {\n            return -1\n        }\n        return maxIndex", "    \
    \    var maxIndex = 0\n        var maxValue = arr(0)\n        var index = 0\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) <= maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        if (maxIndex == arr.length-1)\n            return\
    \ -1\n        else\n            return maxIndex", "        val maxIndex = 0\n\
    \        var maxVal = arr(0)\n        for (i <- 0 until arr.length) {\n      \
    \      if (arr(i) <= maxVal) {\n                maxVal = arr(i)\n            \
    \    maxIndex = i\n            }\n        }\n        maxIndex", "        val maxIndex\
    \ = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex < 0) -1\n       \
    \ else maxIndex", "        val maxIndex = 0\n        var maxValue = arr(0)\n \
    \       var index = 0\n        for(i <- 0 until arr.length) {\n            if(arr(i)\
    \ > maxValue) {\n                maxValue = arr(i)\n                maxIndex =\
    \ index\n            }\n            index += 1\n        }\n        if(maxIndex\
    \ == arr.length) -1\n        else maxIndex", "        val max = arr.last\n   \
    \     val maxIndex = arr.lastIndexWhere(_ <= max)\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax\n       \
    \ if (maxIndex == -1) {\n            return -1\n        }\n        val maxValue\
    \ = arr(maxIndex)\n        val maxIndex2 = arr.lastIndexWhere(x => x <= maxValue)\n\
    \        if (maxIndex2 == -1) {\n            return -1\n        }\n        val\
    \ maxValue2 = arr(maxIndex2)\n        if (maxValue == maxValue2) {\n         \
    \   return maxIndex\n        }\n        return -1", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr.head)\n        if (maxIndex < 0) -1\n        else maxIndex", "  \
    \      val maxIndex = arr.indexWhere(_ <= arr.head)\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex", "        val maxIndex = arr.lastIndexWhere(x =>\
    \ x >= arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", "    \
    \    var maxIndex = 0\n        var maxValue = arr(0)\n        var index = 1\n\
    \        for(i <- 0 until arr.length) {\n            if(arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = index\n       \
    \     }\n            index += 1\n        }\n        if(maxIndex == arr.length-1)\n\
    \            -1\n        else\n            maxIndex", "        var maxIndex =\
    \ 0\n        var maxVal = arr(0)\n        for (i <- 0 until arr.length) {\n  \
    \          if (arr(i) > maxVal) {\n                maxVal = arr(i)\n         \
    \       maxIndex = i\n            }\n        }\n        maxIndex", "        val\
    \ maxIndex = arr.indexOfMax\n        if (maxIndex == -1L) return -1L\n       \
    \ if (maxIndex < arr.indexOfMax-1L) return maxIndex\n        val maxVal = arr(maxIndex)\n\
    \        val maxIndex2 = arr.lastIndexOfMax(maxVal)\n        if (maxIndex2 ==\
    \ -1L) return -1L\n        if (maxIndex2 < maxIndex-1L) return maxIndex2\n   \
    \     val maxVal2 = arr(maxIndex2)\n        val maxIndex3 = arr.lastIndexOfMax(maxVal2)\n\
    \        if (maxIndex3 == -1L) return -1L\n        if (maxIndex3 < maxIndex2-1L)\
    \ return maxIndex3\n        val maxVal3 = arr(maxIndex3)\n        val maxIndex4\
    \ = arr.lastIndexOfMax(maxVal3)\n        if (maxIndex4 == -1L) return -1L\n  \
    \      if (maxIndex4 < maxIndex3-1L) return maxIndex4\n        val maxVal4 = arr(maxIndex4)\n\
    \        val maxIndex5 = arr.lastIndexOfMax(maxVal4)\n        if (maxIndex5 ==\
    \ -1L) return -1L\n        if (maxIndex5 < maxIndex4-1L) return maxIndex5\n  \
    \      val maxVal5 = arr(maxIndex5)\n        val maxIndex6 = arr.lastIndexOfMax(maxVal5)\n\
    \        if (maxIndex6 == -1L) return -1L\n        if (maxIndex6 < maxIndex5-1L)\
    \ return maxIndex6\n        val maxVal6 = arr(maxIndex6)\n        val maxIndex7\
    \ = arr.lastIndexOfMax(maxVal6)\n        if (maxIndex7 == -1L) return -1L\n  \
    \      if (maxIndex7 < maxIndex6-1L) return maxIndex7\n        val maxVal7 = arr(maxIndex7)\n\
    \        val maxIndex8 = arr.lastIndexOfMax(maxVal7)\n        if (maxIndex8 ==\
    \ -1L) return -1L\n        if (maxIndex8 < maxIndex7-1L) return maxIndex8\n  \
    \      val maxVal8 = arr(maxIndex8)\n        val maxIndex9 = arr.lastIndexOfMax(maxVal8)\n\
    \        if (maxIndex9 == -1L) return -1L\n        if (maxIndex9 < maxIndex8-1L)\
    \ return maxIndex9\n        val maxVal9 = arr(maxIndex9)\n        val maxIndex10\
    \ = arr.lastIndexOfMax(maxVal9)\n        if (maxIndex10 == -1L) return -1L\n \
    \       if (maxIndex10 < maxIndex9-1L) return maxIndex10\n        val maxVal10\
    \ = arr(maxIndex10)\n        val maxIndex11 = arr.lastIndexOfMax(maxVal10)\n \
    \       if (maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        val maxIndex = arr.indexOfMax\n  \
    \      if (maxIndex == -1) -1\n        else arr.lastIndexWhere(_ <= arr(maxIndex\
    \ - 1))", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n        if\
    \ (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex = 0\n     \
    \   val maxValue = arr(0)\n        val maxIndexInList = arr.indexWhere(x => x\
    \ <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n \
    \       }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = ", "        var maxIndex = -1l\n        var maxValue\
    \ = arr(0)\n        for (i <- arr.indices) {\n            if (arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        maxIndex", "        var maxIndex = -1\n        var\
    \ maxVal = -1L\n        var currentVal = -1L\n        for (i <- 0 until arr.length)\
    \ {\n            currentVal = arr(i)\n            if (currentVal > maxVal) {\n\
    \                maxVal = currentVal\n                maxIndex = i\n         \
    \   }\n        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex == -1) {\n            -1\n        }\
    \ else {\n            maxIndex\n        }", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1) {\n            return -1\n        }\n        val\
    \ maxValue = arr(maxIndex)\n        val prevIndex = maxIndex - 1\n        if (prevIndex\
    \ >= 0) {\n            if (arr(prevIndex) <= maxValue) {\n                return\
    \ prevIndex\n            }\n        }\n        return -1", "        val maxIndex\
    \ = arr.indexWhere(x => x < arr(0))\n        if (maxIndex == -1) {\n         \
    \   -1\n        } else {\n            arr.lastIndexWhere(x => x < arr(maxIndex))\n\
    \        }", "        val maxIndex = 0\n        var maxVal = arr(0)\n        for\
    \ (i <- 0 until arr.length) {\n            if (arr(i) < maxVal) {\n          \
    \      maxVal = arr(i)\n                maxIndex = i\n            }\n        }\n\
    \        maxIndex", "        val maxIndex = arr.indexWhere(x => x >= arr.last)\n\
    \        if (maxIndex == -1) {\n            -1\n        } else {\n           \
    \ maxIndex\n        }", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = 0\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexWhere(x => x <= maxValue)\n      \
    \  if (maxIndex == -1) {\n            return -1\n        }\n        val maxValueIndex\
    \ = maxIndex - 1\n        val maxValuePrev = arr(maxValueIndex)\n        val maxValueNext\
    \ = arr(maxValueIndex + 1)\n        if (maxValuePrev >= maxValueNext) {\n    \
    \        return maxValueIndex\n        } else {\n            return -1\n     \
    \   }", "        val max = arr.head\n        val maxIndex = arr.indexOfMax(max)\n\
    \        if (maxIndex == -1) {\n            return -1\n        }\n        val\
    \ maxPrev = arr.take(maxIndex).last\n        if (maxPrev >= max) {\n         \
    \   return maxIndex\n        }\n        val maxNext = arr.drop(maxIndex).last\n\
    \        if (maxNext >= max) {\n            return maxIndex\n        }\n     \
    \   val maxNextPrev = arr.drop(maxIndex).take(maxIndex).last\n        if (maxNextPrev\
    \ >= max) {\n            return maxIndex\n        }\n        val maxNextNext =\
    \ arr.drop(maxIndex).take(maxIndex + 1).last\n        if (maxNextNext >= max)\
    \ {\n            return maxIndex\n        }\n        val maxNextNextPrev = arr.drop(maxIndex\
    \ + 1).take(maxIndex + 1).last\n        if (maxNextNextPrev >= max) {\n      \
    \      return maxIndex\n        }\n        val maxNextNextNext = arr.drop(maxIndex\
    \ + 1).take(maxIndex + 2).last\n        if (maxNextNextNext >= max) {\n      \
    \      return maxIndex\n        }\n        val maxNextNextNextPrev = arr.drop(maxIndex\
    \ + 2).take(maxIndex + 2).last\n        if (maxNextNextNextPrev >= max) {\n  \
    \          return maxIndex\n        }\n        val maxNextNextNextNext = arr.drop(maxIndex\
    \ + 2).take(maxIndex + 3).last\n        if (maxNextNextNextNext >= max) {\n  \
    \          return maxIndex\n        }\n        val maxNextNextNextNextPrev = arr.drop(maxIndex\
    \ + 3).take(maxIndex + 3).last\n        if (maxNextNextNextNextPrev >= max) {\n\
    \            return maxIndex\n        }\n        val maxNextNextNextNextNext =\
    \ arr.drop(maxIndex + 3).take(maxIndex + 4).last\n        if (maxNextNextNextNextNext\
    \ >= max) {\n            return maxIndex\n        }\n        val maxNextNextNextNextNextPrev\
    \ = arr.drop(maxIndex + 4).take(maxIndex + 4).last\n        if (maxNextNextNextNextNextPrev\
    \ >= max) {\n            return maxIndex\n        }\n        val maxNextNextNextNextNextNext\
    \ = arr.drop(maxIndex + 4).take(maxIndex + 5).last\n        if (maxNextNextNextNextNextNextPrev\
    \ >= max) {\n            return maxIndex\n        }\n        val maxNextNextNextNextNextNextPrev\
    \ = arr.drop(maxIndex + 5).take(maxIndex + 5).last\n        if (maxNextNextNextNextNextNextPrev\
    \ >= max) {", "        val maxIndex = arr.indexOfMax\n        if (maxIndex < 0)\
    \ -1\n        else maxIndex", "        val maxIndex = arr.lastIndexWhere(x =>\
    \ x <= arr.head)\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      val maxIndex = arr.lastIndexWhere(x => x <= arr.head)\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1) {\n            return -1\n        }\n        val\
    \ maxValue = arr(maxIndex)\n        val prevValue = arr(maxIndex - 1)\n      \
    \  if (prevValue >= maxValue) {\n            return maxIndex\n        }\n    \
    \    return -1", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex - 1", "        val maxIndex = 0\n        val\
    \ maxValue = arr(0)\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = ",
  "        var maxIndex = -1\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = 0\n        val maxValue = arr(0)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList == -1) {\n \
    \           return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = ", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1L) -1L\n        else maxIndex + 1L", "        var maxIndex\
    \ = -1\n        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n\
    \            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        maxIndex", "   \
    \     val maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex\
    \ == -1) {\n            -1\n        } else {\n            maxIndex\n        }",
  "        val maxIndex = 0\n        val maxValue = arr(0)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        maxIndexInList", "        val maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr(0))\n        if (maxIndex == -1) {\n            -1\n        } else\
    \ {\n            arr.lastIndexWhere(x => x < arr(maxIndex))\n        }", "   \
    \     var maxIndex = 0\n        var maxVal = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxVal) {\n                maxVal =\
    \ arr(i)\n                maxIndex = i\n            }\n        }\n        if (maxIndex\
    \ == arr.length-1)\n            -1\n        else\n            maxIndex", "   \
    \     val max = arr.head\n        val maxIndex = arr.indexOfMax { x => x <= max\
    \ }\n        if (maxIndex == -1L) -1L\n        else maxIndex", "        var maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        for(i <- 0 until arr.length) {\n\
    \            if(arr(i) > maxValue) {\n                maxValue = arr(i)\n    \
    \            maxIndex = i\n            }\n        }\n        if(maxIndex == arr.length)\
    \ -1\n        else maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        if (maxIndex == arr.length - 1) {\n       \
    \     return -1\n        }\n        return maxIndex", "        var maxIndex =\
    \ 0\n        var maxValue = arr(0)\n        var index = 0\n        for (i <- 0\
    \ until arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = index\n            }\n            index\
    \ += 1\n        }\n        if (maxIndex == arr.length - 1) {\n            return\
    \ -1\n        } else {\n            return maxIndex\n        }", "        val\
    \ maxIndex = arr.indexWhere(x => x < arr.head)\n        if (maxIndex == -1) {\n\
    \            -1\n        } else {\n            maxIndex\n        }", "       \
    \ val maxIndex = 0\n        val maxValue = arr(0)\n        val maxIndexInArray\
    \ = 0\n        val maxIndexInArray2 = 0\n        for(i <- 0 until arr.length)\
    \ {\n            if(arr(i) > maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndexInArray = i\n            }\n            if(arr(i) > maxValue\
    \ && arr(i) != maxValue) {\n                maxValue = arr(i)\n              \
    \  maxIndexInArray2 = i\n            }\n        }\n        if(maxIndexInArray\
    \ == maxIndexInArray2) {\n            return -1\n        }\n        return maxIndexInArray",
  "        val maxIndex = 0\n        var maxVal = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxVal) {\n                maxVal =\
    \ arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = 0\n        val maxValue = arr(0)\n      \
    \  val maxIndexInd = 0\n        for(i <- 0 until arr.length) {\n            if(arr(i)\
    \ <= maxValue) {\n                maxValue = arr(i)\n                maxIndexInd\
    \ = i\n            }\n        }\n        if(maxIndexInd == arr.length-1)\n   \
    \         -1\n        else\n            maxIndex", "        val max = arr.last\n\
    \        val maxIndex = arr.lastIndexWhere(x => x >= max)\n        if (maxIndex\
    \ == -1) {\n            return -1\n        }\n        val maxIndexBefore = arr.lastIndexWhere(x\
    \ => x <= max)\n        if (maxIndexBefore == -1) {\n            return -1\n \
    \       }\n        if (maxIndexBefore < maxIndex) {\n            return maxIndex\n\
    \        }\n        return -1", "        val maxIndex = 0\n        var maxVal\
    \ = -1L\n        var index = 0\n        for (i <- 0 until arr.length) {\n    \
    \        if (arr(i) > maxVal) {\n                maxVal = arr(i)\n           \
    \     maxIndex = index\n            }\n            index += 1\n        }\n   \
    \     if (maxVal == -1L) return -1L\n        return maxIndex", "        val maxIndex\
    \ = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex < 0) -1 else maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        var currentIndex\
    \ = 0\n        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = currentIndex\n\
    \            }\n            currentIndex += 1\n        }\n        maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- arr.indices) {\n            if (arr(i) < maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        maxIndex", "        var maxIndex = -1\n        var\
    \ maxValue = arr(0)\n        for (i <- arr.indices) {\n            if (arr(i)\
    \ > maxValue) {\n                maxValue = arr(i)\n                maxIndex =\
    \ i\n            }\n        }\n        maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1) return -1\n        if (maxIndex == 0) return 0\n\
    \        val maxValue = arr(maxIndex)\n        val maxIndex2 = arr.lastIndexWhere(x\
    \ => x <= maxValue)\n        if (maxIndex2 == -1) return -1\n        if (maxIndex2\
    \ == 0) return 0\n        val maxValue2 = arr(maxIndex2)\n        if (maxValue\
    \ == maxValue2) return maxIndex\n        if (maxValue < maxValue2) return maxIndex2\n\
    \        return maxIndex2", "        val maxIndex = arr.indexOfMax\n        if\
    \ (maxIndex == -1) {\n            return -1\n        }\n        val maxValue =\
    \ arr(maxIndex)\n        val previousValue = arr(maxIndex - 1)\n        if (maxValue\
    \ >= previousValue) {\n            return maxIndex\n        }\n        return\
    \ -1", "        val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n\
    \        else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        var currentIndex = 0\n        var currentValue = arr(0)\n        var\
    \ currentMax = arr(0)\n        for (i <- 0 until arr.length) {\n            if\
    \ (currentValue <= currentMax) {\n                currentMax = currentValue\n\
    \                currentIndex = i\n            }\n            currentValue = arr(i)\n\
    \        }\n        if (currentValue > maxValue) {\n            maxValue = currentValue\n\
    \            maxIndex = currentIndex\n        }\n        return maxIndex", " \
    \       var maxIndex = 0\n        var maxValue = arr(0)\n        var currentIndex\
    \ = 1\n        var currentValue = arr(0)\n        while (currentIndex < arr.length)\
    \ {\n            if (currentValue <= maxValue) {\n                maxValue = currentValue\n\
    \                maxIndex = currentIndex\n            }\n            currentValue\
    \ = arr(currentIndex)\n            currentIndex += 1\n        }\n        if (maxIndex\
    \ == arr.length) {\n            return -1\n        }\n        return maxIndex"]
stop_tokens:
- "\n    }\n"

name: HumanEval_75_is_multiply_prime
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is less\
  \ then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    // (true)\n\
  \    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
  \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
  \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
  \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
  \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
  \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
completions: ["        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.size\n        val isMultiplyPrime = a <= primesCount\n\
    \        primes.takeWhile(x => x <= a).forall(x => a % x == 0)", "        val\
    \ primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ > a)\n        primesCount\
    \ < 3", "        val primes = mutable.ListBuffer[Long]()\n        val isPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p != 0).forall(p => a % p == 0) && isPrime", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesSet = primes.toSet\n        val isPrime =\
    \ primes.forall(x => a % x == 0)\n        val isMultiplyPrime = primes.forall(x\
    \ => a % x == 0 && isPrime)\n        isMultiplyPrime", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val primesCount = primes.count(_ < a)\n        primesCount\
    \ < 3", "        val primes = mutable.ListBuffer[Long]()\n        val isPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Long]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Long]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Long]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Long]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Long]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Long]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Long]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Long]()\n        val is", "  \
    \      val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount =\
    \ primes.size\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimeCount = isPrime.size\n        val isPrimeSum = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isPrimeSumCount = isPrimeSum.size\n      \
    \  val isPrimeSumSum = mutable.ArrayBuffer(false, false, false, false)\n     \
    \   val isPrimeSumSumCount = isPrimeSumSum.size\n        val isPrimeSumSumSum\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isPrimeSumSumSumCount\
    \ = isPrimeSumSumSum.size\n        val isPrimeSumSumSumSum = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isPrimeSumSumSumSumCount = isPrimeSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSum = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimeSumSumSumSumSumCount = isPrimeSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSum = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimeSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSum = mutable.ArrayBuffer(false, false,\
    \ false, false)\n        val isPrimeSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSum = isPrimeSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSum = isPrimeSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSumSum = isPrimeSumSumSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSum", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primesCount = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrime = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimePrimeCount = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime", "        val\
    \ primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, ", "        val\
    \ primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.exists(x => a % x == 0)\n    \
    \    val isMultiplyPrime = primes.exists(x => a % x == 0 && a % x == 0)\n    \
    \    val isMultiplyPrime2 = primes.exists(x => a % x == 0 && a % x == 0)\n   \
    \     val isMultiplyPrime3 = primes.exists(x => a % x == 0 && a % x == 0)\n  \
    \      val isMultiplyPrime4 = primes.exists(x => a % x == 0 && a % x == 0)\n \
    \       val isMultiplyPrime5 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime6 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime7 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime8 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime9 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime10 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime11 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime12 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime13 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime14 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime15 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime16 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime17 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime18 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime19 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime20 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime", "        val primes = mutable.Set[Long]()\n   \
    \     val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val isPrime = mutable.ArrayBuffer(false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isPrimeSet = mutable.Set[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25 = mutable.Set[Boolean]()\n\
    \        val is", "        val primes = mutable.Set[Long]()\n        val primesSet\
    \ = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n      \
    \  val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val "]
stop_tokens:
- "\n    }\n"

name: HumanEval_75_is_multiply_prime
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is less\
  \ then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    // (true)\n\
  \    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
  \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
  \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
  \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
  \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
  \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
completions: ["        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.size\n        val isMultiplyPrime = a <= primesCount\n\
    \        primes.takeWhile(x => x <= a).forall(x => a % x == 0)", "        val\
    \ primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ > a)\n        primesCount\
    \ < 3", "        val primes = mutable.ListBuffer[Long]()\n        val isPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p != 0).forall(p => a % p == 0) && isPrime", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesSet = primes.toSet\n        val isPrime =\
    \ primes.forall(x => a % x == 0)\n        val isMultiplyPrime = primes.forall(x\
    \ => a % x == 0 && isPrime)\n        isMultiplyPrime", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val primesCount = primes.count(_ < a)\n        primesCount\
    \ < 3", "        val primes = mutable.ListBuffer[Long]()\n        val isPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Long]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Long]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Long]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Long]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Long]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Long]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Long]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Long]()\n        val is", "  \
    \      val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount =\
    \ primes.size\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimeCount = isPrime.size\n        val isPrimeSum = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isPrimeSumCount = isPrimeSum.size\n      \
    \  val isPrimeSumSum = mutable.ArrayBuffer(false, false, false, false)\n     \
    \   val isPrimeSumSumCount = isPrimeSumSum.size\n        val isPrimeSumSumSum\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isPrimeSumSumSumCount\
    \ = isPrimeSumSumSum.size\n        val isPrimeSumSumSumSum = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isPrimeSumSumSumSumCount = isPrimeSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSum = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimeSumSumSumSumSumCount = isPrimeSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSum = mutable.ArrayBuffer(false, false, false,\
    \ false)\n        val isPrimeSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSum = mutable.ArrayBuffer(false, false,\
    \ false, false)\n        val isPrimeSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSum = isPrimeSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSum = isPrimeSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSumSum = isPrimeSumSumSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSumSumSumSumSumSumSumCount = isPrimeSumSumSumSumSumSumSumSumSumSumSumSum.size\n\
    \        val isPrimeSumSumSumSum", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primesCount = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrime = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimePrimeCount = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime", "        val\
    \ primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, ", "        val\
    \ primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.exists(x => a % x == 0)\n    \
    \    val isMultiplyPrime = primes.exists(x => a % x == 0 && a % x == 0)\n    \
    \    val isMultiplyPrime2 = primes.exists(x => a % x == 0 && a % x == 0)\n   \
    \     val isMultiplyPrime3 = primes.exists(x => a % x == 0 && a % x == 0)\n  \
    \      val isMultiplyPrime4 = primes.exists(x => a % x == 0 && a % x == 0)\n \
    \       val isMultiplyPrime5 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime6 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime7 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime8 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime9 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime10 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime11 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime12 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime13 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime14 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime15 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime16 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime17 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime18 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime19 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime20 = primes.exists(x => a % x == 0 && a % x == 0)\n\
    \        val isMultiplyPrime", "        val primes = mutable.Set[Long]()\n   \
    \     val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val isPrime = mutable.ArrayBuffer(false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isPrimeSet = mutable.Set[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25 = mutable.Set[Boolean]()\n\
    \        val is", "        val primes = mutable.Set[Long]()\n        val primesSet\
    \ = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n      \
    \  val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val primesCount = primes.count(_ < a)\n        primesCount < 3", "  \
    \      val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(p => a % p == 0).length\
    \ == primes.length\n        val isMultiplication = isPrime && a % primes.last\
    \ == 0\n        val isMultiplyPrime = isMultiplication && isPrime\n        isMultiplyPrime",
  "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime2 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime3 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime4\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime5 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime6 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime7 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime8\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime9 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime10 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime11 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime12 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime13\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime14 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime15 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime16 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime17 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime18\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime19 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime20 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime21 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime22 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime23\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime24 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime25 = primes.", "        val primes\
    \ = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, ", "        val\
    \ primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime27\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime28 = mut",
  "        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.Set[Long]()\n\
    \        val primeFactors = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = a % primes.head == 0\n    \
    \    val isMultiplyPrime = primes.takeWhile(p => p < a).forall(p => a % p == 0)\n\
    \        primes.takeWhile(p => p < a).forall(p => a % p == 0) && isMultiplyPrime",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n   \
    \     val primesCount = primes.count(_ > a)\n        primesCount < 3", "     \
    \   val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrime = mutable.Set[Long]()\n        val\
    \ isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount =\
    \ primes.count(_ > a)\n        primesCount < 3", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ > a)\n        primesCount\
    \ < 3", "        val primes = mutable.ListBuffer[Long]()\n        val isPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplication = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiply", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Long]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Long]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Long]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Long]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Long]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Long]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Long]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Long]()\n        val is", "  \
    \      val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.contains(a) && primes.forall(p\
    \ => a % p == 0)\n        isPrime", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.ListBuffer[Long]()\n        val\
    \ primeFactors = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val ", "        val primes = mutable.Set[Long]()\n\
    \        val primeFactors = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = ", "        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val primesSet = primes.toSet\n        val isPrime = primes.forall(x =>\
    \ a % x == 0)\n        val isMultiplyPrime = primes.forall(x => a % x == 0 &&\
    \ primesSet.contains(x) && isPrime)\n        isMultiplyPrime", "        val primes\
    \ = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, ", "        val\
    \ primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime27\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime28 = mut",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount =\
    \ primes.count(_ > a)\n        primesCount < 3", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrime = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Long]()\n     \
    \   val isMultiplyPrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n     \
    \   val isMultiplyPrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n     \
    \   val isMultiplyPrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime",
  "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p == 0).length == 1\n        primes.takeWhile(p\
    \ => a % p == 0).length == 3 && isPrime", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrime = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Long]()\n     \
    \   val isMultiplyPrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n     \
    \   val isMultiplyPrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n     \
    \   val isMultiplyPrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime", " \
    \       val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val ", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ListBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ > a)\n        primesCount\
    \ <= 2", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplication\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplying\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMulti", " \
    \       val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.length\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, ", " \
    \       val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count\n        val isMultiplyPrime = primes.takeWhile(p => p < a).forall(p\
    \ => a % p == 0)\n        primes.takeWhile(p => p < a).forall(p => a % p == 0)\n\
    \        isMultiplyPrime", "        val primes = mutable.ArrayBuffer(2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val primesCount = primes.size\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n  \
    \      val isPrime = mutable.ArrayBuffer(false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, ", "        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime29 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime31 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime37\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime41 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime43 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime47 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime51\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime53 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime59 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime61 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime67\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime71 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime73 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime79 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime81\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime83 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime89 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMulti", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val isPrime = primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n \
    \       primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p\
    \ == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p\
    \ => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p\
    \ == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n \
    \       primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p\
    \ == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p\
    \ => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p\
    \ == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n \
    \       primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p\
    \ == 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p\
    \ => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p\
    \ == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n \
    \       primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.exists(x => x == a)\n\
    \        if (isMultiplyPrime) {\n            true\n        } else {\n        \
    \    false\n        }", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val isPrime = primes.takeWhile(p => a % p == 0).length == primes.length\n\
    \        val isMultiplyPrime = primes.takeWhile(p => a % p == 0).forall(p => a\
    \ % p == 0)\n        val isMultiplyPrime2 = primes.takeWhile(p => a % p == 0).forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime3 = primes.takeWhile(p => a % p ==\
    \ 0).forall(p => a % p == 0)\n        val isMultiplyPrime4 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime5 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime6 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime7 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime8 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime9 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime10 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime11 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime12 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime13 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime14 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0)\n        val isMultiplyPrime15 = primes.takeWhile(p\
    \ => a % p == 0).forall(p => a ", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = mutable.ArrayBuffer(true, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n   \
    \     val isPrime = mutable.ArrayBuffer(false, false, false, false)\n        val\
    \ isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n        val\
    \ isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n       \
    \ val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n   \
    \     val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.ListBuffer[Long]()\n        val\
    \ isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n   \
    \     if (isMultiplyPrime) {\n            val lastPrime = primes.last\n      \
    \      val isPrime = primes.exists(p => a % p.equals(0))\n            if (isPrime)\
    \ {\n                val lastPrimeIndex = primes.lastIndex\n                val\
    \ lastPrimeIndex = primes.lastIndex\n                val isPrime = primes.exists(p\
    \ => a % p.equals(0))\n                if (isPrime) {\n                    val\
    \ lastPrimeIndex = primes.lastIndex\n                    val lastPrimeIndex =\
    \ primes.lastIndex\n                    val isPrime = primes.exists(p => a % p.equals(0))\n\
    \                    if (isPrime) {\n                        val lastPrimeIndex\
    \ = primes.lastIndex\n                        val lastPrimeIndex = primes.lastIndex\n\
    \                        val isPrime = primes.exists(p => a % p.equals(0))\n \
    \                       if (isPrime) {\n                            val lastPrimeIndex\
    \ = primes.lastIndex\n                            val lastPrimeIndex = primes.lastIndex\n\
    \                            val isPrime = primes.exists(p => a % p.equals(0))\n\
    \                            if (isPrime) {\n                                val\
    \ lastPrimeIndex = primes.lastIndex\n                                val lastPrimeIndex\
    \ = primes.lastIndex\n                                val isPrime = primes.exists(p\
    \ => a % p.equals(0))\n                                if (isPrime) {\n      \
    \                              val lastPrimeIndex = primes.lastIndex\n       \
    \                             val lastPrimeIndex = primes.lastIndex\n        \
    \                            val isPrime = primes.exists(p => a % p.equals(0))\n\
    \                                    if (isPrime) {\n                        \
    \                val lastPrimeIndex = primes.lastIndex\n                     \
    \                   val lastPrimeIndex = primes.lastIndex\n                  \
    \                      val isPrime = primes.exists(p => a % p.equals(0))\n   \
    \                                     if (isPrime) {\n                       \
    \                     val lastPrimeIndex = primes.lastIndex\n                \
    \                            val lastPrimeIndex = primes.lastIndex\n         \
    \                                   val isPrime = primes.exists(p => a % p.equals(0))\n\
    \                                            if (isPrime) {\n                \
    \                                val lastPrimeIndex = primes.lastIndex\n     \
    \                                           val lastPrimeIndex = primes.lastIndex\n\
    \                                                val isPrime = primes.exists(p\
    \ => a % p.equals(0))\n                                                if (isPrime)\
    \ {\n                                                    val lastPrimeIndex =\
    \ primes.lastIndex\n                                                    val lastPri",
  "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplication = a % 3 == 0\n\
    \        val isMultiplyPrime = primes.forall(p => a % p == 0)\n        val isMultiplyPrime2\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplyPrime3 = primes.forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime4 = primes.forall(p => a % p == 0)\n\
    \        val isMultiplyPrime5 = primes.forall(p => a % p == 0)\n        val isMultiplyPrime6\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplyPrime7 = primes.forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime8 = primes.forall(p => a % p == 0)\n\
    \        val isMultiplyPrime9 = primes.forall(p => a % p == 0)\n        val isMultiplyPrime10\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplyPrime11 = primes.forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime12 = primes.forall(p => a % p ==\
    \ 0)\n        val isMultiplyPrime13 = primes.forall(p => a % p == 0)\n       \
    \ val isMultiplyPrime14 = primes.forall(p => a % p == 0)\n        val isMultiplyPrime15\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplyPrime16 = primes.forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime17 = primes.forall(p => a % p ==\
    \ 0)\n        val isMultiplyPrime18 = primes.forall(p => a % p == 0)\n       \
    \ val isMultiplyPrime19 = primes.forall(p => a % p == 0)\n        val isMultiplyPrime20\
    \ = primes.forall(p => a % p == 0)\n        val isMultiplyPrime21 = primes.forall(p\
    \ => a % p == 0)\n        val isMultiplyPrime22 = primes.forall(", "        val\
    \ primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ < a)\n        primesCount\
    \ < 3", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.count(_ > a)\n        primesCount <= 3", "       \
    \ val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val ", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.size\n        val isPrime\
    \ = primes.filter(_ < a).forall(a => a % _ == 0)\n        val isMultiplyPrime\
    \ = isPrime && primes.forall(a => a % a == 0)\n        isMultiplyPrime", "   \
    \     val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime31 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime37 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime41\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime43 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime47 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime51\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime53 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime59 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime61\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime67 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime71 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime73\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime79 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime81 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime83\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime89 = mutable.ListBuffer[Boolean]()\n\
    \        val isMulti", "        val primes = mutable.ListBuffer[Long]()\n    \
    \    val n = a / 3\n        for(i <- 2 to n by 2){\n            if((a % i) ==\
    \ 0){\n                primes += i\n            }\n        }\n        primes.contains(a)",
  "        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val n = a\n        for(i <- 2 to n by 2){\n            if(n%i==0){\n\
    \                primes += i\n            }\n        }\n        primes.contains(a)\
    \ && primes.size == 3", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val primesCount = primes.length\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, ", "        val primes = mutable.Set[Long]()\n        val primesSet =\
    \ mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n        val\
    \ isPrimeSet = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Boolean]()\n        val is", " \
    \       val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, ", "        val primes = mutable.Set[Long]()\n        val primeFactors\
    \ = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n      \
    \  val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = ", "        val primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime27 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val primesCount = primes.count(_ > a)\n        primesCount < 3", "  \
    \      val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val ", "        val primes\
    \ = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount = primes.size\n\
    \        val isMultiplyPrime = a % primes(primesCount - 1) != 0\n        primes.clear()\n\
    \        primesCount\n        isMultiplyPrime", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ < a) \n        val\
    \ isMultiplyPrime = primes.takeWhile(_ < a).forall(a % _ == 0)\n        primesCount\
    \ > 0 && !isMultiplyPrime", "        val primes = mutable.Set[Long]()\n      \
    \  val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Long]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Long]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Long]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Long]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Long]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Long]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Long]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Long]()\n        val is", "  \
    \      val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = ", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[", "        val primes = mutable.ListBuffer[Long]()\n \
    \       val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[",
  "        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ > a)\n        if (primesCount\
    \ < 3) {\n            return false\n        }\n        val isPrime = primes.takeWhile(_\
    \ > a).forall(a % _ == 0)\n        return isPrime", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ < a).length\n    \
    \    val isMultiplyPrime = primes.count(_ < a) == primesCount\n        isMultiplyPrime",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplication = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiply", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[",
  "        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is", "        val primes = mutable.ListBuffer(2,\
    \ 3, 5, 7)\n        val isPrime = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n  \
    \      val primesCount = primes.size\n        val isPrime = primes.takeWhile(x\
    \ => a % x == 0).length == primesCount\n        isPrime", "        val primes\
    \ = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = primes.exists(a\
    \ % _ == 0)\n        val isMultiplication = isPrime && a < 100\n        isMultiplication",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = a <= 100\n        val isMultiplyPrime =\
    \ primes.exists(p => p <= a && a % p == 0)\n        if (isPrime && isMultiplyPrime)\
    \ {\n            true\n        } else {\n            false\n        }", "    \
    \    val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.ListBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ < a) \n        primesCount\
    \ < 3", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val isPrime = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n \
    \       primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n        isPrime",
  "        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.size\n        val isPrime\
    \ = primes.takeWhile(x => a % x == 0).size == primesCount\n        isPrime", " \
    \       val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.length\n        val isMultiplyPrime\
    \ = a % primes(primesCount) == 0\n        if (isMultiplyPrime) {\n           \
    \ primes.takeWhile(p => a % p != 0).forall(p => primes.takeWhile(p => a % p !=\
    \ 0).forall(p => a % p != 0))\n        }\n        return isMultiplyPrime", " \
    \       val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = primes.takeWhile(x => a % x == 0).length\
    \ == primesCount\n        isPrime", "        val primes = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Long]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime4 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Long]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime7 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Long]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime10 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Long]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime13 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Long]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime16 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Long]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime19 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Long]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime22 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Long]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime25 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Long]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime28 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime29 = mutable.Set[Long]()\n        val isMultiply",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount <= 3", "        val primes = mutable.Set[Long]()\n\
    \        val primeFactors = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = ", "        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ > a)\n        primesCount\
    \ <= 3", "        val primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime27 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val ", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        val n = a\n        val primeFactors =\
    \ mutable.ListBuffer[Long]()\n        val isPrime = true\n        val isMultiplyPrime\
    \ = true\n        val isMultiplyPrime2 = true\n        val isMultiplyPrime3 =\
    \ true\n        val isMultiplyPrime4 = true\n        val isMultiplyPrime5 = true\n\
    \        val isMultiplyPrime6 = true\n        val isMultiplyPrime7 = true\n  \
    \      val isMultiplyPrime8 = true\n        val isMultiplyPrime9 = true\n    \
    \    val isMultiplyPrime10 = true\n        val isMultiplyPrime11 = true\n    \
    \    val isMultiplyPrime12 = true\n        val isMultiplyPrime13 = true\n    \
    \    val isMultiplyPrime14 = true\n        val isMultiplyPrime15 = true\n    \
    \    val isMultiplyPrime16 = true\n        val isMultiplyPrime17 = true\n    \
    \    val isMultiplyPrime18 = true\n        val isMultiplyPrime19 = true\n    \
    \    val isMultiplyPrime20 = true\n        val isMultiplyPrime21 = true\n    \
    \    val isMultiplyPrime22 = true\n        val isMultiplyPrime23 = true\n    \
    \    val isMultiplyPrime24 = true\n        val isMultiplyPrime25 = true\n    \
    \    val isMultiplyPrime26 = true\n        val isMultiplyPrime27 = true\n    \
    \    val isMultiplyPrime28 = true\n        val isMultiplyPrime29 = true\n    \
    \    val isMultiplyPrime30 = true\n        val isMultiplyPrime31 = true\n    \
    \    val isMultiplyPrime32 = true\n        val isMultiplyPrime33 = true\n    \
    \    val isMultiplyPrime34 = true\n        val isMultiplyPrime35 = true\n    \
    \    val isMultiplyPrime36 = true\n        val isMultiplyPrime37 = true\n    \
    \    val isMultiplyPrime38 = true\n        val isMultiplyPrime39 = true\n    \
    \    val isMultiplyPrime40 = true\n        val isMultiplyPrime41 = true\n    \
    \    val isMultiplyPrime42 = true\n        val isMultiplyPrime43 = true\n    \
    \    val isMultiplyPrime44 = true\n        val isMultiplyPrime45 = true\n    \
    \    val isMultiplyPrime46 = true\n        val isMultiplyPrime47", "        val\
    \ primes = mutable.ArrayBuffer.empty[Long]\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isPrimeSet2 = mutable.Set[Long]()\n        val isPrimeSet3 = mutable.Set[Long]()\n\
    \        val isPrimeSet4 = mutable.Set[Long]()\n        val isPrimeSet5 = mutable.Set[Long]()\n\
    \        val isPrimeSet6 = mutable.Set[Long]()\n        val isPrimeSet7 = mutable.Set[Long]()\n\
    \        val isPrimeSet8 = mutable.Set[Long]()\n        val isPrimeSet9 = mutable.Set[Long]()\n\
    \        val isPrimeSet10 = mutable.Set[Long]()\n        val isPrimeSet11 = mutable.Set[Long]()\n\
    \        val isPrimeSet12 = mutable.Set[Long]()\n        val isPrimeSet13 = mutable.Set[Long]()\n\
    \        val isPrimeSet14 = mutable.Set[Long]()\n        val isPrimeSet15 = mutable.Set[Long]()\n\
    \        val isPrimeSet16 = mutable.Set[Long]()\n        val isPrimeSet17 = mutable.Set[Long]()\n\
    \        val isPrimeSet18 = mutable.Set[Long]()\n        val isPrimeSet19 = mutable.Set[Long]()\n\
    \        val isPrimeSet20 = mutable.Set[Long]()\n        val isPrimeSet21 = mutable.Set[Long]()\n\
    \        val isPrimeSet22 = mutable.Set[Long]()\n        val isPrimeSet23 = mutable.Set[Long]()\n\
    \        val isPrimeSet24 = mutable.Set[Long]()\n        val isPrimeSet25 = mutable.Set[Long]()\n\
    \        val isPrimeSet26 = mutable.Set[Long]()\n        val isPrimeSet27 = mutable.Set[Long]()\n\
    \        val isPrimeSet28 = mutable.Set[Long]()\n        val isPrimeSet29 = mutable.Set[Long]()\n\
    \        val isPrimeSet30 = mutable.Set[Long]()\n        val is", "        val\
    \ primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val ", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n  \
    \      val isPrime = primes.takeWhile(p => a % p == 0).length == primes.length\n\
    \        primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)", "       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(p\
    \ => a % p == 0).length == primes.length\n        primes.takeWhile(p => a % p\
    \ == 0).length == 3 && isPrime", "        val primes = mutable.Set[Long]()\n \
    \       val primeFactors = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = ", "        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ListBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ < a)\n        primesCount\
    \ <= 3", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.count(_ < a) \n        primesCount <= 3", "      \
    \  val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Boolean]()\n        val is", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(_ < a).forall(a % _\
    \ == 0)\n        primes.takeWhile(_ < a).forall(a % _ == 0) && isPrime", "   \
    \     val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val primesCount = primes.size\n        val isMultiplyPrime = a % primes(primesCount\
    \ - 1) != 0\n        if (isMultiplyPrime) {\n            val isPrime = primes.exists(p\
    \ => a % p == 0)\n            if (isPrime) {\n                val isPrime2 = primes.exists(p\
    \ => a % p == 0)\n                if (isPrime2) {\n                    val isPrime3\
    \ = primes.exists(p => a % p == 0)\n                    if (isPrime3) {\n    \
    \                    val isPrime4 = primes.exists(p => a % p == 0)\n         \
    \               if (isPrime4) {\n                            val isPrime5 = primes.exists(p\
    \ => a % p == 0)\n                            if (isPrime5) {\n              \
    \                  val isPrime6 = primes.exists(p => a % p == 0)\n           \
    \                     if (isPrime6) {\n                                    val\
    \ isPrime7 = primes.exists(p => a % p == 0)\n                                \
    \    if (isPrime7) {\n                                        val isPrime8 = primes.exists(p\
    \ => a % p == 0)\n                                        if (isPrime8) {\n  \
    \                                          val isPrime9 = primes.exists(p => a\
    \ % p == 0)\n                                            if (isPrime9) {\n   \
    \                                             val isPrime10 = primes.exists(p\
    \ => a % p == 0)\n                                                if (isPrime10)\
    \ {\n                                                    val isPrime11 = primes.exists(p\
    \ => a % p == 0)\n                                                    if (isPrime11)\
    \ {\n                                                        val isPrime12 = primes.exists(p\
    \ => a % p == 0)\n                                                        if (isPrime12)\
    \ {\n                                                            val isPrime13\
    \ = primes.exists(p => a % p == 0)\n                                         \
    \                   if (isPrime13) {\n                                       \
    \                         val isPrime14 = primes.exists(p => a % p == 0)\n   \
    \                                                             if (isPrime14) {\n\
    \                                                                    val isPrime15\
    \ = primes.exists(p => a % p == 0)\n                                         \
    \                           if (isPrime15) {\n                               \
    \                                         val isPrime16 = primes.exists(p => a\
    \ % p == 0)\n                                                                \
    \        if (isPrime16) {\n                                                  \
    \          val isPrime17 = primes.exists(p => a % p == 0)\n                  \
    \                                          if (isPrime17) {\n                \
    \                                                val isPrime18 = primes.exists(p\
    \ => a ", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.count(_ > a)\n        primesCount < 3", "        val\
    \ primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(p => a % p == 0).length\
    \ == 1\n        primes.takeWhile(p => a % p == 0).length == 3 && isPrime", " \
    \       val primes = mutable.ListBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.exists(_ % a == 0)\n        val\
    \ isMultiplication = a % 3 == 0\n        isPrime && isMultiplication", "     \
    \   val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount = primes.length\n\
    \        val isPrime = mutable.ArrayBuffer(false, false, false, false)\n     \
    \   val isPrimeCount = isPrime.length\n        val isPrimePrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isPrimePrimeCount = isPrimePrime.length\n\
    \        val isPrimePrimePrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isPrimePrimePrimeCount = isPrimePrimePrime.length\n        val isPrimePrimePrimePrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isPrimePrimePrimePrimeCount\
    \ = isPrimePrimePrimePrime.length\n        val isPrimePrimePrimePrimePrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isPrimePrimePrimePrimePrimeCount = isPrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrime = isPrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimeCount = isPrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = isPrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeCount = isPrimePrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = isPrimePrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeCount = isPrimePrimePrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = isPrimePrimePrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeCount = isPrimePrimePrimePrimePrimePrimePrimePrime.length\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime", "        val primes\
    \ = mutable.ListBuffer(2, 3, 5, 7)\n        val primesCount = primes.size\n  \
    \      val isPrime = mutable.ListBuffer(false, false, false, false)\n        val\
    \ isPrimeCount = isPrime.size\n        val isMultiplyPrime = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrimeCount = isMultiplyPrime.size\n\
    \        val isMultiplyPrimePrime = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrimePrimeCount = isMultiplyPrimePrime.size\n        val\
    \ isMultiplyPrimePrimePrime = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrimePrimePrimeCount = isMultiplyPrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrime = mutable.ListBuffer(false, false,\
    \ false, false)\n        val isMultiplyPrimePrimePrimePrimeCount = isMultiplyPrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrime = mutable.ListBuffer(false, false,\
    \ false, false)\n        val isMultiplyPrimePrimePrimePrimePrimeCount = isMultiplyPrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime.size\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime = isMultiplyPrimePrimePrimePrimePrimePrime",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime = primes.exists(a %\
    \ _ == 0)\n        val isMultiplyPrime2 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplyPrime3 = primes.exists(a % _ == 0)\n        val isMultiplyPrime4 =\
    \ primes.exists(a % _ == 0)\n        val isMultiplyPrime5 = primes.exists(a %\
    \ _ == 0)\n        val isMultiplyPrime6 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplyPrime7 = primes.exists(a % _ == 0)\n        val isMultiplyPrime8 =\
    \ primes.exists(a % _ == 0)\n        val isMultiplyPrime9 = primes.exists(a %\
    \ _ == 0)\n        val isMultiplyPrime10 = primes.exists(a % _ == 0)\n       \
    \ val isMultiplyPrime11 = primes.exists(a % _ == 0)\n        val isMultiplyPrime12\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime13 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime14 = primes.exists(a % _ == 0)\n     \
    \   val isMultiplyPrime15 = primes.exists(a % _ == 0)\n        val isMultiplyPrime16\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime17 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime18 = primes.exists(a % _ == 0)\n     \
    \   val isMultiplyPrime19 = primes.exists(a % _ == 0)\n        val isMultiplyPrime20\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime21 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime22 = primes.exists(a % _ == 0)\n     \
    \   val isMultiplyPrime23 = primes.exists(a % _ == 0)\n        val isMultiplyPrime24\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime25 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime26 = primes.exists(a % _ == 0)\n", " \
    \       val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Boolean]()\n        val isMultiply", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val isPrime = mutable.ArrayBuffer(false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count\n        val isMultiplyPrime\
    \ = primes.takeWhile(x => x <= a).forall(x => a % x == 0)\n        primesCount\
    \ <= 3 && isMultiplyPrime", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Boolean]()\n        val is", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.count\n        val isPrime = primes.exists(x => a\
    \ % x == 0)\n        val isMultiplyPrime = primes.exists(x => a % x == 0 && isPrime)\n\
    \        isMultiplyPrime", "        val primes = mutable.ArrayBuffer(2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ > a)\n        primesCount\
    \ <= 2", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.count(_ > a)\n        primesCount < 3", "        val\
    \ primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n  \
    \      val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime29 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime31 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime37\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime41 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime43 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime47\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime51 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime53 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime59\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime61 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime67 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime71\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime73 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime79 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime81\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime83 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime89 = mutable.ListBuffer[Boolean]()\n        val isMulti",
  "        val primes = mutable.ListBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ListBuffer(true,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.size\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Long]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime4 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Long]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime7 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Long]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime10 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Long]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime13 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Long]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime16 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Long]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime19 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Long]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime22 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Long]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime25 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Long]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime28 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime29 = mutable.Set[Long]()\n        val isMultiply",
  "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a) \n        primesCount < 3", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Long]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Long]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Long]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Long]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Long]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Long]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Long]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Long]()\n        val is", "  \
    \      val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Boolean]()\n        val is", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ < a)\n        primesCount\
    \ < 3", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val isPrime = mutable.ArrayBuffer(false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, ", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val n = a\n        val isPrime = true\n        for (i <- 2 to n by 2)\
    \ {\n            if (n % i == 0) {\n                isPrime = false\n        \
    \        break\n            }\n        }\n        if (isPrime) {\n           \
    \ primes += n\n        }\n        primes.forall(p => isMultiplyPrime(p))", " \
    \       val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3 && primesCount > 0", "      \
    \  val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isPrimeSet2 = mutable.Set[Long]()\n        val isPrimeSet3 = mutable.Set[Long]()\n\
    \        val isPrimeSet4 = mutable.Set[Long]()\n        val isPrimeSet5 = mutable.Set[Long]()\n\
    \        val isPrimeSet6 = mutable.Set[Long]()\n        val isPrimeSet7 = mutable.Set[Long]()\n\
    \        val isPrimeSet8 = mutable.Set[Long]()\n        val isPrimeSet9 = mutable.Set[Long]()\n\
    \        val isPrimeSet10 = mutable.Set[Long]()\n        val isPrimeSet11 = mutable.Set[Long]()\n\
    \        val isPrimeSet12 = mutable.Set[Long]()\n        val isPrimeSet13 = mutable.Set[Long]()\n\
    \        val isPrimeSet14 = mutable.Set[Long]()\n        val isPrimeSet15 = mutable.Set[Long]()\n\
    \        val isPrimeSet16 = mutable.Set[Long]()\n        val isPrimeSet17 = mutable.Set[Long]()\n\
    \        val isPrimeSet18 = mutable.Set[Long]()\n        val isPrimeSet19 = mutable.Set[Long]()\n\
    \        val isPrimeSet20 = mutable.Set[Long]()\n        val isPrimeSet21 = mutable.Set[Long]()\n\
    \        val isPrimeSet22 = mutable.Set[Long]()\n        val isPrimeSet23 = mutable.Set[Long]()\n\
    \        val isPrimeSet24 = mutable.Set[Long]()\n        val isPrimeSet25 = mutable.Set[Long]()\n\
    \        val isPrimeSet26 = mutable.Set[Long]()\n        val isPrimeSet27 = mutable.Set[Long]()\n\
    \        val isPrimeSet28 = mutable.Set[Long]()\n        val isPrimeSet29 = mutable.Set[Long]()\n\
    \        val isPrimeSet30 = mutable.Set[Long]()\n        val isPri", "       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(_ < a).forall(a % _\
    \ == 0)\n        isPrime", "        val primes = mutable.ListBuffer(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val primesSet = primes.toSet\n        val isMultiplicationPrime\
    \ = a % primes.forall(p => primesSet.contains(p))\n        isMultiplicationPrime",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet\
    \ = primes.toSet\n        val isPrime = primes.exists(a % _ == 0)\n        val\
    \ isMultiplyPrime = primes.exists(a => primesSet.contains(a * a))\n        isMultiplyPrime",
  "        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.Set[Long]()\n        val primesSet\
    \ = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n      \
    \  val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ListBuffer[Long]()\n        val\
    \ primeFactors = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[",
  "        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[", "        val primes = mutable.ListBuffer[Long]()\n \
    \       val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val ", "        val\
    \ primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, ", "        val\
    \ primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.ListBuffer[Long]()\n        val\
    \ primeFactors = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount =\
    \ primes.count(_ > a)\n        primesCount < 3", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Long]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Long]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Long]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Long]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Long]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Long]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Long]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Long]()\n        val is", "  \
    \      val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3"]
stop_tokens:
- "\n    }\n"

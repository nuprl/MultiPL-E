language: scala
name: HumanEval_97_multiply
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n        val\
    \ unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l),\
    \ (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l),\
    \ (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l),\
    \ (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l),\
    \ (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpb97vno7t.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits\
    \ * unitDigits2\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpb97vno7t.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpb97vno7t.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits / \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpb97vno7t.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpb97vno7t.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits * \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1659799287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits.toLong\n        val unitDigits\
    \ = unitDigits.toString.toInt\n        val unitDigits = unitDigits * unitDigits2\n\
    \        val unitDigits = unitDigits.toString.toInt\n        val unitDigits =\
    \ unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigit\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l),\
    \ (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l),\
    \ (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l),\
    \ (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l),\
    \ (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqor8jcud.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits\
    \ * unitDigits2\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toLong\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e["
  stdout: ''
  timestamp: 1659799287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigit\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(multiply((148l), (412l))\
    \ == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpd6qkgnc2.scala:64:4 ----------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:23:12\
    \ -----------------"
  stdout: ''
  timestamp: 1659799286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a / 10\n        val unitDigits2\
    \ = b / 10\n        val unitDigits3 = (unitDigits * unitDigits2) / 10\n      \
    \  val unitDigits31 = unitDigits3 * 10\n        val unitDigits311 = unitDigits31\
    \ * 10\n        val unitDigits311 = unitDigits311 * 10\n        val unitDigits311\
    \ = unitDigits311 * 10\n        val unitDigits311 = unitDigits311 * 10\n     \
    \   val unitDigits311 = unitDigits311 * 10\n        val unitDigits311 = unitDigits311\
    \ * 10\n        val unitDigits311 = unitDigits311 * 10\n        val unitDigits311\
    \ = unitDigits311 * 10\n        val unitDigits311 = unitDigits311 * 10\n     \
    \   val unitDigits311 = unitDigits311 * 10\n        val unitDigits311 = unitDigits311\
    \ * 10\n        val unitDigits311 = unitDigits311 * 10\n        val unitDigits311\
    \ = unitDigits311 * 10\n        val unitDigits311 = unitDigits311 * 10\n     \
    \   val unitDigits311 = unitDigits311 * 10\n        val unitDigits311 = unitDigits311\
    \ * 10\n        val unitDigits311 = unitDigits311 * 10\n        val unitDigits311\
    \ = unitDigits311 * 10\n        val unitDigits311 = unitDigits311 * 10\n     \
    \   val unitDigits311 = unitDigits311 * 10\n        val unitDigits311 = unitDigits311\
    \ * 10\n        val unitDigits311 = unitDigits311 * 10\n        val unitDigits311\
    \ = unitDigits311 * 10\n        val unitDigits311 = unitDigits311 * 10\n     \
    \   val unitDigits311 = unitDigits311 * 10\n        val unitDigits311 = unitDigits311\
    \ * 10\n        val unitDigits311 = unitDigits311 * 10\n        val unitDigits311\
    \ = unitDigits311 * 10\n        val unitDigits311 = unitDigits311 * 10\n     \
    \   val unitDigits311 = unitDigits311 * 10\n        val unitDigits311 = unitDigits311\
    \ * 10\n        val unitDigits311 = unitDigits311 * 10\n        val unitDigits311\
    \ = unitDigits311 * 10\n        val unitDigits311 = unitDigits311 * 10\n     \
    \   val unitDigits311 = unitDigits311 * 10\n        val unitDigits311 = unitDigits311\
    \ * 10\n    }\n    def main(args: Array[String]) = {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbrebxfi7.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36munitDigits311\e[0m = unitDigits311\
    \ * \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits311 is already defined as \e[33mvalue\e[0m \e[35munitDigits311\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpbrebxfi7.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36munitDigits311\e[0m = unitDigits311 *\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits311 is already defined as \e[33mvalue\e[0m \e[35munitDigits311\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpbrebxfi7.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36munitDigits311\e[0m = unitDigits311 *\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits311 is already defined as \e[33mvalue\e[0m \e[35munitDigits311\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpbrebxfi7.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36munitDigits311\e[0m = unitDigits311 *\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits311 is already defined as \e[33mvalue\e[0m \e[35munitDigits311\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpbrebxfi7.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36munitDigits311\e[0m = unitDigits311 *\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m    "
  stdout: ''
  timestamp: 1659799495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n        val\
    \ unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unit\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l),\
    \ (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l),\
    \ (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l),\
    \ (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l),\
    \ (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphety9hd4.scala:59:4 ----------------------------\e\
    [0m\e[0m\n\e[31m59 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:2"
  stdout: ''
  timestamp: 1659799287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n        val\
    \ unitDigits = unitDigits / 10\n        val unitDigits = unitDigits * 10\n   \
    \     val unitDigits = unitDigits + unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits + unitDigits2\n        val unitDigits\
    \ = unitDigits.toString.toInt\n        val unitDigits = unitDigits / 10\n    \
    \    val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits + unitDigits2\n\
    \        val unitDigits = unitDigits.toString.toInt\n        val unitDigits =\
    \ unitDigits / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits\
    \ = unitDigits + unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits + unitDigits2\n        val unitDigits\
    \ = unitDigits.toString.toInt\n        val unitDigits = unitDigits / 10\n    \
    \    val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits + unitDigits2\n\
    \        val unitDigits = unitDigits.toString.toInt\n        val unitDigits =\
    \ unitDigits / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits\
    \ = unitDigits + unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits + unitDigits2\n        val unitDigits\
    \ = unitDigits.toString.toInt\n        val unitDigits = unitDigits / 10\n    \
    \    val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits + unitDigits2\n\
    \        val unitDigits = unitDigits.toString.toInt\n        val unitDigits =\
    \ unitDigits / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits\
    \ = unitDigits + unit\n    }\n    def main(args: Array[String]) = {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcoll70ex.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits\
    \ * unitDigits2\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcoll70ex.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcoll70ex.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits / \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcoll70ex.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits * \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcoll70ex.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits + unitDigits2\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   "
  stdout: ''
  timestamp: 1659799298
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a / 10\n        val unitDigits_1\
    \ = a % 10\n        val unitDigits_2 = b / 10\n        val unitDigits_3 = b %\
    \ 10\n        val unitDigits_4 = unitDigits_1 * unitDigits_2\n        val unitDigits_5\
    \ = unitDigits_3 * unitDigits_4\n        val unitDigits_6 = unitDigits_5 * unitDigits_2\n\
    \        val unitDigits_7 = unitDigits_6 * unitDigits_3\n        val unitDigits_8\
    \ = unitDigits_7 * unitDigits_4\n        val unitDigits_9 = unitDigits_8 * unitDigits_5\n\
    \        val unitDigits_10 = unitDigits_9 * unitDigits_6\n        val unitDigits_11\
    \ = unitDigits_10 * unitDigits_7\n        val unitDigits_12 = unitDigits_11 *\
    \ unitDigits_8\n        val unitDigits_13 = unitDigits_12 * unitDigits_9\n   \
    \     val unitDigits_14 = unitDigits_13 * unitDigits_10\n        val unitDigits_15\
    \ = unitDigits_14 * unitDigits_11\n        val unitDigits_16 = unitDigits_15 *\
    \ unitDigits_12\n        val unitDigits_17 = unitDigits_16 * unitDigits_13\n \
    \       val unitDigits_18 = unitDigits_17 * unitDigits_14\n        val unitDigits_19\
    \ = unitDigits_18 * unitDigits_15\n        val unitDigits_20 = unitDigits_19 *\
    \ unitDigits_16\n        val unitDigits_21 = unitDigits_20 * unitDigits_17\n \
    \       val unitDigits_22 = unitDigits_21 * unitDigits_18\n        val unitDigits_23\
    \ = unitDigits_22 * unitDigits_19\n        val unitDigits_24 = unitDigits_23 *\
    \ unitDigits_20\n        val unitDigits_25 = unitDigits_24 * unitDigits_21\n \
    \       val unitDigits_26 = unitDigits_25 * unitDigits_22\n        val unitDigits_27\
    \ = unitDigits_26 * unitDigits_23\n        val unitDigits_28 = unitDigits_27 *\
    \ unitDigits_24\n        val unitDigits_29 = unitDigits_28 * unitDigits_25\n \
    \       val unitDigits_30 = unitDigits_29 * unitDigits_26\n        val unitDigits_31\
    \ = unitDigits_30 * unitDigits_27\n        val unitDigits_32 = unitDigits_31\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(multiply((148l), (412l))\
    \ == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_axqja7y.scala:50:5\
    \ ---------------------\e[0m\e[0m\n\e[31m50 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits.toLong\n        val unitDigits\
    \ = unitDigits.toString.toInt\n        val unitDigits = unitDigits * unitDigits2\n\
    \        val unitDigits = unitDigits.toString.toInt\n        val unitDigits =\
    \ unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigit\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l),\
    \ (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l),\
    \ (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l),\
    \ (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l),\
    \ (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqor8jcud.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits\
    \ * unitDigits2\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toLong\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e["
  stdout: ''
  timestamp: 1659799287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n        val\
    \ unitDigits = unitDigits / 10\n        val unitDigits = unitDigits * 10\n   \
    \     val unitDigits = unitDigits.toString.toInt\n        val unitDigits = unitDigits\
    \ / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits.toString.toInt\n        val unitDigits\
    \ = unitDigits / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits\
    \ = unitDigits.toString.toInt\n        val unitDigits = unitDigits / 10\n    \
    \    val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits.toString.toInt\n        val unitDigits\
    \ = unitDigits / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits\
    \ = unitDigits.toString.toInt\n        val unitDigits = unitDigits / 10\n    \
    \    val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits.toString.toInt\n        val unitDigits\
    \ = unitDigits / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits\
    \ = unitDigits.toString.toInt\n        val unitDigits = unitDigits / 10\n    \
    \    val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits.toString.toInt\n        val unitDigits\
    \ = unitDigits / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits\
    \ = unitDigits.toString.toInt\n        val unitDigits = unitDigits / \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(multiply((148l), (412l)) ==\
    \ (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpplfc71pq.scala:60:37 ---------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits\
    \ / \n\e[31m\e[31m   |\e[0m                                     ^\e[0m\n\e[31m\
    \   |\e[0m                                     expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpplfc71pq.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpplfc71pq.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpplfc71pq.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpplfc71pq.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e["
  stdout: ''
  timestamp: 1659799301
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n        val\
    \ unitDigits = unitDigits / 10\n        val unitDigits = unitDigits * 10\n   \
    \     val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits *\
    \ 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val \n    }\n    def main(args: Array[String]) = {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpljmjnlx7.scala:63:11 ---------------------------\e\
    [0m\e[0m\n\e[31m63 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpljmjnlx7.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits\
    \ * unitDigits2\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpljmjnlx7.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpljmjnlx7.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits / \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpljmjnlx7.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits * \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in t"
  stdout: ''
  timestamp: 1659799287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigit\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(multiply((148l), (412l))\
    \ == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpd6qkgnc2.scala:64:4 ----------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:23:12\
    \ -----------------"
  stdout: ''
  timestamp: 1659799286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a / 10\n        val remainder\
    \ = a % 10\n        val unitDigits2 = b / 10\n        val remainder2 = b % 10\n\
    \        val unitDigits = unitDigits * 10\n        val unitDigits2 = unitDigits2\
    \ * 10\n        val unitDigits = unitDigits + unitDigits2\n        val unitDigits\
    \ = unitDigits / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits\
    \ = unitDigits + unitDigits2\n        val unitDigits = unitDigits / 10\n     \
    \   val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits + unitDigits2\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits + unitDigits2\n        val unitDigits\
    \ = unitDigits / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits\
    \ = unitDigits + unitDigits2\n        val unitDigits = unitDigits / 10\n     \
    \   val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits + unitDigits2\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits + unitDigits2\n        val unitDigits\
    \ = unitDigits / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits\
    \ = unitDigits + unitDigits2\n        val unitDigits = unitDigits / 10\n     \
    \   val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits + unitDigits2\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits + unitDigits2\n        val unitDigits\
    \ = unitDigits / 10\n        val unitDigits = unitDigits * 10\n        val unitDigits\
    \ = unitDigits + unitDigits2\n        val unitDigits = unitDigits / 10\n     \
    \   val unitDigits = unitDigits * 10\n        val unitDigits = unitDigits + unitDigits2\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits\
    \ * 10\n        val unitDigits = unitDigits + unitDigits2\n        val unitDigits\
    \ = unitDigits / 10\n        val unitDigits = unitDigits * 10\n\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(multiply((148l), (412l)) == (16l));\n\
    \    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l))\
    \ == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7h5cysud.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits\
    \ * \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7h5cysud.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36munitDigits2\e[0m = unitDigits2 * \e\
    [31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits2 is already defined as \e[33mvalue\e[0m \e[35munitDigits2\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7h5cysud.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits + unitDigits2\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7h5cysud.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits / \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7h5cysud.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits * \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0munitDigit"
  stdout: ''
  timestamp: 1659799495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n        val\
    \ unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unit\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l),\
    \ (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l),\
    \ (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l),\
    \ (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l),\
    \ (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphety9hd4.scala:59:4 ----------------------------\e\
    [0m\e[0m\n\e[31m59 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:2"
  stdout: ''
  timestamp: 1659799287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits.toLong\n        val unitDigits\
    \ = unitDigits.toString.toInt\n        val unitDigits = unitDigits * unitDigits2\n\
    \        val unitDigits = unitDigits.toString.toInt\n        val unitDigits =\
    \ unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigit\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l),\
    \ (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l),\
    \ (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l),\
    \ (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l),\
    \ (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqor8jcud.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits\
    \ * unitDigits2\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toLong\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e["
  stdout: ''
  timestamp: 1659799287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n        val\
    \ unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits / 10\n        val unit\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l),\
    \ (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l),\
    \ (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l),\
    \ (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l),\
    \ (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphety9hd4.scala:59:4 ----------------------------\e\
    [0m\e[0m\n\e[31m59 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphety9hd4.scala:2"
  stdout: ''
  timestamp: 1659799287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a / 10\n        val unitDigits2\
    \ = b / 10\n        val unitDigits = unitDigits.toInt\n        val unitDigits2\
    \ = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n        val\
    \ unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \        val unitDigits2 = unitDigits2.toInt\n        val unitDigits = unitDigits.toInt\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(multiply((148l), (412l))\
    \ == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpapf4qqhn.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpapf4qqhn.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36munitDigits2\e[0m = unitDigits2.toInt\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0munitDigits2 is already defined as \e[33mvalue\e[0m \e[35munitDigits2\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpapf4qqhn.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpapf4qqhn.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mval\e[0m \e[36munitDigits2\e[0m = unitDigits2.toInt\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0munitDigits2 is already defined as \e[33mvalue\e[0m \e[35munitDigits2\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpapf4qqhn.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0munitDigits is already defined as \e[33mvalue\e[0m"
  stdout: ''
  timestamp: 1659799287
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigit\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(multiply((148l), (412l))\
    \ == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpd6qkgnc2.scala:64:4 ----------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:23:12\
    \ -----------------"
  stdout: ''
  timestamp: 1659799286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toList.map(_.toInt)\n\
    \        val unitDigits2 = b.toString.toList.map(_.toInt)\n        val unitDigits\
    \ = unitDigits.zip(unitDigits2).map { case (digit1, digit2) => digit1 * digit2\
    \ }\n        val unitDigits = unitDigits.toList.sortBy(_).reverse\n        val\
    \ unitDigits = unitDigits.take(unitDigits.length)\n        val unitDigits = unitDigits.map(_.toLong)\n\
    \        val unitDigits = unitDigits.sum\n        unitDigits.toLong\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(multiply((148l), (412l)) ==\
    \ (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpybayy1fd.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.zip(unitDigits2).map\
    \ { \e[33mcase\e[0m (digit1, digit2) => digit1 * digit2 }\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpybayy1fd.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toList.sortBy(_).reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpybayy1fd.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.take(unitDigits.length)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpybayy1fd.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.map(_.toLong)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpybayy1fd.scala:23:12 --------------------------"
  stdout: ''
  timestamp: 1659799495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigits\
    \ = unitDigits * 10\n        val unitDigits = unitDigits / 10\n        val unitDigit\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(multiply((148l), (412l))\
    \ == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpd6qkgnc2.scala:64:4 ----------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits * \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36munitDigits\e[0m = unitDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0munitDigits is already\
    \ defined as \e[33mvalue\e[0m \e[35munitDigits\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd6qkgnc2.scala:23:12\
    \ -----------------"
  stdout: ''
  timestamp: 1659799286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Complete the function that takes two integers and returns \n    //\
    \ the product of their unit digits.\n    // Assume the input is always valid.\n\
    \    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n    // >>>\
    \ multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l), (1851l))\n\
    \    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n    def multiply(a\
    \ : Long, b : Long) : Long = {\n        val unitDigits = a.toString.toInt\n  \
    \      val unitDigits2 = b.toString.toInt\n        val unitDigits = unitDigits\
    \ * unitDigits2\n        val unitDigits = unitDigits.toLong\n        val unitDigits\
    \ = unitDigits.toString.toInt\n        val unitDigits = unitDigits * unitDigits2\n\
    \        val unitDigits = unitDigits.toString.toInt\n        val unitDigits =\
    \ unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigits2\n        val unitDigits = unitDigits.toString.toInt\n\
    \        val unitDigits = unitDigits * unitDigit\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l),\
    \ (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l),\
    \ (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l),\
    \ (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l),\
    \ (0l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqor8jcud.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits\
    \ * unitDigits2\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toLong\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits * unitDigits2\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0munitDigits is already defined as \e[33mvalue\e[0m \e[35munitDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqor8jcud.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36munitDigits\e[0m = unitDigits.toString.toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e["
  stdout: ''
  timestamp: 1659799287

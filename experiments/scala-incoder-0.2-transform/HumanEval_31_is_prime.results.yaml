language: scala
name: HumanEval_31_is_prime
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val isPrime = (2l) until n map (x => if (n % x\
    \ == 0) false else true) reduceLeft (_ || _)\n        isPrime\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1r831vtw.scala:24)\n\tat Problem.main(tmp1r831vtw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659792945
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val i = 2l\n        val s = 2l\n        while (i\
    \ <= n / 2) {\n            if (n % i == 0) {\n                s = 2l\n       \
    \     } else {\n                s = s * i\n            }\n            i += 1\n\
    \        }\n        if (s == n) true\n        else false\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp0bc4nb2a.scala:24:18 -----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                s = \e[31m2l\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to\
    \ val s\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp0bc4nb2a.scala:26:18\
    \ -----------------------------\e[0m\e[0m\n\e[31m26 |\e[0m                s =\
    \ s * i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Reassignment to val s\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp0bc4nb2a.scala:28:14 ------------------------\e[0m\e\
    [0m\n\e[31m28 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Long\
    \ - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659793113
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val isPrime = (2l) until n map (x => if (n % x\
    \ == 0) false else true) reduceLeft (_ || _)\n        isPrime\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1r831vtw.scala:24)\n\tat Problem.main(tmp1r831vtw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659792945
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val isPrime = (2l) until (n) contains n\n     \
    \   val isNotPrime = (2l) until (n) contains n + 1\n        val isNotPrime2 =\
    \ (n) until (n) contains n + 1\n        val isNotPrime3 = (n) until (n) contains\
    \ n + 1\n        val isNotPrime4 = (n) until (n) contains n + 1\n        val isNotPrime5\
    \ = (n) until (n) contains n + 1\n        val isNotPrime6 = (n) until (n) contains\
    \ n + 1\n        val isNotPrime7 = (n) until (n) contains n + 1\n        val isNotPrime8\
    \ = (n) until (n) contains n + 1\n        val isNotPrime9 = (n) until (n) contains\
    \ n + 1\n        val isNotPrime10 = (n) until (n) contains n + 1\n        val\
    \ isNotPrime11 = (n) until (n) contains n + 1\n        val isNotPrime12 = (n)\
    \ until (n) contains n + 1\n        val isNotPrime13 = (n) until (n) contains\
    \ n + 1\n        val isNotPrime14 = (n) until (n) contains n + 1\n        val\
    \ isNotPrime15 = (n) until (n) contains n + 1\n        val isNotPrime16 = (n)\
    \ until (n) contains n + 1\n        val isNotPrime17 = (n) until (n) contains\
    \ n + 1\n        val isNotPrime18 = (n) until (n) contains n + 1\n        val\
    \ isNotPrime19 = (n) until (n) contains n + 1\n        val isNotPrime20 = (n)\
    \ until (n) contains n + 1\n        val isNotPrime21 = (n) until (n) contains\
    \ n + 1\n        val isNotPrime22 = (n) until (n) contains n + 1\n        val\
    \ isNotPrime23 = (n) until (n) contains n + 1\n        val isNotPrime24 = (n)\
    \ until (n) contains n + 1\n        val isNotPrime25 = (n) until (n) contains\
    \ n + 1\n        val isNotPrime26 = (n) until (n) contains n + 1\n        val\
    \ isNotPrime27 = (n) until (n) contains n + 1\n        val isNotPrime28 = (n)\
    \ until\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmptb0jrqw4.scala:48:36 ---------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m        \e[33mval\e[0m \e[36misNotPrime28\e[0m = (n)\
    \ until\n\e[31m\e[31m   |\e[0m                                    ^\e[0m\n\e[31m\
    \   |\e[0m                                    expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptb0jrqw4.scala:49:5\
    \ ---------------------\e[0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val isPrime = n <= 1l\n        if(isPrime)\n  \
    \          return true\n        val sqrtN = math.sqrt(n)\n        for(i <- 2l\
    \ to sqrtN) {\n            if(n % i == 0)\n                return false\n    \
    \    }\n        return true\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwg7awea8.scala:24:23\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2l\e[0m to sqrtN) {\n\e[31m\e[31m   |\e[0m                       ^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Found:    (sqrtN : Double)\n\e[31m   |\e\
    [0m                       Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val isPrime = (2l) until (n) contains n\n     \
    \   val isPrime2 = isPrime filter (_ % 2l == 0l)\n        val isPrime3 = isPrime\
    \ filter (_ % 3l == 0l)\n        val isPrime4 = isPrime filter (_ % 4l == 0l)\n\
    \        val isPrime5 = isPrime filter (_ % 5l == 0l)\n        val isPrime6 =\
    \ isPrime filter (_ % 6l == 0l)\n        val isPrime7 = isPrime filter (_ % 7l\
    \ == 0l)\n        val isPrime8 = isPrime filter (_ % 8l == 0l)\n        val isPrime9\
    \ = isPrime filter (_ % 9l == 0l)\n        val isPrime10 = isPrime filter (_ %\
    \ 10l == 0l)\n        val isPrime11 = isPrime filter (_ % 11l == 0l)\n       \
    \ val isPrime12 = isPrime filter (_ % 12l == 0l)\n        val isPrime13 = isPrime\
    \ filter (_ % 13l == 0l)\n        val isPrime14 = isPrime filter (_ % 14l == 0l)\n\
    \        val isPrime15 = isPrime filter (_ % 15l == 0l)\n        val isPrime16\
    \ = isPrime filter (_ % 16l == 0l)\n        val isPrime17 = isPrime filter (_\
    \ % 17l == 0l)\n        val isPrime18 = isPrime filter (_ % 18l == 0l)\n     \
    \   val isPrime19 = isPrime filter (_ % 19l == 0l)\n        val isPrime20 = isPrime\
    \ filter (_ % 20l == 0l)\n        val isPrime21 = isPrime filter (_ % 21l == 0l)\n\
    \        val isPrime22 = isPrime filter (_ % 22l == 0l)\n        val isPrime23\
    \ = isPrime filter (_ % 23l == 0l)\n        val isPrime24 = isPrime filter (_\
    \ % 24l == 0l)\n        val isPrime25 = isPrime filter (_ % 25l == 0l)\n     \
    \   val isPrime26 = isPrime filter (_ % 26l == 0l)\n        val isPrime27 = isPrime\
    \ filter (_ % 27l == 0l)\n        \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8321z3oe.scala:21:31 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = isPrime\
    \ filter (_ % \e[31m2l\e[0m == \e[31m0l\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \              ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                       value\
    \ filter is not a member of Boolean\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8321z3oe.scala:22:31\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime3\e[0m = isPrime filter (_ % \e[31m3l\e[0m == \e[31m0l\e[0m)\n\e[31m\e\
    [31m   |\e[0m                       ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                  value filter is not a member of Boolean\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp8321z3oe.scala:23:31 ------------------------\e[0m\e\
    [0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = isPrime filter\
    \ (_ % \e[31m4l\e[0m == \e[31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                \
    \       ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                       value filter\
    \ is not a member of Boolean\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8321z3oe.scala:24:31\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime5\e[0m = isPrime filter (_ % \e[31m5l\e[0m == \e[31m0l\e[0m)\n\e[31m\e\
    [31m   |\e[0m                       ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                  value filter is not a member of Boolean\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp8321z3oe.scala:25:31 ------------------------\e[0m\e\
    [0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = isPrime filter\
    \ (_ % \e[31m6l\e[0m == \e[31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                \
    \       ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                       value filter\
    \ is not a member of Boolean\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8321z3oe.scala:26:31\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime7\e[0m = isPrime filter (_ % \e[31m7l\e[0m == \e[31m0l\e[0m)\n\e[31m\e\
    [31m   |\e[0m                       ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                  value filter is not a member of Boolean\n\e[31m\e[31m-- [E008]\
    \ Not Fo"
  stdout: ''
  timestamp: 1659793114
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisors = mutable.ArrayBuffer.empty[Long]\n        val isPrime =\
    \ mutable.ArrayBuffer.empty[Boolean]\n        val isDivisor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeAndDivisor = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeAndDivisorAndNotDivisor = mutable.ArrayBuffer.empty[Boolean]\n      \
    \  val isPrimeAndDivisorAndNotDivisorAndNotDivisor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeAndDivisorAndNotDivisorAndNotDivisorAndNotDivisor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeAndDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeAndDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeAndDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeAndDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeAndDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeAndDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeAndDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeAndDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNotDivisorAndNot\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0ltncnjz.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ltncnjz.scala:20:21\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ltncnjz.scala:21:23\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m \
    \  |\e[0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp0ltncnjz.scala:22:22 ------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e\
    [0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp0ltncnjz.scala:23:24 ------------------------\e[0m\e\
    [0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36misDivisor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ltncnjz.scala:24:32 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36misPrimeAndDivisor\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                "
  stdout: ''
  timestamp: 1659793113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val isPrime = n <= 1l\n        val isPrime2 = isPrime\
    \ && (n % 2l) == 0l\n        val isPrime3 = isPrime2 && (n % 3l) == 0l\n     \
    \   val isPrime4 = isPrime3 && (n % 4l) == 0l\n        val isPrime5 = isPrime4\
    \ && (n % 5l) == 0l\n        val isPrime6 = isPrime5 && (n % 6l) == 0l\n     \
    \   val isPrime7 = isPrime6 && (n % 7l) == 0l\n        val isPrime8 = isPrime7\
    \ && (n % 8l) == 0l\n        val isPrime9 = isPrime8 && (n % 9l) == 0l\n     \
    \   val isPrime10 = isPrime9 && (n % 10l) == 0l\n        val isPrime11 = isPrime10\
    \ && (n % 11l) == 0l\n        val isPrime12 = isPrime11 && (n % 12l) == 0l\n \
    \       val isPrime13 = isPrime12 && (n % 13l) == 0l\n        val isPrime14 =\
    \ isPrime13 && (n % 14l) == 0l\n        val isPrime15 = isPrime14 && (n % 15l)\
    \ == 0l\n        val isPrime16 = isPrime15 && (n % 16l) == 0l\n        val isPrime17\
    \ = isPrime16 && (n % 17l) == 0l\n        val isPrime18 = isPrime17 && (n % 18l)\
    \ == 0l\n        val isPrime19 = isPrime18 && (n % 19l) == 0l\n        val isPrime20\
    \ = isPrime19 && (n % 20l) == 0l\n        val isPrime21 = isPrime20 && (n % 21l)\
    \ == 0l\n        val isPrime22 = isPrime21 && (n % 22l) == 0l\n        val isPrime23\
    \ = isPrime22 && (n % 23l) == 0l\n        val isPrime24 = isPrime23 && (n % 24l)\
    \ == 0l\n        val isPrime25 = isPrime24 && (n % 25l) == 0l\n        val isPrime26\
    \ = isPrime25 && (n % 26l) == 0l\n        val isPrime27 = isPrime26 && (n % 27l)\
    \ == 0l\n        val isPrime28 = isPrime27 && (n % 28l) == 0l\n        val isPrime29\
    \ = isPrime28 && (n % 29l) == 0l\n        val isPrime30 = isPrime29 && (n % 30l)\
    \ == 0l\n        val isPrime31 = is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmparzbpisa.scala:50:24 ------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m        \e[33mval\e[0m \e[36misPrime31\e[0m = is\n\e\
    [31m\e[31m   |\e[0m                        ^^\e[0m\n\e[31m   |\e[0m          \
    \              Not found: is\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmparzbpisa.scala:51:5 ---------------------\e[0m\e[0m\n\e[31m51\
    \ |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:  \
    \  Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793114
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val primes = mutable.ArrayBuffer(2l)\n        val\
    \ isPrime = mutable.ArrayBuffer(true)\n        val isNotPrime = mutable.ArrayBuffer(false)\n\
    \        for (i <- 2l until n by 2l) {\n            if (n % i == 0) {\n      \
    \          primes += i\n                isPrime += false\n            } else {\n\
    \                isNotPrime += true\n            }\n        }\n        isPrime\
    \ == primes\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6nlw5i3n.scala:20:21 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp6nlw5i3n.scala:21:22 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mtrue\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp6nlw5i3n.scala:22:25 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36misNotPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659793112
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val sqrt = (1l*Math.sqrt(n).toInt).toLong\n   \
    \     val primes = mutable.ArrayBuffer.empty[Long]\n        val primesCount =\
    \ mutable.ArrayBuffer.empty[Int]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeCount = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquare\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeSquareCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrimeSquareRoot = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeSquareRootCount = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeSquareRootRemainderCount\
    \ = mutable.ArrayBuffer.\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcf9vk18a.scala:49:4 ----------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcf9vk18a.scala:31:12 ---------------------------\e[0m\e[0m\n\e[31m31\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeSquareRootRemainderCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeSquareRootRemainderCount is already defined as \e[33mvalue\e\
    [0m \e[35misPrimeSquareRootRemainderCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcf9vk18a.scala:32:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeSquareRootRemainderCount\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeSquareRootRemainderCount is already defined as \e[33mvalue\e\
    [0m \e[35misPrimeSquareRootRemainderCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcf9vk18a.scala:33:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeSquareRootRemainderCount\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeSquareRootRemainderCount is already defined as \e[33mvalue\e\
    [0m \e[35misPrimeSquareRootRemainderCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcf9vk18a.scala:34:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeSquareRootRemainderCount\e[0m = mut"
  stdout: ''
  timestamp: 1659793113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val primes = mutable.ListBuffer[Long]()\n     \
    \   val divisors = mutable.ListBuffer[Long]()\n        divisors += 2l\n      \
    \  divisors += 3l\n        divisors += 5l\n        divisors += 7l\n        divisors\
    \ += 11l\n        divisors += 13l\n        divisors += 17l\n        divisors +=\
    \ 19l\n        divisors += 23l\n        divisors += 29l\n        divisors += 31l\n\
    \        divisors += 37l\n        divisors += 41l\n        divisors += 43l\n \
    \       divisors += 47l\n        divisors += 53l\n        divisors += 59l\n  \
    \      divisors += 61l\n        divisors += 67l\n        divisors += 71l\n   \
    \     divisors += 73l\n        divisors += 79l\n        divisors += 83l\n    \
    \    divisors += 89l\n        divisors += 97l\n        divisors += 101l\n    \
    \    divisors += 103l\n        divisors += 107l\n        divisors += 109l\n  \
    \      divisors += 113l\n        divisors += 127l\n        divisors += 131l\n\
    \        divisors += 137l\n        divisors += 139l\n        divisors += 147l\n\
    \        divisors += 151l\n        divisors += 157l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 173l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 191l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 211l\n        divisors += 223l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 247l\n        divisors += 251l\n\
    \        divisors += 257l\n        divisors += 263l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 277l\n        divisors += 281l\n\
    \        divisors += 283l\n        divisors += 293l\n        divisors += 307l\n\
    \        divisors += 311l\n        divisors += 313l\n        divisors += 317l\n\
    \        divisors += 323l\n        divisors += 329l\n        divisors += 331l\n\
    \        divisors += 337l\n        divisors += 347l\n        divisors += 351l\n\
    \        divisors += 359l\n        divisors += 367l\n        divisors += 373l\n\
    \        divisors += 379l\n        divisors += 383l\n        divisors += 389l\n\
    \        divisors += 397l\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprvvtmyqy.scala:20:21 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmprvvtmyqy.scala:21:23 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659793112
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 2\n        while (i <= Math.sqrt(n)) {\n            if (n % i\
    \ == 0) {\n                primes += i\n            }\n            i += 1\n  \
    \      }\n        primes.contains(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6x56_bif.scala:20:21 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793112
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val isPrime = (2l) until n forall { x =>\n    \
    \        val y = math.floor(x * Math.sqrt(x).toLong)\n            x % y == 0\n\
    \        }\n        n <= 2l\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpisiwdplf.scala:28)\n\tat Problem.main(tmpisiwdplf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793114
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val primes = mutable.Set[Long]()\n        val i\
    \ = 2l\n        while (i <= n / i) {\n            if (n % i == 0l) {\n       \
    \         primes += i\n            }\n            i += 1\n        }\n        primes.size\
    \ == n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5exkthqp.scala:20:21 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp5exkthqp.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Long - did you mean i.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659793113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val primes = mutable.Set[Long]()\n        val primesSet\
    \ = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n      \
    \  val isPrimeSet = mutable.Set[Boolean]()\n        val isPrimeSet2 = mutable.Set[Boolean]()\n\
    \        val isPrimeSet3 = mutable.Set[Boolean]()\n        val isPrimeSet4 = mutable.Set[Boolean]()\n\
    \        val isPrimeSet5 = mutable.Set[Boolean]()\n        val isPrimeSet6 = mutable.Set[Boolean]()\n\
    \        val isPrimeSet7 = mutable.Set[Boolean]()\n        val isPrimeSet8 = mutable.Set[Boolean]()\n\
    \        val isPrimeSet9 = mutable.Set[Boolean]()\n        val isPrimeSet10 =\
    \ mutable.Set[Boolean]()\n        val isPrimeSet11 = mutable.Set[Boolean]()\n\
    \        val isPrimeSet12 = mutable.Set[Boolean]()\n        val isPrimeSet13 =\
    \ mutable.Set[Boolean]()\n        val isPrimeSet14 = mutable.Set[Boolean]()\n\
    \        val isPrimeSet15 = mutable.Set[Boolean]()\n        val isPrimeSet16 =\
    \ mutable.Set[Boolean]()\n        val isPrimeSet17 = mutable.Set[Boolean]()\n\
    \        val isPrimeSet18 = mutable.Set[Boolean]()\n        val isPrimeSet19 =\
    \ mutable.Set[Boolean]()\n        val isPrimeSet20 = mutable.Set[Boolean]()\n\
    \        val isPrimeSet21 = mutable.Set[Boolean]()\n        val isPrimeSet22 =\
    \ mutable.Set[Boolean]()\n        val isPrimeSet23 = mutable.Set[Boolean]()\n\
    \        val isPrimeSet24 = mutable.Set[Boolean]()\n        val isPrimeSet25 =\
    \ mutable.Set[Boolean]()\n        val isPrimeSet26 = mutable.Set[Boolean]()\n\
    \        val isPrimeSet27 = mutable.Set[Boolean]()\n        val isPrimeSet28 =\
    \ mutable.Set[Boolean]()\n        val isPrimeSet29 = mutable.Set[Boolean]()\n\
    \        val isPrimeSet30 = mutable.Set[Boolean]()\n        val isPri\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmprdgs8s66.scala:54:4 ----------------------------\e\
    [0m\e[0m\n\e[31m54 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdgs8s66.scala:20:21\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdgs8s66.scala:21:24\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdgs8s66.scala:22:22\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdgs8s66.scala:23:25\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdgs8s66.scala:24:26\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet2\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                          ^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer ex"
  stdout: ''
  timestamp: 1659793113
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val isPrime = (2l) until (n) contains n\n     \
    \   n match {\n            case 0 => true\n            case _ => isPrime\n   \
    \     }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt9vfk9ru.scala:28)\n\tat Problem.main(tmpt9vfk9ru.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659792950
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val isPrime = (2l) until (n) contains n\n     \
    \   val isNotPrime = (2l) until (n) contains !n\n        val isPrimeAndNotPrime\
    \ = n match {\n            case n if isPrime && isNotPrime => true\n         \
    \   case n if isNotPrime && isPrime => false\n            case _ => false\n  \
    \      }\n        isPrimeAndNotPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6zuegzst.scala:21:49 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36misNotPrime\e[0m = (\e[31m2l\e\
    [0m) until (n) contains !n\n\e[31m\e[31m   |\e[0m                            \
    \                     ^^\e[0m\n\e[31m   |\e[0m         value unary_! is not a\
    \ member of Long - did you mean n.unary_+?\n1 error found\n"
  stdout: ''
  timestamp: 1659793113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val isPrime = n <= 1l\n        if (isPrime) {\n\
    \            val sqrt = (1l to n).map(n => math.pow(n, 0.5l))\n            val\
    \ primes = mutable.Set[Long]()\n            val isPrime = sqrt.toList.forall(n\
    \ => primes.contains(n))\n            primes += n\n            isPrime\n     \
    \   } else {\n            false\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpzxkg_6xm.scala:22:54 -----------------------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mval\e[0m \e[36msqrt\e[0m = (\e[31m1l\e\
    [0m to n).map(\e[36mn\e[0m => math.pow(n, 0.5l))\n\e[31m\e[31m   |\e[0m      \
    \                                                ^\e[0m\n\e[31m   |\e[0m     \
    \                                             Invalid literal number\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzxkg_6xm.scala:23:25 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659793113
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val isPrime = (2l) until (n) contains n\n     \
    \   n match {\n            case 0 => false\n            case 1 => true\n     \
    \       case _ => isPrime\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1u8rxcai.scala:29)\n\tat Problem.main(tmp1u8rxcai.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659792951
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
    \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
    \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    def isPrime(n :\
    \ Long) : Boolean = {\n        val i = 2l\n        while (i <= n / i) {\n    \
    \        if (n % i == 0l) false\n            else i = i + 1l\n        }\n    \
    \    true\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpeaycxvjt.scala:23:19 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33melse\e[0m i = i + \e[31m1l\e[0m\n\e\
    [31m\e[31m   |\e[0m                 ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \        Reassignment to val i\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[33m\e[33m-- [E129] Potential Issue\
    \ Warning: /tmp/tmpeaycxvjt.scala:22:29 ----------------\e[0m\e[0m\n\e[33m22 |\e\
    [0m            \e[33mif\e[0m (n % i == \e[31m0l\e[0m) \e[31mfalse\e[0m\n\e[33m\e\
    [33m   |\e[0m                             ^^^^^\e[0m\n\e[33m   |\e[0mA pure expression\
    \ does nothing in statement position; you may be omitting necessary parentheses\n\
    \e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 warning found\n1 error found\n"
  stdout: ''
  timestamp: 1659792949

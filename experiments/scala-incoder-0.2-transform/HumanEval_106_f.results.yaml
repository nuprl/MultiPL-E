language: scala
name: HumanEval_106_f
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last\n  \
    \      factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last\n  \
    \      factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\n\
    \        factorials += factorials.\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy9446p0c.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpy9446p0c.scala:13:25 ------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804054
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += (i.toLong +\
    \ factorials.last)\n            }\n        }\n        factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm60j7wkv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpm60j7wkv.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        for (i <- 1 to n) {\n            if (i % 2\
    \ == 0) {\n                factorial *= i\n                factorials += factorial\n\
    \            } else {\n                factorial += i\n                factorials\
    \ += factorial\n            }\n        }\n        factorials.toList\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgt2w365h.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgt2w365h.scala:15:23 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804056
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n  \
    \      val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n   \
    \             factorials += factorial\n                sums += sum\n         \
    \   }\n            else{\n                factorial = factorial*i\n          \
    \      sum = sum + i\n            }\n        }\n        factorials += factorial\n\
    \        sums += sum\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpykkeaz77.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpykkeaz77.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpykkeaz77.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpykkeaz77.scala:23:26 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                factorial = factorial*i\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Reassignment to val factorial\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpykkeaz77.scala:24:20 -----------------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m                sum = sum + i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to\
    \ val sum\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659804055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1l\n\
    \        val sum = 1l\n        val even = 1l\n        val odd = 1l\n        val\
    \ i = 2l\n        while (i <= n) {\n            if (i % 2 == 0) {\n          \
    \      evens += i.toLong\n            } else {\n                odds += i.toLong\n\
    \            }\n            factorial *= i\n            sum += i\n           \
    \ factorials += factorial\n            sums += sum\n            even += i\n  \
    \          odd += i\n            i += 1\n        }\n        evens.toList ++ sums.toList\
    \ ++ evens.toList ++ odds.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqvbvno0x.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqvbvno0x.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpqvbvno0x.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpqvbvno0x.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqvbvno0x.scala:28:22 ------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m            factorial *= i\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           value *= is not a member\
    \ of Long - did you mean factorial.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpqvbvno0x.scala:29:16 ------------------------\e[0m\e[0m\n\e[31m29 |\e\
    [0m            sum += i\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            value += is not a member of Long - did you m"
  stdout: ''
  timestamp: 1659804056
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        for(i <- 1 to n){\n            factorial *=\
    \ i\n            if(i % 2 == 0){\n                factorials += factorial\n  \
    \          }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgwnlducg.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgwnlducg.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659803882
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += factorials.reduceLeft(_\
    \ * _)\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1tqhwx3d.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1tqhwx3d.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials ++= factorials.take(n).filter(_\
    \ % 2 == 0).map(_ * _)\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb6_0e27w.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804054
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += factorials.last\
    \ * i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpviuq7bc1.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpviuq7bc1.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += factorials.sum\
    \ + i.toLong\n            }\n        }\n        factorials.toList\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjyey86ro.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjyey86ro.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659803875
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += (i.toLong +\
    \ factorials.last)\n            }\n        }\n        factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm60j7wkv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpm60j7wkv.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += n\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplihkwwv8.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803854
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 6\n        factorials += 24\n        factorials += 15\n\
    \        factorials.toList\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx7un0lsb.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804054
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var i = 1\n        while (i <= n) {\n            if (i % 2 == 0) {\n\
    \                factorials += i.toLong\n            } else {\n              \
    \  factorials += factorials.foldLeft(1l) { (acc, x) => acc * x }\n           \
    \ }\n            i += 1\n        }\n        factorials.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbjeysrbb.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804054
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        var factorial = 1\n        var sum = 1\n        var i = 0\n        while\
    \ (i < n) {\n            if (i % 2 == 0) {\n                factorials += factorial\n\
    \                factorial = 1\n            }\n            else {\n          \
    \      factorial *= i\n                sum += factorial\n            }\n     \
    \       i += 1\n        }\n        factorials += factorial\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiuanvzxb.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804054
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        for(i <- 1 to n) {\n            if(i % 2 == 0) {\n\
    \                factorials += factorial\n                sums += sum\n      \
    \      }\n            else {\n                factorial *= i\n               \
    \ sum += i\n            }\n        }\n        factorials ++= sums\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4t_e2kdc.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp4t_e2kdc.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp4t_e2kdc.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4t_e2kdc.scala:23:26\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \           value *= is not a member of Long - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp4t_e2kdc.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Long - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1659804056
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 4\n        factorials += 5\n        factorials += 6\n  \
    \      factorials += 7\n        factorials += 8\n        factorials += 9\n   \
    \     factorials += 10\n        factorials += 11\n        factorials += 12\n \
    \       factorials += 13\n        factorials += 14\n        factorials += 15\n\
    \        factorials += 16\n        factorials += 17\n        factorials += 18\n\
    \        factorials += 19\n        factorials += 20\n        factorials += 21\n\
    \        factorials += 22\n        factorials += 23\n        factorials += 24\n\
    \        factorials += 25\n        factorials += 26\n        factorials += 27\n\
    \        factorials += 28\n        factorials += 29\n        factorials += 30\n\
    \        factorials += 31\n        factorials += 32\n        factorials += 33\n\
    \        factorials += 34\n        factorials += 35\n        factorials += 36\n\
    \        factorials += 37\n        factorials += 38\n        factorials += 39\n\
    \        factorials += 40\n        factorials += 41\n        factorials += 42\n\
    \        factorials += 43\n        factorials += 44\n        factorials += 45\n\
    \        factorials += 46\n        factorials += 47\n        factorials += 48\n\
    \        factorials += 49\n        factorials += 50\n        factorials += 51\n\
    \        factorials += 52\n        factorials += 53\n        factorials += 54\n\
    \        factorials += 55\n        factorials += 56\n        factorials += 57\n\
    \        factorials += 58\n        factorials += 59\n        factorials += 60\n\
    \        factorials += 61\n        factorials += 62\n        factorials += 63\n\
    \        factorials += 64\n        factorials += 65\n        factorials += 66\n\
    \        factorials += 67\n        factorials += 68\n        factorials += 69\n\
    \        factorials += 70\n        factorials += 71\n        factorials += 72\n\
    \        factorials += 73\n        factorials += 74\n        factorials += 75\n\
    \        factorials += 76\n        factorials += 77\n        factorials += 78\n\
    \        factorials += 79\n        factorials += 80\n        factorials += 81\n\
    \        factorials += 82\n        factorials += 83\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzsu7fc6f.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803842
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        var sum = 0\n        var i = 1\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                factorials += factorial\n\
    \                factorial = 1\n            } else {\n                factorial\
    \ *= i\n                sum += factorial\n            }\n            i += 1\n\
    \        }\n        factorials += factorial\n        factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcdeby114.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804054
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n  \
    \      val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n   \
    \             factorials += factorial\n                sums += sum\n         \
    \   }\n            else{\n                factorial = factorial * i\n        \
    \        sum = sum + i\n            }\n        }\n        factorials += factorial\n\
    \        sums += sum\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3n2c0nw3.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp3n2c0nw3.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp3n2c0nw3.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp3n2c0nw3.scala:23:26 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                factorial = factorial * i\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Reassignment to val factorial\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmp3n2c0nw3.scala:24:20 -----------------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m                sum = sum + i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to\
    \ val sum\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659804055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        var sum = 1\n        for(i <- 1 to n) {\n\
    \            factorials += factorial\n            sum += i\n        }\n      \
    \  factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpppw0f7ss.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpppw0f7ss.scala:16:22 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x =>\
    \ x * factorials.indexOf(x) + factorials.indexOf(x) + 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprsp61hbr.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010085
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val factorial = 1l\n\
    \        val number = 1l\n        val sum = 1l\n        val factorialSum = 1l\n\
    \        val factorialSumOfNumbers = 1l\n        val factorialSumOfNumbersOfNumbers\
    \ = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbers = 1l\n        val\
    \ factorialSumOfNumbersOfNumbersOfNumbersOfNumbers = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbersOfNumbersOfNumbers\
    \ = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbers\
    \ = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbers\
    \ = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbers\
    \ = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbers\
    \ = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbers\
    \ = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbers\
    \ = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbers\
    \ = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbers\
    \ = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbers\
    \ = 1l\n        val factorialSumOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOfNumbersOf\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmputl9sgr3.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmputl9sgr3.scala:13:25\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmputl9sgr3.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36mnumbers\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmputl9sgr3.scala:34:5 ---------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: List[Long]\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010091
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 1 // start from\
    \ 1\n        while (i <= n) {\n            if (i % 2 == 0) {\n               \
    \ evens += i.toLong\n            } else {\n                odds += i.toLong\n\
    \            }\n            factorials += i.toLong * factorials.last\n       \
    \     sums += i.toLong * sums.last\n            i += 1\n        }\n        evens.toList\
    \ ++ sums.toList ++ factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpna5u5hne.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpna5u5hne.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpna5u5hne.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpna5u5hne.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpna5u5hne.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials ++= factorials.drop(1).map(x\
    \ => x * x)\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuv7tpvgz.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010086
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val evenSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val oddSums = mutable.ArrayBuffer.empty[Long]\n        val evenFactorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddFactorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumFactorials = mutable.ArrayBuffer.empty[Long]\n        val\
    \ oddSumFactorials = mutable.ArrayBuffer.empty[Long]\n        val evenFactorialsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddFactorialsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumFactorialsSum = mutable.ArrayBuffer.empty[Long]\n        val\
    \ oddSumFactorialsSum = mutable.ArrayBuffer.empty[Long]\n        val evenFactorialsSumFactorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddFactorialsSumFactorials =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumFactorialsSumFactorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddSumFactorialsSumFactorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenFactorialsSumFactorialsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddFactorialsSumFactorialsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumFactorialsSumFactorialsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddSumFactorialsSumFactorialsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenFactorialsSumFactorialsSumFactorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddFactorialsSumFactorialsSumFactorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumFactorialsSumFactorialsSumFactorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddSumFactorialsSumFactorialsSumFactorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenFactorialsSumFactorialsSumFactorialsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddFactor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0mza9h77.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0mza9h77.scala:13:25\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp0mza9h77.scala:14:19 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp0mza9h77.scala:15:20 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp0mza9h77.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp0mza9h77.scala:17:23 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mevenSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  "
  stdout: ''
  timestamp: 1660010089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i.toLong * factorials.last\n            }else{\n                factorials\
    \ += i.toLong\n            }\n        }\n        factorials.toList\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn9kttq7j.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn9kttq7j.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += n\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplihkwwv8.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803854
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i.toLong * factorials.last\n            }else{\n                factorials\
    \ += i.toLong\n            }\n        }\n        factorials.toList\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn9kttq7j.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn9kttq7j.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sum = 0\n        for(i <- 1 to n){\n            if(i%2 == 0){\n \
    \               factorials += i.toLong\n            }else{\n                sum\
    \ += i.toLong\n            }\n        }\n        factorials.toList\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5voddv2l.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5voddv2l.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5voddv2l.scala:19:20\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m                sum += i.toLong\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010091
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        var sum = 1\n        for(i <- 1 to n){\n \
    \           factorials += factorial\n            sum += i\n            factorial\
    \ *= i\n        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8vcvsebi.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8vcvsebi.scala:16:22 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n  \
    \      val sum = 1\n        for(i <- 1 to n){\n            factorials += factorial\n\
    \            sums += sum\n        }\n        factorials.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp01ppz0c8.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp01ppz0c8.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp01ppz0c8.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x =>\
    \ x * factorials.indexOf(_))\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr7nspgo9.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010086
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x =>\
    \ x * factorials.indexOf(x) + factorials.indexOf(x) + 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprsp61hbr.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010085
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var i = 1 // i starts from 1\n        while (i <= n) {\n            if\
    \ (i % 2 == 0) {\n                factorials += i.toLong\n            } else {\n\
    \                factorials += (i.toLong + factorials.last)\n            }\n \
    \           i += 1\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_4t71mqv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010086
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        val even = 1\n        val odd = 1\n        val evenFactorial\
    \ = 1\n        val oddFactorial = 1\n        val evenSum = 1\n        val oddSum\
    \ = 1\n        val evenSumFactorial = 1\n        val oddSumFactorial = 1\n   \
    \     val evenEven = 1\n        val evenOdd = 1\n        val oddEven = 1\n   \
    \     val oddOdd = 1\n        val evenEvenFactorial = 1\n        val evenOddFactorial\
    \ = 1\n        val oddEvenFactorial = 1\n        val oddOddFactorial = 1\n   \
    \     val evenOddSum = 1\n        val evenEvenSum = 1\n        val evenOddSumFactorial\
    \ = 1\n        val evenEvenSumFactorial = 1\n        val oddEvenSum = 1\n    \
    \    val oddEvenSumFactorial = 1\n        val evenOddEven = 1\n        val evenOddOdd\
    \ = 1\n        val oddEvenEven = 1\n        val oddOddEven = 1\n        val evenOddOdd\
    \ = 1\n        val oddEvenEven = 1\n        val oddOddEven = 1\n        val evenOddOdd\
    \ = 1\n        val oddEvenEven = 1\n        val oddOddEven = 1\n        val evenOddOdd\
    \ = 1\n        val oddEvenEven = 1\n        val oddOddEven = 1\n        val evenOddOdd\
    \ = 1\n        val oddEvenEven = 1\n        val oddOddEven = 1\n        val evenOddOdd\
    \ = 1\n        val oddEvenEven = 1\n        val oddOddEven = 1\n        val evenOddOdd\
    \ = 1\n        val oddEvenEven = 1\n        val oddOddEven = 1\n        val evenOddOdd\
    \ = 1\n        val oddEvenEven = 1\n        val oddOddEven = 1\n        val evenOddOdd\
    \ = 1\n        val oddEvenEven = 1\n        val oddOddEven = 1\n        val evenOddOdd\
    \ = 1\n        val oddEvenEven = 1\n        val oddOddEven = 1\n        val evenOddOdd\
    \ = 1\n        val oddEven\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpck2z_lcf.scala:74:4 ----------------------------\e\
    [0m\e[0m\n\e[31m74 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpck2z_lcf.scala:45:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m45 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenOddOdd\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenOddOdd is already defined as \e[33mvalue\e[0m \e[35mevenOddOdd\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpck2z_lcf.scala:46:12 ---------------------------\e[0m\e[0m\n\e\
    [31m46 |\e[0m        \e[33mval\e[0m \e[36moddEvenEven\e[0m = \e[31m1\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0moddEvenEven\
    \ is already defined as \e[33mvalue\e[0m \e[35moddEvenEven\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpck2z_lcf.scala:47:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m\
    \ \e[36moddOddEven\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0moddOddEven is already defined as \e[33mvalue\e[0m \e[35moddOddEven\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpck2z_lcf.scala:48:12 ---------------------------\e[0m\e[0m\n\e\
    [31m48 |\e[0m        \e[33mval\e[0m \e[36mevenOddOdd\e[0m = \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mevenOddOdd is already\
    \ defined as \e[33mvalue\e[0m \e[35mevenOddOdd\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpck2z_lcf.scala:49:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m\
    \ \e[36moddEvenEven\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val i = 2l\n    \
    \    while (i <= n) {\n            if (i % 2 == 0) {\n                evens +=\
    \ i\n            } else {\n                odds += i\n            }\n        \
    \    factorials += i\n            sums += i\n            i += 1\n        }\n \
    \       odds ++= factorials.drop(evens.size)\n        evens ++= factorials.take(evens.size)\n\
    \        odds ++= sums.drop(evens.size)\n        evens ++= sums.take(evens.size)\n\
    \        odds ++= factorials.drop(evens.size)\n        evens ++= factorials.take(evens.size)\n\
    \        odds ++= sums.drop(evens.size)\n        evens ++= sums.take(evens.size)\n\
    \        odds ++= factorials.drop(evens.size)\n        evens ++= factorials.take(evens.size)\n\
    \        odds ++= sums.drop(evens.size)\n        evens ++= sums.take(evens.size)\n\
    \        odds ++= factorials.drop(evens.size)\n        evens ++= factorials.take(evens.size)\n\
    \        odds ++= sums.drop(evens.size)\n        evens ++= sums.take(evens.size)\n\
    \        odds ++= factorials.drop(evens.size)\n        evens ++= factorials.take(evens.size)\n\
    \        odds ++= sums.drop(evens.size)\n        evens ++= sums.take(evens.size)\n\
    \        odds ++= factorials.drop(evens.size)\n        evens ++= factorials.take(evens.size)\n\
    \        odds ++= sums.drop(evens.size)\n        evens ++= sums.take(evens.size)\n\
    \        odds ++= factorials.drop(evens.size)\n        evens ++= factorials.take(evens.size)\n\
    \        odds ++= sums.drop(evens.size)\n        evens ++= sums.take(evens.size)\n\
    \        odds ++= factorials.drop(evens.size)\n        evens ++= factorials.take(evens.size)\n\
    \        odds ++= sums.drop\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptyz5ni8_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmptyz5ni8_.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmptyz5ni8_.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmptyz5ni8_.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmptyz5ni8_.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Long - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n  \
    \      val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n   \
    \             factorials += factorial\n                sums += sum\n         \
    \   }else{\n                factorial *= i\n                sum += i\n       \
    \     }\n        }\n        factorials += factorial\n        sums += sum\n   \
    \     factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp702bkif_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp702bkif_.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp702bkif_.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp702bkif_.scala:22:26\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp702bkif_.scala:23:20 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010091
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        val even = 1l\n        val odd = 1l\n        val\
    \ i = 2l\n        while (i <= n) {\n            if (i % 2 == 0) {\n          \
    \      evens += i\n            } else {\n                odds += i\n         \
    \   }\n            factorial *= i\n            sum += i\n            factorials\
    \ += factorial\n            sums += sum\n            even += i\n            odd\
    \ += i\n            i += 2l\n        }\n        odds ++= evens\n        sums ++=\
    \ evens\n        factorials\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpni3uwj78.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpni3uwj78.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpni3uwj78.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpni3uwj78.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpni3uwj78.scala:28:22 ------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m            factorial *= i\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           value *= is not a member\
    \ of Long - did you mean factorial.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpni3uwj78.scala:29:16 ------------------------\e[0m\e[0m\n\e[31m29 |\e\
    [0m            sum += i\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            value += is not a member of Long - did you mean sum.!=?\n\
    \e[31m\e[3"
  stdout: ''
  timestamp: 1660010091
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i.toLong*i\n            }\n            else{\n                factorials\
    \ += i.toLong\n            }\n        }\n        factorials.toList\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu0tqehy8.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu0tqehy8.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 6\n        factorials += 24\n        factorials += 15\n\
    \        factorials.take(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp66lv4rdi.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010085
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        for(i <- 1 to n){\n            if(i%2 == 0){\n \
    \               factorials += factorial\n                sums += sum\n       \
    \     }\n            else{\n                factorial *= i\n                sum\
    \ += i\n            }\n        }\n        factorials += factorial\n        sums\
    \ += sum\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpydpnxhof.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpydpnxhof.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpydpnxhof.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpydpnxhof.scala:23:26\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \           value *= is not a member of Long - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpydpnxhof.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Long - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010091
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 2\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                evens += i\n    \
    \        } else {\n                odds += i\n            }\n            factorials\
    \ += i\n            sums += i\n            i += 1\n        }\n        evens.toList.map(x\
    \ => factorials.map(y => x * y)).toList ++ sums.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpco4g4q53.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpco4g4q53.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpco4g4q53.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpco4g4q53.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpco4g4q53.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        var sum = 0\n        var\
    \ i = 0\n        while (i < n) {\n            if (i % 2 == 0) {\n            \
    \    factorials += i.toLong\n                sum += i.toLong\n            } else\
    \ {\n                sums += i.toLong\n            }\n            i += 1\n   \
    \     }\n        factorials.toList\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3wvzyrto.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp3wvzyrto.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3wvzyrto.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += i.toLong\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean Int.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 1 // i is 1 because\
    \ we start from 1\n        while (i <= n) {\n            if (i % 2 == 0) {\n \
    \               evens += i.toLong\n            } else {\n                odds\
    \ += i.toLong\n            }\n            factorials += i.toLong * factorials.last\n\
    \            sums += i.toLong * sums.last\n            i += 1\n        }\n   \
    \     evens.toList ++ sums.toList ++ factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxnf05enr.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpxnf05enr.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpxnf05enr.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpxnf05enr.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpxnf05enr.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        val even = 1\n        val odd = 1\n        val evenSum\
    \ = 1\n        val oddSum = 1\n        val evenFactorial = 1\n        val oddFactorial\
    \ = 1\n        val evenSumFactorial = 1\n        val oddSumFactorial = 1\n   \
    \     val evenSumEven = 1\n        val oddSumEven = 1\n        val evenSumOdd\
    \ = 1\n        val oddSumOdd = 1\n        val evenSumEvenFactorial = 1\n     \
    \   val oddSumEvenFactorial = 1\n        val evenSumOddFactorial = 1\n       \
    \ val oddSumOddFactorial = 1\n        val evenSumEvenSum = 1\n        val oddSumEvenSum\
    \ = 1\n        val evenSumOddSum = 1\n        val oddSumOddSum = 1\n        val\
    \ evenSumEvenSumFactorial = 1\n        val oddSumEvenSumFactorial = 1\n      \
    \  val evenSumOddSumFactorial = 1\n        val oddSumOddSumFactorial = 1\n   \
    \     val evenSumEvenSumEven = 1\n        val oddSumEvenSumEven = 1\n        val\
    \ evenSumOddSumEven = 1\n        val oddSumOddSumEven = 1\n        val evenSumEvenSumOdd\
    \ = 1\n        val oddSumEvenSumOdd = 1\n        val evenSumOddSumOdd = 1\n  \
    \      val oddSumOddSumOdd = 1\n        val evenSumEvenSumEvenFactorial = 1\n\
    \        val oddSumEvenSumEvenFactorial = 1\n        val evenSumOddSumEvenFactorial\
    \ = 1\n        val oddSumOddSumEvenFactorial = 1\n        val evenSumEvenSumOddFactorial\
    \ = 1\n        val oddSumEvenSumOddFactorial = 1\n        val evenSumOddSumOddFactorial\
    \ = 1\n        val evenSumEvenSumEvenSum = 1\n        val oddSumEvenSumEvenSum\
    \ = 1\n        val evenSumOddSumEvenSum = 1\n        val oddSumOddSumEvenSum =\
    \ 1\n        val evenSumEvenSumOddSum = 1\n        val oddSumEvenSumOddSum = 1\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe6m4_kej.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpe6m4_kej.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpe6m4_kej.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpe6m4_kej.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpe6m4_kej.scala:64:5 ---------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: List[Long]\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    5 errors found\n"
  stdout: ''
  timestamp: 1660010089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x =>\
    \ x * factorials.indexOf(x) + factorials.indexOf(x) + 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprsp61hbr.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010085
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += factorials.foldLeft(1l.toLong)(_\
    \ * _)\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd8bpzqy5.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd8bpzqy5.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010096
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val evenFactorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddFactorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvens = mutable.ArrayBuffer.empty[Long]\n        val sumOdds =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val oddSums = mutable.ArrayBuffer.empty[Long]\n        val evenFactorialSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddFactorialSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenFactorials = mutable.ArrayBuffer.empty[Long]\n        val\
    \ sumOddFactorials = mutable.ArrayBuffer.empty[Long]\n        val evenSumFactorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddSumFactorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenFactorials = mutable.ArrayBuffer.empty[Long]\n       \
    \ val evenSumOddFactorials = mutable.ArrayBuffer.empty[Long]\n        val oddSumEvenFactorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddSumOddFactorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenFactorialSumEvens = mutable.ArrayBuffer.empty[Long]\n       \
    \ val evenFactorialSumOdds = mutable.ArrayBuffer.empty[Long]\n        val oddFactorialSumEvens\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddFactorialSumOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenFactorialEvens = mutable.ArrayBuffer.empty[Long]\n   \
    \     val evenSumEvenFactorialOdds = mutable.ArrayBuffer.empty[Long]\n       \
    \ val evenSumOddFactorialEvens = mutable.ArrayBuffer.empty[Long]\n        val\
    \ evenSumOddFactorialOdds = mutable.ArrayBuffer.empty[Long]\n        val oddSumEvenFactorialEvens\
    \ = mutable.ArrayBuffer.empty[Long]\n        val oddSumEvenFactorialOdds = mutable.ArrayBuffer.empty[Long]\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnk594kg8.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpnk594kg8.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpnk594kg8.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpnk594kg8.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpnk594kg8.scala:17:29 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mevenFactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                             Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpnk594kg8.scala:18:28 ------------------------\e\
    [0m\e[0m\n\e[31m18 "
  stdout: ''
  timestamp: 1660010097
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 4\n        factorials += 5\n        factorials += 6\n  \
    \      factorials += 7\n        factorials += 8\n        factorials += 9\n   \
    \     factorials += 10\n        factorials += 11\n        factorials += 12\n \
    \       factorials += 13\n        factorials += 14\n        factorials += 15\n\
    \        factorials += 16\n        factorials += 17\n        factorials += 18\n\
    \        factorials += 19\n        factorials += 20\n        factorials += 21\n\
    \        factorials += 22\n        factorials += 23\n        factorials += 24\n\
    \        factorials += 25\n        factorials += 26\n        factorials += 27\n\
    \        factorials += 28\n        factorials += 29\n        factorials += 30\n\
    \        factorials += 31\n        factorials += 32\n        factorials += 33\n\
    \        factorials += 34\n        factorials += 35\n        factorials += 36\n\
    \        factorials += 37\n        factorials += 38\n        factorials += 39\n\
    \        factorials += 40\n        factorials += 41\n        factorials += 42\n\
    \        factorials += 43\n        factorials += 44\n        factorials += 45\n\
    \        factorials += 46\n        factorials += 47\n        factorials += 48\n\
    \        factorials += 49\n        factorials += 50\n        factorials += 51\n\
    \        factorials += 52\n        factorials += 53\n        factorials += 54\n\
    \        factorials += 55\n        factorials += 56\n        factorials += 57\n\
    \        factorials += 58\n        factorials += 59\n        factorials += 60\n\
    \        factorials += 61\n        factorials += 62\n        factorials += 63\n\
    \        factorials += 64\n        factorials += 65\n        factorials += 66\n\
    \        factorials += 67\n        factorials += 68\n        factorials += 69\n\
    \        factorials += 70\n        factorials += 71\n        factorials += 72\n\
    \        factorials += 73\n        factorials += 74\n        factorials += 75\n\
    \        factorials += 76\n        factorials += 77\n        factorials += 78\n\
    \        factorials += 79\n        factorials += 80\n        factorials += 81\n\
    \        factorials += 82\n        factorials += 83\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzsu7fc6f.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803842
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 2\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                evens += i\n    \
    \        } else {\n                odds += i\n            }\n            factorials\
    \ += i\n            sums += i\n            i += 1\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7p8a9qgl.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp7p8a9qgl.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp7p8a9qgl.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp7p8a9qgl.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp7p8a9qgl.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010097
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var i = 1;\n        while(i <= n){\n            factorials += i.toLong\
    \ * factorials.last\n            i += 1\n        }\n        factorials\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj68gwdsh.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 4\n        factorials += 5\n        factorials += 6\n  \
    \      factorials += 7\n        factorials += 8\n        factorials += 9\n   \
    \     factorials += 10\n        factorials += 11\n        factorials += 12\n \
    \       factorials += 13\n        factorials += 14\n        factorials += 15\n\
    \        factorials += 16\n        factorials += 17\n        factorials += 18\n\
    \        factorials += 19\n        factorials += 20\n        factorials += 21\n\
    \        factorials += 22\n        factorials += 23\n        factorials += 24\n\
    \        factorials += 25\n        factorials += 26\n        factorials += 27\n\
    \        factorials += 28\n        factorials += 29\n        factorials += 30\n\
    \        factorials += 31\n        factorials += 32\n        factorials += 33\n\
    \        factorials += 34\n        factorials += 35\n        factorials += 36\n\
    \        factorials += 37\n        factorials += 38\n        factorials += 39\n\
    \        factorials += 40\n        factorials += 41\n        factorials += 42\n\
    \        factorials += 43\n        factorials += 44\n        factorials += 45\n\
    \        factorials += 46\n        factorials += 47\n        factorials += 48\n\
    \        factorials += 49\n        factorials += 50\n        factorials += 51\n\
    \        factorials += 52\n        factorials += 53\n        factorials += 54\n\
    \        factorials += 55\n        factorials += 56\n        factorials += 57\n\
    \        factorials += 58\n        factorials += 59\n        factorials += 60\n\
    \        factorials += 61\n        factorials += 62\n        factorials += 63\n\
    \        factorials += 64\n        factorials += 65\n        factorials += 66\n\
    \        factorials += 67\n        factorials += 68\n        factorials += 69\n\
    \        factorials += 70\n        factorials += 71\n        factorials += 72\n\
    \        factorials += 73\n        factorials += 74\n        factorials += 75\n\
    \        factorials += 76\n        factorials += 77\n        factorials += 78\n\
    \        factorials += 79\n        factorials += 80\n        factorials += 81\n\
    \        factorials += 82\n        factorials += 83\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzsu7fc6f.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803842
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n  \
    \      val sum = 1\n        for(i <- 1 to n) {\n            if(i%2 == 0) {\n \
    \               factorials += factorial\n                sums += sum\n       \
    \     }\n            else {\n                factorial *= i\n                sum\
    \ += i\n            }\n        }\n        factorials += factorial\n        sums\
    \ += sum\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptrkdlf9t.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmptrkdlf9t.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmptrkdlf9t.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptrkdlf9t.scala:23:26\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmptrkdlf9t.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 2l\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                evens += i.toLong\n\
    \            } else {\n                odds += i.toLong\n            }\n     \
    \       factorials += i.toLong * factorials.last\n            sums += i.toLong\
    \ * sums.last\n            i += 1\n        }\n        factorials.reverse\n   \
    \     sums.reverse\n        evens.reverse\n        odds.reverse\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2k6gub8p.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp2k6gub8p.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp2k6gub8p.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp2k6gub8p.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp2k6gub8p.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Long - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010100
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        for (i <- 1 to n) {\n            if (i % 2 == 0)\
    \ {\n                factorials += factorial\n                sums += sum\n  \
    \          } else {\n                factorial *= i\n                sum += i\n\
    \            }\n        }\n        factorials ++= factorial\n        sums ++=\
    \ sum\n        factorials.toList ++ sums.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuxd_bq9f.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuxd_bq9f.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpuxd_bq9f.scala:17:23 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuxd_bq9f.scala:22:26\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \           value *= is not a member of Long - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpuxd_bq9f.scala:23:20 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Long - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010101
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += factorials.head\n        factorials\
    \ += factorials.head * factorials.tail\n        factorials += factorials.head\
    \ * factorials.tail * factorials.tail\n        factorials.take(n)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprx0s8e3s.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010096
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i.toLong\n            }else{\n                factorials += (i.toLong + factorials.last)\n\
    \            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6jrly4qx.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6jrly4qx.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010100
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val factorial = 1\n\
    \        val number = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n\
    \                factorials += factorial\n                numbers += number\n\
    \            }\n            else{\n                factorials += factorial * number\n\
    \                numbers += number\n            }\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy3p9k0x5.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpy3p9k0x5.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpy3p9k0x5.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010102
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0p8isb3w.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0msum is already defined\
    \ as \e[33mvalue\e[0m \e[35msum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0p8isb3w.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorials is already defined as \e[33mvalue\e[0m \e[35mfactorials\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0p8isb3w.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msums is already defined as \e[33mvalue\e[0m \e[35msums\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp0p8isb3w.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0msum is already defined as \e[33mvalue\e\
    [0m \e[35msum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp0p8isb3w.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mfactorial\e[0m = \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mfactorial\
    \ is already defined as \e[33mvalue\e[0m \e[35mfactorial\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must"
  stdout: ''
  timestamp: 1660010102
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        for(i <- 1 to n) {\n            factorials += factorial\n\
    \            sums += sum\n            factorial *= i\n            sum += i\n \
    \       }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1reyod_g.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp1reyod_g.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp1reyod_g.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1reyod_g.scala:20:22\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m            factorial *=\
    \ i\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \      value *= is not a member of Long - did you mean factorial.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp1reyod_g.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            sum += i\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Long -\
    \ did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010102
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i.toLong*i\n            }else{\n                factorials += i.toLong\n\
    \            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxl0nytun.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxl0nytun.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010101
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        for(i <- 1 to n){\n            if(i%2 == 0){\n \
    \               factorials += factorial\n                sums += sum\n       \
    \     }else{\n                factorial *= i\n                sum += i\n     \
    \       }\n        }\n        factorials += factorial\n        sums += sum\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6wdcvxbq.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp6wdcvxbq.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6wdcvxbq.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6wdcvxbq.scala:22:26\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \           value *= is not a member of Long - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp6wdcvxbq.scala:23:20 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Long - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010102
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        var factorial = 1\n        for(i <- 1 to n){\n            factorial *=\
    \ i\n            if(i % 2 == 0){\n                factorials += factorial\n  \
    \          }else{\n                factorials += factorial.toLong\n          \
    \  }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuux1e03o.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuux1e03o.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010101
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += (i.toLong +\
    \ factorials.last)\n            }\n        }\n        factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdxw_wvyx.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxw_wvyx.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010101
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n  \
    \      val sum = 1\n        val i = 2\n        while (i <= n) {\n            if\
    \ (i % 2 == 0) {\n                factorials += factorial\n                sums\
    \ += sum\n            }\n            else {\n                factorial *= i\n\
    \                sum += i\n            }\n            i += 1\n        }\n    \
    \    factorials ++= factorial\n        sums ++= sum\n        factorials.toList\
    \ ++ sums.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzjv2omn7.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpzjv2omn7.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpzjv2omn7.scala:24:26 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                factorial *= i\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value *= is not\
    \ a member of Int - did you mean factorial.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpzjv2omn7.scala:25:20 ------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m                ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                value += is not a member of Int - did you\
    \ mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzjv2omn7.scala:27:14\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010103
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials ++= factorials.take(n).toList\n\
    \        factorials.toList\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphtjnpswv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010097
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        val number = 1\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        val number = 1\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        val number = 1\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        val number = 1\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        val number = 1\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        val number = 1\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        val number = 1\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        val number = 1\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        val number = 1\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        val number = 1\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        val number = 1\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val sum = 0\n     \
    \   val factorial = 1\n        \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp1hp2yo1k.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorials is already defined as \e[33mvalue\e[0m \e[35mfactorials\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp1hp2yo1k.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnumbers is already defined as \e[33mvalue\e[0m \e[35mnumbers\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp1hp2yo1k.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0msum is already defined as \e\
    [33mvalue\e[0m \e[35msum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp1hp2yo1k.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mfactorial\e[0m = \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mfactorial\
    \ is already defined as \e[33mvalue\e[0m \e[35mfactorial\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp1hp2yo1k.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mnumber\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnumber is already defined as \e[33mvalue\e[0m \e[35mnumber\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods "
  stdout: ''
  timestamp: 1660010102
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        for(i <- 1 to n){\n            if(i%2 == 0){\n \
    \               factorials += factorial\n                sums += sum\n       \
    \     }\n            else{\n                factorial *= i\n                sum\
    \ += i\n            }\n        }\n        factorials += factorial\n        sums\
    \ += sum\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpydpnxhof.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpydpnxhof.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpydpnxhof.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpydpnxhof.scala:23:26\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \           value *= is not a member of Long - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpydpnxhof.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Long - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010091
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += factorials.foldLeft(0l)\
    \ { (acc, x) => acc * x }\n            }\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzd8gvixq.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzd8gvixq.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010102
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        for(i <- 1 to n){\n            factorial *=\
    \ i\n            if(i % 2 == 0){\n                factorials += factorial\n  \
    \          }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgwnlducg.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgwnlducg.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659803882
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        val even = 1l\n        val odd = 1l\n        val\
    \ i = 2l\n        while (i <= n) {\n            if (i % 2 == 0) {\n          \
    \      evens += i\n                factorial *= i\n            } else {\n    \
    \            odds += i\n                factorial *= i\n            }\n      \
    \      factorials += factorial\n            sums += sum\n            sum += i\n\
    \            i += 2l\n        }\n        evens.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4bst7pui.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp4bst7pui.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp4bst7pui.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp4bst7pui.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp4bst7pui.scala:25:26 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                factorial *= i\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           value *= is not\
    \ a member of Long - did you mean factorial.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp4bst7pui.scala:28:26 ------------------------\e[0m\e[0m\n\e[31m28\
    \ |\e[0m                factorial *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           value *= is not a member of Long - di"
  stdout: ''
  timestamp: 1660010103
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorial\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp_olrsd8.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpp_olrsd8.scala:69:8 -------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m        factorial\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i.toLong * factorials.last\n            }else{\n                factorials\
    \ += i.toLong\n            }\n        }\n        factorials.toList\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee3sgtis.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpee3sgtis.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010103
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += factorials.sum\
    \ + i.toLong\n            }\n        }\n        factorials.toList\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk36ykc0f.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpk36ykc0f.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010107
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 4\n        factorials += 5\n        factorials += 6\n  \
    \      factorials += 7\n        factorials += 8\n        factorials += 9\n   \
    \     factorials += 10\n        factorials += 11\n        factorials += 12\n \
    \       factorials += 13\n        factorials += 14\n        factorials += 15\n\
    \        factorials += 16\n        factorials += 17\n        factorials += 18\n\
    \        factorials += 19\n        factorials += 20\n        factorials += 21\n\
    \        factorials += 22\n        factorials += 23\n        factorials += 24\n\
    \        factorials += 25\n        factorials += 26\n        factorials += 27\n\
    \        factorials += 28\n        factorials += 29\n        factorials += 30\n\
    \        factorials += 31\n        factorials += 32\n        factorials += 33\n\
    \        factorials += 34\n        factorials += 35\n        factorials += 36\n\
    \        factorials += 37\n        factorials += 38\n        factorials += 39\n\
    \        factorials += 40\n        factorials += 41\n        factorials += 42\n\
    \        factorials += 43\n        factorials += 44\n        factorials += 45\n\
    \        factorials += 46\n        factorials += 47\n        factorials += 48\n\
    \        factorials += 49\n        factorials += 50\n        factorials += 51\n\
    \        factorials += 52\n        factorials += 53\n        factorials += 54\n\
    \        factorials += 55\n        factorials += 56\n        factorials += 57\n\
    \        factorials += 58\n        factorials += 59\n        factorials += 60\n\
    \        factorials += 61\n        factorials += 62\n        factorials += 63\n\
    \        factorials += 64\n        factorials += 65\n        factorials += 66\n\
    \        factorials += 67\n        factorials += 68\n        factorials += 69\n\
    \        factorials += 70\n        factorials += 71\n        factorials += 72\n\
    \        factorials += 73\n        factorials += 74\n        factorials += 75\n\
    \        factorials += 76\n        factorials += 77\n        factorials += 78\n\
    \        factorials += 79\n        factorials += 80\n        factorials += 81\n\
    \        factorials += 82\n        factorials += 83\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzsu7fc6f.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803842
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i.toLong*i.toLong\n            }\n            else{\n                factorials\
    \ += i.toLong\n            }\n        }\n        factorials.toList\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpejr0yfwl.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpejr0yfwl.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010107
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 2\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                evens += i.toLong\n\
    \            } else {\n                odds += i.toLong\n            }\n     \
    \       factorials += i.toLong * factorials.last\n            sums += i.toLong\
    \ * sums.last\n            i += 1\n        }\n        factorials.reverse\n   \
    \     sums.reverse\n        evens.reverse\n        odds.reverse\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkktf4td7.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpkktf4td7.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkktf4td7.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkktf4td7.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpkktf4td7.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010107
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials.take(n)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjw851krz.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010104
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i.toLong\n            }else{\n                factorials += (i*(i+1l)).toLong\n\
    \            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptd98y7zi.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptd98y7zi.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010109
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val i = 1 // i starts\
    \ from 1\n        while (i <= n) {\n            if (i % 2 == 0) {\n          \
    \      factorials += i.toLong\n            } else {\n                sums += i\n\
    \            }\n            i += 1\n        }\n        factorials.toList ++ sums.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6oyong4z.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp6oyong4z.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp6oyong4z.scala:22:14 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010109
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 6\n \
    \       factorials += 24\n        factorials += 15\n        factorials.take(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmllab6q3.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010106
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials ++= factorials.drop(1).map(x\
    \ => x * x)\n        factorials ++= factorials.drop(1).map(x => x * x)\n     \
    \   factorials ++= factorials.drop(1).map(x => x * x)\n        factorials ++=\
    \ factorials.drop(1).map(x => x * x)\n        factorials ++= factorials.drop(1).map(x\
    \ => x * x)\n        factorials ++= factorials.drop(1).map(x => x * x)\n     \
    \   factorials ++= factorials.drop(1).map(x => x * x)\n        factorials ++=\
    \ factorials.drop(1).map(x => x * x)\n        factorials ++= factorials.drop(1).map(x\
    \ => x * x)\n        factorials ++= factorials.drop(1).map(x => x * x)\n     \
    \   factorials ++= factorials.drop(1).map(x => x * x)\n        factorials ++=\
    \ factorials.drop(1).map(x => x * x)\n        factorials ++= factorials.drop(1).map(x\
    \ => x * x)\n        factorials ++= factorials.drop(1).map(x => x * x)\n     \
    \   factorials ++= factorials.drop(1).map(x => x * x)\n        factorials ++=\
    \ factorials.drop(1).map(x => x * x)\n        factorials ++= factorials.drop(1).map(x\
    \ => x * x)\n        factorials ++= factorials.drop(1).map(x => x * x)\n     \
    \   factorials ++= factorials.drop(1).map(x => x * x)\n        factorials ++=\
    \ factorials.drop(1).map(x => x * x)\n        factorials ++= factorials.drop(1).map(x\
    \ => x * x)\n        factorials ++= factorials.drop(1).map(x => x * x)\n     \
    \   factorials ++= factorials.drop(1).map(x => x * x)\n        factorials ++=\
    \ factorials.drop(1).map(x => x * x)\n        factorials ++= factorials.drop(1).map(x\
    \ => x * x)\n        factorials ++= factorials.drop(1).map(x => x * x)\n     \
    \   factorials ++= factorials.drop(1).map(x => x * x)\n        factorial\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplafifmed.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplafifmed.scala:42:8 -------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        factorial\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010106
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 2\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                evens += i\n    \
    \        } else {\n                odds += i\n            }\n            factorials\
    \ += i\n            sums += i\n            i += 1\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7p8a9qgl.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp7p8a9qgl.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp7p8a9qgl.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp7p8a9qgl.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp7p8a9qgl.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010097
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += n\n        factorials.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj6e4hfj3.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010107
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x =>\
    \ x * factorials.indexOf(_))\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhjqfbq3.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010108
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += (i.toLong +\
    \ factorials.last)\n            }\n        }\n        factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm60j7wkv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpm60j7wkv.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sum = 0\n        for(i <- 1 to n){\n            val factorial = factorials.foldLeft(1l)((acc,\
    \ x) => acc * x)\n            factorials += factorial\n            sum += factorial\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3o97zrzk.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3o97zrzk.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3o97zrzk.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            sum += factorial\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        for(i <- 1 to n){\n            factorial *=\
    \ i\n            if(i % 2 == 0){\n                factorials += factorial\n  \
    \          }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgwnlducg.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgwnlducg.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659803882
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += (i.toLong *\
    \ (i-1).toLong)\n            }\n        }\n        factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4hhicpva.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4hhicpva.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010112
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n){\n            if(i%2==0){\n                factorials\
    \ += i.toLong*i\n            }\n            else{\n                factorials\
    \ += i.toLong\n            }\n        }\n        factorials.toList\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptc3ju7kw.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptc3ju7kw.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010112
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i.toLong*i\n            }else{\n                factorials += i.toLong\n\
    \            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxl0nytun.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxl0nytun.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010101
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials ++= factorials.drop(1).map(x\
    \ => x * x)\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuv7tpvgz.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010086
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        var factorial = 1\n        for (i <- 1 to n) {\n            if (i % 2\
    \ == 0) {\n                factorials += factorial\n            }\n          \
    \  else {\n                factorials += factorial * (i + 1).toLong\n        \
    \    }\n            factorial = 1\n        }\n        factorials += factorial\n\
    \        factorials.toList\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplb002nh5.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplb002nh5.scala:15:23 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1l\n\
    \        val sum = 1l\n        for (i <- 1 to n) {\n            if (i % 2 == 0)\
    \ {\n                factorials += factorial\n                sums += sum\n  \
    \          } else {\n                factorial *= i\n                sum += i\n\
    \            }\n        }\n        factorials ++= factorial\n        sums ++=\
    \ sum\n        factorials.toList ++ sums.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwzr0zf7k.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwzr0zf7k.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpwzr0zf7k.scala:17:23 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwzr0zf7k.scala:22:26\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \           value *= is not a member of Long - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpwzr0zf7k.scala:23:20 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Long - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(_ *\
    \ _).toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ra5vhyw.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010109
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += (i.toLong +\
    \ factorials.last)\n            }\n        }\n        factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph2m3gpxh.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmph2m3gpxh.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 1 // i is always\
    \ 1\n        while (i <= n) {\n            if (i % 2 == 0) {\n               \
    \ evens += i.toLong\n            } else {\n                odds += i.toLong\n\
    \            }\n            factorials += i.toLong * factorials.last\n       \
    \     sums += i.toLong * sums.last\n            i += 1\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcbc0znl4.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpcbc0znl4.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpcbc0znl4.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpcbc0znl4.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcbc0znl4.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        val even = 1\n        val odd = 1\n        val evenSum\
    \ = 1\n        val oddSum = 1\n        val evenFactorial = 1\n        val oddFactorial\
    \ = 1\n        val evenSumFactorial = 1\n        val oddSumFactorial = 1\n   \
    \     val evenSumSum = 1\n        val oddSumSum = 1\n        val evenFactorialSum\
    \ = 1\n        val oddFactorialSum = 1\n        val evenSumFactorialSum = 1\n\
    \        val oddSumFactorialSum = 1\n        val evenSumSumFactorial = 1\n   \
    \     val oddSumSumFactorial = 1\n        val evenFactorialFactorial = 1\n   \
    \     val oddFactorialFactorial = 1\n        val evenSumFactorialFactorial = 1\n\
    \        val oddSumFactorialFactorial = 1\n        val evenSumSumFactorialFactorial\
    \ = 1\n        val oddSumSumFactorialFactorial = 1\n        val evenFactorialSumSum\
    \ = 1\n        val oddFactorialSumSum = 1\n        val evenSumFactorialSumSum\
    \ = 1\n        val oddSumFactorialSumSum = 1\n        val evenSumSumFactorialSumSum\
    \ = 1\n        val oddSumSumFactorialSumSum = 1\n        val evenFactorialFactorialSum\
    \ = 1\n        val oddFactorialFactorialSum = 1\n        val evenSumFactorialFactorial\
    \ = 1\n        val oddSumFactorialFactorial = 1\n        val evenSumSumFactorialFactorial\
    \ = 1\n        val oddSumSumFactorialFactorial = 1\n        val evenFactorialFactorialFactorial\
    \ = 1\n        val oddFactorialFactorialFactorial = 1\n        val evenSumFactorialFactorialFactorial\
    \ = 1\n        val oddSumFactorialFactorialFactorial = 1\n        val evenSumSumFactorialFactorialFactorial\
    \ = 1\n        val oddSumSumFactorialFactorialFactorial = 1\n        val evenFactorialSumFactorialSum\
    \ = 1\n        val oddFactor\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplgls_km_.scala:61:4 ----------------------------\e\
    [0m\e[0m\n\e[31m61 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmplgls_km_.scala:49:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumFactorialFactorial\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mevenSumFactorialFactorial\
    \ is already defined as \e[33mvalue\e[0m \e[35mevenSumFactorialFactorial\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmplgls_km_.scala:50:12 ---------------------------\e[0m\e[0m\n\e[31m50\
    \ |\e[0m        \e[33mval\e[0m \e[36moddSumFactorialFactorial\e[0m = \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0moddSumFactorialFactorial is already defined as \e[33mvalue\e[0m \e[35moddSumFactorialFactorial\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmplgls_km_.scala:51:12 ---------------------------\e[0m\e[0m\n\e\
    [31m51 |\e[0m        \e[33mval\e[0m \e[36mevenSumSumFactorialFactorial\e[0m =\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumSumFactorialFactorial is already defined as \e[33mvalue\e\
    [0m \e[35mevenSumSumFactorialFactorial\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmplgls_km_.scala:52:12 ---------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m        \e[33mval\e[0m \e[36moddSumSumFactorialFactorial\e\
    [0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0moddSumSumFactorialFactorial is already defined as \e[33mvalue\e\
    [0m \e[35moddSumSumFactorialFactorial\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must al"
  stdout: ''
  timestamp: 1660010113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        var sum = 0\n        for(i <- 1 to n) {\n\
    \            factorial *= i\n            sum += i\n            factorials += factorial\n\
    \        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpocjn7rtq.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpocjn7rtq.scala:16:22 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        var sum = 1\n        for(i <- 1 to n) {\n\
    \            factorials += factorial\n            sum += i\n        }\n      \
    \  factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpppw0f7ss.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpppw0f7ss.scala:16:22 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val numbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1l\n        val number = 0l\n        for(i <- 1 to n) {\n            number\
    \ += 1l\n            if(i % 2 == 0) {\n                factorials += factorial\n\
    \            }\n            else {\n                factorials += factorial *\
    \ number\n            }\n        }\n        factorials.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4kvhhpne.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp4kvhhpne.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp4kvhhpne.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4kvhhpne.scala:18:19\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            number += \e\
    [31m1l\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Long - did you mean number.!=?\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010114
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 4\n        factorials += 5\n        factorials += 6\n  \
    \      factorials += 7\n        factorials += 8\n        factorials += 9\n   \
    \     factorials += 10\n        factorials += 11\n        factorials += 12\n \
    \       factorials += 13\n        factorials += 14\n        factorials += 15\n\
    \        factorials += 16\n        factorials += 17\n        factorials += 18\n\
    \        factorials += 19\n        factorials += 20\n        factorials += 21\n\
    \        factorials += 22\n        factorials += 23\n        factorials += 24\n\
    \        factorials += 25\n        factorials += 26\n        factorials += 27\n\
    \        factorials += 28\n        factorials += 29\n        factorials += 30\n\
    \        factorials += 31\n        factorials += 32\n        factorials += 33\n\
    \        factorials += 34\n        factorials += 35\n        factorials += 36\n\
    \        factorials += 37\n        factorials += 38\n        factorials += 39\n\
    \        factorials += 40\n        factorials += 41\n        factorials += 42\n\
    \        factorials += 43\n        factorials += 44\n        factorials += 45\n\
    \        factorials += 46\n        factorials += 47\n        factorials += 48\n\
    \        factorials += 49\n        factorials += 50\n        factorials += 51\n\
    \        factorials += 52\n        factorials += 53\n        factorials += 54\n\
    \        factorials += 55\n        factorials += 56\n        factorials += 57\n\
    \        factorials += 58\n        factorials += 59\n        factorials += 60\n\
    \        factorials += 61\n        factorials += 62\n        factorials += 63\n\
    \        factorials += 64\n        factorials += 65\n        factorials += 66\n\
    \        factorials += 67\n        factorials += 68\n        factorials += 69\n\
    \        factorials += 70\n        factorials += 71\n        factorials += 72\n\
    \        factorials += 73\n        factorials += 74\n        factorials += 75\n\
    \        factorials += 76\n        factorials += 77\n        factorials += 78\n\
    \        factorials += 79\n        factorials += 80\n        factorials += 81\n\
    \        factorials += 82\n        factorials += 83\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzsu7fc6f.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803842
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1l\n\
    \        val sum = 1l\n        val even = 1l\n        val odd = 1l\n        val\
    \ evens = mutable.ArrayBuffer.empty[Long]\n        val odds = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorials = mutable.ArrayBuffer.empty[Long]\n        val sums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1l\n\
    \        val sum = 1l\n        val even = 1l\n        val odd = 1l\n        val\
    \ evens = mutable.ArrayBuffer.empty[Long]\n        val odds = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorials = mutable.ArrayBuffer.empty[Long]\n        val sums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1l\n\
    \        val sum = 1l\n        val even = 1l\n        val odd = 1l\n        val\
    \ evens = mutable.ArrayBuffer.empty[Long]\n        val odds = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorials = mutable.ArrayBuffer.empty[Long]\n        val sums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1l\n\
    \        val sum = 1l\n        val even = 1l\n        val odd = 1l\n        val\
    \ evens = mutable.ArrayBuffer.empty[Long]\n        val odds = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorials = mutable.ArrayBuffer.empty[Long]\n        val sums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1l\n\
    \        val sum = 1l\n        val even = 1l\n        val odd = 1l\n        val\
    \ evens = mutable.ArrayBuffer.empty[Long]\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpk19k6y02.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevens is already defined as \e[33mvalue\e[0m \e[35mevens\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpk19k6y02.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0modds is already defined as \e[33mvalue\e[0m \e[35modds\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpk19k6y02.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorials is already defined as \e[33mvalue\e[0m \e[35mfactorials\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpk19k6y02.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msums is already defined as \e[33mvalue\e[0m \e[35msums\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpk19k6y02.scala:25:12 ---------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^"
  stdout: ''
  timestamp: 1660010114
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n  \
    \      val sum = 1\n        for(i <- 1 to n){\n            if(i % 2 == 0){\n \
    \               factorials += factorial\n                sums += sum\n       \
    \     }\n            else{\n                factorial *= i\n                sum\
    \ += i\n            }\n        }\n        factorials += factorial\n        sums\
    \ += sum\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzved8jzg.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpzved8jzg.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpzved8jzg.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzved8jzg.scala:23:26\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpzved8jzg.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1l\n        val sumOfNumbers = 1l\n        for(i <- 1 to n){\n           \
    \ if(i%2 == 0){\n                factorials += factorial\n                sumOfNumbers\
    \ += sumOfNumbers\n            }\n            else{\n                factorials\
    \ += factorial * i\n                sumOfNumbers += i\n            }\n       \
    \ }\n        factorials.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmprbpannh9.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfNumbers\e[0m = \e[31m1l\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0msumOfNumbers\
    \ is already defined as \e[33mvalue\e[0m \e[35msumOfNumbers\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprbpannh9.scala:13:25\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmprbpannh9.scala:14:27 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36msumOfNumbers\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprbpannh9.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n \
    \               factorials += factorial\n                sums += sum\n       \
    \     }\n            else{\n                factorial *= i\n                sum\
    \ += i\n            }\n        }\n        factorials ++= factorial\n        sums\
    \ ++= sum\n        factorials.toList ++ sums.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2qy7it6h.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp2qy7it6h.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp2qy7it6h.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2qy7it6h.scala:23:26\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp2qy7it6h.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010118
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += (i.toLong +\
    \ 1)\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp159knh95.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp159knh95.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010118
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 4\n        factorials += 5\n        factorials += 6\n  \
    \      factorials += 7\n        factorials += 8\n        factorials += 9\n   \
    \     factorials += 10\n        factorials += 11\n        factorials += 12\n \
    \       factorials += 13\n        factorials += 14\n        factorials += 15\n\
    \        factorials += 16\n        factorials += 17\n        factorials += 18\n\
    \        factorials += 19\n        factorials += 20\n        factorials += 21\n\
    \        factorials += 22\n        factorials += 23\n        factorials += 24\n\
    \        factorials += 25\n        factorials += 26\n        factorials += 27\n\
    \        factorials += 28\n        factorials += 29\n        factorials += 30\n\
    \        factorials += 31\n        factorials += 32\n        factorials += 33\n\
    \        factorials += 34\n        factorials += 35\n        factorials += 36\n\
    \        factorials += 37\n        factorials += 38\n        factorials += 39\n\
    \        factorials += 40\n        factorials += 41\n        factorials += 42\n\
    \        factorials += 43\n        factorials += 44\n        factorials += 45\n\
    \        factorials += 46\n        factorials += 47\n        factorials += 48\n\
    \        factorials += 49\n        factorials += 50\n        factorials += 51\n\
    \        factorials += 52\n        factorials += 53\n        factorials += 54\n\
    \        factorials += 55\n        factorials += 56\n        factorials += 57\n\
    \        factorials += 58\n        factorials += 59\n        factorials += 60\n\
    \        factorials += 61\n        factorials += 62\n        factorials += 63\n\
    \        factorials += 64\n        factorials += 65\n        factorials += 66\n\
    \        factorials += 67\n        factorials += 68\n        factorials += 69\n\
    \        factorials += 70\n        factorials += 71\n        factorials += 72\n\
    \        factorials += 73\n        factorials += 74\n        factorials += 75\n\
    \        factorials += 76\n        factorials += 77\n        factorials += 78\n\
    \        factorials += 79\n        factorials += 80\n        factorials += 81\n\
    \        factorials += 82\n        factorials += 83\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg2niyj56.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010114
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val sumEvens = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOdds = mutable.ArrayBuffer.empty[Long]\n        val evenSumOdds\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumEvens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumOddEvens = mutable.ArrayBuffer.empty[Long]\n        val evenSumEvenOdds\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n        val\
    \ evenSumOddEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n        val evenSumEvenOddEvenOdds\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n  \
    \      val evenSumOddEvenOddEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n \
    \       val evenSumEvenOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumOddEvenOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvenOddEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumOddEvenOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvenOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumOddEvenOddEvenOddEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvenOddEvenOddEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumOddEvenOddEvenOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvenOddEvenOddEvenOddEvenO\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp23m8_qp2.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp23m8_qp2.scala:33:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumOddEvenOddEvenOddEvenOdds\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumOddEvenOddEvenOddEvenOdds is already defined as \e\
    [33mvalue\e[0m \e[35mevenSumOddEvenOddEvenOddEvenOdds\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp23m8_qp2.scala:13:25\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp23m8_qp2.scala:14:19 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp23m8_qp2.scala:15:20 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp23m8_qp2.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mod"
  stdout: ''
  timestamp: 1660010118
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 1 // i starts\
    \ from 1\n        while (i <= n) {\n            if (i % 2 == 0) {\n          \
    \      evens += i.toLong\n            } else {\n                odds += i.toLong\n\
    \            }\n            factorials += i.toLong * factorials.last\n       \
    \     sums += i.toLong * sums.last\n            i += 1\n        }\n        evens.toList\
    \ ++ sums.toList ++ factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcpvws9ay.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpcpvws9ay.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpcpvws9ay.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpcpvws9ay.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcpvws9ay.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010118
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        var sum = 1\n        for (i <- 1 to n) {\n\
    \            if (i % 2 == 0) {\n                factorial *= i\n             \
    \   factorials += factorial\n            } else {\n                sum += i\n\
    \            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpllskl386.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpllskl386.scala:16:23 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010117
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factori\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnlonpr01.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_bq_nsua.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 6\n        factorials += 24\n        factorials += 15\n\
    \        factorials.toList\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4cqpmf3t.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sum = 0\n        for(i <- 1 to n){\n            if(i%2 == 0){\n \
    \               factorials += i.toLong\n            }\n            else{\n   \
    \             sum += i.toLong\n            }\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmva5lj7j.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmva5lj7j.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmva5lj7j.scala:20:20\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                sum += i.toLong\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010121
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        for(i <- 1 to n) {\n            factorials += factorial\n\
    \            sums += sum\n            factorial *= i\n            sum += i\n \
    \       }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1reyod_g.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp1reyod_g.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp1reyod_g.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1reyod_g.scala:20:22\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m            factorial *=\
    \ i\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \      value *= is not a member of Long - did you mean factorial.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp1reyod_g.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            sum += i\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Long -\
    \ did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010102
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 4\n        factorials += 5\n        factorials += 6\n  \
    \      factorials += 7\n        factorials += 8\n        factorials += 9\n   \
    \     factorials += 10\n        factorials += 11\n        factorials += 12\n \
    \       factorials += 13\n        factorials += 14\n        factorials += 15\n\
    \        factorials += 16\n        factorials += 17\n        factorials += 18\n\
    \        factorials += 19\n        factorials += 20\n        factorials += 21\n\
    \        factorials += 22\n        factorials += 23\n        factorials += 24\n\
    \        factorials += 25\n        factorials += 26\n        factorials += 27\n\
    \        factorials += 28\n        factorials += 29\n        factorials += 30\n\
    \        factorials += 31\n        factorials += 32\n        factorials += 33\n\
    \        factorials += 34\n        factorials += 35\n        factorials += 36\n\
    \        factorials += 37\n        factorials += 38\n        factorials += 39\n\
    \        factorials += 40\n        factorials += 41\n        factorials += 42\n\
    \        factorials += 43\n        factorials += 44\n        factorials += 45\n\
    \        factorials += 46\n        factorials += 47\n        factorials += 48\n\
    \        factorials += 49\n        factorials += 50\n        factorials += 51\n\
    \        factorials += 52\n        factorials += 53\n        factorials += 54\n\
    \        factorials += 55\n        factorials += 56\n        factorials += 57\n\
    \        factorials += 58\n        factorials += 59\n        factorials += 60\n\
    \        factorials += 61\n        factorials += 62\n        factorials += 63\n\
    \        factorials += 64\n        factorials += 65\n        factorials += 66\n\
    \        factorials += 67\n        factorials += 68\n        factorials += 69\n\
    \        factorials += 70\n        factorials += 71\n        factorials += 72\n\
    \        factorials += 73\n        factorials += 74\n        factorials += 75\n\
    \        factorials += 76\n        factorials += 77\n        factorials += 78\n\
    \        factorials += 79\n        factorials += 80\n        factorials += 81\n\
    \        factorials += 82\n        factorials += 83\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzsu7fc6f.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803842
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 6\n \
    \       factorials += 24\n        factorials += 15\n        factorials.take(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmllab6q3.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010106
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n  \
    \      val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n   \
    \             factorials += factorial\n                sums += sum\n         \
    \   }\n            else{\n                factorial = factorial * i\n        \
    \        sum = sum + i\n            }\n        }\n        factorials += factorial\n\
    \        sums += sum\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3n2c0nw3.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp3n2c0nw3.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp3n2c0nw3.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp3n2c0nw3.scala:23:26 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                factorial = factorial * i\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Reassignment to val factorial\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmp3n2c0nw3.scala:24:20 -----------------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m                sum = sum + i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to\
    \ val sum\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659804055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sum = 0\n        for(i <- 1 to n) {\n            val factorial =\
    \ factorials.foldLeft(1l) { (acc, i) => acc * i }\n            factorials += factorial\n\
    \            sum += factorial\n        }\n        factorials.toList\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgm3ewu5v.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgm3ewu5v.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgm3ewu5v.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            sum += factorial\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010125
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n  \
    \      for(i <- 1 to n){\n            factorials += factorial\n            sums\
    \ += i\n        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq0i615a8.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpq0i615a8.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpq0i615a8.scala:16:22 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        var sum = 1\n        for(i <- 1 to n) {\n\
    \            factorials += factorial\n            factorial *= i\n           \
    \ sum += factorial\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprxieb3dh.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprxieb3dh.scala:16:22 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010124
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 6\n        factorials += 24\n        factorials += 15\n\
    \        factorials.toList\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4cqpmf3t.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n     \
    \   while (i <= n) {\n            if (i % 2 == 0) {\n                evens +=\
    \ i\n            } else {\n                odds += i\n            }\n        \
    \    factorials += i\n            sums += i\n            i += 1\n        }\n \
    \       evens.toList ++ sums.toList ++ factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsukmt8g2.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpsukmt8g2.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpsukmt8g2.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpsukmt8g2.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpsukmt8g2.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        for(i <- 1 to n) {\n            if(i%2 == 0) {\n\
    \                factorials += factorial\n                sums += sum\n      \
    \      }\n            else {\n                factorial *= i\n               \
    \ sum += i\n            }\n        }\n        factorials ++= factorial\n     \
    \   sums ++= sum\n        factorials.toList ++ sums.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy7d1m645.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpy7d1m645.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpy7d1m645.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy7d1m645.scala:23:26\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \           value *= is not a member of Long - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpy7d1m645.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Long - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010125
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factori\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnlonpr01.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += n\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplihkwwv8.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803854
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 2l\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                evens += i.toLong\n\
    \            } else {\n                odds += i.toLong\n            }\n     \
    \       factorials += i.toLong * factorials.last\n            sums += i.toLong\
    \ * sums.last\n            i += 1\n        }\n        factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa7mui4st.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpa7mui4st.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpa7mui4st.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpa7mui4st.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpa7mui4st.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Long - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010124
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sum = 0\n        for(i <- 1 to n) {\n            val factorial =\
    \ factorials.foldLeft(1l)((acc, x) => acc * x)\n            factorials += factorial\n\
    \            sum += factorial\n        }\n        factorials.toList\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5st1ytpu.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5st1ytpu.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5st1ytpu.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            sum += factorial\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010126
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 4\n        factorials += 5\n        factorials += 6\n  \
    \      factorials += 7\n        factorials += 8\n        factorials += 9\n   \
    \     factorials += 10\n        factorials += 11\n        factorials += 12\n \
    \       factorials += 13\n        factorials += 14\n        factorials += 15\n\
    \        factorials += 16\n        factorials += 17\n        factorials += 18\n\
    \        factorials += 19\n        factorials += 20\n        factorials += 21\n\
    \        factorials += 22\n        factorials += 23\n        factorials += 24\n\
    \        factorials += 25\n        factorials += 26\n        factorials += 27\n\
    \        factorials += 28\n        factorials += 29\n        factorials += 30\n\
    \        factorials += 31\n        factorials += 32\n        factorials += 33\n\
    \        factorials += 34\n        factorials += 35\n        factorials += 36\n\
    \        factorials += 37\n        factorials += 38\n        factorials += 39\n\
    \        factorials += 40\n        factorials += 41\n        factorials += 42\n\
    \        factorials += 43\n        factorials += 44\n        factorials += 45\n\
    \        factorials += 46\n        factorials += 47\n        factorials += 48\n\
    \        factorials += 49\n        factorials += 50\n        factorials += 51\n\
    \        factorials += 52\n        factorials += 53\n        factorials += 54\n\
    \        factorials += 55\n        factorials += 56\n        factorials += 57\n\
    \        factorials += 58\n        factorials += 59\n        factorials += 60\n\
    \        factorials += 61\n        factorials += 62\n        factorials += 63\n\
    \        factorials += 64\n        factorials += 65\n        factorials += 66\n\
    \        factorials += 67\n        factorials += 68\n        factorials += 69\n\
    \        factorials += 70\n        factorials += 71\n        factorials += 72\n\
    \        factorials += 73\n        factorials += 74\n        factorials += 75\n\
    \        factorials += 76\n        factorials += 77\n        factorials += 78\n\
    \        factorials += 79\n        factorials += 80\n        factorials += 81\n\
    \        factorials += 82\n        factorials += 83\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzsu7fc6f.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803842
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x =>\
    \ x * factorials.indexOf(x) + factorials.indexOf(x) + 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprsp61hbr.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010085
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials ++= factorials.drop(1).map(x\
    \ => x * x)\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuv7tpvgz.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010086
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n) {\n            factorials += i.toLong * factorials.last\n\
    \        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfftxucvd.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfftxucvd.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010124
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        val even = 1\n        val odd = 1\n        val evenSum\
    \ = 1\n        val oddSum = 1\n        val evenFactorial = 1\n        val oddFactorial\
    \ = 1\n        val evenSumFactorial = 1\n        val oddSumFactorial = 1\n   \
    \     val evenSumOdd = 1\n        val oddSumOdd = 1\n        val evenFactorialOdd\
    \ = 1\n        val oddFactorialOdd = 1\n        val evenSumFactorialOdd = 1\n\
    \        val oddSumFactorialOdd = 1\n        val evenSumOddOdd = 1\n        val\
    \ oddSumOddOdd = 1\n        val evenFactorialEven = 1\n        val oddFactorialEven\
    \ = 1\n        val evenSumFactorialEven = 1\n        val oddSumFactorialEven =\
    \ 1\n        val evenSumOddEven = 1\n        val oddSumOddEven = 1\n        val\
    \ evenFactorialOddEven = 1\n        val oddFactorialOddEven = 1\n        val evenSumFactorialOddEven\
    \ = 1\n        val oddSumFactorialOddEven = 1\n        val evenSumOddOddEven =\
    \ 1\n        val oddSumOddOddEven = 1\n        val evenFactorialEvenEven = 1\n\
    \        val oddFactorialEvenEven = 1\n        val evenSumFactorialEvenEven =\
    \ 1\n        val oddSumFactorialEvenEven = 1\n        val evenSumOddEvenEven =\
    \ 1\n        val oddSumOddEvenEven = 1\n        val evenFactorialOddEvenEven =\
    \ 1\n        val oddFactorialOddEvenEven = 1\n        val evenSumFactorialOddEvenEven\
    \ = 1\n        val oddSumFactorialOddEvenEven = 1\n        val evenSumOddOddEvenEven\
    \ = 1\n        val oddSumOddOddEvenEven = 1\n        val evenFactorialEvenOddEven\
    \ = 1\n        val oddFactorialEvenOddEven = 1\n        val evenSumFactorialEvenOddEven\
    \ = 1\n        val oddSumFactorialEven\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp1imr7rsn.scala:63:4 ----------------------------\e\
    [0m\e[0m\n\e[31m63 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1imr7rsn.scala:13:25\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp1imr7rsn.scala:14:19 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp1imr7rsn.scala:15:20 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp1imr7rsn.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp1imr7rsn.scala:63:5 ---------------------\e\
    [0m\e[0m\n\e[31m63 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: List[Long]\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    6 errors found\n"
  stdout: ''
  timestamp: 1660010124
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        val even = 1l\n        val odd = 1l\n        val\
    \ i = 2l\n        while (i <= n) {\n            if (i % 2 == 0) {\n          \
    \      evens += i\n            } else {\n                odds += i\n         \
    \   }\n            factorial *= i\n            sum += i\n            factorials\
    \ += factorial\n            sums += sum\n            even += i\n            odd\
    \ += i\n            i += 2l\n        }\n        evens.toList ++ sums.toList ++\
    \ factorials.toList ++ evens.toList ++ odds.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6dyeatub.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp6dyeatub.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp6dyeatub.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp6dyeatub.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp6dyeatub.scala:28:22 ------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m            factorial *= i\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           value *= is not a member\
    \ of Long - did you mean factorial.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp6dyeatub.scala:29:16 ------------------------\e[0m\e[0m\n\e[31m29 |\e\
    [0m            sum += i\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            value += is not a member of Long - did you mean sum.!=?\n\
    \e[31m\e[3"
  stdout: ''
  timestamp: 1660010127
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val even = factorials.size\
    \ + sums.size\n        val odd = evens.size + odds.size\n        val evenFactorials\
    \ = factorials.toList\n        val oddSums = sums.toList\n        val evenSums\
    \ = evens.toList\n        val oddEvens = evenSums.size + oddSums.size\n      \
    \  val evenOdds = oddEvens.size + evenSums.size\n        factorials ++= 1 to n\n\
    \        sums ++= 1 to n\n        evens ++= 1 to n\n        odds ++= 1 to n\n\
    \        factorials.zip(sums).zip(evens).zip(odds).zip(evenFactorials).zip(oddSums).zip(evenSums).zip(oddEvens).zip(evenOdds)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwdi008wt.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwdi008wt.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwdi008wt.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwdi008wt.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 4\n        factorials += 5\n        factorials += 6\n  \
    \      factorials += 7\n        factorials += 8\n        factorials += 9\n   \
    \     factorials += 10\n        factorials += 11\n        factorials += 12\n \
    \       factorials += 13\n        factorials += 14\n        factorials += 15\n\
    \        factorials += 16\n        factorials += 17\n        factorials += 18\n\
    \        factorials += 19\n        factorials += 20\n        factorials += 21\n\
    \        factorials += 22\n        factorials += 23\n        factorials += 24\n\
    \        factorials += 25\n        factorials += 26\n        factorials += 27\n\
    \        factorials += 28\n        factorials += 29\n        factorials += 30\n\
    \        factorials += 31\n        factorials += 32\n        factorials += 33\n\
    \        factorials += 34\n        factorials += 35\n        factorials += 36\n\
    \        factorials += 37\n        factorials += 38\n        factorials += 39\n\
    \        factorials += 40\n        factorials += 41\n        factorials += 42\n\
    \        factorials += 43\n        factorials += 44\n        factorials += 45\n\
    \        factorials += 46\n        factorials += 47\n        factorials += 48\n\
    \        factorials += 49\n        factorials += 50\n        factorials += 51\n\
    \        factorials += 52\n        factorials += 53\n        factorials += 54\n\
    \        factorials += 55\n        factorials += 56\n        factorials += 57\n\
    \        factorials += 58\n        factorials += 59\n        factorials += 60\n\
    \        factorials += 61\n        factorials += 62\n        factorials += 63\n\
    \        factorials += 64\n        factorials += 65\n        factorials += 66\n\
    \        factorials += 67\n        factorials += 68\n        factorials += 69\n\
    \        factorials += 70\n        factorials += 71\n        factorials += 72\n\
    \        factorials += 73\n        factorials += 74\n        factorials += 75\n\
    \        factorials += 76\n        factorials += 77\n        factorials += 78\n\
    \        factorials += 79\n        factorials += 80\n        factorials += 81\n\
    \        factorials += 82\n        factorials += 83\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg2niyj56.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010114
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += n\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprpl0z2bq.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1l\n \
    \       val sum = 1l\n        for(i <- 1 to n) {\n            factorials += factorial\n\
    \            sums += sum\n            if(i % 2 == 0) {\n                factorial\
    \ = factorial * i\n                sum = sum + i\n            } else {\n     \
    \           factorial = factorial * (i + 1l)\n                sum = sum + i +\
    \ 1l\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjzaxz95c.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpjzaxz95c.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpjzaxz95c.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpjzaxz95c.scala:21:26\
    \ -----------------------------\e[0m\e[0m\n\e[31m21 |\e[0m                factorial\
    \ = factorial * i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val factorial\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpjzaxz95c.scala:22:20 -----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                sum = sum + i\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment\
    \ to val sum\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpjzaxz95c.scala:24:26\
    \ -----------------------------\e[0m\e[0m\n\e[31m24 |\e[0m                factorial\
    \ = factorial * (i + \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m"
  stdout: ''
  timestamp: 1660010127
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials ++= factorials.take(n).map(_\
    \ * _)\n        factorials.toList\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqkbry9z5.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += 3\n \
    \       factorials += 6\n        factorials += 24\n        factorials += 15\n\
    \        factorials.toList\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4cqpmf3t.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 2\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                evens += i\n    \
    \        } else {\n                odds += i\n            }\n            factorials\
    \ += i\n            sums += i\n            i += 1\n        }\n        evens.toList\
    \ ++ sums.toList ++ factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8nk2n2_n.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp8nk2n2_n.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp8nk2n2_n.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp8nk2n2_n.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp8nk2n2_n.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010127
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val factorial = 1l\n\
    \        val number = 1\n        while (number <= n) {\n            if (number\
    \ % 2 == 0) {\n                factorials += factorial\n                numbers\
    \ += number\n            }\n            else {\n                factorials +=\
    \ factorial * (number - 1)\n                numbers += number\n            }\n\
    \            factorial *= number\n            number *= number\n        }\n  \
    \      factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeccghgyv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpeccghgyv.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpeccghgyv.scala:26:22 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            factorial *= number\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           value *= is not a member\
    \ of Long - did you mean factorial.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpeccghgyv.scala:27:19 ------------------------\e[0m\e[0m\n\e[31m27 |\e\
    [0m            number *= number\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value *= is not a member of Int - did you mean\
    \ number.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010128
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n  \
    \      for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += factorial\n                sums += i\n            }\n            else{\n\
    \                factorial *= i\n            }\n        }\n        factorials\
    \ ++= sums\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc_9l6g3n.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpc_9l6g3n.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpc_9l6g3n.scala:16:22 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc_9l6g3n.scala:22:26\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010128
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials ++= factorials.tail.filter(_\
    \ % 2 == 0).map(x => x * x)\n        factorials ++= factorials.tail.filter(_ %\
    \ 2 == 1).map(x => x + 1)\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpioyckc1c.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010126
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        var i = 1\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                factorials += i.toLong\n\
    \            } else {\n                sums += i\n            }\n            i\
    \ += 1\n        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpic92gycr.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpic92gycr.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010126
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var sum = 0\n        for(i <- 1 to n){\n            val factorial = factorials.foldLeft(1l)\
    \ { (acc, x) => acc * x }\n            sum += factorial\n            factorials\
    \ += factorial\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6ljkn0b.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpt6ljkn0b.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010128
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val numbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sum = 1\n        val even = 1\n        val odd = 1\n      \
    \  val i = 2\n        while (i <= n) {\n            if (i % 2 == 0) {\n      \
    \          factorials += factorial\n                numbers += sum\n         \
    \       even *= i\n                sum += even\n            } else {\n       \
    \         factorials += factorial\n                numbers += odd\n          \
    \      odd *= i\n                sum += odd\n            }\n            i += 1\n\
    \        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp97n6qjmf.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp97n6qjmf.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp97n6qjmf.scala:24:21 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                even *= i\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                value *= is not a member\
    \ of Int - did you mean even.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp97n6qjmf.scala:25:20\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m                sum += even\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp97n6qjmf.scala:29:20 ------------------------\e[0m\e\
    [0m\n\e[31m29 |\e[0m                odd *= i\n\e[31m\e[31m   |\e[0m          \
    \      ^^^^^^\e[0m\n\e[31m   |\e[0m                value *= is not a member of\
    \ Int - did you mean odd.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp97n6qjmf.scala:30:20\
    \ ------------------------\e[0m\e[0m\n\e[31m30 |\e[0m                sum += odd\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp97n6qjmf.scala:32:14 ------------------------\e[0m\e\
    [0m\n\e[31m32 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m "
  stdout: ''
  timestamp: 1660010130
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n  \
    \      val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n   \
    \             factorials += factorial\n                sums += sum\n         \
    \   }\n            else{\n                factorial *= i\n                sum\
    \ += i\n            }\n        }\n        factorials += factorial\n        sums\
    \ += sum\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpep3jc2qn.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpep3jc2qn.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpep3jc2qn.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpep3jc2qn.scala:23:26\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpep3jc2qn.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010130
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorial\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp_olrsd8.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpp_olrsd8.scala:69:8 -------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m        factorial\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += 1\n        factorials += 2\n        factorials += n\n \
    \       factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lhqqb48.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659803841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i.toLong\n            }\n            else{\n                factorials +=\
    \ (i.toLong)*(1l.toLong)\n            }\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyb5k_nlb.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyb5k_nlb.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010131
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfNumbers = mutable.ListBuffer[Long]()\n        val evenNumbers\
    \ = mutable.ListBuffer[Long]()\n        val oddNumbers = mutable.ListBuffer[Long]()\n\
    \        val i = 2\n        while (i <= n) {\n            if (i % 2 == 0) {\n\
    \                evenNumbers += i.toLong\n            } else {\n             \
    \   oddNumbers += i.toLong\n            }\n            factorials += i.toLong\
    \ * factorials(i - 1)\n            sumOfNumbers += i\n            i += 1\n   \
    \     }\n        evenNumbers.toList ++ oddNumbers.toList ++ factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_aio6_9u.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_aio6_9u.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumOfNumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_aio6_9u.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenNumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_aio6_9u.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36moddNumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp_aio6_9u.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010131
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += (i.toLong +\
    \ factorials.last)\n            }\n        }\n        factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm60j7wkv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpm60j7wkv.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val numbers = mutable.ListBuffer[Long]()\n        val factorial = 1l\n\
    \        val number = 1l\n        for(i <- 1 to n){\n            if(i % 2 == 0){\n\
    \                factorials += factorial\n                numbers += number\n\
    \            }\n            else{\n                factorials += factorial * number\n\
    \                numbers += number\n            }\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd3vmekrv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpd3vmekrv.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpd3vmekrv.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010131
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        var factorial = 1\n        for(i <- 1 to n) {\n            factorial\
    \ *= i\n            if(i % 2 == 0) {\n                factorials += factorial\n\
    \            }\n            else {\n                factorials += factorial +\
    \ 1\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg0qy8uz1.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg0qy8uz1.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010132
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x =>\
    \ x * factorials.indexOf(x) + factorials.indexOf(x) + 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprsp61hbr.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010085
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += factorials.reduceLeft(_\
    \ * _)\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpby765yfn.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpby765yfn.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010132
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val evenFactorials = mutable.ListBuffer[Long]()\n\
    \        val oddFactorials = mutable.ListBuffer[Long]()\n        val evenSums\
    \ = mutable.ListBuffer[Long]()\n        val oddSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum = mutable.ListBuffer[Long]()\n        val oddSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenFactorialsSum = mutable.ListBuffer[Long]()\n\
    \        val oddFactorialsSum = mutable.ListBuffer[Long]()\n        val evenSumsSumSum\
    \ = mutable.ListBuffer[Long]()\n        val oddSumsSumSum = mutable.ListBuffer[Long]()\n\
    \        val evenFactorialsSumSum = mutable.ListBuffer[Long]()\n        val oddFactorialsSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val oddSumsSumSumSum = mutable.ListBuffer[Long]()\n        val evenFactorialsSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val oddFactorialsSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumSumSumSum = mutable.ListBuffer[Long]()\n        val oddSumsSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evenFactorialsSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val oddFactorialsSumSumSumSum = mutable.ListBuffer[Long]()\n        val\
    \ evenSumsSumSumSumSumSum = mutable.ListBuffer[Long]()\n        val oddSumsSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evenFactorialsSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val oddFactorialsSumSumSumSumSum = mutable.ListBuffer[Long]()\n     \
    \   val evenSumsSumSumSumSumSum = mutable.ListBuffer[Long]()\n        val oddSumsSumSumSumSum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmppu61989c.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmppu61989c.scala:41:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumSumSumSumSum\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35mevenSumsSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppu61989c.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmppu61989c.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmppu61989c.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmppu61989c.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e["
  stdout: ''
  timestamp: 1660010131
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n \
    \               factorials += factorial\n                sums += sum\n       \
    \     }\n            else{\n                factorial *= i\n                sum\
    \ += i\n            }\n        }\n        factorials += factorial\n        sums\
    \ += sum\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy37ffzv0.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpy37ffzv0.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpy37ffzv0.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy37ffzv0.scala:23:26\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpy37ffzv0.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010132
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i.toLong\n            } else {\n                factorials += (i.toLong +\
    \ factorials.last)\n            }\n        }\n        factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm60j7wkv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpm60j7wkv.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 2\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                evens += i\n    \
    \        } else {\n                odds += i\n            }\n            factorials\
    \ += i\n            sums += i\n            i += 1\n        }\n        val evenFactorials\
    \ = factorials.filter(_ % 2 == 0)\n        val oddFactorials = factorials.filter(_\
    \ % 2 != 0)\n        val evenSums = sums.filter(_ % 2 == 0)\n        val oddSums\
    \ = sums.filter(_ % 2 != 0)\n        evenFactorials.zip(evenSums).map(x => x._1\
    \ * x._2)\n        oddFactorials.zip(oddSums).map(x => x._1 + x._2)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3xcueq7t.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp3xcueq7t.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3xcueq7t.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3xcueq7t.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3xcueq7t.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010132
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i.toLong * factorials.last\n            }else{\n                factorials\
    \ += i.toLong\n            }\n        }\n        factorials\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo_f8e0r.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplo_f8e0r.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010132

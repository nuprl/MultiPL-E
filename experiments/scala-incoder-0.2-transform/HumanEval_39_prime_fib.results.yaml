language: scala
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2l).pow(n).toLong\n        val\
    \ prime = scala.math.BigInt(2l).pow(n).toLong\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        prime\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjjslhqzt.scala:16:44\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib\e\
    [0m = scala.math.BigInt(\e[31m2l\e[0m).pow(n).toLong\n\e[31m\e[31m   |\e[0m  \
    \                                          ^\e[0m\n\e[31m   |\e[0m           \
    \                                 Found:    (n : Long)\n\e[31m   |\e[0m      \
    \                                      Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjjslhqzt.scala:17:46 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprime\e[0m = scala.math.BigInt(\e\
    [31m2l\e[0m).pow(n).toLong\n\e[31m\e[31m   |\e[0m                            \
    \                  ^\e[0m\n\e[31m   |\e[0m                                   \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                            \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 5l\n        var i = 13l\n        var j = 1l\n        var k =\
    \ 89l\n        var l = 2l\n        var m = 5l\n        var n = 13l\n        var\
    \ o = 1l\n        var p = 89l\n        var q = 2l\n        var r = 5l\n      \
    \  var s = 13l\n        var t = 1l\n        var u = 2l\n        var v = 5l\n \
    \       var w = 13l\n        var x = 1l\n        var y = 89l\n        var z =\
    \ 2l\n        var aa = 2l\n        var ab = 3l\n        var ac = 5l\n        var\
    \ ad = 13l\n        var ae = 89l\n        var af = 1l\n        var ag = 2l\n \
    \       var ah = 3l\n        var ai = 5l\n        var aj = 13l\n        var ak\
    \ = 89l\n        var al = 2l\n        var am = 5l\n        var an = 13l\n    \
    \    var ao = 1l\n        var ap = 89l\n        var aq = 2l\n        var ar =\
    \ 5l\n        var as = 13l\n        var at = 1l\n        var au = 2l\n       \
    \ var av = 5l\n        var aw = 13l\n        var ax = 1l\n        var ay = 89l\n\
    \        var az = 2l\n        var ba = 2l\n        var bb = 3l\n        var bc\
    \ = 5l\n        var bd = 13l\n        var be = 89l\n        var bf = 1l\n    \
    \    var bg = 2l\n        var bh = 3l\n        var bi = 5l\n        var bj = 13l\n\
    \        var bk = 89l\n        var bl = 2l\n        var bm = 5l\n        var bn\
    \ = 13l\n        var bo = 1l\n        var bp = 89l\n        var bq = 2l\n    \
    \    var br = 5l\n        var bs = 13l\n        var bt = 1l\n        var bu =\
    \ 2l\n        var bv = 5l\n        var bw = 13l\n        var bx = 1l\n       \
    \ var by = 89l\n        var bz = 2l\n        var ca = 2l\n        var cb = 3l\n\
    \        var cc = 5l\n        var cd = 13l\n        var ce = 89l\n        var\
    \ cf = 1l\n        var cg = 2l\n        var ch = 3l\n        var ci = 5l\n   \
    \     var cj = 13l\n        var ck = 89l\n        var cl = 2l\n        var cm\
    \ = 5l\n        var cn = 13l\n        var co = 1l\n        var cp = 89l\n    \
    \    var cq = 2l\n        var cr = 5l\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcm62znul.scala:112:5\
    \ --------------------\e[0m\e[0m\n\e[31m112 |\e[0m    }\n\e[31m\e[31m    |\e[0m\
    \     ^\e[0m\n\e[31m    |\e[0m     Found:    Unit\n\e[31m    |\e[0m     Required:\
    \ Long\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 5\n\
    \        fibs += 13\n        fibs += 89\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppvakojfi.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799424
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val prime = scala.math.BigInt(3)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ fibs = scala.collection.mutable.ListBuffer[Long]()\n        val fibPrimes =\
    \ scala.collection.mutable.ListBuffer[Long]()\n        val fibPrime = scala.math.BigInt(2)\n\
    \        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n       \
    \ val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = scala.math.BigInt(2)\n        val fibPrimes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibPrime = \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpt7b_xf7_.scala:49:22 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \e[36mfibPrime\e[0m = \n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpt7b_xf7_.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mfibPrimes\e[0m = scala.collection.mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfibPrimes is already defined as \e[33mvalue\e[0m \e[35mfibPrimes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpt7b_xf7_.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mfibPrime\e[0m = scala.math.BigInt(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfibPrime is already defined as \e[33mvalue\e[0m \e[35mfibPrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpt7b_xf7_.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mfibPrimes\e[0m = scala.collection.mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfibPrimes is already defined as \e[33mvalue\e[0m \e[35mfibPrimes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpt7b_xf7_.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mfibPrime\e[0m = scala.math.BigInt(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e"
  stdout: ''
  timestamp: 1659799426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(0l).init\n        fibs(0) = 1l\n\
    \        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzbr_hhpg.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpzbr_hhpg.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzbr_hhpg.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpzbr_hhpg.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpzbr_hhpg.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzbr_hhpg.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val prime = scala.math.BigInt(3)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ isPrime = scala.math.BigInt(n).isProbablePrime\n        val isPrime2 = scala.math.BigInt(n).isProbablePrime\n\
    \        val isPrime3 = scala.math.BigInt(n).isProbablePrime\n        val isPrime4\
    \ = scala.math.BigInt(n).isProbablePrime\n        val isPrime5 = scala.math.BigInt(n).isProbablePrime\n\
    \        val isPrime6 = scala.math.BigInt(n).isProbablePrime\n        val isPrime7\
    \ = scala.math.BigInt(n).isProbablePrime\n        val isPrime8 = scala.math.BigInt(n).isProbablePrime\n\
    \        val isPrime9 = scala.math.BigInt(n).isProbablePrime\n        val isPrime10\
    \ = scala.math.BigInt(n).isProbablePrime\n        val isPrime11 = scala.math.BigInt(n).isProbablePrime\n\
    \        val isPrime12 = scala.math.BigInt(n).isProbablePrime\n        val isPrime13\
    \ = scala.math.BigInt(n).isProbablePrime\n        val isPrime14 = scala.math.BigInt(n).isProbablePrime\n\
    \        val isPrime15 = scala.math.BigInt(n).isProbablePrime\n        val isPrime16\
    \ = scala.math.BigInt(n).isProbablePrime\n        val isPrime17 = scala.math.BigInt(n).isProbablePrime\n\
    \        val isPrime18 = scala.math.BigInt(n).isProbablePrime\n        val isPrime19\
    \ = scala.math.BigInt(n).isProbablePrime\n        val isPrime20 = scala.math.BigInt(n).isProbablePrime\n\
    \        val isPrime21 = scala.math.BigInt(n).isProbablePrime\n        val isPrime22\
    \ = scala.math.BigInt(n).isProbablePrime\n        val isPrime23 = scala.math.BigInt(n).isProbablePrime\n\
    \        val isPrime24 = scala.math.BigInt(n).isProbablePrime\n        val isPrime25\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphmzyfol0.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmphmzyfol0.scala:44:5 ---------------------\e[0m\e[0m\n\e[31m44 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 5\n        fibs += 13\n        fibs += 89\n        fibs += 101\n        fibs\
    \ += 201\n        fibs += 301\n        fibs += 401\n        fibs += 501\n    \
    \    fibs += 601\n        fibs += 701\n        fibs += 801\n        fibs += 901\n\
    \        fibs += 1001\n        fibs += 2001\n        fibs += 3001\n        fibs\
    \ += 4001\n        fibs += 5001\n        fibs += 6001\n        fibs += 7001\n\
    \        fibs += 8001\n        fibs += 9001\n        fibs += 10001 \n        fibs\
    \ += 20001\n        fibs += 30001\n        fibs += 40001\n        fibs += 50001\n\
    \        fibs += 60001\n        fibs += 70001\n        fibs += 80001 \n      \
    \  fibs += 90001\n        fibs += 100001\n        fibs += 200001\n        fibs\
    \ += 300001\n        fibs += 400001\n        fibs += 500001\n        fibs += 600001\n\
    \        fibs += 700001\n        fibs += 800001\n        fibs += 900001\n    \
    \    fibs += 1000001 \n        fibs += 2000001 \n        fibs += 3000001 \n  \
    \      fibs += 4000001 \n        fibs += 5000001 \n        fibs += 6000001 \n\
    \        fibs += 7000001 \n        fibs += 8000001 \n        fibs += 9000001 \n\
    \        fibs += 10000001 \n        fibs += 20000001 \n        fibs += 30000001\
    \ \n        fibs += 40000001 \n        fibs += 50000001 \n        fibs += 60000001\
    \ \n        fibs += 70000001 \n        fibs += 80000001 \n        fibs += 90000001\
    \ \n        fibs += 100000001 \n        fibs += 200000001\n        fibs += 300000001\n\
    \        fibs += 400000001 \n        fibs += 500000001 \n        fibs += 600000001\
    \ \n        fibs += 700000001 \n        fibs += 800000001 \n        fibs += 900000001\
    \ \n        fibs += 1000000001 \n        fibs += 2000000001 \n        fibs +=\
    \ 3000000001 \n        fibs += 4000000001 \n        fibs += 5000000001 \n    \
    \    fibs += 6000000001 \n        fibs += 7000000001 \n        fibs += 8000000001\
    \ \n        fibs += 9\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6nse2ued.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799423
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 5l\n        var m = 13l\n        var n = 89l\n        var o =\
    \ 1l\n        var p = 2l\n        var q = 5l\n        var r = 13l\n        var\
    \ s = 89l\n        var t = 1l\n        var u = 2l\n        var v = 5l\n      \
    \  var w = 13l\n        var x = 89l\n        var y = 1l\n        var z = 2l\n\
    \        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 1l\n        var g = 2l\n        var h =\
    \ 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n        var\
    \ l = 5l\n        var m = 13l\n        var n = 89l\n        var o = 1l\n     \
    \   var p = 2l\n        var q = 5l\n        var r = 13l\n        var s = 89l\n\
    \        var t = 1l\n        var u = 2l\n        var v = 5l\n        var w = 13l\n\
    \        var x = 89l\n        var y = 1l\n        var z = 2l\n        var a =\
    \ 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n        var\
    \ e = 89l\n        var f = 1l\n        var g = 2l\n        var h = 3l\n      \
    \  var i = 5l\n        var j = 1l\n        var k = 2l\n        var l = 5l\n  \
    \      var m = 13l\n        var n = 89l\n        var o = 1l\n        var p = 2l\n\
    \        var q = 5l\n        var r = 13l\n        var s = 89l\n        var t =\
    \ 1l\n        var u = 2l\n        var v = 5l\n        var w = 13l\n        var\
    \ x = 89l\n        var y = 1l\n        var z = 2l\n        var a = 2l\n      \
    \  var b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n\
    \        var f = 1l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n\
    \        var j = 1l\n        var k = 2l\n        var l = 5l\n        var m = 13l\n\
    \        var n = 89l\n        var o = 1l\n        var p = 2l\n        var q =\
    \ 5l\n        var r = 13l\n        var s = 89l\n        var t = 1l\n        var\
    \ u = 2l\n        var v = 5l\n        var w = 13l\n        var x = 89l\n     \
    \   var y = \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpzr9_uabm.scala:118:15 --------------------------\e\
    [0m\e[0m\n\e[31m118 |\e[0m        \e[33mvar\e[0m \e[36my\e[0m = \n\e[31m\e[31m\
    \    |\e[0m               ^\e[0m\n\e[31m    |\e[0m               expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzr9_uabm.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpzr9_uabm.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzr9_uabm.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzr9_uabm.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m13l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzr9_uabm.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m89l\e[0m\n\
    \e[31m"
  stdout: ''
  timestamp: 1659799426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs\
    \ += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n      \
    \  fibs += 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n\
    \        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs +=\
    \ 19l\n        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n       \
    \ fibs += 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n\
    \        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs +=\
    \ 30l\n        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n       \
    \ fibs += 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n\
    \        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs +=\
    \ 41l\n        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n       \
    \ fibs += 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n\
    \        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs +=\
    \ 52l\n        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n       \
    \ fibs += 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n\
    \        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs +=\
    \ 63l\n        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n       \
    \ fibs += 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n\
    \        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs +=\
    \ 74l\n        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n       \
    \ fibs += 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n\
    \        fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptrtmqbpp.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 25l\n        var g = 101l\n\
    \        var h = 413l\n        var i = 233l\n        var j = 899l\n        var\
    \ k = 521l\n        var l = 729l\n        var m = 521l\n        var n = 521l\n\
    \        var o = 521l\n        var p = 521l\n        var q = 521l\n        var\
    \ r = 521l\n        var s = 521l\n        var t = 521l\n        var u = 521l\n\
    \        var v = 521l\n        var w = 521l\n        var x = 521l\n        var\
    \ y = 521l\n        var z = 521l\n        var a = 2l\n        var b = 3l\n   \
    \     var c = 5l\n        var d = 13l\n        var e = 89l\n        var f = 25l\n\
    \        var g = 101l\n        var h = 413l\n        var i = 233l\n        var\
    \ j = 899l\n        var k = 521l\n        var l = 729l\n        var m = 521l\n\
    \        var n = 521l\n        var o = 521l\n        var p = 521l\n        var\
    \ q = 521l\n        var r = 521l\n        var s = 521l\n        var t = 521l\n\
    \        var u = 521l\n        var v = 521l\n        var w = 521l\n        var\
    \ x = 521l\n        var y = 521l\n        var z = 521l\n        var a = 2l\n \
    \       var b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n\
    \        var f = 25l\n        var g = 101l\n        var h = 413l\n        var\
    \ i = 233l\n        var j = 899l\n        var k = 521l\n        var l = 729l\n\
    \        var m = 521l\n        var n = 521l\n        var o = 521l\n        var\
    \ p = 521l\n        var q = 521l\n        var r = 521l\n        var s = 521l\n\
    \        var t = 521l\n        var u = 521l\n        var v = 521l\n        var\
    \ w = 521l\n        var x = 521l\n        var y = 521l\n        var z = 521l\n\
    \        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 25l\n        var g = 101l\n        var h\
    \ = 413l\n        var i = 233l\n        var j = 899l\n        var k = 521l\n \
    \       var l = 729l\n        var m = 521\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbyomp2y9.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbyomp2y9.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbyomp2y9.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbyomp2y9.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m13l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbyomp2y9.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m89l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbyomp2y9.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e"
  stdout: ''
  timestamp: 1659799426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = mutable.ListBuffer[Long]()\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9s7h32qz.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_n = scala.math.BigInt(n).pow(2)\n        val prime_n\
    \ = scala.math.BigInt(2).pow(n).toInt\n        val prime_fib_n = scala.math.BigInt(fib_n).pow(prime_n)\n\
    \        val prime_fib_n_prime_n = prime_fib_n.toInt\n        if (prime_fib_n_prime_n\
    \ <= prime_n) {\n            prime_fib_n_prime_n\n        } else {\n         \
    \   prime_fib_n_prime_n + 1\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpct95prsn.scala:17:47\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprime_n\e\
    [0m = scala.math.BigInt(\e[31m2\e[0m).pow(n).toInt\n\e[31m\e[31m   |\e[0m    \
    \                                           ^\e[0m\n\e[31m   |\e[0m          \
    \                                     Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                                             Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E134] Type Error: /tmp/tmpct95prsn.scala:18:26 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprime_fib_n\e[0m = scala.math.BigInt(fib_n).pow(prime_n)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mapply\e\
    [0m in \e[33mobject\e[0m \e[35mBigInt\e[0m with types\n\e[31m   |\e[0m (x: java.math.BigInteger):\
    \ BigInt\n\e[31m   |\e[0m (x: String, radix: Int): BigInt\n\e[31m   |\e[0m (x:\
    \ String): BigInt\n\e[31m   |\e[0m (numbits: Int, rnd: scala.util.Random): BigInt\n\
    \e[31m   |\e[0m (bitlength: Int, certainty: Int, rnd: scala.util.Random): BigInt\n\
    \e[31m   |\e[0m (signum: Int, magnitude: Array[Byte]): BigInt\n\e[31m   |\e[0m\
    \ (x: Array[Byte]): BigInt\n\e[31m   |\e[0m (l: Long): BigInt\n\e[31m   |\e[0m\
    \ (i: Int): BigInt\n\e[31m   |\e[0mmatch arguments ((fib_n : BigInt))\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 2l\n        var n = 3l\n        var o = 5l\n\
    \        var p = 13l\n        var q = 89l\n        var r = 2l\n        var s =\
    \ 3l\n        var t = 5l\n        var u = 0l\n        var v = 0l\n        var\
    \ w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n       \
    \ var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n   \
    \     var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 2l\n        var n = 3l\n        var o = 5l\n        var p = 13l\n\
    \        var q = 89l\n        var r = 2l\n        var s = 3l\n        var t =\
    \ 5l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n        var\
    \ x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n       \
    \ var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n   \
    \     var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 2l\n\
    \        var n = 3l\n        var o = 5l\n        var p = 13l\n        var q =\
    \ 89l\n        var r = 2l\n        var s = 3l\n        var t = 5l\n        var\
    \ u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n       \
    \ var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n   \
    \     var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 2l\n        var n = 3l\n\
    \        var o = 5l\n        var p = 13l\n        var q = 89l\n        var r =\
    \ 2l\n        var s = 3l\n        var t = 5l\n        var u = 0l\n        var\
    \ v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n       \
    \ var \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp_aierm_1.scala:119:11 --------------------------\e\
    [0m\e[0m\n\e[31m119 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m    |\e[0m    \
    \       ^\e[0m\n\e[31m    |\e[0m           pattern expected\n\e[31m    |\e[0m\n\
    \e[31m    |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_aierm_1.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_aierm_1.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_aierm_1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_aierm_1.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_aierm_1.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me"
  stdout: ''
  timestamp: 1659799225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:17:13\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(0l) + Vector.fill(5)(1l)\n   \
    \     fibs(n) match {\n            case 0 => 1l\n            case 1 => 2l\n  \
    \          case _ => {\n                val a = fibs(n-1)\n                val\
    \ b = fibs(n-2)\n                val c = fibs(n-3) + a\n                val d\
    \ = fibs(n-4) + b\n                val e = fibs(n-5) + c\n                a +\
    \ b + c + d + e\n            }\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3h_7q4v4.scala:16:38 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(\e\
    [31m5\e[0m)(\e[31m0l\e[0m) + Vector.fill(\e[31m5\e[0m)(\e[31m1l\e[0m)\n\e[31m\e\
    [31m   |\e[0m                   ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ + is not a member of Vector[Long], but could be made available as an extension\
    \ method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might\
    \ make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e[0m  import\
    \ math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import math.Numeric.Implicits.infixNumericOps\n\
    \e[31m   |\e[0m\n1 error found\n"
  stdout: ''
  timestamp: 1659799426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n        fibs +=\
    \ fibs(0l) + 1l\n        fibs += fibs(1l) + 1l\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwb5hb2g9.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799424
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n        fibs ::=\
    \ fibs.head + fibs.tail\n        fibs.takeWhile(_ < n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpri2a8eyw.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799423
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](2l, n)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        val prime_array = new Array[Long](n+1)\n\
    \        var i = 0\n        var j = 0\n        while(i < n) {\n            val\
    \ a = fib_array(j)\n            val b = fib_array(j+1)\n            fib_array(j)\
    \ = a\n            fib_array(j+1) = b\n            prime_array(i) = a\n      \
    \      i += 1\n            j += 1\n        }\n        prime_array(i)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpz2seplac.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](\e[31m2l\e[0m, n)\n\e[31m\e\
    [31m   |\e[0m                                        ^^^^^\e[0m\n\e[31m   |\e\
    [0m                                        Found:    (Long, Long)\n\e[31m   |\e\
    [0m                                        Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpz2seplac.scala:19:42 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mprime_array\e[0m = \e[33mnew\e\
    [0m \e[35mArray\e[0m[\e[35mLong\e[0m](n+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                                         ^^^\e[0m\n\e[31m   |\e[0m          \
    \                                Found:    Long\n\e[31m   |\e[0m             \
    \                             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799426

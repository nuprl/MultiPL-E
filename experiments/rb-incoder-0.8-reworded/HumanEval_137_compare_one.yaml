name: HumanEval_137_compare_one
language: rb
prompt: "# Create a function that takes integers, floats, or strings representing\n\
  # real numbers, and returns the larger variable in its given variable type.\n# Return\
  \ nil if the values are equal.\n# Note: If a real number is represented as a string,\
  \ the floating point might be . or ,\n# >>> compare_one.call(1, 2.5)\n# 2.5\n# >>>\
  \ compare_one.call(1, \"2,3\")\n# \"2,3\"\n# >>> compare_one.call(\"5,1\", \"6\"\
  )\n# \"6\"\n# >>> compare_one.call(\"1\", 1)\n# nil\ndef compare_one(a, b)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_compare_one\n\
  \    candidate = method(:compare_one)\n    assert_equal(2, candidate.call(1, 2))\n\
  \    assert_equal(2.5, candidate.call(1, 2.5))\n    assert_equal(3, candidate.call(2,\
  \ 3))\n    assert_equal(6, candidate.call(5, 6))\n    assert_equal(\"2,3\", candidate.call(1,\
  \ \"2,3\"))\n    assert_equal(\"6\", candidate.call(\"5,1\", \"6\"))\n    assert_equal(\"\
  2\", candidate.call(\"1\", \"2\"))\n    assert_equal(nil, candidate.call(\"1\",\
  \ 1))\n  end\nend\n"
completions: []
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

{
  "language": "ts",
  "name": "HumanEval_24_largest_divisor",
  "results": [
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp6e80ctvd.js:18:12)\n    at Object.<anonymous> (/tmp/tmp6e80ctvd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let largest = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor === 0) {\n            largest = divisor;\n        }\n        divisor++;\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpen8yjip1.js:18:12)\n    at Object.<anonymous> (/tmp/tmpen8yjip1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = max_divisor * max_divisor;\n    for (let i = 1; i <= n; i++) {\n        let divisor = i;\n        while (divisor < max_divisor_square && n % divisor === 0) {\n            divisor++;\n        }\n        if (divisor > max_divisor) {\n            max_divisor = divisor;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpe7q1tage.js:19:12)\n    at Object.<anonymous> (/tmp/tmpe7q1tage.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor = i;\n            if (divisor > max_divisor_value) {\n                max_divisor_value = divisor;\n                max_divisor = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp4_yej4d0.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4_yej4d0.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 3; i <= Math.sqrt(n); i += 2) {\n        if (n % i === 0) {\n            max_divisor = i;\n            max_divisor_square = n * i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmppqxr5ynu.js:18:12)\n    at Object.<anonymous> (/tmp/tmppqxr5ynu.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        let divisor = n / i;\n        if (divisor > max_divisor) {\n            max_divisor = divisor;\n            max_divisor_p = i;\n            max_divisor_p2 = max_divisor;\n        }\n    }\n    return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpn9r978os.js:19:12)\n    at Object.<anonymous> (/tmp/tmpn9r978os.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpgvh3v3ic.js:18:12)\n    at Object.<anonymous> (/tmp/tmpgvh3v3ic.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp6e80ctvd.js:18:12)\n    at Object.<anonymous> (/tmp/tmp6e80ctvd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpen8yjip1.js:18:12)\n    at Object.<anonymous> (/tmp/tmpen8yjip1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpqkbg3z9i.js:18:12)\n    at Object.<anonymous> (/tmp/tmpqkbg3z9i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            max_divisor = i;\n            max_divisor_square = max_divisor * i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor_p = i / n;\n            let divisor_p2 = divisor_p * divisor_p;\n            if (divisor_p2 > max_divisor_p2) {\n                max_divisor_p2 = divisor_p2;\n                max_divisor_p = divisor_p;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp94k83sze.js:23:12)\n    at Object.<anonymous> (/tmp/tmp94k83sze.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square = i * i;\n            if (divisor > max_divisor) {\n                max_divisor = divisor;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp2btm15de.js:20:12)\n    at Object.<anonymous> (/tmp/tmp2btm15de.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpa118_7bl.js:18:12)\n    at Object.<anonymous> (/tmp/tmpa118_7bl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpwyum0n6r.js:18:12)\n    at Object.<anonymous> (/tmp/tmpwyum0n6r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = i / n;\n            if (p > max_divisor_p) {\n                max_divisor_p = p;\n                max_divisor = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpls825uoj.js:21:12)\n    at Object.<anonymous> (/tmp/tmpls825uoj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      max_divisor = i;\n      max_divisor_p = i;\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp698nnwmj.js:16:12)\n    at Object.<anonymous> (/tmp/tmp698nnwmj.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = n;\n            }\n        }\n    }\n    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp7b4ngmvp.js:18:12)\n    at Object.<anonymous> (/tmp/tmp7b4ngmvp.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpxu1tz7mh.js:18:12)\n    at Object.<anonymous> (/tmp/tmpxu1tz7mh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tlet max_divisor_p = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tlet divisor_p = n / i;\n\t\tif (divisor_p > max_divisor) {\n\t\t\tmax_divisor = divisor_p;\n\t\t\tmax_divisor_p = i;\n\t\t}\n\t}\n\treturn max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmptapvxl_5.js:19:12)\n    at Object.<anonymous> (/tmp/tmptapvxl_5.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = max_divisor_p2;\n            }\n            if (max_divisor == i) {\n                max_divisor_p2 = max_divisor_p;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpljsz21e0.js:22:12)\n    at Object.<anonymous> (/tmp/tmpljsz21e0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp969adkjy.js:18:12)\n    at Object.<anonymous> (/tmp/tmp969adkjy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            max_divisor = i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpg1850n1w.js:14:12)\n    at Object.<anonymous> (/tmp/tmpg1850n1w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            max_divisor = i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpg1850n1w.js:14:12)\n    at Object.<anonymous> (/tmp/tmpg1850n1w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = Math.pow(i, 2);\n            if (p > max_divisor_p) {\n                max_divisor_p = p;\n                max_divisor_p2 = i;\n            }\n        }\n    }\n    return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpb0tt133j.js:20:12)\n    at Object.<anonymous> (/tmp/tmpb0tt133j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor_p = n / i;\n            if (divisor_p > max_divisor_p) {\n                max_divisor_p = divisor_p;\n                max_divisor_p2 = i;\n            }\n        }\n    }\n    return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpmhm9c7hk.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmhm9c7hk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpe8e6pm9c.js:18:12)\n    at Object.<anonymous> (/tmp/tmpe8e6pm9c.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      let p = Math.floor(Math.sqrt(i));\n      if (p > max_divisor_p) {\n        max_divisor_p = p;\n        max_divisor_p2 = i;\n      }\n    }\n  }\n  return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpfnw5ts2p.js:21:12)\n    at Object.<anonymous> (/tmp/tmpfnw5ts2p.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 0;\n\tlet max_divisor_value = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tlet divisor = i;\n\t\t\twhile (n % divisor === 0) {\n\t\t\t\tdivisor++;\n\t\t\t}\n\t\t\tif (divisor > max_divisor_value) {\n\t\t\t\tmax_divisor = divisor;\n\t\t\t\tmax_divisor_value = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpguvyag4a.js:22:12)\n    at Object.<anonymous> (/tmp/tmpguvyag4a.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = max_divisor * max_divisor;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor_square = i * i;\n            if (divisor_square > max_divisor_square) {\n                max_divisor = i;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpcustii33.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcustii33.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpldkvko6w.js:18:12)\n    at Object.<anonymous> (/tmp/tmpldkvko6w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 3; i <= Math.sqrt(n); i++) {\n        if (n % i == 0) {\n            max_divisor = i;\n            max_divisor_square = n / i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpsjitry1t.js:18:12)\n    at Object.<anonymous> (/tmp/tmpsjitry1t.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp0e6834xp.js:18:12)\n    at Object.<anonymous> (/tmp/tmp0e6834xp.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            let divisor = i;\n            let divisor_square = i * i;\n            if (divisor_square > max_divisor_square) {\n                max_divisor = divisor;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n7\n    at test (/tmp/tmp8bh7vl3k.js:24:12)\n    at Object.<anonymous> (/tmp/tmp8bh7vl3k.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 7,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            max_divisor = i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpg1850n1w.js:14:12)\n    at Object.<anonymous> (/tmp/tmpg1850n1w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 0;\n  let max_divisor_index = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_index = i;\n      }\n    }\n  }\n  return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpjsyphkmi.js:18:12)\n    at Object.<anonymous> (/tmp/tmpjsyphkmi.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpldkvko6w.js:18:12)\n    at Object.<anonymous> (/tmp/tmpldkvko6w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpldkvko6w.js:18:12)\n    at Object.<anonymous> (/tmp/tmpldkvko6w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 0;\n  let max_divisor_value = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_value = i;\n      }\n    }\n  }\n  return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpfct67vx2.js:18:12)\n    at Object.<anonymous> (/tmp/tmpfct67vx2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = Math.floor(n / i);\n            if (p > max_divisor_p) {\n                max_divisor_p = p;\n                max_divisor_p2 = i;\n            }\n        }\n    }\n    return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp6gq4o0ou.js:22:12)\n    at Object.<anonymous> (/tmp/tmp6gq4o0ou.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = n;\n            }\n        }\n    }\n    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp7b4ngmvp.js:18:12)\n    at Object.<anonymous> (/tmp/tmp7b4ngmvp.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp0e6834xp.js:18:12)\n    at Object.<anonymous> (/tmp/tmp0e6834xp.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i < n; i++) {\n        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square = i * i;\n            if (divisor_square > max_divisor_square) {\n                max_divisor = divisor;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n7\n    at test (/tmp/tmpko39nv8g.js:24:12)\n    at Object.<anonymous> (/tmp/tmpko39nv8g.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 7,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp764w6u7c.js:18:12)\n    at Object.<anonymous> (/tmp/tmp764w6u7c.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor_p = i / n;\n            if (divisor_p > max_divisor_p) {\n                max_divisor = divisor_p;\n                max_divisor_p = divisor_p;\n            } else if (divisor_p === max_divisor_p) {\n                max_divisor_p = divisor_p;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpt25npxfe.js:24:12)\n    at Object.<anonymous> (/tmp/tmpt25npxfe.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor_p = i;\n            let divisor_p2 = i;\n            if (i > max_divisor) {\n                max_divisor = i;\n                max_divisor_p = divisor_p;\n                max_divisor_p2 = divisor_p2;\n            }\n            if (i < max_divisor) {\n                let divisor_p2 = max_divisor_p2;\n                max_divisor_p2 = divisor_p;\n                max_divisor_p = divisor_p2;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmps5erg_xz.js:27:12)\n    at Object.<anonymous> (/tmp/tmps5erg_xz.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tlet max_divisor_p = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlet p = Math.floor(n / i);\n\t\t\tif (p > max_divisor_p) {\n\t\t\t\tmax_divisor = i;\n\t\t\t\tmax_divisor_p = p;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpt0npy7dr.js:21:12)\n    at Object.<anonymous> (/tmp/tmpt0npy7dr.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            max_divisor = i;\n            max_divisor_square = max_divisor * max_divisor;\n        }\n    }\n    return max_divisor_square;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpd4khjri6.js:16:12)\n    at Object.<anonymous> (/tmp/tmpd4khjri6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpen8yjip1.js:18:12)\n    at Object.<anonymous> (/tmp/tmpen8yjip1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = Math.floor((n / i) + 1);\n            if (p > max_divisor_p) {\n                max_divisor = i;\n                max_divisor_p = p;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp9z6w2mcy.js:21:12)\n    at Object.<anonymous> (/tmp/tmp9z6w2mcy.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      let p = Math.floor(n / i);\n      if (p > max_divisor_p) {\n        max_divisor_p = p;\n        max_divisor_p2 = i;\n      }\n    }\n  }\n  return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpd9uf_4ii.js:22:12)\n    at Object.<anonymous> (/tmp/tmpd9uf_4ii.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptg25j1t5.js:18:12)\n    at Object.<anonymous> (/tmp/tmptg25j1t5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpf8me0hy3.js:18:12)\n    at Object.<anonymous> (/tmp/tmpf8me0hy3.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpa118_7bl.js:18:12)\n    at Object.<anonymous> (/tmp/tmpa118_7bl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let largest = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor === 0) {\n            largest = divisor;\n        }\n        divisor++;\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 1;\n    let max_divisor_pp = 1;\n    for (let i = 1; i <= n; i++) {\n        let divisor_p = n / i;\n        let divisor_pp = i / n;\n        if (divisor_p > max_divisor) {\n            max_divisor = divisor_p;\n            max_divisor_p = divisor_pp;\n        }\n        if (divisor_pp > max_divisor_p) {\n            max_divisor_pp = divisor_pp;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpuxd0tfou.js:22:12)\n    at Object.<anonymous> (/tmp/tmpuxd0tfou.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor = i;\n            let divisor_square = i * i;\n            if (divisor > max_divisor) {\n                max_divisor = divisor;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpro_0tukq.js:20:12)\n    at Object.<anonymous> (/tmp/tmpro_0tukq.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square = i * i;\n            if (divisor_square > max_divisor_square) {\n                max_divisor = divisor;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpn73heh7x.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn73heh7x.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpakz2en1b.js:18:12)\n    at Object.<anonymous> (/tmp/tmpakz2en1b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 1;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      max_divisor = i;\n      max_divisor_p = n / i;\n    }\n  }\n  return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp9x79mqo0.js:18:12)\n    at Object.<anonymous> (/tmp/tmp9x79mqo0.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_square = n * i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp_ygitmfz.js:18:12)\n    at Object.<anonymous> (/tmp/tmp_ygitmfz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = n;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp45iig3iy.js:18:12)\n    at Object.<anonymous> (/tmp/tmp45iig3iy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_square = n;\n  for (let i = 1; i < n; i++) {\n    if (n % i == 0) {\n      max_divisor = i;\n      max_divisor_square = max_divisor_square * i;\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let largest = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor === 0) {\n            largest = divisor;\n        }\n        divisor++;\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let largest = n;\n    let divisor = 1;\n    while (divisor < n) {\n        largest = divisor;\n        divisor += 2;\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp184cbc0p.js:15:12)\n    at Object.<anonymous> (/tmp/tmp184cbc0p.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpe2akjmcq.js:18:12)\n    at Object.<anonymous> (/tmp/tmpe2akjmcq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpwynml5yz.js:18:12)\n    at Object.<anonymous> (/tmp/tmpwynml5yz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpe8e6pm9c.js:18:12)\n    at Object.<anonymous> (/tmp/tmpe8e6pm9c.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpqkbg3z9i.js:18:12)\n    at Object.<anonymous> (/tmp/tmpqkbg3z9i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let p = Math.floor(n / i);\n            if (p > max_divisor_p) {\n                max_divisor_p = p;\n                max_divisor = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpp81_sr61.js:21:12)\n    at Object.<anonymous> (/tmp/tmpp81_sr61.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = max_divisor;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor_square = i * i;\n            if (divisor_square > max_divisor_square) {\n                max_divisor = i;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpc8nrwl6s.js:19:12)\n    at Object.<anonymous> (/tmp/tmpc8nrwl6s.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let largest = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor === 0) {\n            largest = divisor;\n        }\n        divisor++;\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpqkbg3z9i.js:18:12)\n    at Object.<anonymous> (/tmp/tmpqkbg3z9i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpb60cqr7_.js:14:12)\n    at Object.<anonymous> (/tmp/tmpb60cqr7_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333757
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      max_divisor = i;\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzrume53v.js:14:12)\n    at Object.<anonymous> (/tmp/tmpzrume53v.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333757
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpb60cqr7_.js:14:12)\n    at Object.<anonymous> (/tmp/tmpb60cqr7_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333757
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n            }\n            if (max_divisor_square < i * i) {\n                max_divisor_square = i * i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpanasi716.js:20:12)\n    at Object.<anonymous> (/tmp/tmpanasi716.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tlet max_divisor_p = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tlet p = Math.pow(i, 0.5);\n\t\tif (p > max_divisor_p) {\n\t\t\tmax_divisor_p = p;\n\t\t\tmax_divisor = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp7jydxx6w.js:17:12)\n    at Object.<anonymous> (/tmp/tmp7jydxx6w.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpxxd2cg8v.js:18:12)\n    at Object.<anonymous> (/tmp/tmpxxd2cg8v.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp6e80ctvd.js:18:12)\n    at Object.<anonymous> (/tmp/tmp6e80ctvd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpldkvko6w.js:18:12)\n    at Object.<anonymous> (/tmp/tmpldkvko6w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = max_divisor_p2;\n            }\n            if (max_divisor == i) {\n                max_divisor_p2 = max_divisor_p;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpljsz21e0.js:22:12)\n    at Object.<anonymous> (/tmp/tmpljsz21e0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    let max_divisor_square_prime = 1;\n    let max_divisor_square_prime_prime = 1;\n    for (let i = 1; i <= n; i++) {\n        let divisor = i;\n        let divisor_square = i * i;\n        let divisor_square_prime = i * i * i;\n        let divisor_square_prime_prime = i * i * i * i;\n        if (divisor < max_divisor) {\n            max_divisor = divisor;\n            max_divisor_square = divisor_square;\n            max_divisor_square_prime = divisor_square_prime;\n            max_divisor_square_prime_prime = divisor_square_prime_prime;\n        }\n        if (divisor_square < max_divisor_square) {\n            max_divisor_square = divisor_square;\n            max_divisor_square_prime = divisor_square_prime;\n            max_divisor_square_prime_prime = divisor_square_prime_prime;\n        }\n        if (divisor_square_prime < max_divisor_square_prime) {\n            max_divisor_square_prime = divisor_square_prime;\n            max_divisor_square_prime_prime = divisor_square_prime_prime;\n        }\n        if (divisor_square_prime_prime < max_divisor_square_prime_prime) {\n            max_divisor_square_prime_prime = divisor_square_prime_prime;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpbo1kdhd7.js:38:12)\n    at Object.<anonymous> (/tmp/tmpbo1kdhd7.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpldkvko6w.js:18:12)\n    at Object.<anonymous> (/tmp/tmpldkvko6w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = max_divisor;\n            }\n        }\n    }\n    return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp344v8ceo.js:18:12)\n    at Object.<anonymous> (/tmp/tmp344v8ceo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_value = 1;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      let divisor = i;\n      while (divisor <= n) {\n        if (n % divisor === 0) {\n          divisor++;\n        } else {\n          break;\n        }\n      }\n      if (divisor > max_divisor) {\n        max_divisor = divisor;\n        max_divisor_value = i;\n      }\n    }\n  }\n  return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpur5okuua.js:27:12)\n    at Object.<anonymous> (/tmp/tmpur5okuua.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333757
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpb60cqr7_.js:14:12)\n    at Object.<anonymous> (/tmp/tmpb60cqr7_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333757
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = Math.floor(n / i);\n            if (p > max_divisor_p) {\n                max_divisor_p = p;\n                max_divisor_p2 = i;\n            }\n        }\n    }\n    return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp6gq4o0ou.js:22:12)\n    at Object.<anonymous> (/tmp/tmp6gq4o0ou.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpldkvko6w.js:18:12)\n    at Object.<anonymous> (/tmp/tmpldkvko6w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square = i * i;\n            if (divisor > max_divisor) {\n                max_divisor = divisor;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp2btm15de.js:20:12)\n    at Object.<anonymous> (/tmp/tmp2btm15de.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let largestDivisor = 1;\n    let divisor = 2;\n    while (divisor <= n) {\n        if (n % divisor === 0) {\n            largestDivisor = divisor;\n        }\n        divisor++;\n    }\n    return largestDivisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpc6b0slsy.js:16:12)\n    at Object.<anonymous> (/tmp/tmpc6b0slsy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333757
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpm8ehplmo.js:18:12)\n    at Object.<anonymous> (/tmp/tmpm8ehplmo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333759
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpm8ehplmo.js:18:12)\n    at Object.<anonymous> (/tmp/tmpm8ehplmo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333759
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tmax_divisor = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpqj81xeo6.js:14:12)\n    at Object.<anonymous> (/tmp/tmpqj81xeo6.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333759
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor_square = i * i;\n            if (divisor_square > max_divisor_square) {\n                max_divisor = i;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp23yazezc.js:19:12)\n    at Object.<anonymous> (/tmp/tmp23yazezc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333759
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpff84y9mx.js:18:12)\n    at Object.<anonymous> (/tmp/tmpff84y9mx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmplqlx2xrd.js:18:12)\n    at Object.<anonymous> (/tmp/tmplqlx2xrd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp6e80ctvd.js:18:12)\n    at Object.<anonymous> (/tmp/tmp6e80ctvd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpff84y9mx.js:18:12)\n    at Object.<anonymous> (/tmp/tmpff84y9mx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = Math.floor(n / i);\n            if (p > max_divisor_p) {\n                max_divisor_p = p;\n                max_divisor_p2 = i;\n            }\n        }\n    }\n    return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp6gq4o0ou.js:22:12)\n    at Object.<anonymous> (/tmp/tmp6gq4o0ou.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let largest = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor === 0) {\n            largest = divisor;\n        }\n        divisor++;\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpakz2en1b.js:18:12)\n    at Object.<anonymous> (/tmp/tmpakz2en1b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      let divisor_p = i / n;\n      if (divisor_p > max_divisor_p) {\n        max_divisor = divisor_p;\n        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpgsau1myr.js:21:12)\n    at Object.<anonymous> (/tmp/tmpgsau1myr.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let largest = n;\n    let divisor = 1;\n    while (divisor <= n) {\n        if (n % divisor === 0) {\n            largest = divisor;\n        }\n        divisor++;\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpt6acsrfr.js:16:12)\n    at Object.<anonymous> (/tmp/tmpt6acsrfr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor_p = i / n;\n            let divisor_p2 = divisor_p * divisor_p;\n            if (divisor_p2 > max_divisor_p2) {\n                max_divisor_p2 = divisor_p2;\n                max_divisor_p = divisor_p;\n            }\n        }\n    }\n    return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpec5104hu.js:23:12)\n    at Object.<anonymous> (/tmp/tmpec5104hu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_square = n * i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmps62c0hpv.js:18:12)\n    at Object.<anonymous> (/tmp/tmps62c0hpv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      let divisor_p = i;\n      let divisor_p2 = i;\n      for (let j = 2; j <= Math.sqrt(i); j++) {\n        if (i % j === 0) {\n          divisor_p = j;\n          divisor_p2 = j;\n        }\n      }\n      if (divisor_p2 > max_divisor_p2) {\n        max_divisor_p2 = divisor_p2;\n        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp0xp0wbxo.js:29:12)\n    at Object.<anonymous> (/tmp/tmp0xp0wbxo.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      max_divisor = i;\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzrume53v.js:14:12)\n    at Object.<anonymous> (/tmp/tmpzrume53v.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333757
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpakz2en1b.js:18:12)\n    at Object.<anonymous> (/tmp/tmpakz2en1b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmplqlx2xrd.js:18:12)\n    at Object.<anonymous> (/tmp/tmplqlx2xrd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square = i * i;\n            if (divisor > max_divisor) {\n                max_divisor = divisor;\n            }\n            if (divisor_square > max_divisor_square) {\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptuaq7qae.js:22:12)\n    at Object.<anonymous> (/tmp/tmptuaq7qae.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 2,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tlet max_divisor_p = 0;\n\tlet max_divisor_p2 = 0;\n\tlet max_divisor_p3 = 0;\n\tlet max_divisor_p4 = 0;\n\tlet max_divisor_p5 = 0;\n\tlet max_divisor_p6 = 0;\n\tlet max_divisor_p7 = 0;\n\tlet max_divisor_p8 = 0;\n\tlet max_divisor_p9 = 0;\n\tlet max_divisor_p10 = 0;\n\tlet max_divisor_p11 = 0;\n\tlet max_divisor_p12 = 0;\n\tlet max_divisor_p13 = 0;\n\tlet max_divisor_p14 = 0;\n\tlet max_divisor_p15 = 0;\n\tlet max_divisor_p16 = 0;\n\tlet max_divisor_p17 = 0;\n\tlet max_divisor_p18 = 0;\n\tlet max_divisor_p19 = 0;\n\tlet max_divisor_p20 = 0;\n\tlet max_divisor_p21 = 0;\n\tlet max_divisor_p22 = 0;\n\tlet max_divisor_p23 = 0;\n\tlet max_divisor_p24 = 0;\n\tlet max_divisor_p25 = 0;\n\tlet max_divisor_p26 = 0;\n\tlet max_divisor_p27 = 0;\n\tlet max_divisor_p28 = 0;\n\tlet max_divisor_p29 = 0;\n\tlet max_divisor_p30 = 0;\n\tlet max_divisor_p31 = 0;\n\tlet max_divisor_p32 = 0;\n\tlet max_divisor_p33 = 0;\n\tlet max_divisor_p34 = 0;\n\tlet max_divisor_p35 = 0;\n\tlet max_divisor_p36 = 0;\n\tlet max_divisor_p37 = 0;\n\tlet max_divisor_p38 = 0;\n\tlet max_divisor_p39 = 0;\n\tlet max_divisor_p40 = 0;\n\tlet max_divisor_p41 = 0;\n\tlet max_divisor_p42 = 0;\n\tlet max_divisor_p43 = 0;\n\tlet max_divisor_p44 = 0;\n\tlet max_divisor_p45 = 0;\n\tlet max_divisor_p46 = 0;\n\tlet max_divisor_p47 = 0;\n\tlet max_divisor_p48 = 0;\n\tlet max_divisor_p49 = 0;\n\tlet max_divisor_p50 = 0;\n\tlet max_divisor_p51 = 0;\n\tlet max_divisor_p52 = 0;\n\tlet max_divisor_p53 = 0;\n\tlet max_divisor_p54 = 0;\n\tlet max_divisor_p55 = 0;\n\tlet max_divisor_p56 = 0;\n\tlet max_divisor_p57 = 0;\n\tlet max_divisor_p58 = 0;\n\tlet max_divisor_p59 = 0;\n\tlet max_divisor_p60 = 0;\n\tlet max_divisor_p61 = 0;\n\tlet max_divisor_p62 = 0;\n\tlet max_divisor_p63 = 0;\n\tlet max_divisor_p64 = 0;\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpnza_8tlw.ts(81,8): error TS1005: '}' expected.\n",
      "timestamp": 1660333760
    },
    {
      "exit_code": 2,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 1;\n    let max_divisor_pp = 1;\n    let max_divisor_ppp = 1;\n    let max_divisor_pppp = 1;\n    let max_divisor_ppppp = 1;\n    let max_divisor_pppppp = 1;\n    let max_divisor_ppppppp = 1;\n    let max_divisor_ppppppp = 1;\n    let max_divisor_pppppppp = 1;\n    let max_divisor_ppppppppp = 1;\n    let max_divisor_ppppppppp = 1;\n    let max_divisor_pppppppppp = 1;\n    let max_divisor_ppppppppppp = 1;\n    let max_divisor_pppppppppppp = 1;\n    let max_divisor_ppppppppppppp = 1;\n    let max_divisor_ppppppppppppp = 1;\n    let max_divisor_pppppppppppppp = 1;\n    let max_divisor_ppppppppppppppp = 1;\n    let max_divisor_ppppppppppppppp = 1;\n    let max_divisor_pppppppppppppppp = 1;\n    let max_divisor_ppppppppppppppppppp = 1;\n    let max_divisor_ppppppppppppppppppp = 1;\n    let max_divisor_pppppppppppppppppppp = 1;\n    let max_divisor_ppppppppppppppppppppp = 1;\n    let max_divisor_pppppppppppppppppppppp = 1\n    \n    for (let i = 1; i <= n; i++) {\n        let divisor = i;\n        let divisor_p = 1;\n        let divisor_pp = 1;\n        let divisor_ppp = 1;\n        let divisor_pppp = 1;\n        let divisor_ppppp = 1;\n        let divisor_pppppp = 1;\n        let divisor_ppppppp = 1;\n        let divisor_pppppppp = 1;\n        let divisor_ppppppppp = 1;\n        let divisor_pppppppppp = 1;\n        let divisor_ppppppppppp = 1;\n        let divisor_ppppppppppp = 1;\n        let divisor_pppppppppppp = 1;\n        let divisor_ppppppppppppp = 1;\n        let divisor_ppppppppppppppp = 1;\n        let divisor_pppppppppppppppp = 1\n        \n        for (let j = 1; j <= i; j++) {\n            divisor_p = divisor * j;\n            divisor_pp = divisor_p * j;\n            divisor_ppp = divisor_pp * j;\n            divisor_pppp = divisor_ppp * j;\n            divisor_ppppp = divisor_pppp * j;\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp5_ou6_uj.ts(69,8): error TS1005: '}' expected.\n",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor = i;\n            let divisor_square = i * i;\n            if (divisor > max_divisor) {\n                max_divisor = divisor;\n                max_divisor_square = divisor_square;\n            }\n            if (divisor_square > max_divisor_square) {\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp6a18ru30.js:23:12)\n    at Object.<anonymous> (/tmp/tmp6a18ru30.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpldkvko6w.js:18:12)\n    at Object.<anonymous> (/tmp/tmpldkvko6w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333752
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = Math.floor(n / i);\n            if (p > max_divisor_p) {\n                max_divisor = i;\n                max_divisor_p = p;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpag98a7k8.js:21:12)\n    at Object.<anonymous> (/tmp/tmpag98a7k8.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            max_divisor = i;\n            max_divisor_square = max_divisor * i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp00opvguc.js:16:12)\n    at Object.<anonymous> (/tmp/tmp00opvguc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let largest: number = 1;\n    let divisor: number = 2;\n    while (divisor <= n) {\n        if (n % divisor === 0) {\n            largest = divisor;\n        }\n        divisor++;\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmplk303xny.js:16:12)\n    at Object.<anonymous> (/tmp/tmplk303xny.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpakz2en1b.js:18:12)\n    at Object.<anonymous> (/tmp/tmpakz2en1b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = n;\n  let max_divisor_index = -1;\n  for (let i = 1; i < n; i++) {\n    if (n % i === 0) {\n      max_divisor = i;\n      max_divisor_index = i;\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp969adkjy.js:18:12)\n    at Object.<anonymous> (/tmp/tmp969adkjy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_value = 1;\n    let max_divisor_value_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n                max_divisor_value_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpwynml5yz.js:18:12)\n    at Object.<anonymous> (/tmp/tmpwynml5yz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = n;\n  let max_divisor_index = 0;\n  for (let i = 1; i < n; i++) {\n    if (n % i === 0) {\n      max_divisor = i;\n      max_divisor_index = i;\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpb60cqr7_.js:14:12)\n    at Object.<anonymous> (/tmp/tmpb60cqr7_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333757
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = n;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpnyrsmzrs.js:14:12)\n    at Object.<anonymous> (/tmp/tmpnyrsmzrs.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tlet max_divisor_p = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tlet divisor_p = n / i;\n\t\tif (divisor_p > max_divisor_p) {\n\t\t\tmax_divisor = i;\n\t\t\tmax_divisor_p = divisor_p;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpri_xxgnq.js:19:12)\n    at Object.<anonymous> (/tmp/tmpri_xxgnq.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpf8me0hy3.js:18:12)\n    at Object.<anonymous> (/tmp/tmpf8me0hy3.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square = i * i;\n            if (divisor > max_divisor) {\n                max_divisor = divisor;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp2btm15de.js:20:12)\n    at Object.<anonymous> (/tmp/tmp2btm15de.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpm8ehplmo.js:18:12)\n    at Object.<anonymous> (/tmp/tmpm8ehplmo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333759
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpen8yjip1.js:18:12)\n    at Object.<anonymous> (/tmp/tmpen8yjip1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpwynml5yz.js:18:12)\n    at Object.<anonymous> (/tmp/tmpwynml5yz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp969adkjy.js:18:12)\n    at Object.<anonymous> (/tmp/tmp969adkjy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor = i;\n            let divisor_square = i * i;\n            if (divisor_square > max_divisor_square) {\n                max_divisor = divisor;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpn73heh7x.js:20:12)\n    at Object.<anonymous> (/tmp/tmpn73heh7x.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor_p = i;\n            let divisor_p2 = i;\n            if (i === n) {\n                divisor_p2 = n;\n            }\n            if (divisor_p2 > max_divisor_p2) {\n                max_divisor_p2 = divisor_p2;\n                max_divisor_p = divisor_p;\n            }\n        }\n    }\n    return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpvtc7c8s8.js:24:12)\n    at Object.<anonymous> (/tmp/tmpvtc7c8s8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333762
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptg25j1t5.js:18:12)\n    at Object.<anonymous> (/tmp/tmptg25j1t5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpwynml5yz.js:18:12)\n    at Object.<anonymous> (/tmp/tmpwynml5yz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let p = Math.floor(n / i);\n            if (p > max_divisor_p) {\n                max_divisor_p = p;\n                max_divisor = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpcl5klxcq.js:21:12)\n    at Object.<anonymous> (/tmp/tmpcl5klxcq.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333762
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 0;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      let divisor_p = i;\n      let divisor = i;\n      while (divisor < n) {\n        divisor *= 2;\n        divisor_p *= 2;\n      }\n      if (divisor > max_divisor) {\n        max_divisor = divisor;\n        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpvez1hm_4.js:24:12)\n    at Object.<anonymous> (/tmp/tmpvez1hm_4.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333762
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpxu1tz7mh.js:18:12)\n    at Object.<anonymous> (/tmp/tmpxu1tz7mh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 2,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    let max_divisor_p3 = 0;\n    let max_divisor_p4 = 0;\n    let max_divisor_p5 = 0;\n    let max_divisor_p6 = 0;\n    let max_divisor_p7 = 0;\n    let max_divisor_p8 = 0;\n    let max_divisor_p9 = 0;\n    let max_divisor_p10 = 0;\n    let max_divisor_p11 = 0;\n    let max_divisor_p12 = 0;\n    let max_divisor_p13 = 0;\n    let max_divisor_p14 = 0;\n    let max_divisor_p15 = 0;\n    let max_divisor_p16 = 0;\n    let max_divisor_p17 = 0;\n    let max_divisor_p18 = 0;\n    let max_divisor_p19 = 0;\n    let max_divisor_p20 = 0;\n    let max_divisor_p21 = 0;\n    let max_divisor_p22 = 0;\n    let max_divisor_p23 = 0;\n    let max_divisor_p24 = 0;\n    let max_divisor_p25 = 0;\n    let max_divisor_p26 = 0;\n    let max_divisor_p27 = 0;\n    let max_divisor_p28 = 0;\n    let max_divisor_p29 = 0;\n    let max_divisor_p30 = 0;\n    let max_divisor_p31 = 0;\n    let max_divisor_p32 = 0;\n    let max_divisor_p33 = 0;\n    let max_divisor_p34 = 0;\n    let max_divisor_p35 = 0;\n    let max_divisor_p36 = 0;\n    let max_divisor_p37 = 0;\n    let max_divisor_p38 = 0;\n    let max_divisor_p39 = 0;\n    let max_divisor_p40 = 0;\n    let max_divisor_p41 = 0;\n    let max_divisor_p42 = 0;\n    let max_divisor_p43 = 0;\n    let max_divisor_p44 = 0;\n    let max_divisor_p45 = 0;\n    let max_divisor_p46 = 0;\n    let max_divisor_p47 = 0;\n    let max_divisor_p48 = 0;\n    let max_divisor_p49 = 0;\n    let max_divisor_p50 = 0;\n    let max_divisor_p51 = 0;\n    let max_divisor_p52 = 0;\n    let max_divisor_p53 = 0;\n    let max_divisor_p54 = 0;\n    let max_divisor_p55 = 0;\n    let max_divisor_p56 = 0;\n    let max_divisor_p57 = 0;\n    let max_divisor_p58 = 0;\n    let max_divisor_p59 = 0;\n    let max_divisor_p60 = 0;\n    let max_divisor_p61 = 0;\n    let max_divisor_p62 = 0;\n    let max_divisor_p63 = 0;\n    let max_divisor_p64 = 0;\n    let max_divisor_p65 = 0;\n    let max_divisor_p66 = 0;\n    let max_divisor_p67 = 0;\n    let max_divisor_p68 = 0;\n    let max_divisor_p69 = 0;\n    let max_divisor_p70 = 0;\n    let max_divisor_p71 = 0;\n    let max_divisor_p72 = 0;\n    let max_divisor_p73 = 0;\n    let \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpy2r1u80t.ts(78,9): error TS1005: ',' expected.\n../../../../tmp/tmpy2r1u80t.ts(91,8): error TS1005: '}' expected.\n",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor = i;\n            let divisor_square = i * i;\n            if (divisor_square > max_divisor_square) {\n                max_divisor = divisor;\n                max_divisor_square = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmprykfbj5j.js:20:12)\n    at Object.<anonymous> (/tmp/tmprykfbj5j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tlet max_divisor_index = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tmax_divisor = i;\n\t\t\tmax_divisor_index = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp7hhq_q5t.js:16:12)\n    at Object.<anonymous> (/tmp/tmp7hhq_q5t.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i === 0) {\n            max_divisor = i;\n            max_divisor_index = i;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_square = max_divisor;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      max_divisor = i;\n      max_divisor_square = max_divisor * max_divisor;\n    }\n  }\n  return max_divisor_square;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpe3cxisw5.js:16:12)\n    at Object.<anonymous> (/tmp/tmpe3cxisw5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      let divisor_p = i;\n      let divisor_p2 = i;\n      for (let j = 1; j <= n; j++) {\n        if (n % j === 0) {\n          divisor_p2 = j;\n          break;\n        }\n      }\n      if (divisor_p2 > max_divisor_p2) {\n        max_divisor_p2 = divisor_p2;\n        max_divisor_p = divisor_p;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpexagth0l.js:29:12)\n    at Object.<anonymous> (/tmp/tmpexagth0l.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = max_divisor * max_divisor;\n    for (let i = 1; i <= n; i++) {\n        let divisor = i;\n        while (divisor <= max_divisor_square) {\n            if (n % divisor === 0) {\n                max_divisor = divisor;\n                break;\n            }\n            divisor++;\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp3l_tpl1q.js:22:12)\n    at Object.<anonymous> (/tmp/tmp3l_tpl1q.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpqkbg3z9i.js:18:12)\n    at Object.<anonymous> (/tmp/tmpqkbg3z9i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_square = n;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor_square % i === 0) {\n                max_divisor = i;\n                max_divisor_square = max_divisor * i;\n            } else {\n                max_divisor_square = max_divisor * i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpvk2cfemd.js:23:12)\n    at Object.<anonymous> (/tmp/tmpvk2cfemd.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 0;\n  let max_divisor_value = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n      }\n      if (max_divisor_value < n) {\n        max_divisor_value = n;\n      }\n    }\n  }\n  return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpfzpp3r0x.js:20:12)\n    at Object.<anonymous> (/tmp/tmpfzpp3r0x.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_value = 1;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpqkbg3z9i.js:18:12)\n    at Object.<anonymous> (/tmp/tmpqkbg3z9i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    } else {\n      if (max_divisor_p < i) {\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp2tiuh1pw.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2tiuh1pw.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  let max_divisor_p2 = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      let p = Math.floor(n / i);\n      if (p > max_divisor_p) {\n        max_divisor_p = p;\n        max_divisor_p2 = i;\n      }\n    }\n  }\n  return max_divisor_p2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpuud0klu7.js:22:12)\n    at Object.<anonymous> (/tmp/tmpuud0klu7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpen8yjip1.js:18:12)\n    at Object.<anonymous> (/tmp/tmpen8yjip1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpff84y9mx.js:18:12)\n    at Object.<anonymous> (/tmp/tmpff84y9mx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tlet max_divisor_p = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlet p = Math.floor(n / i);\n\t\t\tif (p > max_divisor_p) {\n\t\t\t\tmax_divisor_p = p;\n\t\t\t\tmax_divisor = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp4uyf9axx.js:21:12)\n    at Object.<anonymous> (/tmp/tmp4uyf9axx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n                max_divisor_p2 = i;\n            }\n            if (max_divisor_p < i) {\n                max_divisor_p = i;\n                max_divisor_p2 = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpoota2fuf.js:24:12)\n    at Object.<anonymous> (/tmp/tmpoota2fuf.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor_p;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpa118_7bl.js:18:12)\n    at Object.<anonymous> (/tmp/tmpa118_7bl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 0;\n  let max_divisor_value = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_value = i;\n      }\n    }\n  }\n  return max_divisor_value;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpfct67vx2.js:18:12)\n    at Object.<anonymous> (/tmp/tmpfct67vx2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpb60cqr7_.js:14:12)\n    at Object.<anonymous> (/tmp/tmpb60cqr7_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333757
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpakz2en1b.js:18:12)\n    at Object.<anonymous> (/tmp/tmpakz2en1b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i == 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpakz2en1b.js:18:12)\n    at Object.<anonymous> (/tmp/tmpakz2en1b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333756
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n\tlet max_divisor = 1;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif (n % i === 0) {\n\t\t\tmax_divisor = i;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpb60cqr7_.js:14:12)\n    at Object.<anonymous> (/tmp/tmpb60cqr7_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333757
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let largest = 1;\n    let divisor = 1;\n    while (divisor < n) {\n        divisor *= 2;\n        if (divisor > n) {\n            divisor = n;\n        }\n        if (divisor > largest) {\n            largest = divisor;\n        }\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp65zh4yw5.js:19:12)\n    at Object.<anonymous> (/tmp/tmp65zh4yw5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let largest = n;\n    let divisor = 1;\n    while (divisor < n) {\n        if (n % divisor === 0) {\n            largest = divisor;\n        }\n        divisor++;\n    }\n    return largest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 0;\n    let max_divisor_value = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            let divisor = i;\n            if (divisor > max_divisor_value) {\n                max_divisor_value = divisor;\n                max_divisor = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp4_yej4d0.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4_yej4d0.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpwyum0n6r.js:18:12)\n    at Object.<anonymous> (/tmp/tmpwyum0n6r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      if (max_divisor < i) {\n        max_divisor = i;\n        max_divisor_p = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpff84y9mx.js:18:12)\n    at Object.<anonymous> (/tmp/tmpff84y9mx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333760
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 2,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 1;\n    let max_divisor_p1 = 1;\n    let max_divisor_p2 = 1;\n    let max_divisor_p3 = 1;\n    let max_divisor_p4 = 1;\n    let max_divisor_p5 = 1;\n    let max_divisor_p6 = 1;\n    let max_divisor_p7 = 1;\n    let max_divisor_p8 = 1;\n    let max_divisor_p9 = 1;\n    let max_divisor_p10 = 1;\n    let max_divisor_p11 = 1;\n    let max_divisor_p12 = 1;\n    let max_divisor_p13 = 1;\n    let max_divisor_p14 = 1;\n    let max_divisor_p15 = 1;\n    let max_divisor_p16 = 1;\n    let max_divisor_p17 = 1;\n    let max_divisor_p18 = 1;\n    let max_divisor_p19 = 1;\n    let max_divisor_p20 = 1;\n    let max_divisor_p21 = 1;\n    let max_divisor_p22 = 1;\n    let max_divisor_p23 = 1;\n    let max_divisor_p24 = 1;\n    let max_divisor_p25 = 1;\n    let max_divisor_p26 = 1;\n    let max_divisor_p27 = 1;\n    let max_divisor_p28 = 1;\n    let max_divisor_p29 = 1;\n    let max_divisor_p30 = 1;\n    let max_divisor_p31 = 1;\n    let max_divisor_p32 = 1;\n    let max_divisor_p33 = 1;\n    let max_divisor_p34 = 1;\n    let max_divisor_p35 = 1;\n    let max_divisor_p36 = 1;\n    let max_divisor_p37 = 1;\n    let max_divisor_p38 = 1;\n    let max_divisor_p39 = 1;\n    let max_divisor_p40 = 1;\n    let max_divisor_p41 = 1;\n    let max_divisor_p42 = 1;\n    let max_divisor_p43 = 1;\n    let max_divisor_p44 = 1;\n    let max_divisor_p45 = 1;\n    let max_divisor_p46 = 1;\n    let max_divisor_p47 = 1;\n    let max_divisor_p48 = 1;\n    let max_divisor_p49 = 1;\n    let max_divisor_p50 = 1;\n    let max_divisor_p51 = 1;\n    let max_divisor_p52 = 1;\n    let max_divisor_p53 = 1;\n    let max_divisor_p54 = 1;\n    let max_divisor_p55 = 1;\n    let max_divisor_p56 = 1;\n    let max_divisor_p57 = 1;\n    let max_divisor_p58 = 1;\n    let max_divisor_p59 = 1;\n    let max_divisor_p60 = 1;\n    let max_divisor_p61 = 1;\n    let max_divisor_p62 = 1;\n    let max_divisor_p63 = 1;\n    let max_divisor_p64 = 1;\n    let max_divisor_p65 = 1;\n    let max_divisor_p66 = 1;\n    let max_divisor_p67 = 1;\n    let max_divisor_p68 = 1;\n    let max_divisor_p69 = 1;\n    let max_divisor_p70 = 1;\n    let max_divisor_p71 = 1;\n    let \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp027mzq69.ts(77,9): error TS1005: ',' expected.\n../../../../tmp/tmp027mzq69.ts(90,8): error TS1005: '}' expected.\n",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpe8e6pm9c.js:18:12)\n    at Object.<anonymous> (/tmp/tmpe8e6pm9c.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333753
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    let max_divisor_p2 = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            let divisor_p = i;\n            let divisor_p2 = i;\n            if (max_divisor < divisor_p) {\n                max_divisor = divisor_p;\n                max_divisor_p = divisor_p2;\n            }\n            if (max_divisor < divisor_p2) {\n                max_divisor = divisor_p2;\n                max_divisor_p2 = divisor_p;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpcxuaz0l0.js:25:12)\n    at Object.<anonymous> (/tmp/tmpcxuaz0l0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333764
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 0,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = n;\n  let max_divisor_index = 0;\n  for (let i = 1; i < n; i++) {\n    if (n % i == 0) {\n      max_divisor = i;\n      max_divisor_index = i;\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333763
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n  let max_divisor = 1;\n  let max_divisor_p = 1;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      let p = Math.floor(n / i);\n      if (p > max_divisor_p) {\n        max_divisor_p = p;\n        max_divisor = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n5\n    at test (/tmp/tmprb3gb26v.js:21:12)\n    at Object.<anonymous> (/tmp/tmprb3gb26v.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333764
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = n;\n    let max_divisor_index = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_index = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp969adkjy.js:18:12)\n    at Object.<anonymous> (/tmp/tmp969adkjy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    },
    {
      "exit_code": 1,
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor(n: number): number {\n    let max_divisor = 1;\n    let max_divisor_p = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (max_divisor < i) {\n                max_divisor = i;\n                max_divisor_p = i;\n            }\n        }\n    }\n    return max_divisor;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpj0z3gavk.js:18:12)\n    at Object.<anonymous> (/tmp/tmpj0z3gavk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333749
    }
  ]
}
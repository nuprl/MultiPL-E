name: HumanEval_91_is_bored
language: rkt
prompt: "#lang racket\n\n;; You'll be given a string of words, and your task is to\
  \ count the number\n;; of boredoms. A boredom is a sentence that starts with the\
  \ word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n\
  ;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The\
  \ sun is shining. I love this weather\")\n;; 1\n(define (is_bored S)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_bored))\n\
  \    (check-equal? (candidate \"Hello world\") 0)\n    (check-equal? (candidate\
  \ \"Is the sky blue?\") 0)\n    (check-equal? (candidate \"I love It !\") 1)\n \
  \   (check-equal? (candidate \"bIt\") 0)\n    (check-equal? (candidate \"I feel\
  \ good today. I will be productive. will kill It\") 2)\n    (check-equal? (candidate\
  \ \"You and I are going for a walk\") 0)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? S) 0]\n    [(equal? (first S) \"I\") 1]\n   \
    \ [else (+ 1 (is_bored (rest S)))]))\n", "  (cond\n    [(empty? S) 0]\n    [(equal?\
    \ (first S) \"I\") 1]\n    [else (+ 1 (is_bored (rest S)))]))\n", "  (cond\n \
    \   [(equal? (first S) \"I\") 1]\n    [(equal? (first S) \"!\") 0]\n    [(equal?\
    \ (first S) \".\") 0]\n    [else (+ 1 (is_bored (rest S)))]))\n", "  (cond\n \
    \   [(equal? (first S) \"I\") 1]\n    [(equal? (first S) \"!\") 0]\n    [(equal?\
    \ (first S) \".\") 0]\n    [else (+ 1 (is_bored (rest S)))]))\n", "  (cond\n \
    \   [(equal? (first S) \"I\") 0]\n    [(equal? (first S) \"!\") 0]\n    [(equal?\
    \ (first S) \".\") 0]\n    [(equal? (first S) \"?\") 0]\n    [else 1]))\n", " \
    \ (cond\n    [(equal? (first S) \"I\") 1]\n    [(equal? (first S) \"!\") 0]\n\
    \    [(equal? (first S) \".\") 0]\n    [else (+ 1 (is_bored (rest S)))]))\n",
  "  (cond\n    [(empty? S) 0]\n    [(equal? (first S) \"I\") 1]\n    [else (+ 1 (is_bored\
    \ (rest S)))]))\n", "  (cond [(string=? (substring S 0 3) \"I\") 1]\n        [else\
    \ 0]))\n", "  (cond\n    [(equal? (first S) \"I\") 1]\n    [(equal? (first S)\
    \ \"!\") 0]\n    [(equal? (first S) \".\") 0]\n    [else (+ 1 (is_bored (rest\
    \ S)))]))\n", "  (cond\n    [(equal? (first S) \"I\") 1]\n    [(equal? (first\
    \ S) \"!\") 1]\n    [(equal? (first S) \".\") 1]\n    [(equal? (first S) \"?\"\
    ) 1]\n    [else 0]))\n", "  (cond [(empty? S) 0]\n        [(equal? (first S) \"\
    I\") 1]\n        [else 0]))\n", "  (let ((bored 0))\n    (cond\n      [(equal?\
    \ (first S) \"I\") (set! bored 1)]\n      [(equal? (first S) \".\") (set! bored\
    \ 2)]\n      [(equal? (first S) \"?\") (set! bored 3)]\n      [(equal? (first\
    \ S) \"!\") (set! bored 4)]\n      [else (set! bored 0)]\n      )))\n", "  (cond\n\
    \    [(empty? S) 0]\n    [(equal? (first S) \"I\") 1]\n    [else (+ 1 (is_bored\
    \ (rest S)))]))\n", "  (let ((bored (count-bored S)))\n    (if (= bored 0)\n \
    \       #t\n        #f)))\n", "  (cond\n    [(equal? (first S) \"I\") 1]\n   \
    \ [(equal? (first S) \"!\") 0]\n    [(equal? (first S) \".\") 0]\n    [(equal?\
    \ (first S) \"?\") 0]\n    [else 0]))\n", "  (cond\n    [(empty? S) 0]\n    [(equal?\
    \ (first S) \"I\") (+ 1 (is_bored (rest S)))]\n    [else (is_bored (rest S))]))\n",
  "  (cond [(empty? S) 0]\n        [(equal? (first S) \"I\") 1]\n        [else 0]))\n",
  "  (cond\n    [(equal? (first S) \"I\") 1]\n    [(equal? (first S) \"!\") 0]\n \
    \   [(equal? (first S) \".\") 0]\n    [else (+ 1 (is_bored (rest S)))]))\n", " \
    \ (let ((bored 0))\n    (cond\n      [(string=? (substring S 0 3) \"I\") (set!\
    \ bored 1)]\n      [(string=? (substring S 0 4) \"I\") (set! bored 2)]\n     \
    \ [(string=? (substring S 0 5) \"I\") (set! bored 3)]\n      [(string=? (substring\
    \ S 0 6) \"I\") (set! bored 4)]\n      [(string=? (substring S 0 7) \"I\") (set!\
    \ bored 5)]\n      [(string=? (substring S 0 8) \"I\") (set! bored 6)]\n     \
    \ [(string=? (substring S 0 9) \"I\") (set! bored 7)]\n      [(string=? (substring\
    \ S 0 10) \"I\") (set! bored 8)]\n      [(string=? (substring S 0 11) \"I\") (set!\
    \ bored 9)]\n      [(string=? (substring S 0 12) \"I\") (set! bored 10)]\n   \
    \   [(string=? (substring S 0 13) \"I\") (set! bored 11)]\n      [(string=? (substring\
    \ S 0 14) \"I\") (set! bored 12)]\n      [(string=? (substring S 0 15) \"I\")\
    \ (set! bored 13)]\n      [(string=? (substring S 0 16) \"I\") (set! bored 14)]\n\
    \      [(string=? (substring S 0 17) \"I\") (set! bored 15)]\n      [(string=?\
    \ (substring S 0 18) \"I\") (set! bored 16)]\n      [(string=? (substring S 0\
    \ 19) \"I\") (set! bored 17)]\n      [(string=? (substring S 0 20) \"I\") (set!\
    \ bored 18)]\n      [(string=? (substring S 0 21) \"I\") (set! bored 19)]\n  \
    \    [(string=? (substring S 0 22) \"I\") (set! bored 20)]\n      [(string=? (substring\
    \ S 0 23) \"I\") (set! bored 21)]\n      [(string=? (substring S 0 24) \"I\")\
    \ (set! bored 22)]\n      [(string=? (substring S 0 25) \"I\") (set! bored 23)]\n\
    \      [(string=? (substring S 0 26) \"I\") (set! bored 24)]\n", "  (cond\n  \
    \  [(equal? (first S) \"I\") 1]\n    [(equal? (first S) \"!\") 1]\n    [(equal?\
    \ (first S) \".\") 1]\n    [(equal? (first S) \"?\") 1]\n    [else 0]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

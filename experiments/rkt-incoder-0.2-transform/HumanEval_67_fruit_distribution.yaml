name: HumanEval_67_fruit_distribution
language: rkt
prompt: "#lang racket\n\n;; In this task, you will be given a string that represents\
  \ a number of apples and oranges \n;; that are distributed in a basket of fruit\
  \ this basket contains \n;; apples, oranges, and mango fruits. Given the string\
  \ that represents the total number of \n;; the oranges and apples and an integer\
  \ that represent the total number of the fruits \n;; in the basket return the number\
  \ of the mango fruits in the basket.\n;; for examble:\n;; >>> (fruit_distribution\
  \ \"5 apples and 6 oranges\" 19)\n;; 8\n;; >>> (fruit_distribution \"0 apples and\
  \ 1 oranges\" 3)\n;; 2\n;; >>> (fruit_distribution \"2 apples and 3 oranges\" 100)\n\
  ;; 95\n;; >>> (fruit_distribution \"100 apples and 1 oranges\" 120)\n;; 19\n(define\
  \ (fruit_distribution s n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fruit_distribution))\n\
  \    (check-equal? (candidate \"5 apples and 6 oranges\" 19) 8)\n    (check-equal?\
  \ (candidate \"5 apples and 6 oranges\" 21) 10)\n    (check-equal? (candidate \"\
  0 apples and 1 oranges\" 3) 2)\n    (check-equal? (candidate \"1 apples and 0 oranges\"\
  \ 3) 2)\n    (check-equal? (candidate \"2 apples and 3 oranges\" 100) 95)\n    (check-equal?\
  \ (candidate \"2 apples and 3 oranges\" 5) 0)\n    (check-equal? (candidate \"1\
  \ apples and 100 oranges\" 120) 19)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n \
    \    (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first s) \"\
    mango\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [else (error\
    \ \"unknown fruit\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first\
    \ s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal?\
    \ (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n\
    \    [else\n     (fruit_distribution (rest s) n)]))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [else\
    \ (+ (fruit_distribution (rest s) n) (* n 0))]))\n", "  (cond\n    [(empty? s)\
    \ 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s)\
    \ n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else 0]))\n", "  (cond\n    [(empty? s) 0]\n   \
    \ [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n\
    \ 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (let loop\
    \ ((i 0) (sum 0) (count 0))\n    (cond ((= i n) (+ count sum))\n          ((=\
    \ (length s) 0) (loop (+ i 1) sum count))\n          ((= (length s) 1) (loop (+\
    \ i 1) (+ (first s) (first s)) (+ count 1)))\n          ((= (length s) 2) (loop\
    \ (+ i 1) (+ (first s) (first s)) (+ count (+ count 1)))\n          ((= (length\
    \ s) 3) (loop (+ i 1) (+ (first s) (first s)) (+ count (+ count (+ count 1)))))\n\
    \          ((= (length s) 4) (loop (+ i 1) (+ (first s) (first s)) (+ count (+\
    \ count (+ count (+ count 1))))))\n          ((= (length s) 5) (loop (+ i 1) (+\
    \ (first s) (first s)) (+ count (+ count (+ count (+ count (+ count 1))))))))\n\
    \  count))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [else\
    \ (error \"unknown fruit\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n \
    \   [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (* n 1))]))\n", " \
    \ (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [else\
    \ (error \"Invalid input\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n \
    \   [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else 0]))\n", "  (cond\n    [(empty? s) 0]\n   \
    \ [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n\
    \ 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (let ((apples\
    \ (string->number (substring s 0 1))))\n    (let ((oranges (string->number (substring\
    \ s 2 3))))\n      (let ((mango (string->number (substring s 4 5))))\n       \
    \ (if (= n 0)\n            (if (= apples 0)\n                mango\n         \
    \       (if (= oranges 0)\n                    mango\n                    (if\
    \ (= mango 0)\n                        mango\n                        (if (= apples\
    \ 0)\n                            mango\n                            (if (= oranges\
    \ 0)\n                                mango\n                                (if\
    \ (= apples 0)\n                                    mango\n                  \
    \                  (if (= oranges 0)\n                                       \
    \ mango\n                                        (if (= apples 0)\n          \
    \                                  mango\n                                   \
    \         (fruit_distribution s (- n 1))))))))))))))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution\
    \ (rest s) n) (* n 4))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first\
    \ s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal?\
    \ (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n\
    \    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (fruit_distribution (rest s) n)]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (fruit_distribution (rest s) n)]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [else\
    \ (+ (fruit_distribution (rest s) n) (* n 0))]))\n", "  (cond\n    [(empty? s)\
    \ 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s)\
    \ n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (fruit_distribution (rest s) n)]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (let ((apples\
    \ (string->number (first s))\n         (oranges (string->number (second s))\n\
    \         (mango (string->number (third s))))\n        (total (+ apples oranges\
    \ mango)))\n    (cond\n      [(= total 0) n]\n      [(= total 1) n]\n      [(=\
    \ total 2) n]\n      [(= total 3) n]\n      [(= total 4) n]\n      [(= total 5)\
    \ n]\n      [(= total 6) n]\n      [(= total 7) n]\n      [(= total 8) n]\n  \
    \    [(= total 9) n]\n      [(= total 10) n]\n      [(= total 11) n]\n      [(=\
    \ total 12) n]\n      [(= total 13) n]\n      [(= total 14) n]\n      [(= total\
    \ 15) n]\n      [(= total 16) n]\n      [(= total 17) n]\n      [(= total 18)\
    \ n]\n      [(= total 19) n]\n      [(= total 20) n]\n      [(= total 21) n]\n\
    \      [(= total 22) n]\n      [(= total 23) n]\n      [(= total 24) n]\n    \
    \  [(= total 25) n]\n      [(= total 26) n]\n      [(= total 27) n]\n      [(=\
    \ total 28) n]\n      [(= total 29) n]\n      [(= total 30) n]\n      [(= total\
    \ 31) n]\n      [(= total 32) n]\n      [(= total 33) n]\n      [(= total 34)\
    \ n]\n      [(= total 35) n]\n      [(= total 36) n]\n      [(= total 37) n]\n\
    \      [(= total 38) n]\n      [(= total 39) n]\n      [(= total 40) n]\n    \
    \  [(= total 41) n]\n      [(= total 42) n]\n      [(= total 43) n]\n      [(=\
    \ total 44) n]\n      [(= total 45) n]\n      [(= total 46) n]\n      [(= total\
    \ 47) n]\n      [(= total 48) n]\n      [(= total 49) n]\n      [(= total 50)\
    \ n]\n      [(= total 51) n]\n      [(= total 52) n]\n      [(= total 53) n]\n\
    \      [(= total 54) n]\n      [(= total 55) n]\n      [(= total 56) n]\n    \
    \  [(= total 57) n]\n      [(= total 58) n]\n      [(= total ", "  (cond\n   \
    \ [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (let ((apples\
    \ (string->number (substring s 0 (string-length s) #\\Space)))\n        (oranges\
    \ (string->number (substring s (string-length s) #\\Space)))\n        (mango (string->number\
    \ (substring s (string-length s) #\\Space))))\n    (cond\n      [(< apples oranges)\
    \ (+ apples mango)]\n      [(< oranges mango) (+ oranges mango)]\n      [else\
    \ (+ mango mango)])))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s)\
    \ \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal?\
    \ (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n\
    \    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n    [(empty? s)\
    \ 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s)\
    \ n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [else\
    \ (error \"unknown fruit\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\") (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal?\
    \ (first s) \"oranges\") (+ (fruit_distribution (rest s) n) (* n 2))]\n    [else\
    \ (+ (fruit_distribution (rest s) n) (* n 1))]))\n", "  (cond\n    [(empty? s)\
    \ 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s)\
    \ n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (let ([apples\
    \ (string->list s)\n        oranges (string->list (substring s 0 (string-length\
    \ s) #\\space))\n        mango (string->list (substring s 1 (string-length s)\
    \ #\\space))])\n    (cond\n      [(and (= (length apples) (length oranges)) (=\
    \ (length apples) (length mango))) 0]\n      [(and (= (length apples) (length\
    \ mango)) (= (length oranges) (length mango))) 0]\n      [(and (= (length apples)\
    \ (length mango)) (= (length oranges) (length mango))) (+ (length mango) (fruit_distribution\
    \ (substring s 0 (string-length s) #\\space) n))]))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else 0]))\n", "  (cond\n    [(empty? s) 0]\n   \
    \ [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n\
    \ 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 0))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [else\
    \ (error \"unknown fruit\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n \
    \   [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else 0]))\n", "  (cond\n    [(empty? s) 0]\n   \
    \ [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n\
    \ 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (fruit_distribution (rest s) n)]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else 0]))\n", "  (cond\n    [(empty? s) 0]\n   \
    \ [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n\
    \ 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 4))]\n    [else (+ (fruit_distribution (rest s) n) (* n 5))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [else\
    \ (error \"unknown fruit\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n \
    \   [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [else\
    \ (error \"invalid input\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n \
    \   [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 0))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [(equal? (first\
    \ s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (* n 1))]\n    [else\
    \ (error \"invalid input\")]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n \
    \   [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 2))]\n    [else (fruit_distribution (rest s) n)]))\n", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\"\
    )\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal? (first s) \"\
    oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n    [else\n   \
    \  (+ (fruit_distribution (rest s) n) (* n 1))]))\n", "  (cond\n    [(empty? s)\
    \ 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s)\
    \ n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (let ((apples (string->number (first s))\n         (oranges (string->number (second\
    \ s))\n         (mango (string->number (third s))))\n        (total (+ apples\
    \ oranges mango)))\n    (cond\n      [(< total n) 0]\n      [(= total n) 1]\n\
    \      [(> total n) (- mango n)]\n      [(= (mod total n) 0) (- mango n)]\n  \
    \    [(> n (- total n)) (- mango n)]\n      [(< n (- total n)) 0]\n      [(> n\
    \ (- total n)) 0]\n      [(= (mod n total) 0) (- mango n)]\n      [(> n (- total\
    \ n)) (- mango n)]\n      [(< n (- total n)) 0]\n      [(> n (- total n)) 0]\n\
    \      [(= (mod n total) 0) (- mango n)]\n      [(> n (- total n)) (- mango n)]\n\
    \      [(< n (- total n)) 0]\n      [(> n (- total n)) 0]\n      [(= (mod n total)\
    \ 0) (- mango n)]\n      [(> n (- total n)) (- mango n)]\n      [(< n (- total\
    \ n)) 0]\n      [(> n (- total n)) 0]\n      [(= (mod n total) 0) (- mango n)]\n\
    \      [(> n (- total n)) (- mango n)]\n      [(< n (- total n)) 0]\n      [(>\
    \ n (- total n)) 0]\n      [(= (mod n total) 0) (- mango n)]\n      [(> n (- total\
    \ n)) (- mango n)]\n      [(< n (- total n)) 0]\n      [(> n (- total n)) 0]\n\
    \      [(= (mod n total) 0) (- mango n)]\n      [(> n (- total n)) (- mango n)]\n\
    \      [(< n (- total n)) 0]\n      [(> n (- total n)) 0]\n      [(= (mod n total)\
    \ 0) (- mango n)]\n      [(> n (- total n)) (- mango n)]\n      [(< n (- total\
    \ n)) 0]\n      [(> n (- total n)) 0]\n      [(= (mod n ", "  (cond\n    [(empty?\
    \ s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest\
    \ s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) 1)]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) 2)]\n    [else (+ (fruit_distribution (rest s) n) (+ (fruit_distribution\
    \ (rest s) n) 3))]))\n", "  (cond\n    [(empty? s) 0]\n    [(equal? (first s)\
    \ \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n    [(equal?\
    \ (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (* n 2))]\n\
    \    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n    [(empty? s)\
    \ 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution (rest s)\
    \ n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 4))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (let ([apples\
    \ (string->list s)\n        oranges (string->list s)\n        mango (string->list\
    \ s)\n        total (string->list s)\n        apples-count (number->string 0)\n\
    \        oranges-count (number->string 0)\n        mango-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->string 0)\n        fruits-count (number->string\
    \ 0)\n        total-count (number->", "  (cond\n    [(empty? s) 0]\n    [(equal?\
    \ (first s) \"apples\")\n     (+ (fruit_distribution (rest s) n) (* n 3))]\n \
    \   [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution (rest s) n) (*\
    \ n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [else (+ (fruit_distribution (rest s) n) (* n 4))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\") (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\") (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"Invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"unknown fruit\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n", "  (cond\n\
    \    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [else (+ (fruit_distribution (rest s) n) (* n 1))]))\n",
  "  (cond\n    [(empty? s) 0]\n    [(equal? (first s) \"apples\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 3))]\n    [(equal? (first s) \"oranges\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 2))]\n    [(equal? (first s) \"mango\")\n     (+ (fruit_distribution\
    \ (rest s) n) (* n 1))]\n    [else (error \"invalid input\")]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

name: HumanEval_154_cycpattern_check
language: rkt
prompt: "#lang racket\n\n;; You are given 2 words. You need to return True if the\
  \ second word or any of its rotations is a substring in the first word\n;; >>> (cycpattern_check\
  \ \"abcd\" \"abd\")\n;; #f\n;; >>> (cycpattern_check \"hello\" \"ell\")\n;; #t\n\
  ;; >>> (cycpattern_check \"whassup\" \"psus\")\n;; #f\n;; >>> (cycpattern_check\
  \ \"abab\" \"baa\")\n;; #t\n;; >>> (cycpattern_check \"efef\" \"eeff\")\n;; #f\n\
  ;; >>> (cycpattern_check \"himenss\" \"simen\")\n;; #t\n(define (cycpattern_check\
  \ a b)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cycpattern_check))\n\
  \    (check-equal? (candidate \"xyzw\" \"xyw\") #f)\n    (check-equal? (candidate\
  \ \"yello\" \"ell\") #t)\n    (check-equal? (candidate \"whattup\" \"ptut\") #f)\n\
  \    (check-equal? (candidate \"efef\" \"fee\") #t)\n    (check-equal? (candidate\
  \ \"abab\" \"aabb\") #f)\n    (check-equal? (candidate \"winemtt\" \"tinem\") #t)\n\
  ))\n\n(test-humaneval)"
completions: ["  (cond ((or (string-match a b) (string-match b a)) #t)\n        ((string-match\
    \ a b) #f)\n        (else (cycpattern_check (string-reverse a) b)\n          \
    \    (cycpattern_check (string-reverse b) a))))\n", "  (or (string-match a b)\n\
    \      (string-match (string-reverse a) (string-reverse b))))\n", "  (or (string=?\
    \ a b)\n      (or (string=? (substring a 0 1) (substring b 0 1))\n          (string=?\
    \ (substring a 0 2) (substring b 0 2))\n          (string=? (substring a 0 3)\
    \ (substring b 0 3))\n          (string=? (substring a 0 4) (substring b 0 4))\n\
    \          (string=? (substring a 0 5) (substring b 0 5))\n          (string=?\
    \ (substring a 0 6) (substring b 0 6))\n          (string=? (substring a 0 7)\
    \ (substring b 0 7))\n          (string=? (substring a 0 8) (substring b 0 8))\n\
    \          (string=? (substring a 0 9) (substring b 0 9))\n          (string=?\
    \ (substring a 0 10) (substring b 0 10))\n          (string=? (substring a 0 11)\
    \ (substring b 0 11))\n          (string=? (substring a 0 12) (substring b 0 12))\n\
    \          (string=? (substring a 0 13) (substring b 0 13))\n          (string=?\
    \ (substring a 0 14) (substring b 0 14))\n          (string=? (substring a 0 15)\
    \ (substring b 0 15))\n          (string=? (substring a 0 16) (substring b 0 16))\n\
    \          (string=? (substring a 0 17) (substring b 0 17))\n          (string=?\
    \ (substring a 0 18) (substring b 0 18))\n          (string=? (substring a 0 19)\
    \ (substring b 0 19))\n          (string=? (substring a 0 20) (substring b 0 20))\n\
    \          (string=? (substring a 0 21) (substring b 0 21))\n          (string=?\
    \ (substring a 0 22) (substring b 0 22))\n          (string=? (substring a 0 23)\
    \ (substring b 0 23))\n          (string=? (substring a 0 24) (substring b 0 24))\n\
    \          (string=? (substring a 0 25) (substring b 0 25))\n          (string=?\
    \ (substring a 0 26) (substring b 0 26))\n          (string=? (substring a 0 27)\
    \ (substring b 0 27))\n          (string=? (substring a 0 28) (substring b 0 28))\n\
    \          (string=? (substring a 0 29) (substring b 0 29))\n          (string=?\
    \ (substring a 0 30) (substring b 0 30))\n          (string=", "  (cond ((or (string=?\
    \ a b) (string=? (string-reverse a) (string-reverse b)))\n         #t)\n     \
    \   ((string=? (string-reverse a) (string-reverse b))\n         (string=? (string-reverse\
    \ b) (string-reverse a)))\n        (else #f)))\n", "  (or (string=? a b)\n   \
    \   (or (string=? (string-append a b) a)\n          (string-contains-rotations\
    \ b a))))\n", "  (or (string=? b a)\n      (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (or (string=? (substring b 0 a) (substring a 0 b))\n    \
    \          (or (string=? (substring b 0 a) (substring a 0 b))\n              \
    \    (or (string=? (substring b 0 a) (substring a 0 b))\n                    \
    \  (or (string=? (substring b 0 a) (substring a 0 b))\n                      \
    \    (or (string=? (substring b 0 a) (substring a 0 b))\n                    \
    \          (or (string=? (substring b 0 a) (substring a 0 b))\n              \
    \                    (or (string=? (substring b 0 a) (substring a 0 b))\n    \
    \                                  (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                          (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                                              (or\
    \ (string=? (substring b 0 a) (substring a 0 b))\n                           \
    \                       (or (string=? (substring b 0 a) (substring a 0 b))\n \
    \                                                     (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                                                \
    \          (or (string=? (substring b 0 a) (substring a 0 b))\n              \
    \                                                (or (string=? (substring b 0\
    \ a) (substring a 0 b))\n                                                    \
    \              (or (string=? (substring b 0 a) (substring a 0 b))\n          \
    \                                                            (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                                                \
    \                          (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                                            \
    \  (or (string=? (substring b 0 a) (substring a 0 b))\n                      \
    \                                                            (or (string=? (substring\
    \ b 0 a) (substring a 0 b))\n                                                \
    \                                      (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                                  \
    \                        (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                                            \
    \                  (or (string=? (substring b 0 a) (substring a 0 b))\n      \
    \                                                                            \
    \                (or (string=? (substring b 0 a) (substring a 0 b))\n        \
    \                                                                            \
    \                  (or (string=? (substring b 0 a) (substring a 0 b))\n      \
    \                                                                            \
    \                        (or (string=? (substring b 0 a) (substring a 0 b))\n\
    \                                                                            \
    \                                  (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n                                                                  \
    \                                                (or (string=? (substring ", " \
    \ (cond ((or (string=? a b) (string=? (string-ref a 0) (string-ref b 0))) #f)\n\
    \        ((or (string=? (string-ref a 0) (string-ref b 0)) (string=? a b)) #t)\n\
    \        ((or (string=? (string-ref a 0) (string-ref b 0)) (string=? (string-ref\
    \ b 0) (string-ref a 0))) #f)\n        ((or (string=? (string-ref a 0) (string-ref\
    \ b 0)) (string=? (string-ref b 0) (string-ref a 0)) (string=? a b)) #t)\n   \
    \     ((or (string=? (string-ref a 0) (string-ref b 0)) (string=? (string-ref\
    \ b 0) (string-ref a 0)) (string=? (string-ref a 0) (string-ref b 0))) #f)\n \
    \       ((or (string=? (string-ref a 0) (string-ref b 0)) (string=? (string-ref\
    \ b 0) (string-ref a 0)) (string=? (string-ref a 0) (string-ref b 0)) (string=?\
    \ a b)) #t)\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (string=?\
    \ (string-ref b 0) (string-ref a 0)) (string=? (string-ref a 0) (string-ref b\
    \ 0)) (string=? (string-ref b 0) (string-ref a 0))) #f)\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? (string-ref b 0) (string-ref a\
    \ 0)) (string=? (string-ref a 0) (string-ref b 0)) (string=? (string-ref b 0)\
    \ (string-ref a 0)) (string=? a b)) #t)\n        ((or (string=? (string-ref a\
    \ 0) (string-ref b 0)) (string=? (string-ref b 0) (string-ref a 0)) (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? (string-ref b 0) (string-ref a\
    \ 0)) (string=? (string-ref a 0) (string-ref b 0))) #f)\n        ((or (string=?\
    \ (string-ref a 0) (string-ref b 0)) (string=? (string-ref b 0) (string-ref a\
    \ 0)) (string=? (string-ref a 0) (string-ref b 0)) (string=? (string-ref b 0)\
    \ (string-ref a 0)) (string=? (string-ref a 0) (string-ref b 0)) (string=? a b))\
    \ #t)\n        ((or (string=? (string-ref a 0) (string-ref b 0)) (string=? (string-ref\
    \ b 0) (string-ref a 0)) (", "  (or (string=? (substring b 0 a) (substring a 0\
    \ b))\n      (or (string=? (substring b 0 a) (substring a 0 b))\n          (string=?\
    \ (substring b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a)\
    \ (substring a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n\
    \          (string=? (substring b 0 a) (substring a 0 b))\n          (string=?\
    \ (substring b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a)\
    \ (substring a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n\
    \          (string=? (substring b 0 a) (substring a 0 b))\n          (string=?\
    \ (substring b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a)\
    \ (substring a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n\
    \          (string=? (substring b 0 a) (substring a 0 b))\n          (string=?\
    \ (substring b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a)\
    \ (substring a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n\
    \          (string=? (substring b 0 a) (substring a 0 b))\n          (string=?\
    \ (substring b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a)\
    \ (substring a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n\
    \          (string=? (substring b 0 a) (substring a 0 b))\n          (string=?\
    \ (substring b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a)\
    \ (substring a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n\
    \          (string=? (substring b 0 a) (substring a 0 b))\n          (string=?\
    \ (substring b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a)\
    \ (substring a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n\
    \          (string=? (substring b 0 a) (substring a 0 b))\n          (string=?\
    \ (substring b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a)\
    \ (substring a 0 ", "  (or (string=? a b)\n      (or (string=? (string-reverse\
    \ a) b)\n          (string-match (string-reverse a) b))))\n", "  (or (string=?\
    \ (substring a 0 b) (substring b 0 a)) (string=? (substring a 0 b) (substring\
    \ b 0 a))))\n", "  (or (string=? a b)\n      (or (string=? (string-reverse a)\
    \ b)\n          (string-rotations b a))))\n", "  (cond ((or (string-match a b)\n\
    \            (string-match b a))\n         #t)\n        ((or (string-match a b)\n\
    \            (string-match b a))\n         #f)\n        (else\n         (string-match\
    \ a b)\n         #t)))\n", "  (or (string=? a b)\n      (or (string=? (substring\
    \ a 0 1) b)\n          (string=? (substring a 1 0) b))))\n", "  (cond\n    [(empty?\
    \ a) #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n    [(equal?\
    \ (first a) (first b)) (cycpattern_check (rest a) (rest b))]\n    [else (cycpattern_check\
    \ (rest a) (rest b))]\n  ))\n", "  (or (string=? (substring b 0 a) (substring\
    \ a 0 b))\n      (or (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 b))\n          (string=? (substring b 0 a) (substring\
    \ a 0 b))\n          (string=? (substring b 0 a) (substring a 0 b))\n        \
    \  (string=? (substring b 0 a) (substring a 0 b))\n          (string=? (substring\
    \ b 0 a) (substring a 0 ", "  (or (string=? a b)\n      (or (string=? (string-reverse\
    \ a) b)\n          (string=? (string-reverse b) a))))\n", "  (cond\n    [(empty?\
    \ a) #f]\n    [(empty? b) #f]\n    [(equal? (first a) (first b)) #t]\n    [else\
    \ (or (cycpattern_check (rest a) b)\n              (cycpattern_check (rest b)\
    \ a)))]))\n", "  (or (string=? a b)\n      (or (string=? (string-reverse a) b)\n\
    \          (string-rot13 a) (string-rot13 b))))\n", "  (or (string=? a b)\n  \
    \    (or (string=? (string-reverse a) b)\n          (string=? (string-reverse\
    \ b) a))))\n", "  (or (string=? a b)\n      (or (string=? (string-reverse a) b)\n\
    \          (string-contains-rotations b a))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

name: HumanEval_103_rounded_avg
language: rkt
prompt: "#lang racket\n\n;; You are given two positive integers n and m, and your\
  \ task is to compute the\n;; average of the integers from n through m (including\
  \ n and m). \n;; Round the answer to the nearest integer and convert that to binary.\n\
  ;; If n is greater than m, return -1.\n;; Example:\n;; >>> (rounded_avg 1 5)\n;;\
  \ \"0b11\"\n;; >>> (rounded_avg 7 5)\n;; -1\n;; >>> (rounded_avg 10 20)\n;; \"0b1111\"\
  \n;; >>> (rounded_avg 20 33)\n;; \"0b11010\"\n(define (rounded_avg n m)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate rounded_avg))\n\
  \    (check-equal? (candidate 1 5) \"0b11\")\n    (check-equal? (candidate 7 13)\
  \ \"0b1010\")\n    (check-equal? (candidate 964 977) \"0b1111001010\")\n    (check-equal?\
  \ (candidate 996 997) \"0b1111100100\")\n    (check-equal? (candidate 560 851) \"\
  0b1011000010\")\n    (check-equal? (candidate 185 546) \"0b101101110\")\n    (check-equal?\
  \ (candidate 362 496) \"0b110101101\")\n    (check-equal? (candidate 350 902) \"\
  0b1001110010\")\n    (check-equal? (candidate 197 233) \"0b11010111\")\n    (check-equal?\
  \ (candidate 7 5) -1)\n    (check-equal? (candidate 5 1) -1)\n    (check-equal?\
  \ (candidate 5 5) \"0b101\")\n))\n\n(test-humaneval)"
completions: ["  (let ((sum (+ n m)))\n    (if (< sum 0)\n        -1\n        (let\
    \ ((n (/ sum 2)))\n          (let ((m (- n 1)))\n            (string-append (number->string\
    \ n) 'b (number->string m)))))))\n", "  (let ((avg 0))\n    (if (< n m)\n    \
    \    (set! avg (+ (/ n m) (/ m m)))\n        avg)))\n", "  (cond\n    [(or (=\
    \ n m) (null n)) -1]\n    [(< m n) -1]\n    [else (let ([s (- m n)]\n        \
    \       [m (- n m)]\n               [a (/ m 2)])\n           (cond\n         \
    \    [(< s 0) (* a -1)]\n             [(< s 1) (* a 0)]\n             [(< s 2)\
    \ (* a 1)]\n             [(< s 3) (* a 2)]\n             [(< s 4) (* a 3)]\n \
    \            [(< s 5) (* a 4)]\n             [(< s 6) (* a 5)]\n             [(<\
    \ s 7) (* a 6)]\n             [(< s 8) (* a 7)]\n             [(< s 9) (* a 8)]\n\
    \             [(< s 10) (* a 9)]\n             [(< s 11) (* a 10)]\n         \
    \    [(< s 12) (* a 11)]\n             [(< s 13) (* a 12)]\n             [(< s\
    \ 14) (* a 13)]\n             [(< s 15) (* a 14)]\n             [(< s 16) (* a\
    \ 15)]\n             [(< s 17) (* a 16)]\n             [(< s 18) (* a 17)]\n \
    \            [(< s 19) (* a 18)]\n             [(< s 20) (* a 19)]\n         \
    \    [(< s 21) (* a 20)]\n             [(< s 22) (* a 21)]\n             [(< s\
    \ 23) (* a 22)]\n             [(< s 24) (* a 23)]\n             [(< s 25) (* a\
    \ 24)]\n             [(< s 26) (* a 25)]\n             [(< s 27) (* a 26)]\n \
    \            [(< s 28) (* a 27)]\n             [(< s 29) (* a 28)]\n         \
    \    [(< s 30) (* a 29)]\n             [(< s 31) (* a 30)]\n             [(< s\
    \ 32) (* a 31)]\n             [(< s 33) (* a 32)]\n             [(< s 34) (* a\
    \ 33)]\n             [(< s 35) (* a 34)]\n             [(< s 36) (* a 35)]\n \
    \            [(< s 37) (* a 36)]\n             [(< s 38) (* a 37)]\n         \
    \    [(< s 39) (* a 38)]\n             [(< s 40) (* a 39)]\n             [(< s\
    \ 41) (* ", "  (cond\n    [(< n m) -1]\n    [else (let ([s (- m n)]\n        \
    \       [a (/ n 2)])\n           (cond\n             [(< a 1) (- a 1)]\n     \
    \        [(< a 2) (- a 2)]\n             [(< a 3) (- a 3)]\n             [(< a\
    \ 4) (- a 4)]\n             [(< a 5) (- a 5)]\n             [(< a 6) (- a 6)]\n\
    \             [(< a 7) (- a 7)]\n             [(< a 8) (- a 8)]\n            \
    \ [(< a 9) (- a 9)]\n             [(< a 10) (- a 10)]\n             [(< a 11)\
    \ (- a 11)]\n             [(< a 12) (- a 12)]\n             [(< a 13) (- a 13)]\n\
    \             [(< a 14) (- a 14)]\n             [(< a 15) (- a 15)]\n        \
    \     [(< a 16) (- a 16)]\n             [(< a 17) (- a 17)]\n             [(<\
    \ a 18) (- a 18)]\n             [(< a 19) (- a 19)]\n             [(< a 20) (-\
    \ a 20)]\n             [(< a 21) (- a 21)]\n             [(< a 22) (- a 22)]\n\
    \             [(< a 23) (- a 23)]\n             [(< a 24) (- a 24)]\n        \
    \     [(< a 25) (- a 25)]\n             [(< a 26) (- a 26)]\n             [(<\
    \ a 27) (- a 27)]\n             [(< a 28) (- a 28)]\n             [(< a 29) (-\
    \ a 29)]\n             [(< a 30) (- a 30)]\n             [(< a 31) (- a 31)]\n\
    \             [(< a 32) (- a 32)]\n             [(< a 33) (- a 33)]\n        \
    \     [(< a 34) (- a 34)]\n             [(< a 35) (- a 35)]\n             [(<\
    \ a 36) (- a 36)]\n             [(< a 37) (- a 37)]\n             [(< a 38) (-\
    \ a 38)]\n             [(< a 39) (- a 39)]\n             [(< a 40) (- a 40)]\n\
    \             [(< a 41) (- a 41)]\n             [(< a 42) (- a 42)]\n        \
    \     [(< a 43) (- a 43)]\n             [(< a 44) (- ", "  (cond\n    [(or (<\
    \ n m) (< m n)) -1]\n    [else (let ([n (- n m)]) (let ([m (- m n)]) (/ (+ n m)\
    \ 2))]))\n)\n", "  (if (or (< n m) (> n m))\n      -1\n      (let ((sum (+ n m)))\n\
    \        (let ((result (/ sum 2)))\n          (if (< result 1)\n             \
    \ (format #b \"~b\" (- result 1))\n              (format #b \"~b\" result))))))\n",
  "  (cond\n    [(< n m) -1]\n    [(< m n) -1]\n    [else (let ([sum (+ n m)]\n  \
    \             [count (- n m)]\n               [remainder (- n m)]\n          \
    \     [remainder2 (- n m)]\n               [remainder3 (- n m)]\n            \
    \   [remainder4 (- n m)]\n               [remainder5 (- n m)]\n              \
    \ [remainder6 (- n m)]\n               [remainder7 (- n m)]\n               [remainder8\
    \ (- n m)]\n               [remainder9 (- n m)]\n               [remainder10 (-\
    \ n m)]\n               [remainder11 (- n m)]\n               [remainder12 (-\
    \ n m)]\n               [remainder13 (- n m)]\n               [remainder14 (-\
    \ n m)]\n               [remainder15 (- n m)]\n               [remainder16 (-\
    \ n m)]\n               [remainder17 (- n m)]\n               [remainder18 (-\
    \ n m)]\n               [remainder19 (- n m)]\n               [remainder20 (-\
    \ n m)]\n               [remainder21 (- n m)]\n               [remainder22 (-\
    \ n m)]\n               [remainder23 (- n m)]\n               [remainder24 (-\
    \ n m)]\n               [remainder25 (- n m)]\n               [remainder26 (-\
    \ n m)]\n               [remainder27 (- n m)]\n               [remainder28 (-\
    \ n m)]\n               [remainder29 (- n m)]\n               [remainder30 (-\
    \ n m)]\n               [remainder31 (- n m)]\n               [remainder32 (-\
    \ n m)]\n               [remainder33 (- n m)]\n               [remainder34 (-\
    \ n m)]\n               [remainder35 (- n m)]\n               [remainder36 (-\
    \ n m)]\n               [remainder37 (- n m)]\n               [remainder38 (-\
    \ n m)]\n               [remainder39 (- n m)]\n               [remainder40 (-\
    \ n m)]\n               [remainder41 (- n m)]\n               [remainder42 (-\
    \ n m)]\n               [remainder43 (- n m)]\n               [", "  (cond [(<\
    \ n m) -1]\n        [(< m n) 0]\n        [else (quotient (+ (* n 2) (* m 2)) 2)]))\n",
  "  (cond\n    [(< n m) (- -1)]\n    [(< m n) (- -1)]\n    [else (/ (+ n m) (+ n\
    \ m))]))\n", "  (cond ((or (< n m) (< m n)) -1)\n        ((= m n) n)\n       \
    \ (else (+ (quotient n m) (quotient m n)))))\n", "  (cond [(> n m) -1]\n     \
    \   [else (quotient (+ n m) 2)]))\n", "  (cond\n    [(or (< n m) (< m n)) -1]\n\
    \    [else (let ([s (- m n)]\n               [a (/ n 2)])\n           (cond\n\
    \             [(< s 0) (- s a)]\n             [(< a 1) (- s a)]\n            \
    \ [(< a 2) (- s a)]\n             [(< a 3) (- s a)]\n             [(< a 4) (-\
    \ s a)]\n             [(< a 5) (- s a)]\n             [(< a 6) (- s a)]\n    \
    \         [(< a 7) (- s a)]\n             [(< a 8) (- s a)]\n             [(<\
    \ a 9) (- s a)]\n             [(< a 10) (- s a)]\n             [(< a 11) (- s\
    \ a)]\n             [(< a 12) (- s a)]\n             [(< a 13) (- s a)]\n    \
    \         [(< a 14) (- s a)]\n             [(< a 15) (- s a)]\n             [(<\
    \ a 16) (- s a)]\n             [(< a 17) (- s a)]\n             [(< a 18) (- s\
    \ a)]\n             [(< a 19) (- s a)]\n             [(< a 20) (- s a)]\n    \
    \         [(< a 21) (- s a)]\n             [(< a 22) (- s a)]\n             [(<\
    \ a 23) (- s a)]\n             [(< a 24) (- s a)]\n             [(< a 25) (- s\
    \ a)]\n             [(< a 26) (- s a)]\n             [(< a 27) (- s a)]\n    \
    \         [(< a 28) (- s a)]\n             [(< a 29) (- s a)]\n             [(<\
    \ a 30) (- s a)]\n             [(< a 31) (- s a)]\n             [(< a 32) (- s\
    \ a)]\n             [(< a 33) (- s a)]\n             [(< a 34) (- s a)]\n    \
    \         [(< a 35) (- s a)]\n             [(< a 36) (- s a)]\n             [(<\
    \ a 37) (- s a)]\n             [(< a 38) (- s a)]\n             [(< a 39) (- s\
    \ a)]\n             [(< a 40) (- s a)]\n             [(< a 41) (- s a)]\n    \
    \         [(< a 42) (- s a)]", "  (cond\n    [(or (< n m) (< m n)) -1]\n    [else\
    \ (let ([a (/ n 2)])\n            (cond\n              [(< a 1) (* a 2)\n    \
    \           (else (+ a 1))]\n              [else a]))]))\n", "  (cond\n    [(or\
    \ (< n m) (< m n)) -1]\n    [else (let ([n (floor n)]\n               [m  (floor\
    \ m)]\n               [sum (+ n m)]\n               [count (+ n m)]\n        \
    \       [result (if (< n m) -1 0)])\n           (cond\n             [(= count\
    \ 0) (cond\n                               [(= result 0) (cond\n             \
    \                                   [(= sum 0) (cond\n                       \
    \                                         [(= n m) -1]\n                     \
    \                                           [(= n 0) (cond\n                 \
    \                                                             [(= m 0) (cond\n\
    \                                                                            \
    \                [(= sum 0) (cond\n                                          \
    \                                                                 [(= n m) -1]\n\
    \                                                                            \
    \                               [(= n 0) (cond\n                             \
    \                                                                            \
    \  [(= m 0) (cond\n                                                          \
    \                                                 [(= sum 0) (cond\n         \
    \                                                                            \
    \                      [(= n m) -1]\n                                        \
    \                                                                   [(= n 0) (cond\n\
    \                                                                            \
    \                               [(= m 0) (cond\n                             \
    \                                                                            \
    \  [(= sum 0) (cond\n                                                        \
    \                                                   [(= n m) -1]\n           \
    \                                                                            \
    \                    [(= n 0) (cond\n                                        \
    \                                                                   [(= m 0) (cond\n\
    \                                                                            \
    \                               [(= sum 0) (cond\n                           \
    \                                                                            \
    \    [(= n m) -1]\n                                                          \
    \                                                 [(= n 0) (cond\n           \
    \                                                                            \
    \                    [(= m 0) (cond\n                                        \
    \                                                                   [(= sum 0)\
    \ (cond\n                                                                    \
    \                                       [(= n m) -1]\n                       \
    \                                                                            \
    \        [(= n 0) (cond\n                                                    \
    \                                                       [(= m 0) (cond\n     \
    \                                                                            \
    \                          [(= sum 0) (cond\n                                \
    \                                                                           [(=\
    \ n m) -1]\n                                                                 \
    \                                          [(= n 0) (cond\n                  \
    \                                                                            \
    \             [(= m 0) (cond\n                                               \
    \                                                            [(= sum 0) (cond\n\
    \                                                                            \
    \                               [(= n m) -1]\n                               \
    \                                                                            [(=\
    \ n 0) (cond\n                                                               \
    \                                            [(= m 0) (cond\n                \
    \                                                                            \
    \               [(= sum 0) (cond\n                                           \
    \                                                                [(= n m) -1]\n\
    \                                                                            \
    \                               [(= n 0) (cond\n                             \
    \                                                                            \
    \  [(= m 0) (cond\n                                                          \
    \                                                 [(= sum 0) (cond\n         \
    \                                                                            \
    \                      [(= n m) -1]\n                                        \
    \                                                                   [(= n 0) (cond\n\
    \                                                                            \
    \                               [(= m 0) (cond\n                             \
    \                                                                            \
    \  [(= sum 0) (cond\n                                                        \
    \                                                   [(= n m) -1]\n           \
    \                                                                            \
    \                    [(= n 0) (cond\n                                        \
    \                                                                   [(= m 0) (cond\n\
    \                                                                            \
    \                               [(= sum 0) (cond\n                           \
    \                                                                            \
    \    [(= n m) -1]\n                                                          \
    \                                                 [(= n 0) (cond\n           \
    \                                                                            \
    \                    [(= m 0) ", "  (cond\n    [(< n m) -1]\n    [else (let ([n\
    \ (floor n)]\n               [m  (floor m)]\n               [sum (+ n m)]\n  \
    \             [count (- n m)]\n               [result (if (= n m) -1 '())])\n\
    \           (cond\n             [(< sum m) -1]\n             [(< count 1) (append\
    \ result (list '1'))]\n             [(< count 2) (append result (list '0'))]\n\
    \             [(< count 3) (append result (list '0'))]\n             [(< count\
    \ 4) (append result (list '0'))]\n             [(< count 5) (append result (list\
    \ '0'))]\n             [(< count 6) (append result (list '0'))]\n            \
    \ [(< count 7) (append result (list '0'))]\n             [(< count 8) (append\
    \ result (list '0'))]\n             [(< count 9) (append result (list '0'))]\n\
    \             [(< count 10) (append result (list '0'))]\n             [(< count\
    \ 11) (append result (list '0'))]\n             [(< count 12) (append result (list\
    \ '0'))]\n             [(< count 13) (append result (list '0'))]\n           \
    \  [(< count 14) (append result (list '0'))]\n             [(< count 15) (append\
    \ result (list '0'))]\n             [(< count 16) (append result (list '0'))]\n\
    \             [(< count 17) (append result (list '0'))]\n             [(< count\
    \ 18) (append result (list '0'))]\n             [(< count 19) (append result (list\
    \ '0'))]\n             [(< count 20) (append result (list '0'))]\n           \
    \  [(< count 21) (append result (list '0'))]\n             [(< count 22) (append\
    \ result (list '0'))]\n             [(< count 23) (append result (list '0'))]\n\
    \             [(< count 24) (append result (list '0'))]\n             [(< count\
    \ 25) (append result (list '0'))]\n             [(< count 26) (append result (list\
    \ '0'))]\n             [(< count 27) (append result (list '0'))]\n           \
    \  [(< count 28) (append result (list '0'))]\n             [(< count 29) (append\
    \ result (list '0'))]\n             [(", "  (let ((sum (+ n m)))\n    (cond\n\
    \      [(< sum m) -1]\n      [(< sum n) -1]\n      [else (format \"0b~a\" (/ sum\
    \ m))]))\n)\n", "  (cond\n    [(or (< n m) (< m n)) -1]\n    [else (let ([s (-\
    \ m n)]\n               [a (/ n 2)])\n           (cond\n             [(< s 0)\
    \ (- a 1)]\n             [(< a 1) (- a 1)]\n             [(< a 2) (- a 2)]\n \
    \            [(< a 3) (- a 3)]\n             [(< a 4) (- a 4)]\n             [(<\
    \ a 5) (- a 5)]\n             [(< a 6) (- a 6)]\n             [(< a 7) (- a 7)]\n\
    \             [(< a 8) (- a 8)]\n             [(< a 9) (- a 9)]\n            \
    \ [(< a 10) (- a 10)]\n             [(< a 11) (- a 11)]\n             [(< a 12)\
    \ (- a 12)]\n             [(< a 13) (- a 13)]\n             [(< a 14) (- a 14)]\n\
    \             [(< a 15) (- a 15)]\n             [(< a 16) (- a 16)]\n        \
    \     [(< a 17) (- a 17)]\n             [(< a 18) (- a 18)]\n             [(<\
    \ a 19) (- a 19)]\n             [(< a 20) (- a 20)]\n             [(< a 21) (-\
    \ a 21)]\n             [(< a 22) (- a 22)]\n             [(< a 23) (- a 23)]\n\
    \             [(< a 24) (- a 24)]\n             [(< a 25) (- a 25)]\n        \
    \     [(< a 26) (- a 26)]\n             [(< a 27) (- a 27)]\n             [(<\
    \ a 28) (- a 28)]\n             [(< a 29) (- a 29)]\n             [(< a 30) (-\
    \ a 30)]\n             [(< a 31) (- a 31)]\n             [(< a 32) (- a 32)]\n\
    \             [(< a 33) (- a 33)]\n             [(< a 34) (- a 34)]\n        \
    \     [(< a 35) (- a 35)]\n             [(< a 36) (- a 36)]\n             [(<\
    \ a 37) (- a 37)]\n             [(< a 38) (- a 38)]\n             [(< a 39) (-\
    \ a 39)]\n             [(< a 40) (- a 40)]\n             [(< a 41) (- a 41)]\n\
    \             [(< a 42) (- a 42)]\n             [(< ", "  (let ((avg 0))\n   \
    \ (if (> n m)\n        -1\n        (let ((i (- n m)))\n          (if (< i 10)\n\
    \              (set! avg (+ avg i))\n              (set! avg (+ avg (- i 10))))\n\
    \          (set! avg (+ avg (- i 10)))))\n    (set! avg (+ avg (- n m))) (format\
    \ \"0b~a\" avg)))\n", "  (cond ((> n m) -1)\n        ((= n m) 0)\n        (else\
    \ (+ (quotient n m) 1)\n               (quotient n m))))\n", "  (cond\n    [(or\
    \ (< n m) (< m n)) -1]\n    [else (let ([sum (+ n m)]\n               [count (-\
    \ n m)]\n               [result (/ sum count)])\n           (if (< result 1)\n\
    \               (string-append (format \"0b\" (/ result 2))\n                \
    \             result)\n               (string-append (format \"0b\" (/ result\
    \ 2))\n                             result\n                             result)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

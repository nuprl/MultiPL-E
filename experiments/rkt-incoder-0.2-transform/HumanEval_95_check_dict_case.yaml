name: HumanEval_95_check_dict_case
language: rkt
prompt: "#lang racket\n\n;; Given a dictionary, return True if all keys are strings\
  \ in lower \n;; case or all keys are strings in upper case, else return False.\n\
  ;; The function should return False is the given dictionary is empty.\n;; Examples:\n\
  ;; >>> (check_dict_case #hash((\"a\" .  \"apple\") (\"b\" .  \"banana\")))\n;; #t\n\
  ;; >>> (check_dict_case #hash((\"a\" .  \"apple\") (\"A\" .  \"banana\") (\"B\"\
  \ .  \"banana\")))\n;; #f\n;; >>> (check_dict_case #hash((\"a\" .  \"apple\") (8\
  \ .  \"banana\") (\"a\" .  \"apple\")))\n;; #f\n;; >>> (check_dict_case #hash((\"\
  Name\" .  \"John\") (\"Age\" .  \"36\") (\"City\" .  \"Houston\")))\n;; #f\n;; >>>\
  \ (check_dict_case #hash((\"STATE\" .  \"NC\") (\"ZIP\" .  \"12345\")))\n;; #t\n\
  (define (check_dict_case dict)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate check_dict_case))\n\
  \    (check-equal? (candidate #hash((\"p\" .  \"pineapple\") (\"b\" .  \"banana\"\
  ))) #t)\n    (check-equal? (candidate #hash((\"p\" .  \"pineapple\") (\"A\" .  \"\
  banana\") (\"B\" .  \"banana\"))) #f)\n    (check-equal? (candidate #hash((\"p\"\
  \ .  \"pineapple\") (\"5\" .  \"banana\") (\"a\" .  \"apple\"))) #f)\n    (check-equal?\
  \ (candidate #hash((\"Name\" .  \"John\") (\"Age\" .  \"36\") (\"City\" .  \"Houston\"\
  ))) #f)\n    (check-equal? (candidate #hash((\"STATE\" .  \"NC\") (\"ZIP\" .  \"\
  12345\"))) #t)\n    (check-equal? (candidate #hash((\"fruit\" .  \"Orange\") (\"\
  taste\" .  \"Sweet\"))) #t)\n    (check-equal? (candidate #hash()) #f)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-lower-case? (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string-upper-case? (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))) #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))) #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string-lower \"a\"))) #t]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string-upper \"A\"))) #t]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (make-string (string-length (car dict))))) #t]\n \
    \   [else (check_dict_case (cdr dict))]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string->lower (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal? (car\
    \ dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n   \
    \ [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (caar dict) (string-equal?\
    \ (string-downcase (car dict)) (string-downcase (string-ref (car dict) 0))))\n\
    \     (check_dict_case (hash-ref dict (car dict)))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string-equal? (car dict) (string->upper\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower\
    \ \"a\"))) #t]\n    [(equal? (car dict) (string-equal? (car dict) (string-upper\
    \ \"A\"))) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (caar dict) (string-equal? (string-downcase (caar dict)) (string-downcase (cadar\
    \ dict))))\n     (check_dict_case (caddr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (caar dict) (string->lower (car dict)))\n\
    \     (check_dict_case (hash-ref dict (car dict)))]\n    [(equal? (caar dict)\
    \ (string->upper (car dict)))\n     (check_dict_case (hash-ref dict (car dict)))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-downcase (car dict))) #t) #t]\n    [else #f]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (string-downcase (car dict))))\n     (check_dict_case (cdr dict))]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-lower \"a\"))) #t]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-upper \"A\"))) #t]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string->symbol (string->lower (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #t]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (make-string (string-length\
    \ (car dict))))) #t]\n    [else (check_dict_case (cdr dict))]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #t]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-lower \"a\"))) #t]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-upper \"A\"))) #t]\n    [else #f]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (string-downcase (car dict))))\n     (check_dict_case (cdr dict))]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string->symbol\
    \ (string->lower (car dict))))\n     (check_dict_case (cdr dict))]\n    [else\
    \ (check_dict_case (cdr dict))]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string-equal? (car dict) (string->upper\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower\
    \ \"a\"))) #t]\n    [(equal? (car dict) (string-equal? (car dict) (string-upper\
    \ \"A\"))) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (caar dict) (string-equal? (string-downcase (car dict)) (string-downcase (string-ref\
    \ (car dict) 0))))\n     (check_dict_case (hash-ref dict (car dict)))]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string->symbol\
    \ (string->lower (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal?\
    \ (car dict) (string->symbol (string->upper (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string-equal? (car dict) (string->upper\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))) #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string->symbol (string->upper (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (caar dict) (string->symbol (string->lower\
    \ (car dict))))\n     (check_dict_case (hash-ref dict (car dict)))]\n    [(equal?\
    \ (caar dict) (string->symbol (string->upper (car dict))))\n     (check_dict_case\
    \ (hash-ref dict (car dict)))]\n    [else #f]))\n", "  (cond\n    [(empty? dict)\
    \ #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase (car\
    \ dict))) #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (make-string (string-length (car dict)))))\
    \ #t]\n    [else (check_dict_case (cdr dict))]))\n", "  (cond\n    [(empty? dict)\
    \ #f]\n    [(equal? (car dict) (string->symbol (string->lower (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #t]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower-case?\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-upper-case? (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-downcase (car dict))) #t) #t]\n    [else #f]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (string->lower (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string->upper (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (caar dict) (string-equal? (string-downcase (car dict)) (string-downcase (string-ref\
    \ (car dict) 0))))\n     (check_dict_case (hash-ref dict (car dict)))]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-downcase (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-lower \"a\"))) #t]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-upper \"A\"))) #t]\n    [else #f]))\n", " \
    \ (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string->symbol (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string->symbol\
    \ (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-downcase (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond ((null? dict) #f)\n        ((string?\
    \ (car dict))\n         (or (string? (car dict))\n             (string? (cadr\
    \ dict))))\n        (else (check_dict_case (cdr dict)))))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower-case?\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-upper-case? (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (make-string (length dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else (equal? (car dict) (string-equal? (car dict) (make-string\
    \ (length dict))))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n  \
    \  [(equal? (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string->symbol (string->upper (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower-case?\
    \ (car dict))) #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else (equal? (car dict) (string->symbol (string->upper (car\
    \ dict))))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string->lower (car dict)))\n     (check_dict_case (cdr dict))]\n\
    \    [(equal? (car dict) (string->upper (car dict)))\n     (check_dict_case (cdr\
    \ dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (caar dict) (string-equal? (string-downcase (car dict)) (string-downcase (cadar\
    \ dict))))\n     (check_dict_case (caddr dict))]\n    [else #f]))\n", "  (cond\
    \ ((null? dict) #f)\n        ((not (pair? dict))\n         (and (equal? (car dict)\
    \ (cadr dict))\n               (equal? (cadr dict) (caddr dict))))\n        (else\
    \ (and (equal? (car dict) (cadr dict))\n                   (equal? (cadr dict)\
    \ (caddr dict))\n                   (equal? (caddr dict) (caddr dict))))))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string->symbol (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string->symbol\
    \ (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-downcase (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #t]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (make-string (length (car dict))))) #t]\n\
    \    [else (check_dict_case (cdr dict))]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string->symbol (string->upper (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #t]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string->symbol (string->lower (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else (equal? (car dict) (string->symbol (string->upper (car dict))))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (caar dict) (string->lower (car dict)))\n     (check_dict_case (hash-ref dict\
    \ (car dict)))]\n    [(equal? (caar dict) (string->upper (car dict)))\n     (check_dict_case\
    \ (hash-ref dict (car dict)))]\n    [else #f]))\n", "  (cond\n    [(empty? dict)\
    \ #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower \"a\")))\
    \ #t]\n    [(equal? (car dict) (string-equal? (car dict) (string-upper \"A\")))\
    \ #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car\
    \ dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string->symbol (string->upper (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (caar dict)\
    \ (string-equal? (string-downcase (car dict)) (string-downcase (string-ref (car\
    \ dict) 0))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (make-string\
    \ (string-length (car dict))))) #t]\n    [else (check_dict_case (cdr dict))]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(equal? (caar dict) (string-equal? (string-downcase\
    \ (car dict)) (string-downcase (string-ref (car dict) 0))))\n     (check_dict_case\
    \ (hash-ref dict (car dict)))]\n    [else #f]))\n", "  (cond\n    [(empty? dict)\
    \ #f]\n    [(equal? (car dict) (string->symbol (string->lower (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else (check_dict_case (cdr dict))]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (make-string (string-length dict))))\n     (check_dict_case (cdr dict))]\n \
    \   [else (equal? (car dict) (string-equal? (car dict) (make-string (string-length\
    \ dict))))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string->lower (car dict)))\n     (check_dict_case (cdr dict))]\n\
    \    [else #t]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-lower-case? (car dict))) #t) #t]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string->symbol\
    \ (string->lower \"a\"))) #t]\n    [(equal? (car dict) (string->symbol (string->upper\
    \ \"A\"))) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string->symbol (string->upper (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #t]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string->symbol (string->lower \"a\"))) #t]\n    [(equal? (car dict) (string->symbol\
    \ (string->upper \"A\"))) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict)\
    \ #f]\n    [(equal? (car dict) (string-equal? (car dict) (string->lower (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal? (car\
    \ dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n   \
    \ [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-downcase (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string->symbol (string->lower (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [(equal? (car dict) (string->symbol (string->upper (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (make-string (length dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else (equal? (car dict) (string-equal? (car dict) (make-string\
    \ (length dict))))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n  \
    \  [(equal? (car dict) (string-equal? (car dict) (string->lower (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal? (car\
    \ dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n   \
    \ [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string->lower (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #t]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (caar dict) (string-equal? (string-downcase (car dict)) (string-downcase (string-ref\
    \ (car dict) 0))))\n     (check_dict_case (hash-table-remove dict (car dict)))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (make-string (length dict) ?a)))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #t]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (make-string (length (car dict))))) #t]\n\
    \    [else (check_dict_case (cdr dict))]))\n", "  (cond ((null? dict) #f)\n  \
    \      ((equal? (car dict) (string-equal? (car dict) (string-downcase (car dict)))))\n\
    \        (else (check_dict_case (cdr dict)))))\n", "  (cond\n    [(empty? dict)\
    \ #f]\n    [(equal? (car dict) (string-equal? (car dict) (make-string (length\
    \ dict) ?A)))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))) #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string->lower (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal? (car\
    \ dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n   \
    \ [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-lower-case? (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string-upper-case? (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string->symbol (string->lower (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else (check_dict_case (cdr dict))]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (make-string (length dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else (equal? (car dict) (make-string\
    \ (length dict))))]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car\
    \ dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (caar dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (caar dict) (string->symbol (string->upper (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower \"\
    a\"))) #t]\n    [(equal? (car dict) (string-equal? (car dict) (string-upper \"\
    A\"))) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (make-string (length dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else (equal? (car dict) (string-equal? (car dict) (make-string\
    \ (length dict))))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n  \
    \  [(equal? (car dict) (string-equal? (car dict) (make-string (length (car dict))\
    \ #\\A)))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (make-string (length (car dict)) #\\A)))\n     (check_dict_case (cdr\
    \ dict))]\n    [else #f]))\n", "  (cond ((null? dict) #f)\n        ((string? (car\
    \ dict))\n         (and (equal? (car dict) (cadr dict))\n               (check_dict_case\
    \ (caddr dict))))\n        (else (and (equal? (car dict) (cadr dict))\n      \
    \             (check_dict_case (caddr dict))))))\n", "  (cond\n    [(empty? dict)\
    \ #f]\n    [(equal? (car dict) (string-equal? (car dict) (make-string (length\
    \ (car dict))))) #t]\n    [else (check_dict_case (cdr dict))]))\n", "  (cond ((null?\
    \ dict) #f)\n        ((not (pair? (car dict)))\n         (and (equal? (car dict)\
    \ (cadr dict))\n               (equal? (cadr dict) (caddr dict))))\n        (else\
    \ (and (equal? (car dict) (cadr dict))\n                  (equal? (cadr dict)\
    \ (caddr dict))\n                  (equal? (caddr dict) (caddr dict))))))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(equal? (caar dict) (string->lower (car dict)))\n\
    \     (check_dict_case (hash-ref dict (cadar dict)))]\n    [else #f]))\n", " \
    \ (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (make-string (length dict))))\n     (check_dict_case (cdr dict))]\n    [else\
    \ (equal? (car dict) (string-equal? (car dict) (make-string (length dict))))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (make-string (string-length dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else (equal? (car dict) (string-equal? (car dict) (make-string\
    \ (string-length dict))))]\n  ))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string->symbol (string->upper (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #t]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string->symbol (string->lower (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string->symbol (string->upper\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (lower-case (car dict))))\n     (check_dict_case (cdr\
    \ dict))]\n    [(equal? (car dict) (string-equal? (car dict) (upper-case (car\
    \ dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower-case?\
    \ (car dict))) #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string-downcase (car dict)))\
    \ #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (make-string (string-length (car dict)))))\
    \ #t]\n    [else (check_dict_case (cdr dict))]))\n", "  (cond\n    [(empty? dict)\
    \ #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower \"a\")))\
    \ #t]\n    [(equal? (car dict) (string-equal? (car dict) (string-upper \"A\")))\
    \ #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car\
    \ dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (caar dict) (string-equal? (string-downcase (car dict)) (string-downcase (cadar\
    \ dict))))\n     (check_dict_case (caddr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string->symbol (string->lower (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [(equal? (car dict) (string->symbol (string->upper (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string->symbol (string->upper (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower \"\
    a\"))) #t]\n    [(equal? (car dict) (string-equal? (car dict) (string-upper \"\
    A\"))) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string->symbol (string->upper (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string->symbol (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else (check_dict_case\
    \ (cdr dict))]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (make-string (length dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else (equal? (car dict) (string-equal? (car dict) (make-string\
    \ (length dict))))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n  \
    \  [(equal? (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (caar dict) (string->symbol (string->lower (caar dict))))\n\
    \     (check_dict_case (hash-ref dict (caar dict)))]\n    [(equal? (caar dict)\
    \ (string->symbol (string->upper (caar dict))))\n     (check_dict_case (hash-ref\
    \ dict (caar dict)))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string-lower \"a\"))) #t]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string-upper \"A\"))) #t]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-lower \"a\"))) #t]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-upper \"A\"))) #t]\n    [else #f]))\n", " \
    \ (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (string-lower \"a\"))) #t]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (string-upper \"A\"))) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict)\
    \ #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower-case? (car\
    \ dict))) #t) #t]\n    [(equal? (car dict) (string-equal? (car dict) (string-upper-case?\
    \ (car dict))) #f) #f]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (lower-case-string\
    \ (first dict))))\n     (check_dict_case (hash-table-remove (hash-table-keys dict)\
    \ (car dict)))]\n    [(equal? (car dict) (string-equal? (car dict) (upper-case-string\
    \ (first dict))))\n     (check_dict_case (hash-table-remove (hash-table-keys dict)\
    \ (car dict)))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (make-string (length dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else (equal? (car dict) (string-equal? (car dict) (make-string\
    \ (length dict))))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n  \
    \  [(equal? (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string->symbol (string->upper (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (caar dict) (string-equal? (car dict) (string-downcase\
    \ (cadr dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #t]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (make-string\
    \ (string-length dict))))\n     (check_dict_case (cdr dict))]\n    [else (equal?\
    \ (car dict) (string-equal? (car dict) (make-string (string-length dict))))]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (string->lower (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string->upper (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #t]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (make-string (length dict) ?A)))\n    \
    \ (check_dict_case (cdr dict))]\n    [else (equal? (car dict) (string-equal? (car\
    \ dict) (make-string (length dict) ?a)))\n          (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (caar dict)\
    \ (string->symbol (string->lower (caar dict))))\n     (check_dict_case (hash-ref\
    \ dict (caar dict)))]\n    [(equal? (caar dict) (string->symbol (string->upper\
    \ (caar dict))))\n     (check_dict_case (hash-ref dict (caar dict)))]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string->lower (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string->upper (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\
    \ ((null? dict) #f)\n        ((not (pair? dict)) #f)\n        ((not (string? (car\
    \ dict)))\n         (check_dict_case (cdr dict)))\n        (else (and (equal?\
    \ (car dict) (string-downcase (car dict)))\n                  (check_dict_case\
    \ (cdr dict))))))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string->lower (car dict))) #t]\n    [else (equal? (car dict) (string->upper\
    \ (car dict))) #t]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (caar dict) (string->symbol (string->lower (car dict))))\n     (check_dict_case\
    \ (hash-ref dict (car dict)))]\n    [(equal? (caar dict) (string->symbol (string->upper\
    \ (car dict))))\n     (check_dict_case (hash-ref dict (car dict)))]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (make-string (string-length dict))))\n     (check_dict_case (cdr\
    \ dict))]\n    [else #t]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (make-string (length dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #t]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (string-downcase (car dict))) #t) #t]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string->lower (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [(equal? (car dict) (string-equal? (car dict) (string->upper\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (caar dict) (string->symbol (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (caar dict)\
    \ (string->symbol (string->upper (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-lower \"a\"))) #t]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-upper \"A\"))) #t]\n    [else #f]))\n", " \
    \ (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (string-downcase (car dict))) #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string->symbol (string->lower (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #t]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))) #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string->symbol (string->lower (car dict))) #t) #t]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-downcase (car dict))))\n     (check_dict_case\
    \ (cdr dict))]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (caar dict) (string-equal? (string-downcase (car dict)) (string-downcase (cadar\
    \ dict))))\n     (check_dict_case (caddr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower\
    \ \"a\"))) #t]\n    [(equal? (car dict) (string-equal? (car dict) (string-upper\
    \ \"A\"))) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (caar dict) (string-equal? (car dict) (string-lower-case? (car dict))) #t) #t]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string->symbol (string->lower (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else (check_dict_case (cdr dict))]))\n", "  (cond\n    [(empty? dict) #f]\n\
    \    [(equal? (car dict) (string-equal? (car dict) (string-downcase (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [else #t]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string->symbol (string->lower (car dict)))\
    \ #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal?\
    \ (car dict) (string-equal? (car dict) (make-string (length dict) ?a)))\n    \
    \ (equal? (cdr dict) (string-equal? (cdr dict) (make-string (length dict) ?A)))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-lower \"a\"))) #t]\n    [(equal? (car dict)\
    \ (string-equal? (car dict) (string-upper \"A\"))) #t]\n    [else #f]))\n", " \
    \ (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (string-downcase (car dict))))\n     (check_dict_case (cdr dict))]\n    [else\
    \ #t]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (make-string (length dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else (equal? (car dict) (string-equal? (car dict) (make-string (length dict))))]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (string->lower (car dict))) #t) #t]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string->symbol (string->lower (car dict))))\n\
    \     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string->symbol (string->upper\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string->symbol (string->lower\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else (equal? (car dict)\
    \ (string->symbol (string->upper (car dict))))]\n    [else #f]))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-downcase\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [else #f]))\n", "  (cond\
    \ ((null? dict) #f)\n        ((string? (car dict)) #t)\n        (else (and (check_dict_case\
    \ (car dict))\n                  (check_dict_case (cdr dict))))))\n", "  (cond\
    \ ((null? dict) #f)\n        ((string? (car dict)) #t)\n        (else (and (check_dict_case\
    \ (car dict))\n                   (check_dict_case (cdr dict))))))\n", "  (cond\n\
    \    [(empty? dict) #f]\n    [(equal? (caar dict) (string-equal? (string-downcase\
    \ (car dict)) (string-downcase (string-upcase (car dict))))) #t]\n    [else #f]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (string-downcase (car dict))))\n     (check_dict_case (cdr dict))]\n    [else\
    \ #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-lower \"a\"))) #t]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-upper \"A\"))) #t]\n    [else #f]))\n", "  (cond\n    [(empty?\
    \ dict) #f]\n    [(equal? (car dict) (string-equal? (car dict) (string-lower-case?\
    \ (car dict))))\n     (check_dict_case (cdr dict))]\n    [(equal? (car dict) (string-equal?\
    \ (car dict) (string-upper-case? (car dict))))\n     (check_dict_case (cdr dict))]\n\
    \    [else #f]))\n", "  (cond\n    [(empty? dict) #f]\n    [(equal? (caar dict)\
    \ (string-equal? (string-downcase (car dict)) (string-downcase (string-ref (car\
    \ dict) 0))))\n     (check_dict_case (hash-ref dict (car dict)))]\n    [else #f]))\n",
  "  (cond\n    [(empty? dict) #f]\n    [(equal? (car dict) (string-equal? (car dict)\
    \ (string-downcase (car dict))))\n     (check_dict_case (cdr dict))]\n    [else\
    \ #f]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

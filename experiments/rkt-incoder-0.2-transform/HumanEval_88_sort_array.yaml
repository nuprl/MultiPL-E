name: HumanEval_88_sort_array
language: rkt
prompt: "#lang racket\n\n;; Given an array of non-negative integers, return a copy\
  \ of the given array after sorting,\n;; you will sort the given array in ascending\
  \ order if the sum( first index value, last index value) is odd,\n;; or sort it\
  \ in descending order if the sum( first index value, last index value) is even.\n\
  ;; Note:\n;; * don't change the given array.\n;; Examples:\n;; >>> (sort_array (list\
  \ ))\n;; (list )\n;; >>> (sort_array (list 5))\n;; (list 5)\n;; >>> (sort_array\
  \ (list 2 4 3 0 1 5))\n;; (list 0 1 2 3 4 5)\n;; >>> (sort_array (list 2 4 3 0 1\
  \ 5 6))\n;; (list 6 5 4 3 2 1 0)\n(define (sort_array array)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sort_array))\n\
  \    (check-equal? (candidate (list )) (list ))\n    (check-equal? (candidate (list\
  \ 5)) (list 5))\n    (check-equal? (candidate (list 2 4 3 0 1 5)) (list 0 1 2 3\
  \ 4 5))\n    (check-equal? (candidate (list 2 4 3 0 1 5 6)) (list 6 5 4 3 2 1 0))\n\
  \    (check-equal? (candidate (list 2 1)) (list 1 2))\n    (check-equal? (candidate\
  \ (list 15 42 87 32 11 0)) (list 0 11 15 32 42 87))\n    (check-equal? (candidate\
  \ (list 21 14 23 11)) (list 23 21 14 11))\n))\n\n(test-humaneval)"
completions: ["  (if (null? array)\n      array\n      (let ([sum (+ (first array)\
    \ (last array))])\n        (if (odd? sum)\n            (sort_array (sort_array\
    \ (sort_array (cons (first array) array))))\n            (sort_array (sort_array\
    \ (cons (last array) array)))))))\n", "  (if (null? array)\n      (list)\n   \
    \   (let ([sum (+ (first array) (last array))])\n        (if (even? sum)\n   \
    \         (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_", "  (if (null? array)\n      array\n      (let ((sum (+ (first array)\
    \ (last array))))\n        (if (odd? sum)\n            (sort_array (sort (list\
    \ array) <))\n            (sort_array (sort (list array) >))))))\n", "  (if (null?\
    \ array)\n      array\n      (let ((sum (+ (first array) (last array))))\n   \
    \     (if (odd? sum)\n            (sort_array (sort (list array) <))\n       \
    \     (sort_array (sort (list array) >))))))\n", "  (if (null? array)\n      array\n\
    \      (let ([sum (+ (first array) (last array))])\n        (if (odd? sum)\n \
    \           (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_", "  (if (null? array)\n      array\n      (let ([sum (+ (first array)\
    \ (last array))])\n        (if (even? sum)\n            (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_", "  (if (null? array)\n\
    \      array\n      (let ([sum (+ (first array) (last array))])\n        (if (odd?\
    \ sum)\n            (sort_array (sort_array (sort_array (list last array))))\n\
    \            (sort_array (sort_array (list first array)))))))\n", "  (if (null?\
    \ array)\n      array\n      (let ([sum (+ (first array) (last array))])\n   \
    \     (if (odd? sum)\n            (sort_array (sort_array (sort_array (cons (first\
    \ array) array))))\n            (sort_array (sort_array (cons (last array) array)))))))\n",
  "  (if (null? array)\n      array\n      (let ([sum (+ (first array) (last array))])\n\
    \        (if (odd? sum)\n            (sort_array (sort_array (sort_array (cons\
    \ (first array) array))))\n            (sort_array (sort_array (cons (last array)\
    \ array)))))))\n", "  (if (null? array)\n      array\n      (let ([sum (+ 0 (first\
    \ array))])\n        (sort_array (sort_array (subseq array 1 end))\n         \
    \          (if (odd? sum)\n                       (cons sum (sort_array (subseq\
    \ array (+ 1 end) end)))\n                       (cons sum (sort_array (subseq\
    \ array 0 end)))))))\n", "  (if (null? array)\n      array\n      (let ([sum (+\
    \ (first array) (last array))])\n        (if (odd? sum)\n            (sort_array\
    \ (sort_array (sort_array (cons (first array) array))))\n            (sort_array\
    \ (sort_array (cons (last array) array)))))))\n", "  (if (null? array)\n     \
    \ array\n      (let ([sum (+ (first array) (last array))])\n        (if (odd?\
    \ sum)\n            (sort_array (sort_array (sort_array (list last array))))\n\
    \            (sort_array (sort_array (list first array)))))))\n", "  (if (null?\
    \ array)\n      (list)\n      (let ([sum (+ (first array) (last array))])\n  \
    \      (if (odd? sum)\n            (append (sort_array (sort (first array) (reverse\
    \ (last array))))\n                    (sort_array (sort (last array) (first array))))\n\
    \            (append (sort_array (sort (first array) (first array))))))))\n",
  "  (if (null? array)\n      array\n      (let ([sum (+ (car array) (cadr array))])\n\
    \        (if (odd? sum)\n            (cons (car array) (sort_array (cddr array)))\n\
    \            (cons (car array) (sort_array (cddr array)))))\n      )\n    )\n\
    \  )\n", "  (if (null? array)\n      (list)\n      (let ([sum (+ 0 (first array)\
    \ (last array))])\n        (if (odd? sum)\n            (append (sort_array (sort\
    \ (first array) (reverse (last array))))\n                    (sort_array (sort\
    \ (last array) (first array))))\n            (append (sort_array (sort (first\
    \ array) (first array))))))))\n", "  (if (null? array)\n      '()\n      (let\
    \ ((sum (+ (first array) (last array))))\n        (if (odd? sum)\n           \
    \ (cons (first array) (sort_array (cons (last array) array)))\n            (cons\
    \ (first array) (sort_array (cons (first array) (cons (last array) array))))))))\n",
  "  (if (null? array)\n      array\n      (let ((sum (+ (first array) (last array))))\n\
    \        (if (even? sum)\n            (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array (sort_array\
    \ (sort_array (sort_array (sort_array ", "  (if (null? array)\n      '()\n   \
    \   (let ((sum (+ (first array) (last array))))\n        (if (odd? sum)\n    \
    \        (append (sort_array (sort (first array) (reverse (last array))))\n  \
    \                  (sort_array (sort (first array) (last array))))\n         \
    \   (append (sort_array (sort (first array) (last array))))))))\n", "  (if (null?\
    \ array)\n      '()\n      (append (sort_array (cdr array))\n              (list\
    \ (car array)))))\n", "  (if (null? array)\n      array\n      (let ([sum (+ (car\
    \ array) (cadr array))])\n        (if (odd? sum)\n            (sort_array (cons\
    \ (car array) (cdr array)))\n            (sort_array (cons (car array) (cons (car\
    \ array) (cdr array))))))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

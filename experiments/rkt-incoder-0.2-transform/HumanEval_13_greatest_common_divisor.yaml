name: HumanEval_13_greatest_common_divisor
language: rkt
prompt: "#lang racket\n\n;; Return a greatest common divisor of two integers a and\
  \ b\n;; >>> (greatest_common_divisor 3 5)\n;; 1\n;; >>> (greatest_common_divisor\
  \ 25 15)\n;; 5\n(define (greatest_common_divisor a b)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate greatest_common_divisor))\n\
  \    (check-equal? (candidate 3 7) 1)\n    (check-equal? (candidate 10 15) 5)\n\
  \    (check-equal? (candidate 49 14) 7)\n    (check-equal? (candidate 144 60) 12)\n\
  ))\n\n(test-humaneval)"
completions: ["  (if (= a 0)\n      b\n      (greatest_common_divisor (- a b) b)))\n",
  "  (if (= b 0)\n      a\n      (greatest_common_divisor (quotient a b) (quotient\
    \ b a))))\n", "  (if (= b 0)\n      a\n      (greatest_common_divisor (quotient\
    \ a b) (quotient b a))))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (- a b) (quotient a b))))\n", "  (if (= b 0)\n      a\n      (greatest_common_divisor\
    \ (quotient a b) (quotient b a))))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (quotient a b) (quotient b a))))\n", "  (if (= b 0)\n      a\n      (greatest_common_divisor\
    \ (quotient a b) (quotient b a))))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (remainder a b) b)))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (- a b) (quotient a b))))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (- a b) b)))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor (-\
    \ a b) (quotient a b))))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (sub a 1) (mod b a))))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (- a b) (quotient a b))))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (- a b) (quotient a b))))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (- a b) (quotient a b))))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (- a b) (quotient a b))))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (remainder a b) b)))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (- a b) (quotient a b))))\n", "  (if (= a 0)\n      b\n      (greatest_common_divisor\
    \ (- a b) b)))\n", "  (if (= b 0)\n      a\n      (greatest_common_divisor (quotient\
    \ a b) (quotient b a))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

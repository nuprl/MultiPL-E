name: HumanEval_102_choose_num
language: rkt
prompt: "#lang racket\n\n;; This function takes two positive numbers x and y and returns\
  \ the\n;; biggest even integer number that is in the range [x, y] inclusive. If\
  \ \n;; there's no such number, then the function should return -1.\n;; For example:\n\
  ;; >>> (choose_num 12 15)\n;; 14\n;; >>> (choose_num 13 12)\n;; -1\n(define (choose_num\
  \ x y)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate choose_num))\n\
  \    (check-equal? (candidate 12 15) 14)\n    (check-equal? (candidate 13 12) -1)\n\
  \    (check-equal? (candidate 33 12354) 12354)\n    (check-equal? (candidate 5234\
  \ 5233) -1)\n    (check-equal? (candidate 6 29) 28)\n    (check-equal? (candidate\
  \ 27 10) -1)\n    (check-equal? (candidate 7 7) -1)\n    (check-equal? (candidate\
  \ 546 546) 546)\n))\n\n(test-humaneval)"
completions: ["  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= x y) 0]\n \
    \       [(= y x) 0]\n        [else (max (floor (/ (+ x y) 2))\n              \
    \     (floor (/ (+ y x) 2)))]))\n", "  (cond\n    [(< x y) -1]\n    [(< y x) -1]\n\
    \    [(< x y) x]\n    [(< y x) y]\n    [else (max (floor (/ (- x y) 2))\n    \
    \           (floor (/ (- y x) 2)))]))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((> x y) -1)\n \
    \       ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n\
    \    [(< x y) -1]\n    [(< y x) -1]\n    [(< x y) x]\n    [(< y x) y]\n    [else\
    \ (max (floor (/ x y)) (floor (/ y x)))]))\n", "  (cond\n    [(or (= x y) (- (+\
    \ x y) y)) -1]\n    [(= x y) (* x y)]\n    [else (max (+ x y) (- (+ x y) y))]\n\
    \  )\n)\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((= x y) (error \"x must be smaller than\
    \ y\")\n         (if (even? (- x y))\n             (- x y)\n             (error\
    \ \"x must be smaller than y\")))\n        (else (if (even? (- y x))\n       \
    \          (- x y)\n                 (error \"y must be smaller than x\")))))\n",
  "  (cond\n    [(and (integer? x) (integer? y)) x]\n    [(and (integer? x) (not (integer?\
    \ y))) y]\n    [(and (not (integer? x)) (integer? y)) x]\n    [(and (not (integer?\
    \ x)) (not (integer? y))) -1]\n    [else (max (min x y) 2)]))\n", "  (cond\n \
    \   [(= x y) x]\n    [(even? x) (* x 2)]\n    [else (choose_num (+ x 1) y)]))\n",
  "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= x\
    \ y) 0]\n        [(= y x) 0]\n        [else (max (floor (/ (- x y) 2))\n     \
    \             (floor (/ (- y x) 2)))]))\n", "  (cond ((or (< x y) (- (- x y) y))\n\
    \         (- x))\n        ((even? (modulo x 2))\n         (modulo x 2))\n    \
    \    (else\n         (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (- (-\
    \ x y) y))\n         (if (= x y)\n             x\n             (- x (- y y))))\n\
    \        ((= (modulo x y) 0)\n         (if (= x y)\n             x\n         \
    \    (- x (- y y))))\n        (else\n         (if (= (modulo x y) 0)\n       \
    \      (if (= x y)\n                 (- x (- y y))\n                 (- x (- y\
    \ y)))\n             (if (= x y)\n                 (- x (- y y))\n           \
    \      (- x (- y y))))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n   \
    \     [(= x y) 0]\n        [(= y x) 0]\n        [else (max (floor (/ (+ x y) 2))\
    \ (floor (/ (+ x y) 2)))]))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n\
    \        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n \
    \       ((even? x) (cond ((= x y) x)\n                           ((even? y) (cond\
    \ ((= y x) x)\n                                               ((even? (- x y))\
    \ (- x y)))\n                                            (else (- x y))))\n  \
    \                         (else (- x y)))\n        (else (- x y))))\n", "  (cond\n\
    \    [(and (<= x y) \n          (even? x))\n     (- x)]\n    [(and (<= y x) \n\
    \          (even? y))\n     (- y)]\n    [else\n     (- -1)]))\n", "  (cond ((and\
    \ (>= x y) \n             (= (mod x 2) 0))\n         (/ x 2))\n        ((and (>=\
    \ x y) \n             (= (mod y 2) 0))\n         (/ y 2))\n        (else\n   \
    \      (/ x y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond\n    [(< x y) -1]\n    [(< y x) -1]\n\
    \    [(< x y) x]\n    [(< y x) y]\n    [else (max (+ x y) 2)]))\n", "  (cond ((<\
    \ x y) -1)\n        ((= x y) x)\n        ((even? x) (if (even? y) x y))\n    \
    \    (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) (even? y))\n        (else (max (+ x y) (- (+ x y) y))))) ; #lang racket\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((= x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((= x y) (if (even? x) (- x y) -1))\n\
    \        (else (if (even? y) (- y x) -1))))\n", "  (cond\n    [(< x y) -1]\n \
    \   [(< y x) -1]\n    [(= x y) 0]\n    [(= y x) 0]\n    [else (max (floor (/ x\
    \ y)) (floor (/ y x)))]))\n", "  (cond\n    [(and (positive? x) (positive? y))\
    \ x]\n    [(and (positive? x) (negative? y)) y]\n    [(and (negative? x) (positive?\
    \ y)) y]\n    [(and (negative? x) (negative? y)) x]\n    [else -1]))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n\
    \        [(= x y) 0]\n        [(= y x) 0]\n        [else (max (floor (/ x y))\
    \ (floor (/ y x))) (max (floor (/ x y)) (floor (/ y x)))]))\n", "  (cond [(= x\
    \ y) x]\n        [(even? (modulo x 2)) (modulo x 2)]\n        [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond ((and (integer? x) (integer? y)) \n         (if (even?\
    \ (modulo x y))\n             (modulo x y)\n             (modulo y x)))\n    \
    \    ((and (integer? x) (not (integer? y))) \n         (if (even? (modulo x y))\n\
    \             (modulo x y)\n             (modulo y x)))\n        ((and (integer?\
    \ y) (not (integer? x))) \n         (if (even? (modulo x y))\n             (modulo\
    \ x y)\n             (modulo y x)))\n        (else -1)))\n", "  (cond ((< x y)\
    \ -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) (even? y))\n        (else (max (+ x y) (- (+\
    \ x y) y)))))\n", "  (cond\n    [(< x y) -1]\n    [(< y x) -1]\n    [(= x y) 0]\n\
    \    [(= y x) 0]\n    [else (max (floor (/ x y)) (floor (/ y x)))]))\n", "  (cond\
    \ ((= x y) (if (even? x) (- x y) -1))\n        ((even? x) (- x y))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max\
    \ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n \
    \       ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((=\
    \ x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= x\
    \ y) 0]\n        [(= y x) 0]\n        [else (max (+ x y) 0)]))\n", "  (cond [(<\
    \ x y) -1]\n        [(< y x) -1]\n        [(= x y) 0]\n        [(= y x) 0]\n \
    \       [else (max (+ x y) 2)]))\n", "  (cond ((> x y) -1)\n        ((even? x)\
    \ x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n    \
    \    ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((and\
    \ (integer? x) (integer? y)) (if (even? (- x y)) (- x y) (- y x)))\n        ((and\
    \ (integer? x) (not (integer? y))) (if (even? (- x y)) (- x y) (- y x)))\n   \
    \     ((and (not (integer? x)) (integer? y)) (if (even? (- x y)) (- x y) (- y\
    \ x)))\n        ((and (not (integer? x)) (not (integer? y))) (if (even? (- x y))\
    \ (- x y) (- y x)))\n        (else -1)))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n \
    \       ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(< x y) 0]\n        [(< y\
    \ x) 0]\n        [else (max (floor (/ (- x y) 2))\n                   (floor (/\
    \ (- y x) 2)))]))\n", "  (cond [(< x y) -1]\n        [(= x y) x]\n        [(=\
    \ y x) y]\n        [else (max (+ x y) \n                   (choose_num (+ x 2)\
    \ (+ y 1)))]))\n", "  (cond\n    ((< x y) -1)\n    ((= x y) x)\n    ((= x y) y)\n\
    \    ((even? x) x)\n    ((even? y) y)\n    (else (max (choose_num (+ x 1) y) (choose_num\
    \ (+ y 1) x)))))\n", "  (cond [(= x y) x]\n        [(even? (modulo x 2)) (+ x\
    \ 2)]\n        [else -1]))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n\
    \        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) (even? y))\n        (else (max (min x y) \n                   (choose_num\
    \ (+ x 1) (+ y 1))))))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y))\n\
    \        (else (max (min x y) x))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) (even? y))\n        (else (max (min x y) (x+y)))))\n", "  (cond ((= x y)\
    \ -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((or (< x y) (- (- x y) y))\n         (- x))\n        ((even? x)\n         (if\
    \ (even? y)\n             (- x)\n             (- y)))\n        (else\n       \
    \  (if (even? (- x y))\n             (- x)\n             (- y))))\n  )\n", " \
    \ (cond ((< x y) -1)\n        ((even? x) x)\n        ((even? y) y)\n        (else\
    \ (choose_num (+ x 1) (+ y 1)))))\n", "  (cond ((< x y) -1)\n        ((even? x)\
    \ (max (+ x y) x))\n        (else (max (+ x y) -1))))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((and\
    \ (number? x) (number? y)) (if (even? (- x y)) (- x y) (- y x)))\n        ((and\
    \ (number? x) (number? y)) -1)\n        (else -1)))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((= x y) -1)\n        ((even? x) (max x y))\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max (+ x y) x))\n\
    \        (else (max (+ x y) y))))\n", "  (cond ((< x y) -1)\n        ((even? x)\
    \ x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n    [(and (< x y)\
    \ \n          (even? (- x y)))\n     (- x y)]\n    [(and (< y x) \n          (even?\
    \ (- y x)))\n     (- y x)]\n    [else\n     (- x y)]))\n", "  (cond ((< x y) -1)\n\
    \        ((= x y) x)\n        ((= x y) y)\n        (else (max (floor (/ (- x y)\
    \ 2)) (floor (/ (- y x) 2))))))\n", "  (cond ((= x y) -1)\n        ((even? x)\
    \ (cons x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((> x y) -1)\n\
    \        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(=\
    \ x y) -1]\n        [(even? x) (+ x y)]\n        [else (choose_num (+ x 1) y)]))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond\n    [(< x y) -1]\n    [(< y x) -1]\n    [(< x y)\
    \ x]\n    [(< y x) y]\n    [else (max (floor (/ x y)) (floor (/ y x)))]))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((> x y) -1)\n        ((even? x) (max (x y) x))\n\
    \        (else (choose_num (+ x 1) y))))\n", "  (cond [(< x y) -1]\n        [(<\
    \ y x) -1]\n        [(= x y) 0]\n        [(= y x) 0]\n        [else (max (floor\
    \ (/ (- x y) 2))\n                   (floor (/ (- y x) 2)))]))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond [(= x y) x]\n        [(even? x) (+ x 2)]\n        [else -1]))\n", "  (cond\n\
    \    [(= x y) x]\n    [(even? x) (+ x 2)]\n    [else (choose_num (+ x 1) y)]))\n",
  "  (cond ((< x y) -1)\n        ((even? x) (max (+ x y) x))\n        (else (choose_num\
    \ (+ x y) y))))\n", "  (cond [(= x y) x]\n        [(even? (- x y)) (- x y)]\n\
    \        [else -1]))\n", "  (cond ((or (< x y) (- (- x y) y))\n         (if (<\
    \ x y)\n             (- x y)\n             (- y x)))\n        (else (- x y))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond\n    [(< x y) -1]\n    [(< y x) -1]\n    [(= x y) 0]\n  \
    \  [(= y x) 0]\n    [else (max (floor (/ (- x y) 2)) (floor (/ (- y x) 2)))]))\n",
  "  (cond\n    [(and (<= x y) \n          (even? (- x y)))\n      (- x y)]\n    [(and\
    \ (<= x y) \n          (odd? (- x y)))\n      (- x y)]\n    [else\n      -1]))\n",
  "  (cond [(= x y) x]\n        [(= (modulo x 2) 0) (+ x 1)]\n        [else (choose_num\
    \ (+ x 1) y)]))\n", "  (cond ((= x y) -1)\n        ((even? x) (cond ((= x y) x)\n\
    \                           ((= y x) x)))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((or (< x y) (- (- x y) y))\n         (if (< x y)\n             (- x y)\n\
    \             (- y x)))\n        (else (if (< x y)\n                 (- x y)\n\
    \                 (- y x))))\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  ", "  (cond [(= x y) x]\n        [(= (mod\
    \ x 2) 0) (+ x 1)]\n        [else (choose_num (+ x 1) y)]))\n", "  (cond ((= x\
    \ y) -1)\n        ((even? x) (if (= x y) x y))\n        (else (choose_num (+ x\
    \ 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y))\n        (else\
    \ (max (min x y) x))))\n", "  (cond ((and (>= x y) \n               (< x y))\n\
    \         x)\n        ((and (>= y x) \n               (< y x))\n         y)\n\
    \        (else -1)))\n", "  (cond [(= x y) x]\n        [(= (mod x 2) 0) (+ x 2)]\n\
    \        [else (choose_num (+ x 2) y)]))\n", "  (cond\n    [(and (integer? x)\
    \ (integer? y)) x]\n    [(and (integer? x) (not (integer? y))) y]\n    [(and (not\
    \ (integer? x)) (integer? y)) x]\n    [(and (not (integer? x)) (not (integer?\
    \ y))) -1]\n    [else (max (min x y) 2)]))\n", "  (cond ((or (< x y) (- (- x y)\
    \ y))\n         (if (< x y) x y))\n        ((= x y)\n         (if (< x y) x y))\n\
    \        (else\n         (if (< x y) x y))))\n", "  (cond ((= x y) -1)\n     \
    \   ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) (max x y))\n        (else (choose_num (+ x\
    \ 1) y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= x y) 0]\n\
    \        [(= y x) 0]\n        [else (max (+ x y) 2)]))\n", "  (cond [(= x y) -1]\n\
    \        [(even? x) (* x 2)]\n        [else (max x y)]))\n", "  (cond\n    [(and\
    \ (<= x y) \n          (even? x))\n     (- x)]\n    [(and (<= y x) \n        \
    \  (even? y))\n     (- y)]\n    [else\n     (- -1)]))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n\
    \    [(and (integer? x) (integer? y)) (if (even? (- x y)) (- x y) (- x y))]\n\
    \    [else -1]))\n", "  (cond [(= x y) x]\n        [(even? x) (+ x 2)]\n     \
    \   [else (choose_num (+ x 1) y)]))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n    ((< x y) -1)\n\
    \    ((= x y) x)\n    ((= x y) y)\n    ((even? x) (max (+ x y) x))\n    ((even?\
    \ y) (max (+ x y) y))\n    (else (max (+ x y) (- (- x y) y))))) \n", "  (cond\n\
    \    [(and (number? x) (number? y)) (if (even? (- x y)) (- x y) (- x y))]\n  \
    \  [else -1]))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y))\n    \
    \    (else (max (+ x y) 2))))\n", "  (cond ((or (< x y) (- (- x y) y))\n     \
    \    (if (< x y) (- (- x y) y) -1))\n        ((= x y)\n         (if (< x y) (-\
    \ (- x y) y) -1))\n        (else\n         (if (< x y) (- (- x y) y) -1))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond\n    [(and (<= x y) \n          (even? x))\n     (even? x)]\n\
    \    [(and (<= y x) \n          (even? y))\n     (even? y)]\n    [else (- 1)]))\n",
  "  (cond ((< x y) -1)\n        ((= x y) x)\n        ((= x y) y)\n        (else (max\
    \ (floor (/ (- x y) 2)) (floor (/ (- y x) 2))))))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(<\
    \ x y) -1]\n        [(< y x) -1]\n        [(< x y) x]\n        [(< y x) y]\n \
    \       [else (max (floor (/ (- x y) 2))\n                   (floor (/ (- y x)\
    \ 2))\n                   (floor (/ (- x y) 2))\n                   (floor (/\
    \ (- y x) 2)))]))\n", "  (cond [(= x y) -1]\n        [(= (mod x 2) 0) (+ x 2)]\n\
    \        [else (+ x 1)]))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n \
    \       (else (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (- (+ x y) y))\n\
    \         (if (< x y) -1 x))\n        ((< x y)\n         (if (< x y) -1 x))\n\
    \        (else\n         (if (< x y) -1 x))))\n", "  (cond ((or (< x y) (- (-\
    \ x y) y))\n         (if (= x y)\n             x\n             (- x (- y y))))\n\
    \        (else -1)))\n", "  (cond [(= x y) -1]\n        [(even? x) (max (+ x y)\
    \ 2)]\n        [else (max (+ x y) 1)]))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n \
    \       ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond\n    [(and (<= x y) \n          (even? x))\n     (even? x)]\n    [(and\
    \ (<= y x) \n          (even? y))\n     (even? y)]\n    [else\n     (max (min\
    \ x y) \n          (min (max x y) \n              (max y (min x y))))]))\n", " \
    \ (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (max x y))\n   \
    \     (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n", "  (cond\n\
    \    ((< x y) -1)\n    ((even? x) (even? y) (if (even? x) (+ x y) -1))\n    (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n\
    \        [(= x y) 0]\n        [(= y x) 0]\n        [else (max (floor (/ (- x y)\
    \ 2))\n                  (floor (/ (- y x) 2)))]))\n", "  (cond ((and (number?\
    \ x) (number? y)) (if (even? (- x y)) (- x y) (- y x)))\n        ((and (number?\
    \ x) (number? y)) (if (odd? (- x y)) (- x y) (- y x)))\n        (else -1)))\n",
  "  (cond [(< x y) -1]\n        [(= x y) x]\n        [(= y x) y]\n        [(even?\
    \ x) (max (+ x y) 2)]\n        [else (max (+ x y) 1)]))\n", "  (cond ((< x y)\
    \ -1)\n        ((even? x) (max (x y) x))\n        (else (max (x y) y))))\n", " \
    \ (cond ((< x y) -1)\n        ((even? x) (even? y) (if (< x y) x y))\n       \
    \ (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x)\
    \ x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n    [(< x y) -1]\n\
    \    [(< y x) -1]\n    [(= x y) 0]\n    [(= y x) 0]\n    [else (max (floor (/\
    \ x y)) (floor (/ y x)))]))\n", "  (cond\n    ((< x y) -1)\n    ((= x y) x)\n\
    \    ((= x y) y)\n    ((even? x) (max (+ x y) x))\n    ((even? y) (max (+ x y)\
    \ y))\n    (else (max (+ x y) -1))))\n", "  (cond [(= x y) x]\n        [(even?\
    \ x) (+ x 2)]\n        [else (choose_num (+ x 1) y)]))\n", "  (cond\n    [(< x\
    \ y) -1]\n    [(< y x) -1]\n    [(< x y) x]\n    [(< y x) y]\n    [else (max (floor\
    \ (/ (- x y) 2))\n               (floor (/ (- y x) 2)))]))\n", "  (cond ((< x\
    \ y) -1)\n        ((= x y) x)\n        ((= x y) y)\n        (else (max (floor\
    \ (/ (- x y) 2)) (floor (/ (- y x) 2))))))\n", "  (cond ((< x y) -1)\n       \
    \ ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(= x y)\
    \ -1]\n        [(= (modulo x 2) 0) (modulo x 2)\n         (if (= (modulo y 2)\
    \ 0) (modulo y 2)\n           (if (= (modulo x y) 0) (modulo x y)\n          \
    \   (if (= (modulo y x) 0) (modulo y x)\n               (if (= (modulo x y) 0)\
    \ (modulo x y)\n                 (if (= (modulo y x) 0) (modulo y x)\n       \
    \            (if (= (modulo x y) 0) (modulo x y)\n                     (if (=\
    \ (modulo y x) 0) (modulo y x)\n                       (if (= (modulo x y) 0)\
    \ (modulo x y)\n                         (if (= (modulo y x) 0) (modulo y x)\n\
    \                         (if (= (modulo x y) 0) (modulo x y)\n              \
    \           (if (= (modulo y x) 0) (modulo y x)\n                         (if\
    \ (= (modulo x y) 0) (modulo x y)\n                         (if (= (modulo y x)\
    \ 0) (modulo y x)\n                         (if (= (modulo x y) 0) (modulo x y)\n\
    \                         (if (= (modulo y x) 0) (modulo y x)\n              \
    \           (if (= (modulo x y) 0) (modulo x y)\n                         (if\
    \ (= (modulo y x) 0) (modulo y x)\n                         (if (= (modulo x y)\
    \ 0) (modulo x y)\n                         (if (= (modulo y x) 0) (modulo y x)\n\
    \                         (if (= (modulo x y) 0) (modulo x y)\n              \
    \           (if (= (modulo y x) 0) (modulo y x)\n                         (if\
    \ (= (modulo x y) 0) (modulo x y)\n                         (if (= (modulo y x)\
    \ 0) (modulo y x)\n                         (if (= (modulo x y) 0) (modulo x y)\n\
    \                         (if (= (modulo y x) 0) (modulo y x)\n              \
    \           (if (= (modulo x y) 0) (modulo x y)\n                         (if\
    \ (= (modulo y x) 0) (modulo y x)\n                         (if (= (modulo x y)\
    \ 0) (modulo x y)\n                         (if (= (modulo y x) 0) (modulo y x)\n\
    \                         (if (= (modulo x y) 0) (modulo x y)\n              \
    \           (if (= (modulo y x) 0) (modulo ", "  (cond\n    ((< x y) -1)\n   \
    \ ((= x y) x)\n    ((= x y) y)\n    ((even? x) (max (+ x y) x))\n    ((even? y)\
    \ (max (+ x y) y))\n    (else (max (+ x y) -1))))\n", "  (cond\n    ((< x y) -1)\n\
    \    ((= x y) x)\n    ((= x y) y)\n    ((even? x) (max (+ x y) x))\n    ((even?\
    \ y) (max (+ x y) y))\n    (else (max (+ x y) (- (- x y) y))))) ;; (choose_num\
    \ 12 15)\n", "  (cond [(= x y) x]\n        [(= (modulo x 2) 0) (+ x 1)]\n    \
    \    [else (choose_num (+ x 1) y)]))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) (even? y))\n        (else (max (min x y) \n                   (choose_num\
    \ (+ x 1) (+ y 1))))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n    \
    \    (else (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (- (- x y) y))\n\
    \         (if (< x y) x y))\n        ((< x y)\n         (if (< y x) y x))\n  \
    \      (else\n         (if (< x y) x y))))\n", "  (cond\n    [(and (integer? x)\
    \ (integer? y)) x]\n    [(and (integer? x) (not (integer? y))) y]\n    [(and (integer?\
    \ y) (not (integer? x))) x]\n    [else (max (min x y) -1)]))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond [(= x y) -1]\n        [(even? (modulo x 2)) (modulo x 2)]\n        [else\
    \ (choose_num (+ x 1) y)]))\n", "  (cond ((or (< x y) (- (- x y) y))\n       \
    \  (if (< x y) x y))\n        ((= x y)\n         (if (= x y) x y))\n        (else\n\
    \         (if (even? (modulo x 2))\n             (modulo x 2)\n             (if\
    \ (even? (modulo y 2))\n                 (modulo y 2)\n                 (if (even?\
    \ (modulo (+ x y) 2))\n                     (modulo (+ x y) 2)\n             \
    \        (if (even? (modulo (+ x y) 3))\n                         (modulo (+ x\
    \ y) 3)\n                         (if (even? (modulo (+ x y) 4))\n           \
    \                  (modulo (+ x y) 4)\n                             (if (even?\
    \ (modulo (+ x y) 5))\n                                 (modulo (+ x y) 5)\n \
    \                                (if (even? (modulo (+ x y) 6))\n            \
    \                         (modulo (+ x y) 6)\n                               \
    \      (if (even? (modulo (+ x y) 7))\n                                      \
    \   (modulo (+ x y) 7)\n                                         (if (even? (modulo\
    \ (+ x y) 8))\n                                            (modulo (+ x y) 8)\n\
    \                                            (if (even? (modulo (+ x y) 9))\n\
    \                                                (modulo (+ x y) 9)\n        \
    \                                        (if (even? (modulo (+ x y) 10))\n   \
    \                                                 (modulo (+ x y) 10)\n      \
    \                                              (if (even? (modulo (+ x y) 11))\n\
    \                                                        (modulo (+ x y) 11)\n\
    \                                                        (if (even? (modulo (+\
    \ x y) 12))\n                                                            (modulo\
    \ (+ x y) 12)\n                                                            (if\
    \ (even? (modulo (+ x y) 13))\n                                              \
    \                  (modulo (+ x y) 13)\n                                     \
    \                           (if (even? (modulo (+ x y) 14))\n                \
    \                                                    (modulo (+ x y) 14)\n   \
    \                                                                 (if (even? (modulo\
    \ (+ x y) 15))\n                                                             \
    \           (modulo (+ x y) 15)\n                                            \
    \                            (if (even? (modulo (+ x y) 16))\n               \
    \                                                         (modulo (+ x y) 16)\n\
    \                                                                        (if (even?\
    \ (modulo (+ x y) 17))\n                                                     \
    \                       (modulo (+ x y) 17)\n                                \
    \                                            (if (even? (modulo (+ x y) 18))\n\
    \                                                                            \
    \    (modulo (+ x y) 18)\n                                                   \
    \                             (if (even? (modulo (+ x y) 19))\n              \
    \                                                                      (modulo\
    \ (+ x y) 19)\n                                                              \
    \                      (if (even? (modulo (+ x y) 20))\n                     \
    \                                                                   (modulo",
  "  (cond ((= x y) -1)\n        ((= x 0) 0)\n        ((= y 0) 0)\n        ((even?\
    \ x) (max (+ x y) 2))\n        (else (max (+ x y) 1))))\n", "  (cond [(= x y)\
    \ -1]\n        [(even? x) (max (+ x y) 2)]\n        [else (max (+ x y) 1)]))\n",
  "  (cond ((or (< x y) (- (- x y) y))\n         (if (< x y) -1 x))\n        ((< x\
    \ y)\n         (if (< y x) -1 y))\n        ((< y x)\n         (if (< x y) -1 x))\n\
    \        (else\n         (if (< x y) -1 y))))\n", "  (cond ((> x y) -1)\n    \
    \    ((even? x) (even? y))\n        (else (max (min x y) (x+y)))))\n", "  (cond\
    \ ((or (< x y) (- (- x y) y))\n         (if (< x y)\n             (- x y)\n  \
    \           y))\n        (else (if (< x y)\n                 (- x y)\n       \
    \          -1))))\n", "  (cond ((or (< x y) (- (- x y) y))\n         (if (< x\
    \ y) x y))\n        ((= x y)\n         (if (< x y) x y))\n        (else\n    \
    \     (if (even? (modulo x y))\n             (modulo x y)\n             (- y))))))\n",
  "  (cond\n    [(> x y) -1]\n    [(= x y) x]\n    [(= y x) y]\n    [else (max (floor\
    \ (/ (- x y) 2)) (floor (/ (- y x) 2)))]))\n", "  (cond [(= x y) -1]\n       \
    \ [(even? x) (* x y)]\n        [else (choose_num (+ x 1) y)]))\n", "  (cond ((=\
    \ x y) -1)\n        ((even? x) (max (+ x y) x))\n        (else (max (+ x y) y))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(even? x) (max\
    \ (+ x y) 2)]\n        [else (max (+ x y) 2)]))\n", "  (cond\n    [(and (<= x\
    \ y) \n          (even? x))\n     (even? x)]\n    [(and (<= y x) \n          (even?\
    \ y))\n     (even? y)]\n    [else\n     (if (<= x y)\n         (if (even? x)\n\
    \             (if (even? y)\n                 (if (= x y)\n                  \
    \   (- x y)\n                     (- x y))\n                 (- x y))\n      \
    \       (- x y))\n         (- x y))]))\n", "  (cond\n    [(or (= x y) (- (- x\
    \ y) y)) -1]\n    [(= x y) x]\n    [(= y x) y]\n    [else (max (+ x y) (- (- x\
    \ y) y))]))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond [(= x y) -1]\n        [(= (mod x 2) 0)\
    \ (+ x 2)]\n        [else (+ x 1)]))\n", "  (cond ((> x y) -1)\n        ((even?\
    \ x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (-\
    \ (- x y) y))\n         (if (< x y)\n             (- x y)\n             -1))\n\
    \        ((= x y)\n         x)\n        (else\n         (if (even? (modulo x 2))\n\
    \             (- x y)\n             (- y x))))))\n", "  (cond ((and (integer?\
    \ x) (integer? y)) (if (even? (- x y)) (- x y) (- y x)))\n        ((and (integer?\
    \ x) (not (integer? y))) (if (even? (- x y)) (- x y) (- y x)))\n        ((and\
    \ (integer? y) (not (integer? x))) (if (even? (- x y)) (- x y) (- y x)))\n   \
    \     (else -1)))\n", "  (cond ((= x y) -1)\n        ((= x 0) 0)\n        ((=\
    \ y 0) 0)\n        ((even? x) (max (+ x y) x))\n        (else (max (+ x y) y))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond [(= x y) -1]\n        [(= (modulo x 2) 0) (modulo x 2)\n\
    \         (if (= (modulo y 2) 0) (modulo y 2) (choose_num (+ x 1) (+ y 1)))]\n\
    \        [else (choose_num (+ x 1) (+ y 1))]))\n", "  (cond [(= x y) -1]\n   \
    \     [(even? (modulo x 2)) (+ x 2)]\n        [else (choose_num (+ x 1) y)]))\n",
  "  (cond ((= x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max (+ x y) x))\n     \
    \   (else (max (+ x y) y))))\n", "  (cond ((< x y) -1)\n        ((= x y) x)\n\
    \        ((even? x) (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n",
  "  (cond [(= x y) x]\n        [(= (mod x 2) 0) (+ x 2)]\n        [else (choose_num\
    \ (+ x 2) y)]))\n", "  (cond ((or (< x y) (- (+ x y) y))\n         (if (< x y)\n\
    \             (- x y)\n             (- y x)))\n        (else (if (< x y)\n   \
    \              (- x y)\n                 (- y x)))))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) (if (even? y) x y))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond\n    [(< x y) -1]\n    [(< y x) -1]\n    [(= x y) 0]\n    [(= y x) 0]\n\
    \    [else (max (floor (/ x y)) (floor (/ y x)))]))\n", "  (cond ((> x y) (-1))\n\
    \        ((even? x) (even? y))\n        (else (max (min x y) (x+y)))))\n", " \
    \ (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= x y) 0]\n        [(= y\
    \ x) 0]\n        [else (max (floor (/ (+ x y) 2))\n                   (floor (/\
    \ (+ x y) 2)))]))\n", "  (cond ((and (>= x y) \n               (< x y))\n    \
    \     x)\n        ((and (>= y x)\n               (< y x))\n         y)\n     \
    \   (else\n         (let ((x (floor (/ x 2)))\n               (y (floor (/ y 2)))\n\
    \               (x (+ x 1)))\n           (cond ((and (even? x)\n             \
    \          (even? y))\n                   (+ x y))\n                 ((and (even?\
    \ y)\n                       (even? x))\n                   (+ y x))\n       \
    \          (else\n                   (choose_num (+ x y) \n                  \
    \            (+ y x)))))\n         )))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (if (even? y) x\
    \ y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(= x y) -1]\n   \
    \     [(= (modulo x 2) 0) (modulo x 2)\n         (cond [(= (modulo y 2) 0) (modulo\
    \ y 2)\n                (cond [(= (modulo x y) 0) (modulo x y)\n             \
    \          (cond [(= (modulo y x) 0) (modulo y x)\n                          \
    \    (cond [(= (modulo x y) 0) (modulo x y)\n                                \
    \      (cond [(= (modulo y x) 0) (modulo y x)\n                              \
    \                (cond [(= (modulo x y) 0) (modulo x y)\n                    \
    \                                  (cond [(= (modulo y x) 0) (modulo y x)\n  \
    \                                                            (cond [(= (modulo\
    \ x y) 0) (modulo x y)\n                                                     \
    \               (cond [(= (modulo y x) 0) (modulo y x)\n                     \
    \                                                       (cond [(= (modulo x y)\
    \ 0) (modulo x y)\n                                                          \
    \                          (cond [(= (modulo y x) 0) (modulo y x)\n          \
    \                                                                            \
    \      (cond [(= (modulo x y) 0) (modulo x y)\n                              \
    \                                                                      (cond [(=\
    \ (modulo y x) 0) (modulo y x)\n                                             \
    \                                                                (cond [(= (modulo\
    \ x y) 0) (modulo x y)\n                                                     \
    \                                                               (cond [(= (modulo\
    \ y x) 0) (modulo y x)\n                                                     \
    \                                                                       (cond\
    \ [(= (modulo x y) 0) (modulo x y)\n                                         \
    \                                                                            \
    \               (cond [(= (modulo y x) 0) (modulo y x)\n                     \
    \                                                                            \
    \                                       (cond [(= (modulo x y) 0) (modulo x y)\n\
    \                                                                            \
    \                                                                            \
    \        (cond [(= (modulo y x) 0) (modulo y x)\n                            \
    \                                                                            \
    \                                                                (cond [(= (modulo\
    \ x y) 0) (modulo x y)\n                                                     \
    \                                                                            \
    \                                               (cond [(= (modulo y x) 0) (modulo\
    \ y x)\n                                                                     \
    \                                                                            \
    \                                       (cond [(= (modulo x y) 0) (modulo x y)\n\
    \                                                                            \
    \                                                                            \
    \                                        (cond [(= (modulo y x) 0) (modulo y x)\n\
    \                                                                            \
    \                                                                            \
    \                                                                    (cond [(=\
    \ (modulo x y) 0) (modulo x y)\n                                             \
    \                                                                            \
    \                                                                            \
    \                               (cond [(= (modulo y x) 0) (modulo y x)\n     \
    \                                                                            \
    \                                                                            \
    \                                                                           (cond\
    \ [(= (modulo x y) ", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(=\
    \ x y) 0]\n        [(= y x) 0]\n        [else (max (floor (/ x y)) (floor (/ y\
    \ x))) ]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

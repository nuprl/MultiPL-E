name: HumanEval_146_specialFilter
language: rkt
prompt: "#lang racket\n\n;; Write a function that takes an array of numbers as input\
  \ and returns \n;; the number of elements in the array that are greater than 10\
  \ and both \n;; first and last digits of a number are odd (1, 3, 5, 7, 9).\n;; For\
  \ example:\n;; >>> (specialFilter (list 15 -73 14 -15))\n;; 1\n;; >>> (specialFilter\
  \ (list 33 -2 -3 45 21 109))\n;; 2\n(define (specialFilter nums)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate specialFilter))\n\
  \    (check-equal? (candidate (list 5 -2 1 -5)) 0)\n    (check-equal? (candidate\
  \ (list 15 -73 14 -15)) 1)\n    (check-equal? (candidate (list 33 -2 -3 45 21 109))\
  \ 2)\n    (check-equal? (candidate (list 43 -12 93 125 121 109)) 4)\n    (check-equal?\
  \ (candidate (list 71 -2 -33 75 21 19)) 3)\n    (check-equal? (candidate (list 1))\
  \ 0)\n    (check-equal? (candidate (list )) 0)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last (first nums))) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums))))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+\
    \ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ (specialFilter (rest nums)) 1)]\n  )\n)\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ (specialFilter (rest nums)) 1)]\n  )\n)\n", " \
    \ (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd?\
    \ (first nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter\
    \ (rest nums)) 1)]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first\
    \ nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else\
    \ (+ 1 (specialFilter (rest nums))))]))\n", "  (cond\n    [(empty? nums) 0]\n\
    \    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ (specialFilter (rest nums)) (specialFilter (first nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest nums))\
    \ (specialFilter (first nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n\
    \    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last\
    \ nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n   \
    \ [(empty? nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n\
    \    [(odd? (last nums)) 0]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last (first nums))) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1\
    \ (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last\
    \ nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n   \
    \ [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n\
    \    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest nums)) 1)]\n  )\n\
    )\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest\
    \ nums)) (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n\
    \    [(> (first nums) 10) 1]\n    [(even? (first nums)) 2]\n    [(odd? (first\
    \ nums)) 3]\n    [else (specialFilter (rest nums))]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last (first nums))) 1]\n    [else (+ 1 (specialFilter (rest\
    \ nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n\
    \    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter\
    \ (rest nums)) 1)]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+\
    \ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n   \
    \ [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums))))]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest nums))\
    \ 1)]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n\
    \    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1\
    \ (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last\
    \ nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n   \
    \ [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n\
    \    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first\
    \ nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest\
    \ nums)) (specialFilter (first nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n\
    \    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first nums))\
    \ 0]\n    [(odd? (last nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(even? (first\
    \ nums)) 2]\n    [(odd? (first nums)) 3]\n    [else (specialFilter (rest nums))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+\
    \ (specialFilter (rest nums)) 1)]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n\
    \    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd?\
    \ (last (first nums))) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first\
    \ nums)) 0]\n    [(odd? (last (first nums))) 0]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last (first nums))) 0]\n    [else\
    \ (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n \
    \   [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ (specialFilter (rest nums)) (specialFilter (first\
    \ nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n\
    \    [(even? (first nums)) 1]\n    [(odd? (first nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter\
    \ (rest nums)) 1)]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first\
    \ nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n    [else\
    \ (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n \
    \   [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest nums))\
    \ 1)]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n\
    \    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last (first nums))) 0]\n    [else\
    \ (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n \
    \   [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(even? (first nums)) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(even? (first nums))\
    \ 1]\n    [(odd? (first nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first\
    \ nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter\
    \ (rest nums)) 1)]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first\
    \ nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else\
    \ (+ (specialFilter (rest nums)) 1)]\n  )\n)\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last\
    \ nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n  \
    \  [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n\
    \    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest nums))\
    \ 1)]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n\
    \    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+\
    \ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last\
    \ (first nums))) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(even? (first\
    \ nums)) 1]\n    [(odd? (first nums)) 1]\n    [else (+ 1 (specialFilter (rest\
    \ nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 0]\n\
    \    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+ 1\
    \ (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ (specialFilter (rest nums)) (specialFilter (first nums))) ]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(even? (first\
    \ nums)) 1]\n    [(odd? (first nums)) 1]\n    [else (+ (specialFilter (rest nums))\
    \ (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last\
    \ nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))))]))\n", "  (cond\n  \
    \  [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n\
    \    [(odd? (last (first nums))) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd?\
    \ (first nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+ 1 (specialFilter\
    \ (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+\
    \ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n   \
    \ [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd?\
    \ (last nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest nums)) (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1\
    \ (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last\
    \ nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n   \
    \ [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n\
    \    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1\
    \ (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n\
    \    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last\
    \ nums)) 1]\n    [else (+ (specialFilter (rest nums)) 1)]\n  )\n)\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest\
    \ nums)) 1)]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 1]\n    [(even? (first nums)) 1]\n    [(odd? (first nums)) 0]\n    [else\
    \ (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n \
    \   [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+\
    \ 1 (specialFilter (rest nums))))]))\n", "  (cond\n    [(empty? nums) 0]\n   \
    \ [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ (specialFilter (rest nums)) 1)]\n  )\n)\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd?\
    \ (last nums)) 0]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last  nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+\
    \ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n   \
    \ [(> (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums))\
    \ 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums))))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+\
    \ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last\
    \ nums)) 1]\n    [else (+ (specialFilter (rest nums)) (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first\
    \ nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(even?\
    \ (first nums)) 2]\n    [(odd? (first nums)) 3]\n    [else (specialFilter (rest\
    \ nums))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n\
    \    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+ 1\
    \ (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last\
    \ nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n   \
    \ [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n\
    \    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last (first nums))) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last (first nums))) 1]\n    [else\
    \ (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n\
    \    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd?\
    \ (last nums)) 0]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last (first nums))) 1]\n    [else (+ 1 (specialFilter (rest\
    \ nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n\
    \    [(odd? (first nums)) 1]\n    [(odd? (last (first nums))) 1]\n    [else (+\
    \ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last\
    \ nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n  \
    \  [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n\
    \    [(odd? (last (first nums))) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest\
    \ nums)) (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n\
    \    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last  nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest nums))\
    \ 1)]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n\
    \    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1\
    \ (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n\
    \    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(even? (first nums)) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(even? (last (rest nums))) 1]\n    [(odd? (last (rest nums)))\
    \ 1]\n    [else (+ (specialFilter (rest nums)) (specialFilter (rest nums))) ]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last (first nums))) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+\
    \ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n   \
    \ [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ (specialFilter (rest nums)) (specialFilter (rest\
    \ nums))))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n\
    \    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 1]\n    [(even? (first nums)) (+ 1 (specialFilter (rest nums)))]\n    [(odd?\
    \ (first nums)) (+ 1 (specialFilter (rest nums)))]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1\
    \ (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n\
    \    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last\
    \ nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n   \
    \ [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n\
    \    [(odd? (last (first nums))) 1]\n    [else (+ (specialFilter (rest nums))\
    \ (specialFilter (rest nums))))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last\
    \ (first nums))) 1]\n    [else (+ (specialFilter (rest nums)) 1)]\n  )\n)\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(even? (first\
    \ nums)) 1]\n    [(odd? (first nums)) 1]\n    [else (+ 1 (specialFilter (rest\
    \ nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n\
    \    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last (first nums))) 1]\n    [else\
    \ (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n \
    \   [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ (specialFilter (rest nums)) (specialFilter (first nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(even?\
    \ (first nums)) (+ 1 (specialFilter (rest nums)))]\n    [(odd? (first nums)) (+\
    \ 1 (specialFilter (rest nums)))]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest nums))\
    \ (specialFilter (rest nums))) ]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n\
    \    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last (first\
    \ nums))) 1]\n    [else (+ (specialFilter (rest nums)) (specialFilter (rest nums)))\
    \ ]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n\
    \    [(even? (first nums)) 1]\n    [(odd? (first nums)) 1]\n    [else (+ (specialFilter\
    \ (rest nums)) (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last\
    \ nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n   \
    \ [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n\
    \    [(odd? (last nums)) 1]\n    [else (+ (specialFilter (rest nums)) 1)]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ (specialFilter\
    \ (rest nums)) 1)]\n  )\n)\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first\
    \ nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else\
    \ (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n \
    \   [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n\
    \    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums))\
    \ 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums))) ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums)\
    \ 10) 0]\n    [(odd? (first nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+\
    \ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ 1 (specialFilter (rest nums))) ]))\n", "  (cond\n    [(empty? nums)\
    \ 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last\
    \ nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n   \
    \ [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n\
    \    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(even?\
    \ (first nums)) (+ 1 (specialFilter (rest nums)))]\n    [(odd? (first nums)) (+\
    \ 1 (specialFilter (rest nums)))]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first\
    \ nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 0]\n    [(odd? (first\
    \ nums)) 0]\n    [(odd? (last nums)) 0]\n    [else (+ 1 (specialFilter (rest nums)))]))\n",
  "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(even? (first\
    \ nums)) 1]\n    [(odd? (first nums)) 1]\n    [else (+ (specialFilter (rest nums))\
    \ (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last (first nums)))\
    \ 1]\n    [else (+ 1 (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty?\
    \ nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd?\
    \ (last nums)) 1]\n    [else (+ (specialFilter (rest nums)) 1)]\n  )\n)\n", " \
    \ (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd? (first\
    \ nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter (rest nums)))\
    \ ]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10) 1]\n    [(odd?\
    \ (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1 (specialFilter\
    \ (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(> (first nums) 10)\
    \ 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n    [else (+ 1\
    \ (specialFilter (rest nums)))]))\n", "  (cond\n    [(empty? nums) 0]\n    [(>\
    \ (first nums) 10) 1]\n    [(odd? (first nums)) 1]\n    [(odd? (last nums)) 1]\n\
    \    [else (+ 1 (specialFilter (rest nums))) ]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

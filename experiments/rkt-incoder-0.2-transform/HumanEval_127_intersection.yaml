name: HumanEval_127_intersection
language: rkt
prompt: "#lang racket\n\n;; You are given two intervals,\n;; where each interval is\
  \ a pair of integers. For example, interval = (start, end) = (1, 2).\n;; The given\
  \ intervals are closed which means that the interval (start, end)\n;; includes both\
  \ start and end.\n;; For each given interval, it is assumed that its start is less\
  \ or equal its end.\n;; Your task is to determine whether the length of intersection\
  \ of these two \n;; intervals is a prime number.\n;; Example, the intersection of\
  \ the intervals (1, 3), (2, 4) is (2, 3)\n;; which its length is 1, which not a\
  \ prime number.\n;; If the length of the intersection is a prime number, return\
  \ \"YES\",\n;; otherwise, return \"NO\".\n;; If the two intervals don't intersect,\
  \ return \"NO\".\n;; [input/output] samples:\n;; >>> (intersection (list 1 2) (list\
  \ 2 3))\n;; \"NO\"\n;; >>> (intersection (list -1 1) (list 0 4))\n;; \"NO\"\n;;\
  \ >>> (intersection (list -3 -1) (list -5 5))\n;; \"YES\"\n(define (intersection\
  \ interval1 interval2)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate intersection))\n\
  \    (check-equal? (candidate (list 1 2) (list 2 3)) \"NO\")\n    (check-equal?\
  \ (candidate (list -1 1) (list 0 4)) \"NO\")\n    (check-equal? (candidate (list\
  \ -3 -1) (list -5 5)) \"YES\")\n    (check-equal? (candidate (list -2 2) (list -4\
  \ 0)) \"YES\")\n    (check-equal? (candidate (list -11 2) (list -1 -1)) \"NO\")\n\
  \    (check-equal? (candidate (list 1 2) (list 3 5)) \"NO\")\n    (check-equal?\
  \ (candidate (list 1 2) (list 1 2)) \"NO\")\n    (check-equal? (candidate (list\
  \ -2 -2) (list -3 -2)) \"NO\")\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"\
    NO\"]\n    [(< (first interval1) (first interval2)) (intersection interval1 (rest\
    \ interval2))]\n    [(< (first interval2) (first interval1)) (intersection interval2\
    \ (rest interval1))]\n    [else (cons (first interval1) (intersection interval1\
    \ (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(> (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n      \
    \      [(> (second interval1) (second interval2)) \"NO\"]\n            [(< (second\
    \ interval1) (second interval2)) \"NO\"]\n            [else (cond\n          \
    \          [(> (first interval1) (second interval2)) \"NO\"]\n               \
    \     [else (cond\n                            [(> (first interval2) (second interval1))\
    \ \"NO\"]\n                            [else (cond\n                         \
    \           [(< (first interval1) (first interval2)) \"NO\"]\n               \
    \                     [(< (first interval2) (second interval1)) \"NO\"]\n    \
    \                                [else (cond\n                               \
    \             [(< (first interval1) (second interval2)) \"YES\"]\n           \
    \                                 [(< (first interval2) (second interval1)) \"\
    YES\"]\n                                            [(< (second interval1) (first\
    \ interval2)) \"YES\"]\n                                            [(< (second\
    \ interval1) (first interval2)) \"YES\"]\n                                   \
    \         [(< (second interval2) (first interval1)) \"YES\"]\n               \
    \                             [(< (second interval2) (first interval1)) \"YES\"\
    ]\n                                            [(< (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(< (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(<\
    \ (second interval1) (first interval2)) \"YES\"]\n                           \
    \                 [(< (second interval1) (first interval2)) \"YES\"]\n       \
    \                                     [(< (second interval2) (first interval1))\
    \ \"YES\"]\n                                            [(< (second interval2)\
    \ (first interval1)) \"YES\"]\n                                            [(<\
    \ (first interval1) (second interval2)) \"YES\"]\n                           \
    \                 [(< (first interval2) (second interval1)) \"YES\"]\n       \
    \                                     [(< (second interval1) (first interval2))\
    \ \"YES\"]\n                                            [(< (second interval1)\
    \ (first interval2)) \"YES\"]\n                                            [(<\
    \ (second interval2) (first interval1)) \"YES\"]\n                           \
    \                 [(< (second interval2) (first interval1)) \"YES\"]\n       \
    \                                     [(< (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(< (first interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(<\
    \ (second interval1) (first interval2)) \"YES\"]\n                           \
    \                 [(< (second interval1) (first interval2)) \"YES\"]\n       \
    \                                     [(< (second interval2) (first interval1))\
    \ \"YES\"]\n                                            [(< (second interval2)\
    \ (first interval1)) \"YES\"]\n                                            [(<\
    \ (first interval1) (second interval2)) \"YES\"]\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection (rest interval1) (rest interval2))]\n    [(< (first interval2)\
    \ (first interval1)) (intersection (rest interval1) (rest interval2))]\n    [else\
    \ (cons (first interval1) (intersection interval1 (rest interval1)))]))\n", " \
    \ (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n  \
    \  [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond [(prime? (length (intersection interval1\
    \ (rest interval1))))\n                 \"YES\"]\n                   [else \"\
    NO\"])]\n  )\n)\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(> (car interval1) (car interval2)) (intersection interval1 (cdr\
    \ interval1))]\n    [(< (car interval1) (car interval2)) (intersection interval1\
    \ (cdr interval2))]\n    [else (cons (car interval1) (intersection interval1 (cdr\
    \ interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (second interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (first interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (second interval2)) \"NO\"\
    ]\n                            [(= (first interval1) (second interval2)", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n\
    \            [(= (first interval1) (first interval2)) \"YES\"]\n            [else\
    \ (cond\n                    [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                    [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else \"NO\"])]\n\
    \                )]))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval2)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(> (first interval1) (first interval2)) \"\
    NO\"]\n            [else \"YES\"]\n            )]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(< (second interval1) (second interval2))\
    \ \"NO\"]\n            [else \"YES\"]\n            )]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval1) (second interval2)) \"YES\"]\n                \
    \            [(= (first interval2) (second interval1)) \"YES\"]\n            \
    \                [(= (second interval1) (second interval2)) \"YES\"]\n       \
    \                     [(= (second interval1) (first interval2)) \"YES\"]\n   \
    \                         [(= (second interval2) (first interval1)) \"YES\"]\n\
    \                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)", " \
    \ (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n  \
    \  [(< (first interval1) (first interval2)) (intersection (rest interval1) (rest\
    \ interval2))]\n    [else (cons (first interval1) (intersection (rest interval1)\
    \ (rest interval2)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [else (intersection interval1 (rest interval1))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"])]])]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection (rest interval1) (rest interval2))]\n    [(<\
    \ (first interval1) (first interval2)) (intersection (rest interval1) (rest interval2))]\n\
    \    [else (cond [(= (first interval1) (first interval2)) (intersection (rest\
    \ interval1) (rest interval2))]\n              [else (cond [(= (first interval1)\
    \ (first interval2)) (intersection (rest interval1) (rest interval2))]\n     \
    \                   [else (cond [(= (first interval1) (first interval2)) (intersection\
    \ (rest interval1) (rest interval2))]\n                                  [else\
    \ (cond [(= (first interval1) (first interval2)) (intersection (rest interval1)\
    \ (rest interval2))]\n                                          [else (cond [(=\
    \ (first interval1) (first interval2)) (intersection (rest interval1) (rest interval2))]\n\
    \                                                  [else (cond [(= (first interval1)\
    \ (first interval2)) (intersection (rest interval1) (rest interval2))]\n     \
    \                                                     [else (cond [(= (first interval1)\
    \ (first interval2)) (intersection (rest interval1) (rest interval2))]\n     \
    \                                                                 [else (cond\
    \ [(= (first interval1) (first interval2)) (intersection (rest interval1) (rest\
    \ interval2))]\n                                                             \
    \             [else (cond [(= (first interval1) (first interval2)) (intersection\
    \ (rest interval1) (rest interval2))]\n                                      \
    \                                            [else (cond [(= (first interval1)\
    \ (first interval2)) (intersection (rest interval1) (rest interval2))]\n     \
    \                                                                            \
    \         [else (cond [(= (first interval1) (first interval2)) (intersection (rest\
    \ interval1) (rest interval2))]\n                                            \
    \                                                      [else (cond [(= (first\
    \ interval1) (first interval2)) (intersection (rest interval1) (rest interval2))]\n\
    \                                                                            \
    \                              [else (cond [(= (first interval1) (first interval2))\
    \ (intersection (rest interval1) (rest interval2))]\n                        \
    \                                                                            \
    \              [else (cond [(= (first interval1) (first interval2)) (intersection\
    \ (rest interval1) (rest interval2))]\n                                      \
    \                                                                            \
    \        [else (cond [(= (first interval1) (first interval2)) (intersection (rest\
    \ interval1) (rest interval2))]\n                                            \
    \                                                                            \
    \          [else (cond [(= (first interval1) (first interval2)) (intersection\
    \ (", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"\
    ]\n    [(< (first interval1) (first interval2)) (intersection interval1 (rest\
    \ interval2))]\n    [(< (first interval2) (first interval1)) (intersection interval2\
    \ (rest interval1))]\n    [else (cons (first interval1) (intersection interval1\
    \ (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else (cond\n                                 \
    \   [(= (first interval1) (second interval2)) \"YES\"]\n                     \
    \               [(= (second interval1) (second interval2)) \"YES\"]\n        \
    \                            [else (cond\n                                   \
    \         [(= (first interval2) (second interval1)) \"YES\"]\n               \
    \                             [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                                            [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (second interval1)\
    \ (second interval2)) \"YES\"]\n                                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \                 [(= (second interval2) (second interval1)) \"YES\"]\n      \
    \                                      [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (second interval1)\
    \ (second interval2)) \"YES\"]\n                                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \                 [(= (second interval2) (second interval1)) \"YES\"]\n      \
    \                                      [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (second interval1)\
    \ (second interval2)) \"YES\"]\n                                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \                 [(= (second interval2) (second interval1)) \"YES\"]\n      \
    \                                      [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (second interval1)\
    \ (second interval2)) \"YES\"]\n                                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \                 [(= (second interval2) (second interval1)) \"YES\"]\n      \
    \                                      [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (second interval1)\
    \ (second interval2)) \"YES\"]\n                                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \                 [(= (second interval2) (second interval1)) \"YES\"]\n      \
    \                                      [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                                            [(= (second interval1)\
    \ (second interval2)) \"YES\"]", "  (cond\n    [(empty? interval1) \"NO\"]\n \
    \   [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n\
    \            [(< (second interval1) (second interval2)) \"NO\"]\n            [else\
    \ \"YES\"]\n            )]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n \
    \   [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  '  (cond ((and (number? interval1) (number? interval2)) (cond ((<= (first interval1)
    (first interval2)) (cond ((<= (first interval1) (first interval2)) (cond ((<=
    (first interval1) (first interval2)) (cond ((<= (first interval1) (first interval2))
    (cond ((<= (first interval1) (first interval2)) (cond ((<= (first interval1) (first
    interval2)) (cond ((<= (first interval1) (first interval2)) (cond ((<= (first
    interval1) (first interval2)) (cond ((<= (first interval1) (first interval2))
    (cond ((<= (first interval1) (first interval2)) (cond ((<= (first interval1) (first
    interval2)) (cond ((<= (first interval1) (first interval2)) (cond ((<= (first
    interval1) (first interval2)) (cond ((<= (first interval1) (first interval2))
    (cond ((<= (first interval1) (first interval2)) (cond ((<= (first interval1) (first
    interval2)) (cond ((<= (first interval1) (first interval2)) (cond ((<= (first
    interval1) (first interval2)) (cond ((<= (first interval1) (first interval2))
    (cond ((<= (first interval1) (first interval2)) (cond ((<= (first interval1) (first
    interval2)) (cond ((<= (first interval1) (first interval2)) (cond ((<= (first
    interval1) (first interval2)) (cond ((<= (first interval1) (first interval2))
    (cond ((<= (first interval1) (first interval2)) (cond ((<= (first interval1) (first
    interval2)) (cond ((<= (first interval1) (first interval2)) (cond ((<= (first
    interval1) (first interval2)) (cond ((<= (first interval1) (first interval2))
    (cond ((<= (first interval1) (first interval2)) (cond ((<= (first interval1) (first
    interval2)) (cond ((<= (first interval1) (first interval2)) (cond ((<= (first
    interval1) (first interval2)) (cond ((<= (first interval1) (first interval2))
    (cond ((<= (first interval1) (first interval2)) (cond ((<= (first interval1) (first
    interval2)) (cond ((<= (first interval1) (first interval2)) (cond ((<= (first
    interval1) (first interval2)) (cond ((', "  (cond\n    [(empty? interval1) \"\
    NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection (rest interval1) (rest interval2))]\n    [(< (first interval2)\
    \ (first interval1)) (intersection (rest interval2) (rest interval1))]\n    [else\
    \ (cons (first interval1) (intersection (rest interval1) (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (let ([len1 (length (first interval1))\n\
    \                len2 (length (first interval2))])\n            (cond\n      \
    \        [(= len1 len2) \"YES\"]\n              [(= len1 0) \"NO\"]\n        \
    \      [(= len2 0) \"NO\"]\n              [(= len1 1) \"NO\"]\n              [(=\
    \ len2 1) \"NO\"]\n              [(= len1 len2) \"YES\"]\n              [(= len1\
    \ 1) \"NO\"]\n              [(= len2 1) \"NO\"]\n              [(= len1 len2)\
    \ \"YES\"]\n              [(= len1 0) \"NO\"]\n              [(= len2 0) \"NO\"\
    ]\n              [(= len1 len2) \"YES\"]\n              [(= len1 1) \"NO\"]\n\
    \              [(= len2 1) \"NO\"]\n              [(= len1 len2) \"YES\"]\n  \
    \            [(= len1 0) \"NO\"]\n              [(= len2 0) \"NO\"]\n        \
    \      [(= len1 len2) \"YES\"]\n              [(= len1 1) \"NO\"]\n          \
    \    [(= len2 1) \"NO\"]\n              [(= len1 len2) \"YES\"]\n            \
    \  [(= len1 0) \"NO\"]\n              [(= len2 0) \"NO\"]\n              [(= len1\
    \ len2) \"YES\"]\n              [(= len1 1) \"NO\"]\n              [(= len2 1)\
    \ \"NO\"]\n              [(= len1 len2) \"YES\"]\n              [(= len1 0) \"\
    NO\"]\n              [(= len2 0) \"NO\"]\n              [(= len1 len2) \"YES\"\
    ]\n              [(= len1 1) \"NO\"]\n              [(= len2 1) \"NO\"]\n    \
    \          [(= len1 len2) \"YES\"]\n              [(= len1 0) \"NO\"]\n      \
    \        [(= len2 0) \"NO\"]\n              [(= len1 len2) \"YES\"]\n        \
    \      [(= len1 1) \"NO\"]\n              [(= len2 1) \"NO\"]\n              [(=\
    \ len1 len2) \"YES\"]\n              [(= len1 0) \"NO\"]\n              [(= len2\
    \ 0) \"NO\"]\n              [(= len1 len2) \"YES\"]\n              ", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"])]\n                    )]\n     \
    \       )]\n    )]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n      \
    \      [(> (first interval1) (first interval2)) \"NO\"]\n            [else \"\
    YES\"]\n            )]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n      \
    \      [(= (first interval1) (first interval2)) \"YES\"]\n            [else (cond\n\
    \                    [(= (first interval1) (second interval2)) \"YES\"]\n    \
    \                [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else \"NO\"]\n  \
    \                          )]\n                    )]\n            )]\n    )]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection (rest interval1) (rest\
    \ interval2))]\n    [else (cons (first interval1) (intersection (rest interval1)\
    \ (rest interval2)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"])]])]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else (cond\n                                    [(= (first interval1)\
    \ (second interval2)) \"YES\"]\n                                    [(= (second\
    \ interval1) (second interval2)) \"YES\"]\n                                  \
    \  [(= (first interval2) (second interval1)) \"YES\"]\n                      \
    \              [(= (second interval2) (second interval1)) \"YES\"]\n         \
    \                           [else (cond\n                                    \
    \        [(= (first interval1) (second interval2)) \"YES\"]\n                \
    \                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                                            [(= (first interval2) (second interval1))\
    \ \"YES\"]\n                                            [(= (second interval2)\
    \ (second interval1)) \"YES\"]\n                                            [(=\
    \ (first interval1) (first interval2)) \"NO\"]\n                             \
    \               [(= (second interval1) (first interval2)) \"NO\"]\n          \
    \                                  [(= (first interval2) (second interval1)) \"\
    NO\"]\n                                            [(= (second interval2) (second\
    \ interval1)) \"NO\"]\n                                            [(= (first\
    \ interval1) (second interval2)) \"NO\"]\n                                   \
    \         [(= (second interval1) (second interval2)) \"NO\"]\n               \
    \                             [(= (first interval2) (second interval1)) \"NO\"\
    ]\n                                            [(= (second interval2) (second\
    \ interval1)) \"NO\"]\n                                            [(= (first\
    \ interval1) (first interval2)) \"NO\"]\n                                    \
    \        [(= (second interval1) (first interval2)) \"NO\"]\n                 \
    \                           [(= (first interval2) (second interval1)) \"NO\"]\n\
    \                                            [(= (second interval2) (second interval1))\
    \ \"NO\"]\n                                            [(= (first interval1) (second\
    \ interval2)) \"NO\"]\n                                            [(= (second\
    \ interval1) (second interval2)) \"NO\"]\n                                   \
    \         [(= (first interval2) (second interval1)) \"NO\"]\n                \
    \                            [(= (second interval2) (second interval1)) \"NO\"\
    ]\n                                            [(= (first interval1) (first interval2))\
    \ \"NO\"]\n                                            [(= (second interval1)\
    \ (first interval2)) \"NO\"]", "  (cond\n    [(empty? interval1) \"NO\"]\n   \
    \ [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection (rest interval1) (rest interval2))]\n    [else\
    \ (cond [(prime? (length (intersection interval1 (rest interval1)))) \"YES\"]\n\
    \               [else \"NO\"]\n              )]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cond [(< (first interval1) (first interval2)) (cond [(< (first\
    \ interval2) (first interval1)) (cond [(< (first interval1) (first interval2))\
    \ (cond [(< (first interval2) (first interval1)) (cond [(< (first interval1) (first\
    \ interval2)) (cond [(< (first interval2) (first interval1)) (cond [(< (first\
    \ interval1) (first interval2)) (cond [(< (first interval2) (first interval1))\
    \ (cond [(< (first interval1) (first interval2)) (cond [(< (first interval2) (first\
    \ interval1)) (cond [(< (first interval1) (first interval2)) (cond [(< (first\
    \ interval2) (first interval1)) (cond [(< (first interval1) (first interval2))\
    \ (cond [(< (first interval2) (first interval1)) (cond [(< (first interval1) (first\
    \ interval2)) (cond [(< (first interval2) (first interval1)) (cond [(< (first\
    \ interval1) (first interval2)) (cond [(< (first interval2) (first interval1))\
    \ (cond [(< (first interval1) (first interval2)) (cond [(< (first interval2) (first\
    \ interval1)) (cond [(< (first interval1) (first interval2)) (cond [(< (first\
    \ interval2) (first interval1)) (cond [(< (first interval1) (first interval2))\
    \ (cond [(< (first interval2) (first interval1)) (cond [(< (first interval1) (first\
    \ interval2)) (cond [(< (first interval2) (first interval1)) (cond [(< (first\
    \ interval1) (first interval2)) (cond [(< (first interval2) (first interval1))\
    \ (cond [(< (first interval1) (first interval2)) (cond [(< (first interval2) (first\
    \ interval1)) (cond [(< (first interval1) (first interval2)) (cond [(< (first\
    \ interval2) (first interval1)) (cond [(< (first interval1) (first interval2))\
    \ (cond [(< (first interval2) (first interval1)) (cond [(< (first interval1) (first\
    \ interval2)) (cond [(< (first interval2) (first interval1)) (cond [(< (first\
    \ interval1) (first interval2)) (cond [(< (first interval2) (first interval1))\
    \ (cond ", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first\
    \ interval2) (first interval1)) \"NO\"]\n    [else (cons (first interval1) (intersection\
    \ interval2 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(> (car interval1) (car interval2)) \"\
    NO\"]\n    [(< (car interval1) (car interval2)) \"NO\"]\n    [else (cons (car\
    \ interval1) (intersection interval2 (cdr interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cons (first interval1) (intersection\
    \ interval2 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection (rest interval1) (rest interval2))]\n    [(< (first interval2)\
    \ (first interval1)) (intersection (rest interval2) (rest interval1))]\n    [else\
    \ (cons (first interval1) (intersection (rest interval1) (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else (cond\n                                 \
    \   [(= (first interval1) (second interval2)) \"YES\"]\n                     \
    \               [else (cond\n                                            [(= (first\
    \ interval2) (second interval1)) \"YES\"]\n                                  \
    \          [else (cond\n                                                    [(=\
    \ (second interval1) (second interval2)) \"YES\"]\n                          \
    \                          [else (cond\n                                     \
    \                       [(= (second interval1) (second interval2)) \"YES\"]\n\
    \                                                            [else (cond\n   \
    \                                                                 [(= (second\
    \ interval2) (second interval1)) \"YES\"]\n                                  \
    \                                  [else \"NO\"])])])])])])])]))\n", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2))\
    \ \"YES\"]\n            [else (cond\n                    [(= (first interval1)\
    \ (second interval2)) \"YES\"]\n                    [else (cond\n            \
    \                [(= (first interval2) (second interval1)) \"YES\"]\n        \
    \                    [else \"NO\"])]\n                )]))]))\n", "  (cond\n \
    \   [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cons (first interval1) (intersection\
    \ interval2 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n\
    \            [(> (first interval1) (first interval2)) \"NO\"]\n            [else\
    \ \"YES\"]\n            )]))\n", "  (cond ((null? interval1) \"NO\")\n       \
    \ ((null? interval2) \"NO\")\n        ((< interval1 (car interval2)) \"NO\")\n\
    \        ((< interval2 (car interval1)) \"NO\")\n        (else (cons (car interval1)\
    \ (intersection interval1 (cdr interval1))))))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond [(empty?\
    \ interval1) \"NO\"]\n        [(empty? interval2) \"NO\"]\n        [(< (first\
    \ interval1) (first interval2)) \"NO\"]\n        [(< (first interval2) (first\
    \ interval1)) \"NO\"]\n        [else (cond [(= (first interval1) (first interval2))\
    \ \"YES\"]\n                  [else (cond [(= (first interval1) (second interval2))\
    \ \"YES\"]\n                            [else (cond [(= (first interval2) (second\
    \ interval1)) \"YES\"]\n                                      [else (cond [(=\
    \ (second interval1) (second interval2)) \"YES\"]\n                          \
    \                      [else (cond [(= (second interval2) (first interval1)) \"\
    YES\"]\n                                                          [else (cond\
    \ [(= (second interval2) (first interval2)) \"YES\"]\n                       \
    \                                             [else (cond [(= (second interval2)\
    \ (second interval1)) \"YES\"]\n                                             \
    \                                 [else (cond [(= (second interval2) (third interval1))\
    \ \"YES\"]\n                                                                 \
    \       [else (cond [(= (second interval2) (third interval2)) \"YES\"]\n     \
    \                                                                            \
    \ [else (cond [(= (third interval1) (third interval2)) \"YES\"]\n            \
    \                                                               [else (cond [(=\
    \ (third interval2) (first interval1)) \"YES\"]\n                            \
    \                                            [else (cond [(= (third interval2)\
    \ (first interval2)) \"YES\"]\n                                              \
    \                                    [else (cond [(= (third interval2) (second\
    \ interval1)) \"YES\"]\n                                                     \
    \                      [else (cond [(= (third interval2) (second interval2)) \"\
    YES\"]\n                                                                     \
    \   [else (cond [(= (third interval2) (third interval1)) \"YES\"]\n          \
    \                                                                        [else\
    \ (cond [(= (third interval2) (third interval2)) \"YES\"]\n                  \
    \                                                                          [else\
    \ (cond [(= (third interval1) (first interval1)) \"YES\"]\n                  \
    \                                                                            \
    \     [else (cond [(= (third interval1) (first interval2)) \"YES\"]\n        \
    \                                                                            \
    \                        [else (cond [(= (third interval1) (second interval1))\
    \ \"YES\"]\n                                                                 \
    \                                                  [else (cond [(= (third interval1)\
    \ (second interval2)) \"YES\"]\n                                             \
    \                                                                            \
    \ [else (cond [(= (third interval1) (third interval2)) \"YES\"]\n            \
    \                                                                            \
    \                                            [else (cond [(= (third interval1)\
    \ (third interval2)) \"YES\"]\n                                              \
    \                                                                            \
    \                    [else (", "  (cond\n    [(empty? interval1) \"NO\"]\n   \
    \ [(empty? interval2) \"NO\"]\n    [(> (first interval1) (first interval2)) \"\
    NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond [(=\
    \ (first interval1) (first interval2)) \"YES\"]\n              [else (intersection\
    \ interval1 (rest interval1))])]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n\
    \            [(= (first interval1) (first interval2)) \"YES\"]\n            [else\
    \ (cond\n                    [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                    [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else \"NO\"]\n  \
    \                          )]\n                    )]\n            )]\n    )]\n\
    \  )\n)\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first\
    \ interval2) (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first\
    \ interval1) (first interval2)) \"YES\"]\n            [else (cond\n          \
    \          [(= (first interval1) (second interval2)) \"YES\"]\n              \
    \      [else (cond\n                            [(= (first interval2) (second\
    \ interval1)) \"YES\"]\n                            [else \"NO\"]\n          \
    \                  )]\n                    )]\n            )]\n    )]))\n", " \
    \ (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n  \
    \  [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cons (first interval1) (intersection\
    \ interval2 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(> (second interval1) (second interval2))\
    \ \"NO\"]\n            [(< (second interval1) (second interval2)) \"NO\"]\n  \
    \          [else (cond\n                    [(> (first interval1) (second interval2))\
    \ \"NO\"]\n                    [else (cond\n                            [(> (second\
    \ interval1) (first interval2)) \"NO\"]\n                            [else (cond\n\
    \                                    [(> (first interval2) (second interval1))\
    \ \"NO\"]\n                                    [else (cond\n                 \
    \                           [(> (second interval2) (first interval1)) \"NO\"]\n\
    \                                            [else (cond\n                   \
    \                                 [(> (first interval1) (second interval2)) \"\
    YES\"]\n                                                    [(> (second interval1)\
    \ (first interval2)) \"YES\"]\n                                              \
    \      [(> (first interval2) (second interval2)) \"YES\"]\n                  \
    \                                  [else \"NO\")]))]))]))]))]))\n", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"]\n                            )]\n\
    \                    )]\n            )]\n    )]))\n", "  (cond [(null? interval1)\
    \ \"NO\"]\n        [(null? interval2) \"NO\"]\n        [(< interval1 (car interval2))\
    \ \"NO\"]\n        [(< interval2 (car interval1)) \"NO\"]\n        [else (cons\
    \ (car interval1) (intersection interval1 (cdr interval2)))]))\n", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1))\
    \ \"NO\"]\n    [else (cond\n            [(> (second interval1) (second interval2))\
    \ \"NO\"]\n            [(> (second interval2) (second interval1)) \"NO\"]\n  \
    \          [else (cond\n                    [(= (first interval1) (first interval2))\
    \ \"YES\"]\n                    [else (cond\n                            [(= (first\
    \ interval2) (first interval1)) \"YES\"]\n                            [else \"\
    NO\"]\n                            )]\n                    )]\n            )]\n\
    \    )]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection interval1\
    \ (rest interval2))]\n    [else (intersection interval1 (rest interval1))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval1) (first interval2)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else \"NO\"]\n                            )]\n                 \
    \   )]\n            )]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval2)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cons (first interval1) (intersection interval2 (rest interval1)))]))\n",
  "  (cond [(empty? interval1) \"NO\"]\n        [(empty? interval2) \"NO\"]\n    \
    \    [(< (first interval1) (first interval2)) \"NO\"]\n        [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n        [else (cond [(prime? (length (intersection\
    \ interval1 (rest interval1))))\n                    \"YES\"]\n              \
    \        [else \"NO\"]\n                      )]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)", " \
    \ (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n  \
    \  [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(> (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond \n            [(> (second interval1)\
    \ (second interval2)) \"NO\"]\n            [(< (second interval1) (second interval2))\
    \ \"NO\"]\n            [else \"YES\")]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [else (intersection\
    \ interval1 (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval2) (first interval1)) \"NO\"]\n    [else (cons (first interval1)\
    \ (intersection interval2 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval2) (first interval1)) \"NO\"]\n    [else (cond\n\
    \            [(= (first interval1) (first interval2)) \"YES\"]\n            [else\
    \ (cond\n                    [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                    [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else \"NO\"])]])]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"]\n                            )]\n\
    \                    )]\n            )]\n    )]\n  )\n)\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond ((null? interval1) \"NO\")\n        ((null? interval2) \"NO\")\n      \
    \  ((>= (first interval1) (first interval2)) (intersection interval1 (rest interval2)\
    \ \"YES\")\n        ((>= (first interval2) (first interval1)) (intersection interval1\
    \ (rest interval1) \"YES\")\n        ((<= (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2) \"NO\")\n        ((<= (first interval2)\
    \ (first interval1)) (intersection interval1 (rest interval1) \"NO\")\n      \
    \  (else \"NO\")))\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide\
    \ an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26009378)\n<|/ c |>\n<| c |>\nI believe\
    \ this does answer the question. Perhaps I misunderstood the question?\n<|/ c\
    \ |>\n<| c |>\nThis does not provide an answer to the question. Once you have\
    \ sufficient [reputation](https://stackoverflow.com/help/whats-reputation) you\
    \ will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. Perhaps I misunderstood\
    \ the question?\n<|/ c |>\n<| c |>\nThis does not provide an answer to the question.\
    \ Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\n\
    <|/ c |>\n<| a tags=racket,scheme |>\n", "  (cond\n    [(empty? interval1) \"\
    NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else \"NO\"])]])]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval2) (first interval1)) \"NO\"]\n    [else (cons\
    \ (first interval1) (intersection interval2 (rest interval1)))]))\n", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"])]])]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval2)\
    \ (first interval1)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"]\n                            )]\n\
    \                    )]\n            )]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n\
    \            [(= (first interval1) (first interval2)) \"YES\"]\n            [else\
    \ (cond\n                    [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                    [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else (cond\n    \
    \                                [(= (second interval1) (second interval2)) \"\
    YES\"]\n                                    [else (cond\n                    \
    \                        [(= (first interval1) (second interval2)) \"YES\"]\n\
    \                                            [else (cond\n                   \
    \                                 [(= (first interval2) (second interval1)) \"\
    YES\"]\n                                                    [else (cond\n    \
    \                                                        [(= (second interval1)\
    \ (second interval2)) \"YES\"]\n                                             \
    \               [else (cond\n                                                \
    \                    [(= (first interval1) (second interval2)) \"YES\"]\n    \
    \                                                                [else (cond\n\
    \                                                                            [(=\
    \ (first interval2) (second interval1)) \"YES\"]\n                           \
    \                                                 [else (cond\n              \
    \                                                          [(= (second interval1)\
    \ (second interval2)) \"YES\"]\n                                             \
    \                           [else (cond\n                                    \
    \                                            [else (cond\n                   \
    \                                                     [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                                                     \
    \                   [else (cond\n                                            \
    \                                    [else (cond\n                           \
    \                                             [(= (first interval2) (second interval1))\
    \ \"YES\"]\n                                                                 \
    \       [else (cond\n                                                        \
    \                        [else (cond\n                                       \
    \                                 [(= (second interval1) (second interval2)) \"\
    YES\"]\n                                                                     \
    \   [else (cond\n                                                            \
    \                    [else (cond\n                                           \
    \                             [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                                                                        [else\
    \ (cond\n                                                                    \
    \            [else (cond\n                                                   \
    \                     [(= (first interval2) (second interval1)) \"YES\"]\n   \
    \                                                                     [else (cond\n\
    \                                                                            \
    \    [else (cond\n                                                           \
    \             [(= (second interval1) (second interval2)) \"YES\"]\n          \
    \                                                              [else (cond\n \
    \                                                                            \
    \   [else (cond\n                                                            \
    \            [(= (first interval1) (second interval2)) \"YES\"]\n            \
    \                                                            [else (cond\n   \
    \                                                                            \
    \ [else (cond\n                                                              \
    \          [(= (first interval2) (second interval1)) \"YES\"]\n              \
    \                                                          [else (cond\n     \
    \                                                                           [else\
    \ (cond\n                                                                    \
    \    [(= (", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2)\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection interval1\
    \ (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond ((and\
    \ (number? interval1) (number? interval2)) (if (= (- interval1 interval2) 0) \"\
    NO\" \"YES\"))\n        ((and (number? interval1) (number? interval2)) (if (=\
    \ (- interval1 interval2) 0) \"NO\" \"YES\"))\n        ((and (number? interval1)\
    \ (number? interval2)) (if (= (- interval1 interval2) 0) \"NO\" \"YES\"))\n  \
    \      ((and (number? interval1) (number? interval2)) (if (= (- interval1 interval2)\
    \ 0) \"NO\" \"YES\"))\n        ((and (number? interval1) (number? interval2))\
    \ (if (= (- interval1 interval2) 0) \"NO\" \"YES\"))\n        ((and (number? interval1)\
    \ (number? interval2)) (if (= (- interval1 interval2) 0) \"NO\" \"YES\"))\n  \
    \      ((and (number? interval1) (number? interval2)) (if (= (- interval1 interval2)\
    \ 0) \"NO\" \"YES\"))\n        ((and (number? interval1) (number? interval2))\
    \ (if (= (- interval1 interval2) 0) \"NO\" \"YES\"))\n        ((and (number? interval1)\
    \ (number? interval2)) (if (= (- interval1 interval2) 0) \"NO\" \"YES\"))\n  \
    \      ((and (number? interval1) (number? interval2)) (if (= (- interval1 interval2)\
    \ 0) \"NO\" \"YES\"))\n        ((and (number? interval1) (number? interval2))\
    \ (if (= (- interval1 interval2) 0) \"NO\" \"YES\"))\n        ((and (number? interval1)\
    \ (number? interval2)) (if (= (- interval1 interval2) 0) \"NO\" \"YES\"))\n  \
    \      ((and (number? interval1) (number? interval2)) (if (= (- interval1 interval2)\
    \ 0) \"NO\" \"YES\"))\n        ((and (number? interval1) (number? interval2))\
    \ (if (= (- interval1 interval2) 0) \"NO\" \"YES\"))\n        ((and (number? interval1)\
    \ (number? interval2)) (if (= (- interval1 interval2) 0) \"NO\" \"YES\"))\n  \
    \      ((and (number? interval1) (number? interval2)) (if (= (- interval1 interval2)\
    \ 0) \"NO\" \"YES\"))\n        ((and (number? interval1) (number? interval2))\
    \ (if (= (- interval1 interval2) 0) \"NO\" \"YES\"))\n        ((and (number? interval1)\
    \ (number? interval2)) (if (= (- interval1 interval2) 0) \"NO\" \"YES\"))\n  \
    \      ((and (number? interval", "  (cond\n    [(empty? interval1) \"NO\"]\n \
    \   [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval2)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [else \"NO\"]\n                            )]\n\
    \                    )]\n            )]\n    )]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [else (intersection interval1\
    \ (rest interval1))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [(< (first interval2) (first interval1)) (intersection\
    \ interval2 (rest interval1))]\n    [else (cons (first interval1) (intersection\
    \ interval1 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval2) (first interval1)) \"NO\"]\n    [else (cond\n\
    \            [(= (first interval1) (first interval2)) \"YES\"]\n            [else\
    \ (cond\n                    [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                    [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else \"NO\"])]])]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(> (first interval1)\
    \ (first interval2)) \"NO\"]\n            [else (cond\n                    [(>\
    \ (first interval1) (first interval2)) \"NO\"]\n                    [else (cond\n\
    \                            [(> (first interval1) (first interval2)) \"NO\"]\n\
    \                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [else \"NO\"]\n                            )]\n\
    \                    )]\n            )]\n    )]))\n", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)", " \
    \ (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n  \
    \  [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n    [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \   [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n", "  (cond ((and (number?\
    \ interval1) (number? interval2)) (equal? interval1 interval2))\n        ((and\
    \ (number? interval1) (number? interval2)) (equal? interval1 interval2))\n   \
    \     ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? interval2)) (equal? interval1 interval2))\n\
    \        ((and (number? interval1) (number? ", "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\n\
    \            [(= (first interval1) (first interval2)) \"YES\"]\n            [else\
    \ (cond\n                    [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                    [else (cond\n                            [(= (first interval2)\
    \ (second interval1)) \"YES\"]\n                            [else \"NO\"]\n  \
    \                          )]\n                    )]\n            )]\n    )]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond [(empty? interval1) \"NO\"]\n        [(empty? interval2) \"NO\"]\n    \
    \    [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \        [(< (first interval2) (first interval1)) (intersection interval2 (rest\
    \ interval1))]\n        [else (cond [(prime? (length (intersection interval1 (rest\
    \ interval1)))) \"YES\"]\n                  [else \"NO\"])]))\n", "  (cond [(empty?\
    \ interval1) \"NO\"]\n        [(empty? interval2) \"NO\"]\n        [(> (car interval1)\
    \ (car interval2)) \"NO\"]\n        [(< (car interval1) (car interval2)) \"NO\"\
    ]\n        [else (cons (car interval1) (intersection interval1 (cdr interval2)))]))\n",
  '  (cond ((and (number? interval1) (number? interval2)) (cond ((<= (first interval1)
    (first interval2)) (cond ((<= (first interval2) (second interval1)) (cond ((<=
    (first interval1) (second interval2)) (cond ((<= (second interval1) (second interval2))
    (cond ((<= (first interval2) (second interval1)) (cond ((<= (second interval2)
    (first interval1)) (cond ((<= (first interval2) (second interval1)) (cond ((<=
    (second interval1) (second interval2)) (cond ((<= (first interval1) (second interval2))
    (cond ((<= (second interval1) (second interval2)) (cond ((<= (first interval2)
    (second interval1)) (cond ((<= (second interval2) (first interval1)) (cond ((<=
    (first interval2) (second interval1)) (cond ((<= (second interval1) (second interval2))
    (cond ((<= (first interval1) (second interval2)) (cond ((<= (second interval1)
    (second interval2)) (cond ((<= (first interval2) (second interval1)) (cond ((<=
    (second interval2) (first interval1)) (cond ((<= (first interval2) (second interval1))
    (cond ((<= (second interval1) (second interval2)) (cond ((<= (first interval2)
    (second interval1)) (cond ((<= (second interval2) (first interval1)) (cond ((<=
    (first interval2) (second interval1)) (cond ((<= (second interval1) (second interval2))
    (cond ((<= (first interval1) (second interval2)) (cond ((<= (second interval1)
    (second interval2)) (cond ((<= (first interval2) (second interval1)) (cond ((<=
    (second interval2) (first interval1)) (cond ((<= (first interval2) (second interval1))
    (cond ((<= (second interval1) (second interval2)) (cond ((<= (first interval2)
    (second interval1)) (cond ((<= (second interval2) (first interval1)) (cond ((<=
    (first interval2) (second interval1)) (cond ((<= (second interval1) (second interval2))
    (cond ((<= (first interval2) (second interval1)) (cond ((<= (second interval2)
    (first interval1)) (cond ((<= (first interval2) (second interval1)) (cond ((<=
    (second interval1) (second interval2)) (cond ((', "  (cond\n    [(empty? interval1)\
    \ \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n    [else (cond\
    \ [(prime? (length (intersection interval1 (rest interval1))))\n             \
    \   \"YES\"]\n                  [else \"NO\"]\n                  )]))\n", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cond\n            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n            [else (cond\n                    [(=\
    \ (first interval1) (second interval2)) \"YES\"]\n                    [else (cond\n\
    \                            [(= (first interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval1) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval1) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval2)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (second interval2) (first interval2)) \"YES\"\
    ]\n                            [(= (second interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval2)) \"YES\"\
    ]\n                            [(= (first interval2) (first interval1)) \"YES\"\
    ]\n                            [(= (first interval2) (second interval1)", "  (cond\n\
    \    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first\
    \ interval1) (first interval2)) (intersection interval1 (rest interval2))]\n \
    \   [else (intersection interval1 (rest interval1))]))\n", "  (cond [(empty? interval1)\
    \ \"NO\"]\n        [(empty? interval2) \"NO\"]\n        [(< (first interval1)\
    \ (first interval2)) (intersection interval1 (rest interval2))]\n        [(< (first\
    \ interval2) (first interval1)) (intersection interval2 (rest interval1))]\n \
    \       [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(> (first interval1) (first interval2)) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [else (cons (first interval1) (intersection\
    \ interval2 (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"\
    ]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1) (first interval2))\
    \ (intersection interval1 (rest interval2))]\n    [(< (first interval2) (first\
    \ interval1)) (intersection interval2 (rest interval1))]\n    [else (cons (first\
    \ interval1) (intersection interval1 (rest interval1)))]))\n", "  (cond\n    [(empty?\
    \ interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n    [(< (first interval1)\
    \ (first interval2)) \"NO\"]\n    [(< (first interval2) (first interval1)) \"\
    NO\"]\n    [else (cond\n            [(= (first interval1) (first interval2)) \"\
    YES\"]\n            [else (cond\n                    [(= (first interval1) (second\
    \ interval2)) \"YES\"]\n                    [else (cond\n                    \
    \        [(= (first interval2) (second interval1)) \"YES\"]\n                \
    \            [else \"NO\"])]\n                    )]\n            )]\n    ))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [(< (first interval2) (first interval1)) (intersection interval2 (rest interval1))]\n\
    \    [else (cons (first interval1) (intersection interval1 (rest interval1)))]))\n",
  "  (cond [(empty? interval1) \"NO\"]\n        [(empty? interval2) \"NO\"]\n    \
    \    [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \        [(< (first interval2) (first interval1)) (intersection interval2 (rest\
    \ interval1))]\n        [else (cond [(prime? (length (intersection interval1 (rest\
    \ interval1)))) (cons \"YES\" '())]\n                  [(prime? (length (intersection\
    \ interval2 (rest interval2)))) (cons \"YES\" '())]\n                  [else \"\
    NO\"])]))\n", "  (cond ((null? interval1) \"NO\")\n        ((null? interval2)\
    \ \"NO\")\n        ((>= (first interval1) (first interval2)) (intersection interval1\
    \ (rest interval2)))\n        (else \"YES\")))\n", "  (cond ((null? interval1)\
    \ \"NO\")\n        ((null? interval2) \"NO\")\n        ((< (car interval1) (car\
    \ interval2)) (intersection interval1 (cdr interval2)))\n        (else \"YES\"\
    )))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"\
    NO\"]\n    [(< (first interval1) (first interval2)) (intersection interval1 (rest\
    \ interval2))]\n    [(< (first interval2) (first interval1)) (intersection interval2\
    \ (rest interval1))]\n    [else (cons (first interval1) (intersection interval1\
    \ (rest interval1)))]))\n", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) \"NO\"]\n \
    \   [(< (first interval2) (first interval1)) \"NO\"]\n    [else (cond\n      \
    \      [(= (first interval1) (first interval2)) \"YES\"]\n            [else (cond\n\
    \                    [(= (first interval1) (first interval2)) \"YES\"]\n     \
    \               [else (cond\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)) \"YES\"]\n                            [(= (first interval1)\
    \ (first interval2)) \"YES\"]\n                            [(= (first interval2)\
    \ (first interval1)", "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty?\
    \ interval2) \"NO\"]\n    [(< (first interval1) (first interval2)) (intersection\
    \ interval1 (rest interval2))]\n    [else (intersection interval1 (rest interval1))]))\n",
  "  (cond\n    [(empty? interval1) \"NO\"]\n    [(empty? interval2) \"NO\"]\n   \
    \ [(< (first interval1) (first interval2)) (intersection interval1 (rest interval2))]\n\
    \    [else (intersection interval1 (rest interval1))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

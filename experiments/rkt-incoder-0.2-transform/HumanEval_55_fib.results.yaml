language: rkt
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n\
    \ 2)\n      n\n      (+ (fib (- n 1)) (fib (- n 2)))))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate\
    \ 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8)\
    \ 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12)\
    \ 144)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (= n\
    \ 0)\n      0\n      (+ (fib (- n 1)) (fib (- n 2)))))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate\
    \ 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8)\
    \ 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12)\
    \ 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))))])\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: SyntaxError
  stderr: "/tmp/tmpgf3m0gzv.rkt:13:45: read-syntax: missing `]` to close preceding\
    \ `[`, found instead `)`\n  context...:\n   read-undotted\n   read-one/not-eof\n\
    \   loop\n   [repeats 2 more times]\n   read-unwrapped-sequence\n   read-undotted\n\
    \   read-one/not-eof\n   loop\n   [repeats 3 more times]\n   read-unwrapped-sequence\n\
    \   read-undotted\n   read-one/not-eof\n   loop\n   [repeats 2 more times]\n \
    \  read-unwrapped-sequence\n   read-undotted\n   ...\n"
  stdout: ''
  timestamp: 1659747107
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (= n\
    \ 0)\n      0\n      (+ (fib (- n 1)) (fib (- n 2)))))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate\
    \ 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8)\
    \ 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12)\
    \ 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2))))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: SyntaxError
  stderr: "/tmp/tmpzz9ho32j.rkt:13:45: read-syntax: missing `]` to close preceding\
    \ `[`, found instead `)`\n  context...:\n   read-undotted\n   read-one/not-eof\n\
    \   loop\n   [repeats 2 more times]\n   read-unwrapped-sequence\n   read-undotted\n\
    \   read-one/not-eof\n   loop\n   [repeats 3 more times]\n   read-unwrapped-sequence\n\
    \   read-undotted\n   read-one/not-eof\n   loop\n   [repeats 2 more times]\n \
    \  read-unwrapped-sequence\n   read-undotted\n   ...\n"
  stdout: ''
  timestamp: 1659747107
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (= n\
    \ 0)\n      0\n      (+ (fib (- n 1)) (fib (- n 2)))))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate\
    \ 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8)\
    \ 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12)\
    \ 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))))]\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: SyntaxError
  stderr: "/tmp/tmp0nvxpnpm.rkt:13:45: read-syntax: missing `]` to close preceding\
    \ `[`, found instead `)`\n  context...:\n   read-undotted\n   read-one/not-eof\n\
    \   loop\n   [repeats 2 more times]\n   read-unwrapped-sequence\n   read-undotted\n\
    \   read-one/not-eof\n   loop\n   [repeats 3 more times]\n   read-unwrapped-sequence\n\
    \   read-undotted\n   read-one/not-eof\n   loop\n   [repeats 2 more times]\n \
    \  read-unwrapped-sequence\n   read-undotted\n   ...\n"
  stdout: ''
  timestamp: 1659747107
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (= n\
    \ 0)\n      0\n      (+ (fib (- n 1))\n         (fib (- n 2)))))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate\
    \ 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8)\
    \ 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12)\
    \ 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108
- exit_code: 1
  program: "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;;\
    \ 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond [(=\
    \ n 0) 1]\n        [(= n 1) 1]\n        [else (+ (fib (- n 1)) (fib (- n 2)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n\
    \    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n  \
    \  (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n   \
    \ (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "standard-module-name-resolver: collection not found\n  for module path:\
    \ rackunit\n  collection: \"rackunit\"\n  in collection directories:\n   /home/a.guha/.racket/7.8/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/collects\n\
    \   /home/a.guha/.conda/envs/polyglot-codegen-evaluation/share/racket/pkgs/racket-lib\n\
    \  context...:\n   show-collection-err\n   standard-module-name-resolver\n   module-path-index-resolve\n\
    \   perform-require!\n   for-loop\n   finish\n   [repeats 2 more times]\n   pass-1-and-2-loop\n\
    \   module-begin-k\n   expand-module\n   expand-capturing-lifts\n   temp98_0\n\
    \   temp71_0\n   compile\n   temp65_0\n   standard-module-name-resolver\n   ...\n"
  stdout: ''
  timestamp: 1659747108

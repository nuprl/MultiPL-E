name: HumanEval_13_greatest_common_divisor
language: js
prompt: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
  \ b){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
  \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
  \ 60),12);\n}\n\ntest();"
completions: ["    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", " \
    \   return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return\
    \ b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b === 0 ?\
    \ a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b === 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "  if(b == 0)\n    return a;\n  else\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(a\
    \ === 0){\n    return b;\n  }\n  if(b === 0){\n    return a;\n  }\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n", "  if(b == 0)\n    return a;\n  else\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(b == 0){\n    return\
    \ a;\n  }\n  return greatest_common_divisor(b, a % b);\n}\n", "  if(b == 0){\n\
    \    return a;\n  }\n  return greatest_common_divisor(b, a % b);\n}\n", "    return\
    \ b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(a === 0 || b ===\
    \ 0){\n    return 0;\n  }\n  else{\n    return greatest_common_divisor(b, a %\
    \ b);\n  }\n}\n", "  if(b == 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n", "  if(b == 0)\n    return a;\n  else\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(b\
    \ == 0){\n    return a;\n  }\n  return greatest_common_divisor(b, a % b);\n}\n",
  "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "  if(b === 0){\n    return a;\n\
    \  }\n  return greatest_common_divisor(b, a % b);\n}\n", "    return b === 0 ?\
    \ a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(b\
    \ == 0){\n    return a;\n  }\n  return greatest_common_divisor(b, a % b);\n}\n",
  "    var c;\n    while(b){\n        c = (a%b); a = b;\n        b = c;\n    }\n \
    \   return a;\n}\n", "  if(b == 0){\n    return a;\n  }\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    var gcd;\n    while(b){\n        gcd = b%a;\n        a =\
    \ b;\n        b = gcd;\n    }\n    return a;\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "  if(b == 0){\n    return a;\n  }\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(a\
    \ === 0){\n    return b;\n  }\n  if(b === 0){\n    return a;\n  }\n  while(b !==\
    \ 0){\n    var c = a % b;\n    a = b;\n    b = c;\n  }\n  return a;\n}\n", " \
    \   return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(a ===\
    \ 0 || b === 0){\n    return 0;\n  }\n  else{\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a %\
    \ b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n",
  "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  \
    \  var gcd;\n    while(a != 0){\n        gcd = Math.floor(a / b);\n        a =\
    \ b * gcd;\n        b = gcd;\n    }\n    return b;\n}\n", "    return b == 0 ?\
    \ a : greatest_common_divisor(b, a % b);\n}\n", "  if(b == 0){\n    return a;\n\
    \  }\n  return greatest_common_divisor(b, a % b);\n}\n", "  if(b === 0){\n   \
    \ return a;\n  }\n  return greatest_common_divisor(b, a % b);\n}\n", "    return\
    \ b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ?\
    \ a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    var gcd;\n    while(a\
    \ != 0){\n        gcd = Math.floor(a / b);\n        a = b * gcd;\n        b =\
    \ gcd;\n    }\n    return b;\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "  if(b == 0) return a;\n  return greatest_common_divisor(b, a % b);\n}\n",
  "    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(b == 0)\
    \ return a;\n  return greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b === 0 ?\
    \ a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b === 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "  if(a === 0) return b;\n  if(b\
    \ === 0) return a;\n  if(a === b) return a;\n  while(b !== 0){\n    var c = a\
    \ % b;\n    a = b;\n    b = c;\n  }\n  return a;\n}\n", "    return b == 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ var c;\n    while(b){\n        c = (a%b); \n        a = b;\n        b = c;\n\
    \    }\n    return a;\n}", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "  if(b == 0){\n    return a;\n  }\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(b\
    \ == 0)\n    return a;\n  else\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  \
    \  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return\
    \ b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ?\
    \ a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(b == 0)\n    return\
    \ a;\n  return greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ?\
    \ a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    var c;\n    while(b){\n        c = (a%b); \n        a =\
    \ b;\n        b = c;\n    }\n    return a;\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    var lcm = greatest_common_divisor_lcm_table[a][b];\n    if(lcm != undefined){\n\
    \        return lcm;\n    }\n    return greatest_common_divisor_lcm_table[a][b]\
    \ = Math.lcm(a, b);\n}\n", "    var gcd;\n    while(a != 0){\n        gcd = Math.floor(a\
    \ / b);\n        a = b * gcd;\n        b = gcd;\n    }\n    return b;\n}\n", " \
    \   return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return\
    \ b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ?\
    \ a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b === 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(b\
    \ == 0)\n    return a;\n  else\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(a < b){\n    return\
    \ greatest_common_divisor(b,a);\n  }\n  else{\n    return a;\n  }\n}\n", "   \
    \ return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "  if(b == 0)\n    return a;\n \
    \ else\n    return greatest_common_divisor(b, a % b);\n}\n", "    return b ==\
    \ 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b === 0 ?\
    \ a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(a\
    \ < b){\n    return greatest_common_divisor(b, a);\n  }\n  else{\n    return a;\n\
    \  }\n}\n", "    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n",
  "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b === 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  \
    \  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(b == 0)\
    \ return a;\n  return greatest_common_divisor(b, a % b);\n}\n", "  if(b === 0){\n\
    \    return a;\n  }\n  return greatest_common_divisor(b, a % b);\n}\n", "  if(b\
    \ == 0)\n    return a;\n  else\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(b == 0)\n\
    \    return a;\n  else\n    return greatest_common_divisor(b, a % b);\n}\n", " \
    \ if(b == 0)\n    return a;\n  return greatest_common_divisor(b, a % b);\n}\n",
  "  if(b == 0)\n    return a;\n  else\n    return greatest_common_divisor(b, a %\
    \ b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n",
  "  if(b === 0){\n    return a;\n  }\n  else{\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a %\
    \ b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n",
  "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    var lcm\
    \ = greatest_common_divisor_inverse(a);\n    return lcm(a, b);\n}\n", "    return\
    \ b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(b == 0)\n    return\
    \ a;\n  else\n    return greatest_common_divisor(b, a % b);\n}\n", "    var lcm\
    \ = greatest_common_divisor_inverse(a);\n    return lcm(a, b);\n}\n", "    return\
    \ b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ?\
    \ a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "    return b === 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ var c;\n    while(b){\n        c = (a%b); \n        a = b;\n        b = c;\n\
    \    }\n    return a;\n}\n", "  if(b == 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n", "  if(b == 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "  if(b == 0) return a;\n\
    \  return greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "   \
    \ return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b\
    \ === 0 ? a : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "  if(a === 0 || b === 0){\n    return 0;\n  }\n  else{\n   \
    \ return greatest_common_divisor(b, a % b);\n  }\n}\n", "    return b == 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n", "    var g = Math.max(a, b);\n    while (a % g != 0 && b % g != 0){\n  \
    \      g = Math.max(a, b);\n    }\n    return g;\n}\n", "    return b == 0 ? a\
    \ : greatest_common_divisor(b, a % b);\n}\n", "    return b == 0 ? a : greatest_common_divisor(b,\
    \ a % b);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

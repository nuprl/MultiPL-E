name: HumanEval_25_factorize
language: js
prompt: "//Return list of prime factors of given integer in the order from smallest\
  \ to largest.\n// Each of the factors should be listed number of times corresponding\
  \ to how many times it appeares in factorization.\n// Input number should be equal\
  \ to the product of all factors\nfunction factorize(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = factorize;\n  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2,\
  \ 2]);\n  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
  \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
  \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n \
  \ assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
completions: ["\tvar factors = [];\n\tvar factorization = [];\n\tvar factor = 1;\n\
    \tvar factorCount = 0;\n\tvar primeFactors = [];\n\tvar primeFactor = 1;\n\tvar\
    \ primeFactorCount = 0;\n\tvar isPrime = true;\n\t\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tisPrime = true;\n\t\tfor(var j = factorCount; j < factors.length;\
    \ j++){\n\t\t\tif(factors[j] == i){\n\t\t\t\tisPrime = false;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif(isPrime){\n\t\t\tfactors.push(i);\n\t\t\tfactorCount++;\n\
    \t\t}\n\t}\n\t\n\tfor(var j = 0; j < factors.length; j++){\n\t\tfactorization[j]\
    \ = factors[j];\n\t\tprimeFactors[j] = 0;\n\t\tprimeFactorCount = 0;\n\t\tfor(var\
    \ k = factorCount; k < factors.length; k++){\n\t\t\tif(factors[k] == factors[j]){\n\
    \t\t\t\tprimeFactors[j] += 1;\n\t\t\t\tprimeFactorCount += 1;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tfactorization[j] /= primeFactors[j];\n\t\tfactorCount /= primeFactorCount;\n\
    \t}\n\t\n\tfor(var j = 0; j < factors.length; j++){\n\t\tfactorization[j] /= factor;\n\
    \t\tfactorCount /= factor;\n\t}\n\t\n\tfor(var j = 0; j < factors.length; j++){\n\
    \t\tfactors.push(factorization[j]);\n\t\tprimeFactors.push(1);\n\t\tprimeFactorCount\
    \ += 1;\n\t}\n\t\n\tfor(var j = 0; j < factors.length; j++){\n\t\tfactorization[j]\
    \ /= factor;\n\t\tfactorCount /= factor;\n\t}\n\t\n\tfor(var j = 0; j < factors.length;\
    \ j++){\n\t\tfactors.push(factorization[j]);\n\t\tprimeFactors.push(1);\n\t\t\
    primeFactorCount += 1;\n\t}\n\t\n\tfor(var j = 0; j < factors.length; j++){\n\t\
    \tfactorization[j] /= factor;\n\t\tfactorCount /= factor;\n\t}\n\t\n\tfor(var\
    \ j = 0; j < factors.length; j++){\n\t\tfactors.push(factorization[j]);\n\t\t\
    primeFactors.push(1);\n\t\tprimeFactorCount += 1;\n\t}\n\t\n\tfor(var j = 0; j\
    \ < factors.length; j++){\n\t\tfactorization[j] /= factor;\n\t\tfactorCount /=\
    \ factor;\n\t}\n\t\n\tfor(var j = 0; j < factors.length; j++){\n\t\tfactors.push(factorization[j]);\n\
    \t\tprimeFactors.push(1);\n\t\tprimeFactorCount += 1;\n\t}\n\t\n\tfor(var j =\
    \ 0; j < factors.length; j++){\n\t\tfactorization[j] /= factor;\n\t\tfactorCount\
    \ /= factor;\n\t}\n\t\n\tfor(var j = 0; j < factors.length; j++){\n\t\tfactors.push(factorization[j]);\n\
    \t\tprime", "\tvar factors = [];\n\tvar factorization = [];\n\tvar primeFactors\
    \ = [];\n\tvar primeFactorsIndex = [];\n\tvar factorsIndex = [];\n\tvar factorsIndexLength\
    \ = [];\n\tvar factorsIndexLengthLength = [];\n\tvar primeFactorsIndexLength =\
    \ [];\n\tvar primeFactorsIndexLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength\
    \ = [];\n\tvar primeFactorsIndexLengthLengthLengthLengthLength = [];\n\tvar ",
  "\tvar factors = [];\n\tvar factorization = [];\n\tvar primeFactors = [];\n\tvar\
    \ primeFactorsCount = 0;\n\tvar factorizationCount = 0;\n\tvar factorizationIndex\
    \ = 0;\n\tvar factorizationIndexMax = factorization.length - 1;\n\tvar factorizationIndexMax2\
    \ = factorizationIndexMax * factorizationIndexMax;\n\tvar factorizationIndexMax3\
    \ = factorizationIndexMax2 * factorizationIndexMax;\n\tvar factorizationIndexMax4\
    \ = factorizationIndexMax3 * factorizationIndexMax;\n\tvar factorizationIndexMax5\
    \ = factorizationIndexMax4 * factorizationIndexMax;\n\tvar factorizationIndexMax6\
    \ = factorizationIndexMax5 * factorizationIndexMax;\n\tvar factorizationIndexMax7\
    \ = factorizationIndexMax6 * factorizationIndexMax;\n\tvar factorizationIndexMax8\
    \ = factorizationIndexMax7 * factorizationIndexMax;\n\tvar factorizationIndexMax9\
    \ = factorizationIndexMax8 * factorizationIndexMax;\n\tvar factorizationIndexMax10\
    \ = factorizationIndexMax9 * factorizationIndexMax;\n\tvar factorizationIndexMax11\
    \ = factorizationIndexMax10 * factorizationIndexMax;\n\tvar factorizationIndexMax12\
    \ = factorizationIndexMax11 * factorizationIndexMax;\n\tvar factorizationIndexMax13\
    \ = factorizationIndexMax12 * factorizationIndexMax;\n\tvar factorizationIndexMax14\
    \ = factorizationIndexMax13 * factorizationIndexMax;\n\tvar factorizationIndexMax15\
    \ = factorizationIndexMax14 * factorizationIndexMax;\n\tvar factorizationIndexMax16\
    \ = factorizationIndexMax15 * factorizationIndexMax;\n\tvar factorizationIndexMax17\
    \ = factorizationIndexMax16 * factorizationIndexMax;\n\tvar factorizationIndexMax18\
    \ = factorizationIndexMax17 * factorizationIndexMax;\n\tvar factorizationIndexMax19\
    \ = factorizationIndexMax18 * factorizationIndexMax;\n\tvar factorizationIndexMax20\
    \ = factorizationIndexMax19 * factorizationIndexMax;\n\tvar factorizationIndexMax21\
    \ = factorizationIndexMax20 * factorizationIndexMax;\n\tvar factorizationIndexMax22\
    \ = factorizationIndexMax21 * factorizationIndexMax;\n\tvar factorizationIndexMax23\
    \ = factorizationIndexMax22 * factorizationIndexMax;\n\tvar factorizationIndexMax24\
    \ = factorizationIndexMax23 * factorizationIndexMax;\n\tvar factorizationIndexMax25\
    \ = factorizationIndexMax24 * factorizationIndexMax;\n\tvar factorizationIndexMax26\
    \ = factorizationIndexMax25 * factorizationIndexMax;\n\tvar factorizationIndexMax27\
    \ = factorizationIndexMax", "    var factors = [];\n    for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n        if(n%i===0){\n            factors.push(i);\n            n = n/i;\n\
    \        }\n    }\n    return factors;\n}\n", "    var factors = [];\n    for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            n = n/i;\n        }\n    }\n    return factors;\n}\n", "    var factors\
    \ = [];\n    var factorization = [];\n    var primeFactors = [];\n    var primeFactorsIndex\
    \ = [];\n    var primeFactorsIndexMap = {};\n    var isPrime = true;\n    var\
    \ isPrimeIndexMap = {};\n    var isPrimeFactorization = true;\n    var isPrimeFactorizationIndexMap\
    \ = {};\n    var isPrimeFactorizationPrime = true;\n    var isPrimeFactorizationPrimeIndexMap\
    \ = {};\n    var isPrimeFactorizationPrimeFactor = true;\n    var isPrimeFactorizationPrimeFactorIndexMap\
    \ = {};\n    var isPrimeFactorizationPrimeFactorFactor = true;\n    var isPrimeFactorizationPrimeFactorFactorIndexMap\
    \ = {};\n    var isPrimeFactorizationPrimeFactorFactorFactor = true;\n    var\
    \ isPrimeFactorizationPrimeFactorFactorFactorIndexMap = {};\n    var isPrimeFactorizationPrimeFactorFactorFactorFactor\
    \ = true;\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorIndexMap =\
    \ {};\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactor = true;\n\
    \    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorIndexMap = {};\n\
    \    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactor = true;\n\
    \    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorIndexMap\
    \ = {};\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactor\
    \ = true;\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorIndexMap\
    \ = {};\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = true;\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorIndexMap\
    \ = {};\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = true;\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorIndexMap\
    \ = {};\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = true;\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorIndexMap\
    \ = {};\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = true;\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorIndexMap\
    \ = {};\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = true;\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorIndexMap\
    \ = {};\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactor",
  "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\tfactors.push(n);\n\treturn\
    \ factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            n\
    \ = n/i;\n        }\n    }\n    return factors;\n}\n", "    var factors = [];\n\
    \    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      factors.push(i);\n            n = n / i;\n        }\n    }\n    return\
    \ factors;\n}\n", "\tlet factors = [];\n\tlet factorization = [];\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactors = [];\n\tlet factorizationIndex = 0;\n\tlet primeFactorizationIndex\
    \ = 0;\n\tlet factorizationArray = [];\n\tlet primeFactorizationArray = [];\n\t\
    let primeFactorsArray = [];\n\tlet factorizationArrayIndex = 0;\n\tlet primeFactorizationArrayIndex\
    \ = 0;\n\tlet primeFactorsArrayIndex = 0;\n\tlet factorizationArrayLength = 0;\n\
    \tlet primeFactorizationArrayLength = 0;\n\tlet primeFactorsArrayLength = 0;\n\
    \tlet primeFactorsArrayLength2 = 0;\n\tlet primeFactorsArrayLength3 = 0;\n\tlet\
    \ primeFactorsArrayLength4 = 0;\n\tlet primeFactorsArrayLength5 = 0;\n\tlet primeFactorsArrayLength6\
    \ = 0;\n\tlet primeFactorsArrayLength7 = 0;\n\tlet primeFactorsArrayLength8 =\
    \ 0;\n\tlet primeFactorsArrayLength9 = 0;\n\tlet primeFactorsArrayLength10 = 0;\n\
    \tlet primeFactorsArrayLength11 = 0;\n\tlet primeFactorsArrayLength12 = 0;\n\t\
    let primeFactorsArrayLength13 = 0;\n\tlet primeFactorsArrayLength14 = 0;\n\tlet\
    \ primeFactorsArrayLength15 = 0;\n\tlet primeFactorsArrayLength16 = 0;\n\tlet\
    \ primeFactorsArrayLength17 = 0;\n\tlet primeFactorsArrayLength18 = 0;\n\tlet\
    \ primeFactorsArrayLength19 = 0;\n\tlet primeFactorsArrayLength20 = 0;\n\tlet\
    \ primeFactorsArrayLength21 = 0;\n\tlet primeFactorsArrayLength22 = 0;\n\tlet\
    \ primeFactorsArrayLength23 = 0;\n\tlet primeFactorsArrayLength24 = 0;\n\tlet\
    \ primeFactorsArrayLength25 = 0;\n\tlet primeFactorsArrayLength26 = 0;\n\tlet\
    \ primeFactorsArrayLength27 = 0;\n\tlet primeFactorsArrayLength28 = 0;\n\tlet\
    \ primeFactorsArrayLength29 = 0;\n\tlet primeFactorsArrayLength30 = 0;\n\tlet\
    \ primeFactorsArrayLength31 = 0;\n\tlet primeFactorsArrayLength32 = 0;\n\tlet\
    \ primeFactorsArrayLength33 = 0;\n\tlet primeFactorsArrayLength34 = 0;\n\tlet\
    \ primeFactorsArrayLength35 = 0;\n\tlet primeFactorsArrayLength36 = 0;\n\tlet\
    \ primeFactorsArrayLength37 = 0;\n\tlet primeFactorsArrayLength38 = 0;\n\tlet\
    \ primeFactorsArrayLength39 = 0;\n\tlet primeFactorsArrayLength40 = 0;\n\tlet\
    \ primeFactorsArrayLength41 = 0;\n\tlet ", "    var factors = [];\n    var factorization\
    \ = factor(n);\n    for(var i=0;i<factorization.length;i++){\n        var factor\
    \ = factorization[i];\n        if(factors.indexOf(factor)==-1){\n            factors.push(factor);\n\
    \        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\tfor(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i=2;i<=Math.sqrt(n);i++){\n\t\tif(n%i==0){\n\t\t\tfactors.push(i);\n\t\
    \t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tlet factors = [];\n\tlet\
    \ factorization = factor(n);\n\tfor(let i=0;i<factorization.length;i++){\n\t\t\
    let factor = factorization[i];\n\t\tlet count = 0;\n\t\tfor(let j=0;j<factors.length;j++){\n\
    \t\t\tif(factor == factors[j]){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tfactors.push(factor);\n\
    \t\tfactors.push(count);\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\
    \tvar factor = 1;\n\twhile(n>1){\n\t\tfactors.push(n%factor);\n\t\tn = n/factor;\n\
    \t\tfactor++;\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i\
    \ = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\
    \t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var factors = [];\n  \
    \  var factorization = factor(n);\n    for(var i=0;i<factorization.length;i++){\n\
    \        var f = factorization[i];\n        for(var j=0;j<factors.length;j++){\n\
    \            if(f == factors[j]){\n                factors[j] += 1;\n        \
    \        break;\n            }\n        }\n        factors.push(f);\n    }\n \
    \   return factors;\n}\n", "\tvar factors = [];\n\tfor(var i=2; i<=Math.sqrt(n);\
    \ i++){\n\t\tif(n%i==0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\
    \treturn factors;\n}\n", "\tvar factors = [];\n\tvar factorization = [];\n\tvar\
    \ primeFactors = [];\n\tvar primeFactorsCount = [];\n\tvar factorizationCount\
    \ = [];\n\tvar factorizationCountSum = 0;\n\tvar factorizationCountSum2 = 0;\n\
    \tvar factorizationCountSum3 = 0;\n\tvar factorizationCountSum4 = 0;\n\tvar factorizationCountSum5\
    \ = 0;\n\tvar factorizationCountSum6 = 0;\n\tvar factorizationCountSum7 = 0;\n\
    \tvar factorizationCountSum8 = 0;\n\tvar factorizationCountSum9 = 0;\n\tvar factorizationCountSum10\
    \ = 0;\n\tvar factorizationCountSum11 = 0;\n\tvar factorizationCountSum12 = 0;\n\
    \tvar factorizationCountSum13 = 0;\n\tvar factorizationCountSum14 = 0;\n\tvar\
    \ factorizationCountSum15 = 0;\n\tvar factorizationCountSum16 = 0;\n\tvar factorizationCountSum17\
    \ = 0;\n\tvar factorizationCountSum18 = 0;\n\tvar factorizationCountSum19 = 0;\n\
    \tvar factorizationCountSum20 = 0;\n\tvar factorizationCountSum21 = 0;\n\tvar\
    \ factorizationCountSum22 = 0;\n\tvar factorizationCountSum23 = 0;\n\tvar factorizationCountSum24\
    \ = 0;\n\tvar factorizationCountSum25 = 0;\n\tvar factorizationCountSum26 = 0;\n\
    \tvar factorizationCountSum27 = 0;\n\tvar factorizationCountSum28 = 0;\n\tvar\
    \ factorizationCountSum29 = 0;\n\tvar factorizationCountSum30 = 0;\n\tvar factorizationCountSum31\
    \ = 0;\n\tvar factorizationCountSum32 = 0;\n\tvar factorizationCountSum33 = 0;\n\
    \tvar factorizationCountSum34 = 0;\n\tvar factorizationCountSum35 = 0;\n\tvar\
    \ factorizationCountSum36 = 0;\n\tvar factorizationCountSum37 = 0;\n\tvar factorizationCountSum38\
    \ = 0;\n\tvar factorizationCountSum39 = 0;\n\tvar factorizationCountSum40 = 0;\n\
    \tvar factorizationCountSum41 = 0;\n\tvar factorizationCountSum42 = 0;\n\tvar\
    \ factorizationCountSum43 = 0;\n\tvar factorizationCountSum44 = 0;\n\tvar factorizationCountSum45\
    \ = 0;\n\tvar factorizationCountSum46 = 0;\n\tvar factorizationCountSum47 = 0;\n\
    \tvar factorizationCountSum48 = 0;\n\tvar factorizationCountSum49 = 0;\n\tvar\
    \ factorizationCountSum50 = 0;\n\tvar factorizationCountSum51 = 0;\n\tvar factorizationCountSum52\
    \ = 0;\n\tvar factorizationCountSum53 = 0;\n\tvar factorizationCountSum54 = 0;\n\
    \tvar factorizationCountSum55 = 0;\n\tvar factorizationCountSum56 = 0;\n\tvar\
    \ factorizationCountSum57 = 0;\n\tvar factorizationCountSum58 = 0;\n\tvar factorizationCountSum59\
    \ = 0;\n\tvar factorizationCountSum60 = 0;\n\tvar factorizationCountSum61 = 0;\n\
    \tvar factor", "\tlet factors = [];\n\tlet factorization = [];\n\tlet primes =\
    \ [];\n\tlet primeFactorization = [];\n\tlet primeFactors = [];\n\tlet primeFactorsCount\
    \ = 0;\n\tlet primeFactorsSum = 0;\n\tlet primeFactorsSumCount = 0;\n\tlet primeFactorsSumCount2\
    \ = 0;\n\tlet primeFactorsSumCount3 = 0;\n\tlet primeFactorsSumCount4 = 0;\n\t\
    let primeFactorsSumCount5 = 0;\n\tlet primeFactorsSumCount6 = 0;\n\tlet primeFactorsSumCount7\
    \ = 0;\n\tlet primeFactorsSumCount8 = 0;\n\tlet primeFactorsSumCount9 = 0;\n\t\
    let primeFactorsSumCount10 = 0;\n\tlet primeFactorsSumCount11 = 0;\n\tlet primeFactorsSumCount12\
    \ = 0;\n\tlet primeFactorsSumCount13 = 0;\n\tlet primeFactorsSumCount14 = 0;\n\
    \tlet primeFactorsSumCount15 = 0;\n\tlet primeFactorsSumCount16 = 0;\n\tlet primeFactorsSumCount17\
    \ = 0;\n\tlet primeFactorsSumCount18 = 0;\n\tlet primeFactorsSumCount19 = 0;\n\
    \tlet primeFactorsSumCount20 = 0;\n\tlet primeFactorsSumCount21 = 0;\n\tlet primeFactorsSumCount22\
    \ = 0;\n\tlet primeFactorsSumCount23 = 0;\n\tlet primeFactorsSumCount24 = 0;\n\
    \tlet primeFactorsSumCount25 = 0;\n\tlet primeFactorsSumCount26 = 0;\n\tlet primeFactorsSumCount27\
    \ = 0;\n\tlet primeFactorsSumCount28 = 0;\n\tlet primeFactorsSumCount29 = 0;\n\
    \tlet primeFactorsSumCount30 = 0;\n\tlet primeFactorsSumCount31 = 0;\n\tlet primeFactorsSumCount32\
    \ = 0;\n\tlet primeFactorsSumCount33 = 0;\n\tlet primeFactorsSumCount34 = 0;\n\
    \tlet primeFactorsSumCount35 = 0;\n\tlet primeFactorsSumCount36 = 0;\n\tlet primeFactorsSumCount37\
    \ = 0;\n\tlet primeFactorsSumCount38 = 0;\n\tlet primeFactorsSumCount39 = 0;\n\
    \tlet primeFactorsSumCount40 = 0;\n\tlet primeFactorsSumCount41 = 0;\n\tlet primeFactorsSumCount42\
    \ = 0;\n\tlet primeFactorsSumCount43 = 0;\n\tlet primeFactorsSumCount44 = 0;\n\
    \tlet primeFactorsSumCount45 = 0;\n\tlet primeFactorsSumCount46 = 0;\n\tlet primeFactorsSumCount47\
    \ = 0;\n\tlet ", "\tvar factors = [];\n\tvar factorization = [];\n\tvar primeFactors\
    \ = [];\n\tvar primeFactorsIndex = [];\n\tvar primeFactorsIndexMap = {};\n\tvar\
    \ primeFactorsMap = {};\n\tvar primeFactorsIndexMapLength = 0;\n\tvar primeFactorsMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMap = {};\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n\tvar primeFactorsMapLengthMapLength = 0;\n\tvar primeFactorsMapLengthMapLength\
    \ = 0;\n", "    let factors = [];\n    let factorization = [];\n    for(let i\
    \ = 1; i <= n; i++){\n        factors.push(i);\n    }\n    while(factors.length\
    \ > 0){\n        let currentFactor = factors.pop();\n        factorization[currentFactor]\
    \ = factorization[currentFactor] || 0;\n        factorization[currentFactor]++;\n\
    \        for(let i = factors.length - 1; i >= 0; i--){\n            if(factors[i]\
    \ * factors[i - 1] == currentFactor){\n                factors.splice(i, 1);\n\
    \            }\n        }\n    }\n    return factorization;\n}\n", "    var factors\
    \ = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n\
    \            factors.push(i);\n            n = n/i;\n        }\n    }\n    return\
    \ factors;\n}\n", "    var factors = [];\n    var factorization = [];\n    for(var\
    \ i=2; i<=n; i++){\n        factors.push(i);\n    }\n    while(factors.length){\n\
    \        var f = factors.pop();\n        factorization[factors.length] = f;\n\
    \        for(var i=f; i<n; i++){\n            if(n % i == 0){\n              \
    \  factors.push(i);\n                factorization[factors.length] = i;\n    \
    \            n = n/i;\n            }\n        }\n    }\n    return factorization;\n\
    }\n", "\tvar factors = [];\n\tvar factorization = [];\n\tvar factorCount = 0;\n\
    \t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tfactorCount = 0;\n\t\tfor(var\
    \ j = 0; j < factors.length; j++){\n\t\t\tif(n%i == 0){\n\t\t\t\tfactorCount++;\n\
    \t\t\t\tfactors[j] = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfactors.push(factorCount);\n\
    \t}\n\t\n\tfor(var j = 0; j < factors.length; j++){\n\t\tfactorization[factors[j]\
    \ - 1] = factors[j];\n\t}\n\t\n\treturn factorization;\n}\n", "\tvar factors =\
    \ [];\n\tvar factor = 1;\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\twhile(n\
    \ % i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\tfactors.push(factor);\n\
    \treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "\tvar factors=[];\n\tvar i=0;\n\twhile(n>1){\n\t\t\
    var j=0;\n\t\twhile(n%(i+j)==0){\n\t\t\tj++;\n\t\t}\n\t\tfactors.push(i);\n\t\t\
    i=i+j;\n\t\tn=n/i;\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tvar\
    \ factorization = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tfactors.push(i);\n\
    \t}\n\t\n\twhile(factors.length > 0){\n\t\tvar f = factors.pop();\n\t\tfactorization.push(f);\n\
    \t\t\n\t\tfor(var i = factors.length - 1; i >= 0; i--){\n\t\t\tvar p = factors[i];\n\
    \t\t\t\n\t\t\tfor(var j = factorization.length - 1; j >= 0; j--){\n\t\t\t\tif(factorization[j]\
    \ == p){\n\t\t\t\t\tfactorization.splice(j, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\
    \t\t\t}\n\t\t}\n\t}\n\t\n\treturn factorization;\n}\n", "\tlet factors = [];\n\
    \tlet factorization = factor(n);\n\tlet factorsCount = factorization.length;\n\
    \tlet factorsArray = [];\n\tlet factorsArrayCount = 0;\n\tlet factorsArrayCountMax\
    \ = factorsCount;\n\tlet factorsArrayCountMin = 1;\n\tlet factorsArrayCountMinMax\
    \ = factorsCount;\n\tlet factorsArrayCountMinMaxMax = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMax\
    \ = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMax = factorsCount;\n\tlet\
    \ factorsArrayCountMinMaxMaxMaxMax = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMax\
    \ = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMax = factorsCount;\n\
    \tlet factorsArrayCountMinMaxMaxMaxMaxMax = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMax\
    \ = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMax = factorsCount;\n\
    \tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMax = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMax\
    \ = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMax = factorsCount;\n\
    \tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMaxMax = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMaxMax\
    \ = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax = factorsCount;\n\
    \tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax =\
    \ factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax =\
    \ factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = factorsCount;\n\tlet factorsArrayCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax",
  "    var factors = [];\n    var factorization = [];\n    var primeFactors = [];\n\
    \    var primeFactorsIndex = [];\n    var primeFactorsIndexMap = {};\n    var\
    \ primeFactorsIndexMapCount = {};\n    var primeFactorsIndexMapCountMap = {};\n\
    \    var primeFactorsIndexMapCountMapCount = {};\n    var primeFactorsIndexMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMap = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n    var primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCount",
  "\tlet factors = [];\n\tlet factorization = [];\n\tlet factorizationCount = [];\n\
    \tlet factorizationCountMax = 0;\n\tlet factorizationCountMaxIndex = 0;\n\tlet\
    \ factorizationCountMaxIndex2 = 0;\n\tlet factorizationCountMaxIndex3 = 0;\n\t\
    let factorizationCountMaxIndex4 = 0;\n\tlet factorizationCountMaxIndex5 = 0;\n\
    \tlet factorizationCountMaxIndex6 = 0;\n\tlet factorizationCountMaxIndex7 = 0;\n\
    \tlet factorizationCountMaxIndex8 = 0;\n\tlet factorizationCountMaxIndex9 = 0;\n\
    \tlet factorizationCountMaxIndex10 = 0;\n\tlet factorizationCountMaxIndex11 =\
    \ 0;\n\tlet factorizationCountMaxIndex12 = 0;\n\tlet factorizationCountMaxIndex13\
    \ = 0;\n\tlet factorizationCountMaxIndex14 = 0;\n\tlet factorizationCountMaxIndex15\
    \ = 0;\n\tlet factorizationCountMaxIndex16 = 0;\n\tlet factorizationCountMaxIndex17\
    \ = 0;\n\tlet factorizationCountMaxIndex18 = 0;\n\tlet factorizationCountMaxIndex19\
    \ = 0;\n\tlet factorizationCountMaxIndex20 = 0;\n\tlet factorizationCountMaxIndex21\
    \ = 0;\n\tlet factorizationCountMaxIndex22 = 0;\n\tlet factorizationCountMaxIndex23\
    \ = 0;\n\tlet factorizationCountMaxIndex24 = 0;\n\tlet factorizationCountMaxIndex25\
    \ = 0;\n\tlet factorizationCountMaxIndex26 = 0;\n\tlet factorizationCountMaxIndex27\
    \ = 0;\n\tlet factorizationCountMaxIndex28 = 0;\n\tlet factorizationCountMaxIndex29\
    \ = 0;\n\tlet factorizationCountMaxIndex30 = 0;\n\tlet factorizationCountMaxIndex31\
    \ = 0;\n\tlet factorizationCountMaxIndex32 = 0;\n\tlet factorizationCountMaxIndex33\
    \ = 0;\n\tlet factorizationCountMaxIndex34 = 0;\n\tlet factorizationCountMaxIndex35\
    \ = 0;\n\tlet factorizationCountMaxIndex36 = 0;\n\tlet factorizationCountMaxIndex37\
    \ = 0;\n\tlet factorizationCountMaxIndex38 = 0;\n\tlet factorizationCountMaxIndex39\
    \ = 0;\n\tlet factorizationCountMaxIndex40 = 0;\n\tlet factorizationCountMaxIndex41\
    \ = 0;\n\tlet factorizationCountMaxIndex42 = 0;\n\tlet factorizationCountMaxIndex43\
    \ = 0;\n\tlet factorizationCountMaxIndex44 = 0;\n\tlet factorizationCountMaxIndex45\
    \ = 0;\n\tlet factorizationCountMaxIndex46 = 0;\n\tlet factorizationCountMaxIndex47\
    \ = 0;\n\tlet factorizationCountMaxIndex48 = 0;\n\tlet factorizationCountMaxIndex49\
    \ = 0;\n\t", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n            n = n/i;\n\
    \        }\n    }\n    return factors;\n}\n", "\tlet factors = [];\n\tlet factorization\
    \ = [];\n\tlet factorCount = 1;\n\tlet primeFactors = [];\n\tlet primeFactorCount\
    \ = 1;\n\tlet primeFactorsCount = 1;\n\tlet primeFactorsCount2 = 0;\n\tlet primeFactorsCount3\
    \ = 0;\n\tlet primeFactorsCount4 = 0;\n\tlet primeFactorsCount5 = 0;\n\tlet primeFactorsCount6\
    \ = 0;\n\tlet primeFactorsCount7 = 0;\n\tlet primeFactorsCount8 = 0;\n\tlet primeFactorsCount9\
    \ = 0;\n\tlet primeFactorsCount10 = 0;\n\tlet primeFactorsCount11 = 0;\n\tlet\
    \ primeFactorsCount12 = 0;\n\tlet primeFactorsCount13 = 0;\n\tlet primeFactorsCount14\
    \ = 0;\n\tlet primeFactorsCount15 = 0;\n\tlet primeFactorsCount16 = 0;\n\tlet\
    \ primeFactorsCount17 = 0;\n\tlet primeFactorsCount18 = 0;\n\tlet primeFactorsCount19\
    \ = 0;\n\tlet primeFactorsCount20 = 0;\n\tlet primeFactorsCount21 = 0;\n\tlet\
    \ primeFactorsCount22 = 0;\n\tlet primeFactorsCount23 = 0;\n\tlet primeFactorsCount24\
    \ = 0;\n\tlet primeFactorsCount25 = 0;\n\tlet primeFactorsCount26 = 0;\n\tlet\
    \ primeFactorsCount27 = 0;\n\tlet primeFactorsCount28 = 0;\n\tlet primeFactorsCount29\
    \ = 0;\n\tlet primeFactorsCount30 = 0;\n\tlet primeFactorsCount31 = 0;\n\tlet\
    \ primeFactorsCount32 = 0;\n\tlet primeFactorsCount33 = 0;\n\tlet primeFactorsCount34\
    \ = 0;\n\tlet primeFactorsCount35 = 0;\n\tlet primeFactorsCount36 = 0;\n\tlet\
    \ primeFactorsCount37 = 0;\n\tlet primeFactorsCount38 = 0;\n\tlet primeFactorsCount39\
    \ = 0;\n\tlet primeFactorsCount40 = 0;\n\tlet primeFactorsCount41 = 0;\n\tlet\
    \ primeFactorsCount42 = 0;\n\tlet primeFactorsCount43 = 0;\n\tlet primeFactorsCount44\
    \ = 0;\n\tlet primeFactorsCount45 = 0;\n\tlet primeFactorsCount46 = 0;\n\tlet\
    \ primeFactorsCount47 = 0;\n\tlet primeFactorsCount48 = 0;\n\tlet primeFactorsCount49\
    \ = 0;\n\tlet primeFactorsCount50 = 0;\n\tlet primeFactorsCount51 = 0;\n\tlet\
    \ primeFactorsCount52 = 0;\n\tlet primeFactorsCount53 = 0;\n\tlet primeFactorsCount54\
    \ = 0;\n\t", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n            n = n/i;\n\
    \        }\n    }\n    return factors;\n}\n", "    var factors = [];\n    var\
    \ factorization = [];\n    var factor = 1;\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        while(n % i == 0){\n            factors.push(factor);\n     \
    \       factor *= i;\n            n /= i;\n        }\n    }\n    factors.push(factor);\n\
    \    factors.push(1);\n    for(var i = factors.length - 1; i >= 0; i--){\n   \
    \     factorization[factors[i]] = factors[i];\n    }\n    return factorization;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tlet factors = [];\n\tlet factorization = [];\n\tlet primeFactors = [];\n\
    \tlet primeFactorsCount = 0;\n\tlet primeFactorsSum = 0;\n\tlet primeFactorsSumOfSquares\
    \ = 0;\n\tlet primeFactorsSumOfSquaresCount = 0;\n\tlet primeFactorsSumOfSquaresSum\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquares = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresCount\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSum = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquares\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresCount = 0;\n\tlet\
    \ primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSum = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquares\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresCount\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSum\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquares\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresCount\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSum\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquares\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresCount\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSum\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresCount\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSum\
    \ = 0;\n\tlet primeFactorsSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOf",
  "\tlet factors = [];\n\tlet factorization = [];\n\tlet primeFactors = [];\n\tlet\
    \ primeFactorsCount = [];\n\tlet primeFactorsCount2 = [];\n\tlet primeFactorsCount3\
    \ = [];\n\tlet primeFactorsCount4 = [];\n\tlet primeFactorsCount5 = [];\n\tlet\
    \ primeFactorsCount6 = [];\n\tlet primeFactorsCount7 = [];\n\tlet primeFactorsCount8\
    \ = [];\n\tlet primeFactorsCount9 = [];\n\tlet primeFactorsCount10 = [];\n\tlet\
    \ primeFactorsCount11 = [];\n\tlet primeFactorsCount12 = [];\n\tlet primeFactorsCount13\
    \ = [];\n\tlet primeFactorsCount14 = [];\n\tlet primeFactorsCount15 = [];\n\t\
    let primeFactorsCount16 = [];\n\tlet primeFactorsCount17 = [];\n\tlet primeFactorsCount18\
    \ = [];\n\tlet primeFactorsCount19 = [];\n\tlet primeFactorsCount20 = [];\n\t\
    let primeFactorsCount21 = [];\n\tlet primeFactorsCount22 = [];\n\tlet primeFactorsCount23\
    \ = [];\n\tlet primeFactorsCount24 = [];\n\tlet primeFactorsCount25 = [];\n\t\
    let primeFactorsCount26 = [];\n\tlet primeFactorsCount27 = [];\n\tlet primeFactorsCount28\
    \ = [];\n\tlet primeFactorsCount29 = [];\n\tlet primeFactorsCount30 = [];\n\t\
    let primeFactorsCount31 = [];\n\tlet primeFactorsCount32 = [];\n\tlet primeFactorsCount33\
    \ = [];\n\tlet primeFactorsCount34 = [];\n\tlet primeFactorsCount35 = [];\n\t\
    let primeFactorsCount36 = [];\n\tlet primeFactorsCount37 = [];\n\tlet primeFactorsCount38\
    \ = [];\n\tlet primeFactorsCount39 = [];\n\tlet primeFactorsCount40 = [];\n\t\
    let primeFactorsCount41 = [];\n\tlet primeFactorsCount42 = [];\n\tlet primeFactorsCount43\
    \ = [];\n\tlet primeFactorsCount44 = [];\n\tlet primeFactorsCount45 = [];\n\t\
    let primeFactorsCount46 = [];\n\tlet primeFactorsCount47 = [];\n\tlet primeFactorsCount48\
    \ = [];\n\tlet primeFactorsCount49 = [];\n\tlet primeFactorsCount50 = [];\n\t\
    let primeFactorsCount51 = [];\n\tlet primeFactorsCount52 = [];\n\tlet primeFactorsCount53\
    \ = [];\n\tlet primeFactorsCount54 = [];\n\t", "    var factors = [];\n    for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            n = n / i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tvar factorization = [];\n\tvar primeFactors = [];\n\tvar\
    \ primeFactorsIndex = [];\n\tvar factorizationIndex = [];\n\tvar factorizationIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndex = [];\n\tvar factorizationIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndex = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndex = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndex = [];\n\
    \tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex = [];\n\t\
    var factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex = [];\n\
    \tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar factorizationIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex",
  "\tlet factors = [];\n\tlet factorization = [];\n\tlet factorizationCount = 0;\n\
    \tlet factorizationIndex = 0;\n\tlet factorizationArray = [];\n\tlet factorizationArrayIndex\
    \ = 0;\n\tlet factorizationArrayLength = 0;\n\tlet factorizationArrayMaxLength\
    \ = 0;\n\tlet factorizationArrayMaxLengthIndex = 0;\n\tlet factorizationArrayMaxLengthValue\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2Index = 0;\n\tlet factorizationArrayMaxLengthValueIndex2Value\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex2ValueIndex2 = 0;\n\tlet factorizationArrayMaxLengthValueIndex",
  "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", " \
    \   var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        while(n\
    \ % i == 0){\n            factors.push(i);\n            n /= i;\n        }\n \
    \   }\n    return factors;\n}\n", "    var factors = [];\n    var factorization\
    \ = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        factors.push(i);\n\
    \    }\n    while(factors.length){\n        var f = factors.pop();\n        factorization[factors.length]\
    \ = f;\n        for(var i = factors.length - 1; i >= 0; i--){\n            if(n\
    \ % f === 0){\n                factors.splice(i, 1);\n                break;\n\
    \            }\n        }\n    }\n    return factorization;\n}\n", "\tvar factors\
    \ = [];\n\tvar factorization = [];\n\tvar primes = [];\n\tvar primeFactors = [];\n\
    \tvar primeFactorsIndex = [];\n\tvar primeFactorsIndexMap = {};\n\tvar factorizationIndex\
    \ = 0;\n\tvar factorizationIndexMap = {};\n\tvar factorizationIndexMap2 = {};\n\
    \tvar factorizationIndexMap3 = {};\n\tvar factorizationIndexMap4 = {};\n\tvar\
    \ factorizationIndexMap5 = {};\n\tvar factorizationIndexMap6 = {};\n\tvar factorizationIndexMap7\
    \ = {};\n\tvar factorizationIndexMap8 = {};\n\tvar factorizationIndexMap9 = {};\n\
    \tvar factorizationIndexMap10 = {};\n\tvar factorizationIndexMap11 = {};\n\tvar\
    \ factorizationIndexMap12 = {};\n\tvar factorizationIndexMap13 = {};\n\tvar factorizationIndexMap14\
    \ = {};\n\tvar factorizationIndexMap15 = {};\n\tvar factorizationIndexMap16 =\
    \ {};\n\tvar factorizationIndexMap17 = {};\n\tvar factorizationIndexMap18 = {};\n\
    \tvar factorizationIndexMap19 = {};\n\tvar factorizationIndexMap20 = {};\n\tvar\
    \ factorizationIndexMap21 = {};\n\tvar factorizationIndexMap22 = {};\n\tvar factorizationIndexMap23\
    \ = {};\n\tvar factorizationIndexMap24 = {};\n\tvar factorizationIndexMap25 =\
    \ {};\n\tvar factorizationIndexMap26 = {};\n\tvar factorizationIndexMap27 = {};\n\
    \tvar factorizationIndexMap28 = {};\n\tvar factorizationIndexMap29 = {};\n\tvar\
    \ factorizationIndexMap30 = {};\n\tvar factorizationIndexMap31 = {};\n\tvar factorizationIndexMap32\
    \ = {};\n\tvar factorizationIndexMap33 = {};\n\tvar factorizationIndexMap34 =\
    \ {};\n\tvar factorizationIndexMap35 = {};\n\tvar factorizationIndexMap36 = {};\n\
    \tvar factorizationIndexMap37 = {};\n\tvar factorizationIndexMap38 = {};\n\tvar\
    \ factorizationIndexMap39 = {};\n\tvar factorizationIndexMap40 = {};\n\tvar factorizationIndexMap41\
    \ = {};\n\tvar factorizationIndexMap42 = {};\n\tvar factorizationIndexMap43 =\
    \ {};\n\tvar factorizationIndexMap44 = {};\n\tvar factorizationIndexMap45 = {};\n\
    \tvar factorizationIndexMap46 = {};\n\tvar factorizationIndexMap47 = {};\n\tvar\
    \ factorizationIndexMap48 = {};\n\tvar factorizationIndexMap49 = {};\n\tvar factorizationIndexMap50\
    \ = {};\n\tvar factorizationIndexMap51 = {};\n\tvar factorizationIndexMap52 =\
    \ {};\n\tvar factorizationIndexMap53 = {};\n\tvar factorizationIndexMap54 = {};\n\
    \tvar factorizationIndexMap55 = {};\n\tvar factorizationIndexMap56 = {};\n\tvar\
    \ factorizationIndexMap57 = {};\n\tvar factorizationIndexMap58 = {};\n", "\tvar\
    \ factors = [];\n\tvar factor = 1;\n\t\n\twhile(factor*factor <= n){\n\t\twhile(n\
    \ % factor == 0){\n\t\t\tfactors.push(factor);\n\t\t\tn = n/factor;\n\t\t}\n\t\
    \tfactor++;\n\t}\n\tfactors.push(factor);\n\treturn factors;\n}\n", "    var factors\
    \ = [];\n    var factorization = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n            factors.push(factorization[factors.length-1]);\n\
    \            factorization.push(i);\n            factorization.push(factorization[factors.length-1]);\n\
    \        }\n    }\n    return factors;\n}\n", "    let factors = [];\n    let\
    \ factorization = [];\n    for(let i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i === 0){\n            factors.push(i);\n            factorization.push(n/i);\n\
    \        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\tvar factorization\
    \ = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tfactors.push(i);\n\
    \t}\n\t\n\twhile(factors.length > 0){\n\t\tvar f = factors.pop();\n\t\tfactorization.push(f);\n\
    \t\t\n\t\tfor(var i = factors.length - 1; i >= 0; i--){\n\t\t\tvar p = factors[i];\n\
    \t\t\tvar q = factorization[i];\n\t\t\t\n\t\t\tif(p * q == n){\n\t\t\t\tfactorization.splice(i,\
    \ 1);\n\t\t\t\tfactors.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\
    \treturn factorization;\n}\n", "    var factors = [];\n    for(var i = 2; i <=\
    \ Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            n = n/i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tvar factorization = [];\n\tvar primeFactors = [];\n\tvar\
    \ primeFactorsCount = 0;\n\tvar factorizationCount = 0;\n\tvar factorizationIndex\
    \ = 0;\n\t\n\tfactorization[0] = n;\n\t\n\twhile(factorizationIndex < factorization.length){\n\
    \t\tfactorizationCount = 0;\n\t\t\n\t\twhile(factorizationCount < factorization[factorizationIndex].length){\n\
    \t\t\tfactorizationCount++;\n\t\t\t\n\t\t\t//Check if current factor is prime\n\
    \t\t\tfor(var i = factorizationIndex; i < factorization.length; i++){\n\t\t\t\t\
    if(factorization[i].indexOf(factorization[factorizationIndex][i]) == -1){\n\t\t\
    \t\t\tfactorizationIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\
    \t\t//If current factor is not prime, add it to the factorization list\n\t\t\t\
    if(factorizationIndex < factorization.length){\n\t\t\t\tfactorization[factorizationIndex].push(factorizationCount);\n\
    \t\t\t}\n\t\t\t\n\t\t\t//If current factor is prime, add it to the prime factors\
    \ list\n\t\t\telse{\n\t\t\t\tprimeFactors[primeFactorsCount] = factorizationCount;\n\
    \t\t\t\tprimeFactorsCount++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfactorizationIndex++;\n\
    \t}\n\t\n\tfor(var i = primeFactorsCount - 1; i >= 0; i--){\n\t\tfactors.push(primeFactors[i]);\n\
    \t}\n\t\n\treturn factors;\n}\n", "\tvar factors = [];\n\tvar factorization =\
    \ [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tfactors.push(i);\n\t}\n\t\
    while(factors.length > 0){\n\t\tvar p = factors.pop();\n\t\tvar count = 0;\n\t\
    \tfor(var j = 0; j < factors.length; j++){\n\t\t\tif(factors[j] == p){\n\t\t\t\
    \tcount++;\n\t\t\t}\n\t\t}\n\t\tfactorization.push(p);\n\t\tfactorization.push(count);\n\
    \t}\n\treturn factorization;\n}\n", "    var factors = [];\n    var factorization\
    \ = factor(n);\n    for(var i=0;i<factorization.length;i++){\n        var factor\
    \ = factorization[i];\n        if(factors.indexOf(factor)==-1){\n            factors.push(factor);\n\
    \        }\n    }\n    return factors;\n}\n", "    var factors = [];\n    for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            n = n / i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", " \
    \   var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            factors.push(i);\n            n = n / i;\n        }\n\
    \    }\n    return factors;\n}\n", "    var factors = [];\n    for(var i = 2;\
    \ i <= Math.sqrt(n); i++){\n        if(n%i == 0){\n            factors.push(i);\n\
    \            n = n/i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "  var\
    \ factors = [];\n  for(var i = 2; i <= Math.sqrt(n); i++){\n    if(n % i == 0){\n\
    \      factors.push(i);\n      n /= i;\n    }\n  }\n  if(n > 1){\n    factors.push(n);\n\
    \  }\n  return factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <=\
    \ Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            n /= i;\n        }\n    }\n    if(n > 1){\n        factors.push(n);\n\
    \    }\n    return factors;\n}\n", "    var factors = [];\n    var primes = [];\n\
    \    var primeFactors = [];\n    var isPrime = true;\n    var isFactor = false;\n\
    \    var factor = 1;\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            isFactor = true;\n            factor *= i;\n       \
    \     factors.push(factor);\n        }\n    }\n    for(var i = factors.length\
    \ - 1; i >= 0; i--){\n        if(factors[i] == 1){\n            isFactor = true;\n\
    \            primes.push(factors[i]);\n        }\n    }\n    for(var i = primes.length\
    \ - 1; i >= 0; i--){\n        if(primes[i] == 1){\n            isPrime = true;\n\
    \            primeFactors.push(primes[i]);\n        }\n    }\n    if(isPrime ==\
    \ true){\n        for(var i = primeFactors.length - 1; i >= 0; i--){\n       \
    \     if(primeFactors[i] == 1){\n                factors.push(primes[i]);\n  \
    \          }\n        }\n    }\n    if(isFactor == true){\n        factors.push(1);\n\
    \    }\n    return factors;\n}\n", "\tvar factors = [];\n\tvar factorization =\
    \ [];\n\tvar primeFactors = [];\n\tvar primeFactorsIndex = [];\n\tvar primeFactorsIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndex = [];\n\
    \tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex = [];\n\t\
    var primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex = [];\n\
    \tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];", "\tvar factors = [];\n\tvar factorization = [];\n\t\n\tfor(var i = 2;\
    \ i <= Math.sqrt(n); i++){\n\t\tfactors.push(i);\n\t}\n\t\n\twhile(factors.length\
    \ > 0){\n\t\tvar f = factors.pop();\n\t\tfactorization.push(f);\n\t\tfor(var i\
    \ = 2; i <= Math.sqrt(f); i++){\n\t\t\tif(f%i == 0){\n\t\t\t\tfactors.push(i);\n\
    \t\t\t\tfactorization.push(f/i);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn factorization;\n\
    }\n", "\tlet factors = [];\n\tlet factorization = factorizeNumber(n);\n\tlet factorsCount\
    \ = factorization.length;\n\tlet factorsIndex = 0;\n\tlet factorsValues = [];\n\
    \tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\t", "\tlet factors = [];\n\tlet factorization = [];\n\tlet factorizationIndex\
    \ = 0;\n\tlet factorizationArray = [];\n\tlet factorizationArrayIndex = 0;\n\t\
    let factorizationArrayIndex2 = 0;\n\tlet factorizationArrayIndex3 = 0;\n\tlet\
    \ factorizationArrayIndex4 = 0;\n\tlet factorizationArrayIndex5 = 0;\n\tlet factorizationArrayIndex6\
    \ = 0;\n\tlet factorizationArrayIndex7 = 0;\n\tlet factorizationArrayIndex8 =\
    \ 0;\n\tlet factorizationArrayIndex9 = 0;\n\tlet factorizationArrayIndex10 = 0;\n\
    \tlet factorizationArrayIndex11 = 0;\n\tlet factorizationArrayIndex12 = 0;\n\t\
    let factorizationArrayIndex13 = 0;\n\tlet factorizationArrayIndex14 = 0;\n\tlet\
    \ factorizationArrayIndex15 = 0;\n\tlet factorizationArrayIndex16 = 0;\n\tlet\
    \ factorizationArrayIndex17 = 0;\n\tlet factorizationArrayIndex18 = 0;\n\tlet\
    \ factorizationArrayIndex19 = 0;\n\tlet factorizationArrayIndex20 = 0;\n\tlet\
    \ factorizationArrayIndex21 = 0;\n\tlet factorizationArrayIndex22 = 0;\n\tlet\
    \ factorizationArrayIndex23 = 0;\n\tlet factorizationArrayIndex24 = 0;\n\tlet\
    \ factorizationArrayIndex25 = 0;\n\tlet factorizationArrayIndex26 = 0;\n\tlet\
    \ factorizationArrayIndex27 = 0;\n\tlet factorizationArrayIndex28 = 0;\n\tlet\
    \ factorizationArrayIndex29 = 0;\n\tlet factorizationArrayIndex30 = 0;\n\tlet\
    \ factorizationArrayIndex31 = 0;\n\tlet factorizationArrayIndex32 = 0;\n\tlet\
    \ factorizationArrayIndex33 = 0;\n\tlet factorizationArrayIndex34 = 0;\n\tlet\
    \ factorizationArrayIndex35 = 0;\n\tlet factorizationArrayIndex36 = 0;\n\tlet\
    \ factorizationArrayIndex37 = 0;\n\tlet factorizationArrayIndex38 = 0;\n\tlet\
    \ factorizationArrayIndex39 = 0;\n\tlet factorizationArrayIndex40 = 0;\n\tlet\
    \ factorizationArrayIndex41 = 0;\n\tlet factorizationArrayIndex42 = 0;\n\tlet\
    \ factorizationArrayIndex43 = 0;\n\tlet factorizationArrayIndex44 = 0;\n\tlet\
    \ factorizationArrayIndex45 = 0;\n\tlet factorizationArrayIndex46 = 0;\n\tlet\
    \ factorizationArrayIndex47 = 0;\n\tlet factorizationArrayIndex48 = 0;\n\tlet\
    \ factorizationArrayIndex49 = 0;\n\tlet factorizationArrayIndex50 = 0;\n\tlet\
    \ factorizationArrayIndex51 = 0;\n\tlet factorizationArrayIndex52 = 0;\n\tlet\
    \ factorizationArrayIndex53 = 0;\n\tlet factorizationArrayIndex54 = 0;\n\tlet\
    \ factorizationArrayIndex", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            n\
    \ = n/i;\n        }\n    }\n    return factors;\n}\n", "    var factors = [];\n\
    \    var factorization = [];\n    var i;\n    for(i=2;i<=Math.sqrt(n);i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n            factorization.push(i);\n\
    \            while(factorization.length>0){\n                factors.push(factorization[factorization.length-1]);\n\
    \                factorization.pop();\n            }\n        }\n    }\n    return\
    \ factors;\n}\n", "\tlet factors = [];\n\tlet factorization = [];\n\tlet factorCount\
    \ = 0;\n\tlet primeFactors = [];\n\tlet primeFactorCount = 0;\n\tlet primeFactorsArray\
    \ = [];\n\tlet primeFactorsArrayCount = 0;\n\tlet primeFactorsArrayCount2 = 0;\n\
    \tlet primeFactorsArrayCount3 = 0;\n\tlet primeFactorsArrayCount4 = 0;\n\tlet\
    \ primeFactorsArrayCount5 = 0;\n\tlet primeFactorsArrayCount6 = 0;\n\tlet primeFactorsArrayCount7\
    \ = 0;\n\tlet primeFactorsArrayCount8 = 0;\n\tlet primeFactorsArrayCount9 = 0;\n\
    \tlet primeFactorsArrayCount10 = 0;\n\tlet primeFactorsArrayCount11 = 0;\n\tlet\
    \ primeFactorsArrayCount12 = 0;\n\tlet primeFactorsArrayCount13 = 0;\n\tlet primeFactorsArrayCount14\
    \ = 0;\n\tlet primeFactorsArrayCount15 = 0;\n\tlet primeFactorsArrayCount16 =\
    \ 0;\n\tlet primeFactorsArrayCount17 = 0;\n\tlet primeFactorsArrayCount18 = 0;\n\
    \tlet primeFactorsArrayCount19 = 0;\n\tlet primeFactorsArrayCount20 = 0;\n\tlet\
    \ primeFactorsArrayCount21 = 0;\n\tlet primeFactorsArrayCount22 = 0;\n\tlet primeFactorsArrayCount23\
    \ = 0;\n\tlet primeFactorsArrayCount24 = 0;\n\tlet primeFactorsArrayCount25 =\
    \ 0;\n\tlet primeFactorsArrayCount26 = 0;\n\tlet primeFactorsArrayCount27 = 0;\n\
    \tlet primeFactorsArrayCount28 = 0;\n\tlet primeFactorsArrayCount29 = 0;\n\tlet\
    \ primeFactorsArrayCount30 = 0;\n\tlet primeFactorsArrayCount31 = 0;\n\tlet primeFactorsArrayCount32\
    \ = 0;\n\tlet primeFactorsArrayCount33 = 0;\n\tlet primeFactorsArrayCount34 =\
    \ 0;\n\tlet primeFactorsArrayCount35 = 0;\n\tlet primeFactorsArrayCount36 = 0;\n\
    \tlet primeFactorsArrayCount37 = 0;\n\tlet primeFactorsArrayCount38 = 0;\n\tlet\
    \ primeFactorsArrayCount39 = 0;\n\tlet primeFactorsArrayCount40 = 0;\n\tlet primeFactorsArrayCount41\
    \ = 0;\n\tlet primeFactorsArrayCount42 = 0;\n\tlet primeFactorsArrayCount43 =\
    \ 0;\n\tlet primeFactorsArrayCount44 = 0;\n\tlet primeFactorsArrayCount45 = 0;\n\
    \tlet primeFactorsArrayCount46 = 0;\n\tlet primeFactorsArrayCount47 = 0;\n\tlet\
    \ primeFactorsArrayCount48 = 0;", "    var factors = [];\n    var factorization\
    \ = [];\n    var i;\n    for(i=2;i<=Math.sqrt(n);i++){\n        if(n % i == 0){\n\
    \            factors.push(i);\n            factors.push(factorization[factors.length-1]);\n\
    \            factorization[factors.length-1]++;\n        }\n    }\n    return\
    \ factors;\n}\n", "\tvar factors = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\t\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "    var factors = [];\n    for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n        if(n%i===0){\n            factors.push(i);\n            n = n/i;\n\
    \        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\tfor(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\tfactors.push(n);\n\treturn factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    let factors = [];\n\tlet factorization = factorizeNumber(n);\n\tlet factorsCount\
    \ = factorization.length;\n\tlet factorsIndex = 0;\n\tlet factorsValues = [];\n\
    \tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\t", "    var factors = [];\n    for(var i=2; i<=Math.sqrt(n); i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n            n = n/i;\n\
    \        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\tfor(var\
    \ i=2;i<=Math.sqrt(n);i++){\n\t\tif(n%i==0){\n\t\t\tfactors.push(i);\n\t\t\tn\
    \ = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var factors = [];\n    var\
    \ factorization = factor(n);\n    for(var i=0;i<factorization.length;i++){\n \
    \       factors.push(factorization[i]);\n    }\n    return factors;\n}\n", "\t\
    var factors = [];\n\tvar factorization = factorizeNumber(n);\n\tfor(var i = 0;\
    \ i<factorization.length; i++){\n\t\tfactors.push(factorization[i]);\n\t}\n\t\
    return factors;\n}\n", "\tlet factors = [];\n\tlet factorization = factor(n);\n\
    \tlet factorCount = 1;\n\tfor(let i = 0; i < factorization.length; i++){\n\t\t\
    factors.push(factorCount);\n\t\tfactorCount *= factorization[i];\n\t}\n\treturn\
    \ factors;\n}\n", "\tlet factors = [];\n\tlet primeFactors = [];\n\tlet primeFactorsCount\
    \ = 0;\n\tlet isPrime = true;\n\tlet factorsCount = 0;\n\tlet isPrimeFactor =\
    \ true;\n\tlet factorsCount2 = 0;\n\tlet isPrimeFactor2 = true;\n\tlet factorsCount3\
    \ = 0;\n\tlet isPrimeFactor3 = true;\n\tlet factorsCount4 = 0;\n\tlet isPrimeFactor4\
    \ = true;\n\tlet factorsCount5 = 0;\n\tlet isPrimeFactor5 = true;\n\tlet factorsCount6\
    \ = 0;\n\tlet isPrimeFactor6 = true;\n\tlet factorsCount7 = 0;\n\tlet isPrimeFactor7\
    \ = true;\n\tlet factorsCount8 = 0;\n\tlet isPrimeFactor8 = true;\n\tlet factorsCount9\
    \ = 0;\n\tlet isPrimeFactor9 = true;\n\tlet factorsCount10 = 0;\n\tlet isPrimeFactor10\
    \ = true;\n\tlet factorsCount11 = 0;\n\tlet isPrimeFactor11 = true;\n\tlet factorsCount12\
    \ = 0;\n\tlet isPrimeFactor12 = true;\n\tlet factorsCount13 = 0;\n\tlet isPrimeFactor13\
    \ = true;\n\tlet factorsCount14 = 0;\n\tlet isPrimeFactor14 = true;\n\tlet factorsCount15\
    \ = 0;\n\tlet isPrimeFactor15 = true;\n\tlet factorsCount16 = 0;\n\tlet isPrimeFactor16\
    \ = true;\n\tlet factorsCount17 = 0;\n\tlet isPrimeFactor17 = true;\n\tlet factorsCount18\
    \ = 0;\n\tlet isPrimeFactor18 = true;\n\tlet factorsCount19 = 0;\n\tlet isPrimeFactor19\
    \ = true;\n\tlet factorsCount20 = 0;\n\tlet isPrimeFactor20 = true;\n\tlet factorsCount21\
    \ = 0;\n\tlet isPrimeFactor21 = true;\n\tlet factorsCount22 = 0;\n\tlet isPrimeFactor22\
    \ = true;\n\tlet factorsCount23 = 0;\n\tlet isPrimeFactor23 = true;\n\tlet factorsCount24\
    \ = 0;\n\tlet isPrimeFactor24 = true;\n\tlet factorsCount25 = 0;\n\tlet isPrimeFactor25\
    \ = true;\n\tlet factorsCount26 = 0;\n\tlet isPrimeFactor26 = true;\n\tlet factorsCount27\
    \ = 0;\n\tlet isPrimeFactor27 = true;\n\tlet factorsCount28 = 0;\n\tlet isPrimeFactor28\
    \ = true;\n\tlet factorsCount29 = 0;\n\tlet isPrimeFactor29", "\tvar factors =\
    \ [];\n\tvar factorization = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\tfactors.push(i);\n\t}\n\t\n\tfor(var j = 0; j < factors.length; j++){\n\t\t\
    factorization[factors[j]] = 0;\n\t}\n\t\n\tfor(var k = 0; k < factors.length;\
    \ k++){\n\t\tfor(var l = 0; l < factors.length; l++){\n\t\t\tif(factors[k] ==\
    \ factors[l]){\n\t\t\t\tfactorization[factors[k]] += 1;\n\t\t\t\tfactorization[factors[l]]\
    \ -= 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(var m = 0; m < factors.length; m++){\n\
    \t\tfactors.push(factors[m]);\n\t}\n\t\n\tfor(var n = 0; n < factors.length; n++){\n\
    \t\tfactors.push(factors[n]);\n\t}\n\t\n\tfor(var o = 0; o < factors.length; o++){\n\
    \t\tfactors.push(factors[o]);\n\t}\n\t\n\tfor(var p = 0; p < factors.length; p++){\n\
    \t\tfactors.push(factors[p]);\n\t}\n\t\n\tfor(var q = 0; q < factors.length; q++){\n\
    \t\tfactors.push(factors[q]);\n\t}\n\t\n\tfor(var r = 0; r < factors.length; r++){\n\
    \t\tfactors.push(factors[r]);\n\t}\n\t\n\tfor(var s = 0; s < factors.length; s++){\n\
    \t\tfactors.push(factors[s]);\n\t}\n\t\n\tfor(var t = 0; t < factors.length; t++){\n\
    \t\tfactors.push(factors[t]);\n\t}\n\t\n\tfor(var u = 0; u < factors.length; u++){\n\
    \t\tfactors.push(factors[u]);\n\t}\n\t\n\tfor(var v = 0; v < factors.length; v++){\n\
    \t\tfactors.push(factors[v]);\n\t}\n\t\n\tfor(var w = 0; w < factors.length; w++){\n\
    \t\tfactors.push(factors[w]);\n\t}\n\t\n\tfor(var x = 0; x < factors.length; x++){\n\
    \t\tfactors.push(factors[x]);\n\t}\n\t\n\tfor(var y = 0; y < factors.length; y++){\n\
    \t\tfactors.push(factors[y]);\n\t}\n\t\n\tfor(var z = 0; z < factors.length; z++){\n\
    \t\tfactors.push(factors[z]);\n\t}\n\t\n\tfor(var aa = 0; aa < factors.length;\
    \ aa++){\n\t\tfactors.push(factors[aa]);\n\t}\n\t\n\tfor(var ab = 0; ab < factors.length;\
    \ ab++){\n\t\tfactors.push(factors[ab]);\n\t}\n\t\n\tfor(var ", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    let\
    \ factors = [];\n    let factorization = factor(n);\n    for(let i = 0; i < factorization.length;\
    \ i++){\n        factors.push(factorization[i]);\n    }\n    return factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n  \
    \      if(n % i == 0){\n            factors.push(i);\n            n = n / i;\n\
    \        }\n    }\n    return factors;\n}\n", "\tlet factors = [];\n\tlet factorization\
    \ = factor(n);\n\tlet factorsCount = factorization.length;\n\tlet factorsIndex\
    \ = 0;\n\tlet factorsValue = 1;\n\tlet factorsIndexValue = 1;\n\tlet factorsValueValue\
    \ = 1;\n\tlet factorsValueValueValue = 1;\n\tlet factorsValueValueValueValue =\
    \ 1;\n\tlet factorsValueValueValueValueValue = 1;\n\tlet factorsValueValueValueValueValueValue\
    \ = 1;\n\tlet factorsValueValueValueValueValueValueValue = 1;\n\tlet factorsValueValueValueValueValueValueValueValue\
    \ = 1;\n\tlet factorsValueValueValueValueValueValueValueValue = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValue\
    \ = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValue = 1;\n\tlet\
    \ factorsValueValueValueValueValueValueValueValueValue = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValue\
    \ = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\
    \tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue\
    \ = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\
    \tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue\
    \ = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\
    \tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue\
    \ = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\
    \tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue\
    \ = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\
    \tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue\
    \ = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\
    \tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue\
    \ = 1;\n\tlet factorsValueValueValueValueValueValueValueValueValueValue = 1;\n\
    \tlet factorsValueValueValueValueValueValueValueValue", "\tvar factors = [];\n\
    \tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tlet factors = [];\n\t\
    let factorization = [];\n\tlet primes = [];\n\tlet primeFactors = [];\n\tlet primeFactorsCount\
    \ = [];\n\tlet primeFactorsCountSum = 0;\n\tlet primeFactorsSum = 0;\n\tlet primeFactorsSumCount\
    \ = 0;\n\tlet primeFactorsSumCountSum = 0;\n\tlet primeFactorsSumCountSumCount\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSum = 0;\n\tlet primeFactorsSumCountSumCountSumCount\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSum = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCount\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSum = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCount\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSum = 0;\n\t\
    let primeFactorsSumCountSumCountSumCountSumCountSumCountSumCount = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCount\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSumCount\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCountSumCountSumCountSumCountSum\
    \ = 0;\n\tlet primeFactorsSumCountSumCountSumCount", "    var factors = [];\n\
    \    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      factors.push(i);\n            n = n / i;\n        }\n    }\n    return\
    \ factors;\n}\n", "\tlet factors = [];\n\tlet factorization = factor(n);\n\tlet\
    \ primeFactors = factorization[0];\n\tlet primeFactorsCount = factorization[1];\n\
    \tlet primeFactorsArray = [];\n\tlet primeFactorsArrayCount = 0;\n\tlet primeFactorsArraySum\
    \ = 0;\n\tlet primeFactorsArraySumCount = 0;\n\tlet primeFactorsArraySumCount2\
    \ = 0;\n\tlet primeFactorsArraySumCount3 = 0;\n\tlet primeFactorsArraySumCount4\
    \ = 0;\n\tlet primeFactorsArraySumCount5 = 0;\n\tlet primeFactorsArraySumCount6\
    \ = 0;\n\tlet primeFactorsArraySumCount7 = 0;\n\tlet primeFactorsArraySumCount8\
    \ = 0;\n\tlet primeFactorsArraySumCount9 = 0;\n\tlet primeFactorsArraySumCount10\
    \ = 0;\n\tlet primeFactorsArraySumCount11 = 0;\n\tlet primeFactorsArraySumCount12\
    \ = 0;\n\tlet primeFactorsArraySumCount13 = 0;\n\tlet primeFactorsArraySumCount14\
    \ = 0;\n\tlet primeFactorsArraySumCount15 = 0;\n\tlet primeFactorsArraySumCount16\
    \ = 0;\n\tlet primeFactorsArraySumCount17 = 0;\n\tlet primeFactorsArraySumCount18\
    \ = 0;\n\tlet primeFactorsArraySumCount19 = 0;\n\tlet primeFactorsArraySumCount20\
    \ = 0;\n\tlet primeFactorsArraySumCount21 = 0;\n\tlet primeFactorsArraySumCount22\
    \ = 0;\n\tlet primeFactorsArraySumCount23 = 0;\n\tlet primeFactorsArraySumCount24\
    \ = 0;\n\tlet primeFactorsArraySumCount25 = 0;\n\tlet primeFactorsArraySumCount26\
    \ = 0;\n\tlet primeFactorsArraySumCount27 = 0;\n\tlet primeFactorsArraySumCount28\
    \ = 0;\n\tlet primeFactorsArraySumCount29 = 0;\n\tlet primeFactorsArraySumCount30\
    \ = 0;\n\tlet primeFactorsArraySumCount31 = 0;\n\tlet primeFactorsArraySumCount32\
    \ = 0;\n\tlet primeFactorsArraySumCount33 = 0;\n\tlet primeFactorsArraySumCount34\
    \ = 0;\n\tlet primeFactorsArraySumCount35 = 0;\n\tlet primeFactorsArraySumCount36\
    \ = 0;\n\tlet primeFactorsArraySumCount37 = 0;\n\tlet primeFactorsArraySumCount38\
    \ = 0;\n\tlet primeFactorsArraySumCount39 = 0;\n\tlet primeFactorsArraySumCount40\
    \ = 0;\n\tlet primeFactorsArraySumCount41 = 0;\n\tlet primeFactorsArraySum", " \
    \   var factors = [];\n    for(var i=2; i<=Math.sqrt(n); i++){\n        if(n%i==0){\n\
    \            factors.push(i);\n            n = n/i;\n        }\n    }\n    return\
    \ factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn\
    \ factors;\n}\n", "    var factors = [];\n    for(var i=2; i<=Math.sqrt(n); i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n            n = n/i;\n\
    \        }\n    }\n    return factors;\n}\n", "\tlet factors = [];\n\tlet factorization\
    \ = factor(n);\n\tlet primeFactors = factorization[0];\n\tlet primeFactorsCount\
    \ = factorization[1];\n\tlet primeFactorsArray = [];\n\tlet primeFactorsArrayCount\
    \ = 0;\n\tlet primeFactorsArrayCount2 = 0;\n\tlet primeFactorsArrayCount3 = 0;\n\
    \tlet primeFactorsArrayCount4 = 0;\n\tlet primeFactorsArrayCount5 = 0;\n\tlet\
    \ primeFactorsArrayCount6 = 0;\n\tlet primeFactorsArrayCount7 = 0;\n\tlet primeFactorsArrayCount8\
    \ = 0;\n\tlet primeFactorsArrayCount9 = 0;\n\tlet primeFactorsArrayCount10 = 0;\n\
    \tlet primeFactorsArrayCount11 = 0;\n\tlet primeFactorsArrayCount12 = 0;\n\tlet\
    \ primeFactorsArrayCount13 = 0;\n\tlet primeFactorsArrayCount14 = 0;\n\tlet primeFactorsArrayCount15\
    \ = 0;\n\tlet primeFactorsArrayCount16 = 0;\n\tlet primeFactorsArrayCount17 =\
    \ 0;\n\tlet primeFactorsArrayCount18 = 0;\n\tlet primeFactorsArrayCount19 = 0;\n\
    \tlet primeFactorsArrayCount20 = 0;\n\tlet primeFactorsArrayCount21 = 0;\n\tlet\
    \ primeFactorsArrayCount22 = 0;\n\tlet primeFactorsArrayCount23 = 0;\n\tlet primeFactorsArrayCount24\
    \ = 0;\n\tlet primeFactorsArrayCount25 = 0;\n\tlet primeFactorsArrayCount26 =\
    \ 0;\n\tlet primeFactorsArrayCount27 = 0;\n\tlet primeFactorsArrayCount28 = 0;\n\
    \tlet primeFactorsArrayCount29 = 0;\n\tlet primeFactorsArrayCount30 = 0;\n\tlet\
    \ primeFactorsArrayCount31 = 0;\n\tlet primeFactorsArrayCount32 = 0;\n\tlet primeFactorsArrayCount33\
    \ = 0;\n\tlet primeFactorsArrayCount34 = 0;\n\tlet primeFactorsArrayCount35 =\
    \ 0;\n\tlet primeFactorsArrayCount36 = 0;\n\tlet primeFactorsArrayCount37 = 0;\n\
    \tlet primeFactorsArrayCount38 = 0;\n\tlet primeFactorsArrayCount39 = 0;\n\tlet\
    \ primeFactorsArrayCount40 = 0;\n\tlet primeFactorsArrayCount41 = 0;\n\tlet primeFactorsArrayCount42\
    \ = 0;\n\tlet primeFactorsArrayCount43 = 0;\n\tlet primeFactorsArrayCount44 =\
    \ 0;\n\tlet primeFactorsArrayCount45 = 0;\n\tlet primeFactorsArrayCount46 = 0;\n\
    \tlet primeFactorsArrayCount47 = 0;\n\tlet primeFactorsArray", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", " \
    \   var factors = [];\n    var factorization = [];\n    for(var i=2; i<=n; i++){\n\
    \        var count = 0;\n        for(var j=0; j<factors.length; j++){\n      \
    \      if(n % i == 0){\n                count++;\n                factors[j] =\
    \ i;\n            }\n        }\n        if(count > 0){\n            factors.push(i);\n\
    \            factorization.push(count);\n        }\n    }\n    return factorization;\n\
    }\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n  \
    \      if(n % i == 0){\n            factors.push(i);\n            n /= i;\n  \
    \      }\n    }\n    factors.push(n);\n    return factors;\n}\n", "    var factors\
    \ = [];\n    var factorization = [];\n    \n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        for(var j = 0; j < factors.length; j++){\n            if(n %\
    \ i == 0){\n                factors.push(factors[j]);\n                factorization.push(i);\n\
    \            }\n        }\n    }\n    \n    return factors;\n}\n", "    var factors\
    \ = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        while(n % i == 0){\n\
    \            factors.push(i);\n            n = n/i;\n        }\n    }\n    return\
    \ factors;\n}\n", "\tvar factors = [];\n\tvar factorization = [];\n\tvar primeFactors\
    \ = [];\n\tvar primeFactorsCount = 0;\n\tvar factorizationCount = 0;\n\tvar factorizationMaxCount\
    \ = 0;\n\tvar factorizationMaxCountIndex = 0;\n\tvar factorizationMaxCountValue\
    \ = 0;\n\tvar factorizationMaxCountValueIndex = 0;\n\tvar factorizationMaxCountValueIndex2\
    \ = 0;\n\tvar factorizationMaxCountValueIndex2 = 0;\n\tvar factorizationMaxCountValueIndex3\
    \ = 0;\n\tvar factorizationMaxCountValueIndex3 = 0;\n\tvar factorizationMaxCountValueIndex4\
    \ = 0;\n\tvar factorizationMaxCountValueIndex4 = 0;\n\tvar factorizationMaxCountValueIndex5\
    \ = 0;\n\tvar factorizationMaxCountValueIndex5 = 0;\n\tvar factorizationMaxCountValueIndex6\
    \ = 0;\n\tvar factorizationMaxCountValueIndex6 = 0;\n\tvar factorizationMaxCountValueIndex7\
    \ = 0;\n\tvar factorizationMaxCountValueIndex7 = 0;\n\tvar factorizationMaxCountValueIndex8\
    \ = 0;\n\tvar factorizationMaxCountValueIndex8 = 0;\n\tvar factorizationMaxCountValueIndex9\
    \ = 0;\n\tvar factorizationMaxCountValueIndex9 = 0;\n\tvar factorizationMaxCountValueIndex10\
    \ = 0;\n\tvar factorizationMaxCountValueIndex10 = 0;\n\tvar factorizationMaxCountValueIndex11\
    \ = 0;\n\tvar factorizationMaxCountValueIndex11 = 0;\n\tvar factorizationMaxCountValueIndex12\
    \ = 0;\n\tvar factorizationMaxCountValueIndex12 = 0;\n\tvar factorizationMaxCountValueIndex13\
    \ = 0;\n\tvar factorizationMaxCountValueIndex13 = 0;\n\tvar factorizationMaxCountValueIndex14\
    \ = 0;\n\tvar factorizationMaxCountValueIndex14 = 0;\n\tvar factorizationMaxCountValueIndex15\
    \ = 0;\n\tvar factorizationMaxCountValueIndex15 = 0;\n\tvar factorizationMaxCountValueIndex16\
    \ = 0;\n\tvar factorizationMaxCountValueIndex16 = 0;\n\tvar factorizationMaxCountValueIndex17\
    \ = 0;\n\tvar factorizationMaxCountValueIndex17 = 0;\n\tvar factorizationMaxCountValueIndex18\
    \ = 0;\n\tvar factorizationMaxCountValueIndex18 = 0;\n\tvar factorizationMaxCountValueIndex19\
    \ = 0;\n\tvar factorizationMaxCountValueIndex19 = 0;\n\tvar factorizationMaxCountValueIndex20\
    \ = 0;\n\tvar factorizationMaxCountValueIndex20 = 0;\n\tvar factorizationMaxCountValueIndex21\
    \ = 0;\n\tvar factorizationMaxCountValueIndex21 = 0;\n\tvar factorizationMaxCountValueIndex22\
    \ = 0;\n\tvar factorizationMaxCountValueIndex22 = 0;\n\tvar factorizationMaxCountValueIndex23\
    \ = 0;\n\tvar factorizationMaxCountValueIndex23 = 0;\n\tvar factorizationMaxCountValueIndex24\
    \ = 0;\n\tvar factorizationMaxCountValueIndex24 = 0;\n\tvar ", "  var factors\
    \ = [];\n  for(var i = 2; i <= Math.sqrt(n); i++){\n    if(n % i == 0){\n    \
    \  factors.push(i);\n      n = n / i;\n    }\n  }\n  return factors;\n}\n", "\t\
    var factors = [];\n\tvar factorization = [];\n\t\n\tfor(var i = 1; i <= n; i++){\n\
    \t\tfactors.push(1);\n\t\tfactorization[i] = 1;\n\t\t\n\t\tfor(var j = 1; j <=\
    \ Math.sqrt(n); j++){\n\t\t\tif(n % j == 0){\n\t\t\t\tfactors[factors.length -\
    \ 1] *= j;\n\t\t\t\tfactorization[j]++;\n\t\t\t\t\n\t\t\t\tif(factorization[j]\
    \ == i){\n\t\t\t\t\tfactors.push(j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t}\n\t}\n\t\n\treturn factors;\n}\n", "\tlet factors = [];\n\tlet factorization\
    \ = [];\n\tlet factorizationIndex = 0;\n\tlet factorizationIndexMax = factorizationIndex\
    \ + Math.ceil(Math.log(n) / Math.log(2));\n\tlet factorizationIndexMin = factorizationIndex\
    \ - Math.ceil(Math.log(n) / Math.log(2));\n\tlet factorizationIndexMaxInt = factorizationIndexMax\
    \ * Math.pow(2,32);\n\tlet factorizationIndexMinInt = factorizationIndexMin *\
    \ Math.pow(2,32);\n\tlet factorizationIndexMaxFloat = factorizationIndexMaxInt\
    \ * Math.pow(2,32);\n\tlet factorizationIndexMinFloat = factorizationIndexMinInt\
    \ * Math.pow(2,32);\n\tlet factorizationIndexMaxInt = factorizationIndexMaxInt.toFixed();\n\
    \tlet factorizationIndexMinInt = factorizationIndexMinInt.toFixed();\n\tlet factorizationIndexMaxFloat\
    \ = factorizationIndexMaxFloat.toFixed();\n\tlet factorizationIndexMinFloat =\
    \ factorizationIndexMinFloat.toFixed();\n\tlet factorizationIndexMax = factorizationIndexMax.toFixed();\n\
    \tlet factorizationIndexMin = factorizationIndexMin.toFixed();\n\tlet factorizationIndexMaxInt\
    \ = factorizationIndexMaxInt.toString();\n\tlet factorizationIndexMinInt = factorizationIndexMinInt.toString();\n\
    \tlet factorizationIndexMaxFloat = factorizationIndexMaxFloat.toString();\n\t\
    let factorizationIndexMinFloat = factorizationIndexMinFloat.toString();\n\tlet\
    \ factorizationIndexMax = factorizationIndexMax.toString();\n\tlet factorizationIndexMin\
    \ = factorizationIndexMin.toString();\n\tlet factorizationIndexMaxInt = factorizationIndexMaxInt.split(\"\
    \");\n\tlet factorizationIndexMinInt = factorizationIndexMinInt.split(\"\");\n\
    \tlet factorizationIndexMaxFloat = factorizationIndexMaxFloat.split(\"\");\n\t\
    let factorizationIndexMinFloat = factorizationIndexMinFloat.split(\"\");\n\tlet\
    \ factorizationIndexMax = factorizationIndexMax.split(\"\");\n\tlet factorizationIndexMin\
    \ = factorizationIndexMin.split(\"\");\n\tlet factorizationIndexMaxInt = factorizationIndexMaxInt.map(Number);\n\
    \tlet factorizationIndexMinInt = factorizationIndexMinInt.map(Number);\n\tlet\
    \ factorizationIndexMaxFloat = factorizationIndexMaxFloat.map(Number);\n\tlet\
    \ factorizationIndexMinFloat = factorizationIndexMinFloat.map(Number);\n\tlet\
    \ factorizationIndexMax = factorizationIndexMax.map(Number);\n", "\tlet factors\
    \ = [];\n\tlet factorization = [];\n\tlet factorizationArray = [];\n\tlet factorizationArray2\
    \ = [];\n\tlet factorizationArray3 = [];\n\tlet factorizationArray4 = [];\n\t\
    let factorizationArray5 = [];\n\tlet factorizationArray6 = [];\n\tlet factorizationArray7\
    \ = [];\n\tlet factorizationArray8 = [];\n\tlet factorizationArray9 = [];\n\t\
    let factorizationArray10 = [];\n\tlet factorizationArray11 = [];\n\tlet factorizationArray12\
    \ = [];\n\tlet factorizationArray13 = [];\n\tlet factorizationArray14 = [];\n\t\
    let factorizationArray15 = [];\n\tlet factorizationArray16 = [];\n\tlet factorizationArray17\
    \ = [];\n\tlet factorizationArray18 = [];\n\tlet factorizationArray19 = [];\n\t\
    let factorizationArray20 = [];\n\tlet factorizationArray21 = [];\n\tlet factorizationArray22\
    \ = [];\n\tlet factorizationArray23 = [];\n\tlet factorizationArray24 = [];\n\t\
    let factorizationArray25 = [];\n\tlet factorizationArray26 = [];\n\tlet factorizationArray27\
    \ = [];\n\tlet factorizationArray28 = [];\n\tlet factorizationArray29 = [];\n\t\
    let factorizationArray30 = [];\n\tlet factorizationArray31 = [];\n\tlet factorizationArray32\
    \ = [];\n\tlet factorizationArray33 = [];\n\tlet factorizationArray34 = [];\n\t\
    let factorizationArray35 = [];\n\tlet factorizationArray36 = [];\n\tlet factorizationArray37\
    \ = [];\n\tlet factorizationArray38 = [];\n\tlet factorizationArray39 = [];\n\t\
    let factorizationArray40 = [];\n\tlet factorizationArray41 = [];\n\tlet factorizationArray42\
    \ = [];\n\tlet factorizationArray43 = [];\n\tlet factorizationArray44 = [];\n\t\
    let factorizationArray45 = [];\n\tlet factorizationArray46 = [];\n\tlet factorizationArray47\
    \ = [];\n\tlet factorizationArray48 = [];\n\tlet factorizationArray49 = [];\n\t\
    let factorizationArray50 = [];\n\tlet factorizationArray51 = [];\n\tlet factorizationArray52\
    \ = [];\n\tlet factorizationArray53 = [];\n\tlet factorizationArray54 = [];\n\t\
    let factorizationArray55 = [];\n\tlet factorizationArray56 = [];\n\tlet factorizationArray57\
    \ = [];\n\tlet factorizationArray58 = [];\n\tlet factorizationArray59 = [];\n\t\
    let factorizationArray60 = [];\n\tlet factorizationArray61 = [];\n\tlet factor",
  "\tlet factors = [];\n\tlet factorization = [];\n\tlet primeFactors = [];\n\tlet\
    \ primeFactorsCount = 0;\n\tlet factorizationCount = 0;\n\tlet factorizationIndex\
    \ = 0;\n\tlet primeFactorsIndex = 0;\n\tlet primeFactorsCountIndex = 0;\n\tlet\
    \ factorizationIndexMax = factorization.length - 1;\n\tlet primeFactorsIndexMax\
    \ = primeFactors.length - 1;\n\tlet factorizationCountMax = factors.length - 1;\n\
    \tlet factorizationIndexMaxIndex = factorizationIndexMax - 1;\n\tlet primeFactorsIndexMaxIndex\
    \ = primeFactorsIndexMax - 1;\n\tlet factorizationCountMaxIndex = factorizationCountMax\
    \ - 1;\n\tlet primeFactorsCountMaxIndex = primeFactorsCountMax - 1;\n\tlet factorizationCountMaxIndex2\
    \ = factorizationCountMaxIndex - 1;\n\tlet primeFactorsCountMaxIndex2 = primeFactorsCountMaxIndex\
    \ - 1;\n\tlet factorizationCountMaxIndex3 = factorizationCountMaxIndex2 - 1;\n\
    \tlet primeFactorsCountMaxIndex3 = primeFactorsCountMaxIndex2 - 1;\n\tlet factorizationCountMaxIndex4\
    \ = factorizationCountMaxIndex3 - 1;\n\tlet primeFactorsCountMaxIndex4 = primeFactorsCountMaxIndex3\
    \ - 1;\n\tlet factorizationCountMaxIndex5 = factorizationCountMaxIndex4 - 1;\n\
    \tlet primeFactorsCountMaxIndex5 = primeFactorsCountMaxIndex4 - 1;\n\tlet factorizationCountMaxIndex6\
    \ = factorizationCountMaxIndex5 - 1;\n\tlet primeFactorsCountMaxIndex6 = primeFactorsCountMaxIndex5\
    \ - 1;\n\tlet factorizationCountMaxIndex7 = factorizationCountMaxIndex6 - 1;\n\
    \tlet primeFactorsCountMaxIndex7 = primeFactorsCountMaxIndex6 - 1;\n\tlet factorizationCountMaxIndex8\
    \ = factorizationCountMaxIndex7 - 1;\n\tlet primeFactorsCountMaxIndex8 = primeFactorsCountMaxIndex7\
    \ - 1;\n\tlet factorizationCountMaxIndex9 = factorizationCountMaxIndex8 - 1;\n\
    \tlet primeFactorsCountMaxIndex9 = primeFactorsCountMaxIndex8 - 1;\n\tlet factorizationCountMaxIndex10\
    \ = factorizationCountMaxIndex9 - 1;\n\tlet primeFactorsCountMaxIndex10 = primeFactorsCountMaxIndex9\
    \ - 1;\n\tlet factorizationCountMaxIndex11 = factorizationCountMaxIndex10 - 1;\n\
    \tlet primeFactorsCountMaxIndex11 = primeFactorsCountMaxIndex10 - 1;\n\tlet factorizationCountMax",
  "\tvar factors = [];\n\tvar factorization = [];\n\t\n\tfor(var i = 1; i <= n; i++){\n\
    \t\tfactors.push(i);\n\t\tfactorization[i] = 0;\n\t\t\n\t\tfor(var j = 0; j <\
    \ factors.length; j++){\n\t\t\tif(n % i == 0){\n\t\t\t\tfactorization[i] += factors[j];\n\
    \t\t\t\tfactors.splice(j, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn\
    \ factorization;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            n\
    \ = n / i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\
    \tvar factorization = [];\n\tvar primeFactors = [];\n\tvar primeFactorsCount =\
    \ 0;\n\tvar isPrime = true;\n\tvar isPrimeCount = 0;\n\tvar isPrimeFactor = true;\n\
    \tvar isPrimeFactorCount = 0;\n\tvar isPrimeFactorOfPrimeFactor = true;\n\tvar\
    \ isPrimeFactorOfPrimeFactorCount = 0;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactor\
    \ = true;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactorCount = 0;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactor\
    \ = true;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorCount = 0;\n\
    \tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactor = true;\n\
    \tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorCount =\
    \ 0;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactor\
    \ = true;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorCount\
    \ = 0;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactor\
    \ = true;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorCount\
    \ = 0;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactor\
    \ = true;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorCount\
    \ = 0;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorCount\
    \ = 0;\n\tvar isPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactorOf",
  "    let factors = [];\n    for(let i=2; i<=Math.sqrt(n); i++){\n        if(n%i\
    \ === 0){\n            factors.push(i);\n            n = n/i;\n        }\n   \
    \ }\n    return factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            while(n\
    \ % i == 0){\n                n /= i;\n            }\n        }\n    }\n    return\
    \ factors;\n}\n", "    var factors = [];\n    var factorization = [];\n    var\
    \ factor = 1;\n    while(factor<n){\n        factorization[factor] = 1;\n    \
    \    factor++;\n    }\n    for(var i=1;i<factor;i++){\n        for(var j=0;j<factor;j++){\n\
    \            if(factorization[j]*factorization[i]==n){\n                factors.push(factor);\n\
    \                factorization[j] = 0;\n                factorization[i] = 0;\n\
    \            }\n        }\n    }\n    return factors;\n}\n", "    var factors\
    \ = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n\
    \            factors.push(i);\n            n = n / i;\n        }\n    }\n    return\
    \ factors;\n}\n", "\tvar factors = [];\n\tvar factorization = [];\n\tvar primes\
    \ = [];\n\tvar primeFactors = [];\n\tvar primeFactorsIndex = [];\n\tvar primeFactorsIndexIndex\
    \ = [];\n\tvar factorizationIndex = [];\n\tvar factorizationIndexIndex = [];\n\
    \tvar primeFactorsIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndex = [];\n\
    \tvar primeFactorsIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex\
    \ = [];\n\tvar primeFactorsIndexIndexIndexIndexIndex = [];\n\tvar ", "    var\
    \ factors = [];\n    var factorization = [];\n    var i;\n    for(i = 2; i <=\
    \ Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            factors.push(n / i);\n        }\n    }\n    for(i = 0; i < factors.length;\
    \ i++){\n        factorization[factors[i]] = factorization[factors[i]] || [];\n\
    \        factorization[factors[i]].push(factors[i]);\n    }\n    return factorization;\n\
    }\n", "    let factors = [];\n    let factorization = [];\n    let primeFactors\
    \ = [];\n    let primeFactorsCount = 0;\n    let primeFactorsCountMax = Number.MAX_SAFE_INTEGER;\n\
    \    let primeFactorsCountMin = Number.MIN_SAFE_INTEGER;\n    let primeFactorsCountSum\
    \ = 0;\n    let primeFactorsCountSumMax = Number.MAX_SAFE_INTEGER;\n    let primeFactorsCountSumMin\
    \ = Number.MIN_SAFE_INTEGER;\n    let primeFactorsCountSumSum = 0;\n    let primeFactorsCountSumSumMax\
    \ = Number.MAX_SAFE_INTEGER;\n    let primeFactorsCountSumSumMin = Number.MIN_SAFE_INTEGER;\n\
    \    let primeFactorsCountSumSumSum = 0;\n    let primeFactorsCountSumSumSumMax\
    \ = Number.MAX_SAFE_INTEGER;\n    let primeFactorsCountSumSumSumMin = Number.MIN_SAFE_INTEGER;\n\
    \    let primeFactorsCountSumSumSumSum = 0;\n    let primeFactorsCountSumSumSumSumMax\
    \ = Number.MAX_SAFE_INTEGER;\n    let primeFactorsCountSumSumSumSumMin = Number.MIN_SAFE_INTEGER;\n\
    \    let primeFactorsCountSumSumSumSumSum = 0;\n    let primeFactorsCountSumSumSumSumSumMax\
    \ = Number.MAX_SAFE_INTEGER;\n    let primeFactorsCountSumSumSumSumSumMin = Number.MIN_SAFE_INTEGER;\n\
    \    let primeFactorsCountSumSumSumSumSumSum = 0;\n    let primeFactorsCountSumSumSumSumSumSumMax\
    \ = Number.MAX_SAFE_INTEGER;\n    let primeFactorsCountSumSumSumSumSumMin = Number.MIN_SAFE_INTEGER;\n\
    \    let primeFactorsCountSumSumSumSumSumSumSum = 0;\n    let primeFactorsCountSumSumSumSumSumSumMax\
    \ = Number.MAX_SAFE_INTEGER;\n    let primeFactorsCountSumSumSumSumSumSumMin =\
    \ Number.MIN_SAFE_INTEGER;\n    let primeFactorsCountSumSumSumSumSumSumSum = 0;\n\
    \    let primeFactorsCountSumSumSumSumSumSumSumMax = Number.MAX_SAFE_INTEGER;\n\
    \    let primeFactorsCountSumSumSumSumSumSumMin = Number.MIN_SAFE_INTEGER;\n \
    \   let primeFactorsCountSumSumSumSumSumSumSumSum = 0;\n    let primeFactorsCountSumSumSumSumSumSumSumMax\
    \ = Number.MAX_SAFE_INTEGER;\n    let primeFactorsCountSumSumSumSumSumSumSumMin\
    \ = Number.MIN_SAFE_INTEGER;\n    let primeFactorsCount", "    let factors = [];\n\
    \    let factorization = [];\n    let factorCount = 0;\n    for(let i = 2; i <=\
    \ Math.sqrt(n); i++){\n        factorCount = 0;\n        for(let j = 0; j < factors.length;\
    \ j++){\n            if(n % i == 0){\n                factorCount++;\n       \
    \         factors.push(factors[j]);\n                factorization.push(i);\n\
    \            }\n        }\n        if(factorCount == 0){\n            factors.push(1);\n\
    \            factorization.push(i);\n        }\n    }\n    return factorization;\n\
    }\n", "    var factors = [];\n    for(var i=2; i<=Math.sqrt(n); i++){\n      \
    \  if(n % i == 0){\n            factors.push(i);\n            n = n/i;\n     \
    \   }\n    }\n    return factors;\n}\n", "\tlet factors = [];\n\tlet factorization\
    \ = factorizeNumber(n);\n\tfor(let i = 0; i < factorization.length; i++){\n\t\t\
    let factor = factorization[i];\n\t\tlet count = 0;\n\t\tfor(let j = 0; j < factors.length;\
    \ j++){\n\t\t\tif(factor == factors[j]){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\
    \tfactors.push(factor);\n\t\tfactors.push(count);\n\t}\n\treturn factors;\n}\n",
  "\tvar factors = [];\n\tfor(var i=1;i<=n;i++){\n\t\tfor(var j=1;j<=Math.sqrt(i);j++){\n\
    \t\t\tif(i%j==0){\n\t\t\t\tfactors.push(j);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            n\
    \ = n/i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\t\
    \n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\t\n\treturn factors;\n}\n", "\tlet factors = [];\n\
    \tlet factorization = [];\n\tlet primes = [];\n\tlet primeFactors = [];\n\tlet\
    \ primeFactorsCount = 0;\n\tlet primeFactorsSum = 0;\n\tlet factorizationSum =\
    \ 0;\n\tlet factorizationCount = 0;\n\tlet factorizationSum2 = 0;\n\tlet factorizationCount2\
    \ = 0;\n\tlet factorizationSum3 = 0;\n\tlet factorizationCount3 = 0;\n\tlet factorizationSum4\
    \ = 0;\n\tlet factorizationCount4 = 0;\n\tlet factorizationSum5 = 0;\n\tlet factorizationCount5\
    \ = 0;\n\tlet factorizationSum6 = 0;\n\tlet factorizationCount6 = 0;\n\tlet factorizationSum7\
    \ = 0;\n\tlet factorizationCount7 = 0;\n\tlet factorizationSum8 = 0;\n\tlet factorizationCount8\
    \ = 0;\n\tlet factorizationSum9 = 0;\n\tlet factorizationCount9 = 0;\n\tlet factorizationSum10\
    \ = 0;\n\tlet factorizationCount10 = 0;\n\tlet factorizationSum11 = 0;\n\tlet\
    \ factorizationCount11 = 0;\n\tlet factorizationSum12 = 0;\n\tlet factorizationCount12\
    \ = 0;\n\tlet factorizationSum13 = 0;\n\tlet factorizationCount13 = 0;\n\tlet\
    \ factorizationSum14 = 0;\n\tlet factorizationCount14 = 0;\n\tlet factorizationSum15\
    \ = 0;\n\tlet factorizationCount15 = 0;\n\tlet factorizationSum16 = 0;\n\tlet\
    \ factorizationCount16 = 0;\n\tlet factorizationSum17 = 0;\n\tlet factorizationCount17\
    \ = 0;\n\tlet factorizationSum18 = 0;\n\tlet factorizationCount18 = 0;\n\tlet\
    \ factorizationSum19 = 0;\n\tlet factorizationCount19 = 0;\n\tlet factorizationSum20\
    \ = 0;\n\tlet factorizationCount20 = 0;\n\tlet factorizationSum21 = 0;\n\tlet\
    \ factorizationCount21 = 0;\n\tlet factorizationSum22 = 0;\n\tlet factorizationCount22\
    \ = 0;\n\tlet factorizationSum23 = 0;\n\tlet factorizationCount23 = 0;\n\tlet\
    \ factorizationSum24 = 0;\n\tlet factorizationCount24 = 0;\n\tlet factorizationSum25\
    \ = 0;\n\tlet factorizationCount25 = 0;\n\tlet factorizationSum26 = 0;\n\tlet\
    \ factorizationCount26 = 0;\n\tlet factorizationSum27 = 0;\n\tlet factorizationCount27\
    \ = 0;\n\tlet factorizationSum28 = 0;\n\tlet factorizationCount28 = 0;\n\tlet\
    \ factorizationSum29 = 0;\n\tlet factorizationCount29 = 0;\n\tlet factorizationSum30\
    \ = 0;\n\tlet factorizationCount30 = 0;\n\tlet factorization", "\tlet factors\
    \ = [];\n\tlet factorization = factorizeNumber(n);\n\tlet primeFactors = factorization.primeFactors;\n\
    \tlet factorsCount = factorization.factorsCount;\n\tlet factorsArray = [];\n\t\
    let factorsArrayCount = 0;\n\tlet factorsArrayIndex = 0;\n\tlet factorsArrayMaxIndex\
    \ = primeFactors.length-1;\n\tlet factorsArrayMaxValue = primeFactors[factorsArrayMaxIndex];\n\
    \tlet factorsArrayMaxValueIndex = 0;\n\tlet factorsArrayMaxValueCount = 0;\n\t\
    let factorsArrayMaxValueCountIndex = 0;\n\tlet factorsArrayMaxValueCountValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArrayMaxValueCountValueValueValue\
    \ = 0;\n\tlet factorsArrayMaxValueCountValueValueIndex = 0;\n\tlet factorsArray",
  "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    let factors = [];\n\tlet factorization = [];\n\tlet factorizationIndex = 0;\n\t\
    let factorizationArray = [];\n\tlet factorizationArrayIndex = 0;\n\tlet factorizationArrayIndex2\
    \ = 0;\n\tlet factorizationArrayIndex3 = 0;\n\tlet factorizationArrayIndex4 =\
    \ 0;\n\tlet factorizationArrayIndex5 = 0;\n\tlet factorizationArrayIndex6 = 0;\n\
    \tlet factorizationArrayIndex7 = 0;\n\tlet factorizationArrayIndex8 = 0;\n\tlet\
    \ factorizationArrayIndex9 = 0;\n\tlet factorizationArrayIndex10 = 0;\n\tlet factorizationArrayIndex11\
    \ = 0;\n\tlet factorizationArrayIndex12 = 0;\n\tlet factorizationArrayIndex13\
    \ = 0;\n\tlet factorizationArrayIndex14 = 0;\n\tlet factorizationArrayIndex15\
    \ = 0;\n\tlet factorizationArrayIndex16 = 0;\n\tlet factorizationArrayIndex17\
    \ = 0;\n\tlet factorizationArrayIndex18 = 0;\n\tlet factorizationArrayIndex19\
    \ = 0;\n\tlet factorizationArrayIndex20 = 0;\n\tlet factorizationArrayIndex21\
    \ = 0;\n\tlet factorizationArrayIndex22 = 0;\n\tlet factorizationArrayIndex23\
    \ = 0;\n\tlet factorizationArrayIndex24 = 0;\n\tlet factorizationArrayIndex25\
    \ = 0;\n\tlet factorizationArrayIndex26 = 0;\n\tlet factorizationArrayIndex27\
    \ = 0;\n\tlet factorizationArrayIndex28 = 0;\n\tlet factorizationArrayIndex29\
    \ = 0;\n\tlet factorizationArrayIndex30 = 0;\n\tlet factorizationArrayIndex31\
    \ = 0;\n\tlet factorizationArrayIndex32 = 0;\n\tlet factorizationArrayIndex33\
    \ = 0;\n\tlet factorizationArrayIndex34 = 0;\n\tlet factorizationArrayIndex35\
    \ = 0;\n\tlet factorizationArrayIndex36 = 0;\n\tlet factorizationArrayIndex37\
    \ = 0;\n\tlet factorizationArrayIndex38 = 0;\n\tlet factorizationArrayIndex39\
    \ = 0;\n\tlet factorizationArrayIndex40 = 0;\n\tlet factorizationArrayIndex41\
    \ = 0;\n\tlet factorizationArrayIndex42 = 0;\n\tlet factorizationArrayIndex43\
    \ = 0;\n\tlet factorizationArrayIndex44 = 0;\n\tlet factorizationArrayIndex45\
    \ = 0;\n\tlet factorizationArrayIndex46 = 0;\n\tlet factorizationArrayIndex47\
    \ = 0;\n\tlet factorizationArrayIndex48 = 0;\n\tlet factorizationArrayIndex49\
    \ = 0;\n\tlet factorizationArrayIndex50 = 0;\n\tlet factorizationArrayIndex51\
    \ = 0;\n\tlet factorizationArrayIndex52 = 0;\n\tlet factorizationArrayIndex53\
    \ = 0;\n\tlet factorizationArrayIndex54 = 0;\n\tlet factorizationArrayIndex",
  "  var factors = [];\n  var factorization = [];\n  var primeFactors = [];\n  var\
    \ primeFactorsCount = 0;\n  var primeFactorsCountArr = [];\n  var primeFactorsArr\
    \ = [0];\n  var primeFactorsArr2 = [0];\n  var primeFactorsArr3 = [0];\n  var\
    \ primeFactorsArr4 = [0];\n  var primeFactorsArr5 = [0];\n  var primeFactorsArr6\
    \ = [0];\n  var primeFactorsArr7 = [0];\n  var primeFactorsArr8 = [0];\n  var\
    \ primeFactorsArr9 = [0];\n  var primeFactorsArr10 = [0];\n  var primeFactorsArr11\
    \ = [0];\n  var primeFactorsArr12 = [0];\n  var primeFactorsArr13 = [0];\n  var\
    \ primeFactorsArr14 = [0];\n  var primeFactorsArr15 = [0];\n  var primeFactorsArr16\
    \ = [0];\n  var primeFactorsArr17 = [0];\n  var primeFactorsArr18 = [0];\n  var\
    \ primeFactorsArr19 = [0];\n  var primeFactorsArr20 = [0];\n  var primeFactorsArr21\
    \ = [0];\n  var primeFactorsArr22 = [0];\n  var primeFactorsArr23 = [0];\n  var\
    \ primeFactorsArr24 = [0];\n  var primeFactorsArr25 = [0];\n  var primeFactorsArr26\
    \ = [0];\n  var primeFactorsArr27 = [0];\n  var primeFactorsArr28 = [0];\n  var\
    \ primeFactorsArr29 = [0];\n  var primeFactorsArr30 = [0];\n  var primeFactorsArr31\
    \ = [0];\n  var primeFactorsArr32 = [0];\n  var primeFactorsArr33 = [0];\n  var\
    \ primeFactorsArr34 = [0];\n  var primeFactorsArr35 = [0];\n  var primeFactorsArr36\
    \ = [0];\n  var primeFactorsArr37 = [0];\n  var primeFactorsArr38 = [0];\n  var\
    \ primeFactorsArr39 = [0];\n  var primeFactorsArr40 = [0];\n  var primeFactorsArr\
    \ = [0];\n  var primeFactorsArr1 = [0];\n  var primeFactorsArr2 = [0];\n  var\
    \ primeFactorsArr3 = [0];\n  var primeFactorsArr4 = [0];\n  var primeFactorsArr5\
    \ = [0];\n  var primeFactorsArr6 = [0];\n  var primeFactorsArr7 = [0];\n  var\
    \ primeFactorsArr8 = [0];\n  var primeFactorsArr9 = [0];\n  var primeFactorsArr10\
    \ = [0];\n  var primeFactorsArr11 = [0];\n  var primeFactorsArr12 = [0];\n  var\
    \ primeFactorsArr13 = [0];\n  var primeFactorsArr14 = [0];\n  var primeFactorsArr15\
    \ = [0];\n  var primeFactors", "    var factors = [];\n    for(var i = 2; i <=\
    \ Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            n = n / i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors\
    \ = [];\n\tvar factorization = [];\n\tvar factor = 1;\n\tvar factorCount = 0;\n\
    \t\n\twhile(n > 1){\n\t\tfactorCount = 0;\n\t\twhile(factorCount < factors.length\
    \ && n % factor == 0){\n\t\t\tfactorCount++;\n\t\t\tfactor++;\n\t\t}\n\t\tfactors.push(factor);\n\
    \t\tfactorization[factor] = factorCount;\n\t\tn = n / factor;\n\t}\n\t\n\treturn\
    \ factorization;\n}\n", "  var factors = [];\n  for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      factors.push(i);\n      n = n/i;\n    }\n\
    \  }\n  return factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <=\
    \ Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            n = n / i;\n        }\n    }\n    return factors;\n}\n", "\tlet factors\
    \ = [];\n\tlet factorization = [];\n\tlet primeFactors = [];\n\tlet primeFactorsCount\
    \ = 0;\n\tlet factorizationCount = 0;\n\tlet factorizationIndex = 0;\n\tlet primeFactorsIndex\
    \ = 0;\n\tlet primeFactorsCountIndex = 0;\n\tlet factorizationIndex2 = 0;\n\t\
    let primeFactorsIndex2 = 0;\n\tlet primeFactorsCountIndex2 = 0;\n\tlet factorizationIndex3\
    \ = 0;\n\tlet primeFactorsIndex3 = 0;\n\tlet primeFactorsCountIndex3 = 0;\n\t\
    let factorizationIndex4 = 0;\n\tlet primeFactorsIndex4 = 0;\n\tlet primeFactorsCountIndex4\
    \ = 0;\n\tlet factorizationIndex5 = 0;\n\tlet primeFactorsIndex5 = 0;\n\tlet primeFactorsCountIndex5\
    \ = 0;\n\tlet factorizationIndex6 = 0;\n\tlet primeFactorsIndex6 = 0;\n\tlet primeFactorsCountIndex6\
    \ = 0;\n\tlet factorizationIndex7 = 0;\n\tlet primeFactorsIndex7 = 0;\n\tlet primeFactorsCountIndex7\
    \ = 0;\n\tlet factorizationIndex8 = 0;\n\tlet primeFactorsIndex8 = 0;\n\tlet primeFactorsCountIndex8\
    \ = 0;\n\tlet factorizationIndex9 = 0;\n\tlet primeFactorsIndex9 = 0;\n\tlet primeFactorsCountIndex9\
    \ = 0;\n\tlet factorizationIndex10 = 0;\n\tlet primeFactorsIndex10 = 0;\n\tlet\
    \ primeFactorsCountIndex10 = 0;\n\tlet factorizationIndex11 = 0;\n\tlet primeFactorsIndex11\
    \ = 0;\n\tlet primeFactorsCountIndex11 = 0;\n\tlet factorizationIndex12 = 0;\n\
    \tlet primeFactorsIndex12 = 0;\n\tlet primeFactorsCountIndex12 = 0;\n\tlet factorizationIndex13\
    \ = 0;\n\tlet primeFactorsIndex13 = 0;\n\tlet primeFactorsCountIndex13 = 0;\n\t\
    let factorizationIndex14 = 0;\n\tlet primeFactorsIndex14 = 0;\n\tlet primeFactorsCountIndex14\
    \ = 0;\n\tlet factorizationIndex15 = 0;\n\tlet primeFactorsIndex15 = 0;\n\tlet\
    \ primeFactorsCountIndex15 = 0;\n\tlet factorizationIndex16 = 0;\n\tlet primeFactorsIndex16\
    \ = 0;\n\tlet primeFactorsCountIndex16 = 0;\n\tlet factorizationIndex17 = 0;\n\
    \tlet primeFactorsIndex17 = 0;\n\tlet primeFactorsCountIndex17 = 0;\n\tlet factorizationIndex18\
    \ = 0;\n\tlet primeFactorsIndex18 = 0;\n\tlet primeFactorsCountIndex18 = 0;\n\t\
    let factorizationIndex19 = 0;\n\t", "\tvar factors = [];\n\tfor(var i = 2; i <=\
    \ Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\
    \t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tvar factorization\
    \ = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tfactors.push(i);\n\
    \t}\n\t\n\twhile(factors.length > 0){\n\t\tvar currentFactor = factors.shift();\n\
    \t\tfactorization.push(currentFactor);\n\t\t\n\t\tfor(var j = 0; j < factors.length;\
    \ j++){\n\t\t\tif(n % currentFactor == 0){\n\t\t\t\tfactors.push(currentFactor);\n\
    \t\t\t\tfactorization.push(currentFactor);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\
    }\n\t\n\treturn factorization;\n}\n", "    var factors = [];\n    for(var i =\
    \ 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            n = n/i;\n        }\n    }\n    return factors;\n}\n", "\tlet factors\
    \ = [];\n\tlet factorization = factorizeNumber(n);\n\tlet factorsCount = factorization.length;\n\
    \tlet factorsIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex =\
    \ 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues\
    \ = [];\n\tlet factorsValueIndex = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex\
    \ = 0;\n\tlet factorsValues = [];\n\tlet factorsValueIndex = 0;\n\t", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tlet\
    \ factors = [];\n\tlet factorization = [];\n\tlet primes = [];\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactors = [];\n\tlet primeFactorsCount = 0;\n\tlet primeFactorsIndex\
    \ = 0;\n\tlet primeFactorsIndex2 = 0;\n\tlet primeFactorsIndex3 = 0;\n\tlet primeFactorsIndex4\
    \ = 0;\n\tlet primeFactorsIndex5 = 0;\n\tlet primeFactorsIndex6 = 0;\n\tlet primeFactorsIndex7\
    \ = 0;\n\tlet primeFactorsIndex8 = 0;\n\tlet primeFactorsIndex9 = 0;\n\tlet primeFactorsIndex10\
    \ = 0;\n\tlet primeFactorsIndex11 = 0;\n\tlet primeFactorsIndex12 = 0;\n\tlet\
    \ primeFactorsIndex13 = 0;\n\tlet primeFactorsIndex14 = 0;\n\tlet primeFactorsIndex15\
    \ = 0;\n\tlet primeFactorsIndex16 = 0;\n\tlet primeFactorsIndex17 = 0;\n\tlet\
    \ primeFactorsIndex18 = 0;\n\tlet primeFactorsIndex19 = 0;\n\tlet primeFactorsIndex20\
    \ = 0;\n\tlet primeFactorsIndex21 = 0;\n\tlet primeFactorsIndex22 = 0;\n\tlet\
    \ primeFactorsIndex23 = 0;\n\tlet primeFactorsIndex24 = 0;\n\tlet primeFactorsIndex25\
    \ = 0;\n\tlet primeFactorsIndex26 = 0;\n\tlet primeFactorsIndex27 = 0;\n\tlet\
    \ primeFactorsIndex28 = 0;\n\tlet primeFactorsIndex29 = 0;\n\tlet primeFactorsIndex30\
    \ = 0;\n\tlet primeFactorsIndex31 = 0;\n\tlet primeFactorsIndex32 = 0;\n\tlet\
    \ primeFactorsIndex33 = 0;\n\tlet primeFactorsIndex34 = 0;\n\tlet primeFactorsIndex35\
    \ = 0;\n\tlet primeFactorsIndex36 = 0;\n\tlet primeFactorsIndex37 = 0;\n\tlet\
    \ primeFactorsIndex38 = 0;\n\tlet primeFactorsIndex39 = 0;\n\tlet primeFactorsIndex40\
    \ = 0;\n\tlet primeFactorsIndex41 = 0;\n\tlet primeFactorsIndex42 = 0;\n\tlet\
    \ primeFactorsIndex43 = 0;\n\tlet primeFactorsIndex44 = 0;\n\tlet primeFactorsIndex45\
    \ = 0;\n\tlet primeFactorsIndex46 = 0;\n\tlet primeFactorsIndex47 = 0;\n\tlet\
    \ primeFactorsIndex48 = 0;\n\tlet primeFactorsIndex49 = 0;\n\tlet primeFactorsIndex50\
    \ = 0;\n\tlet primeFactorsIndex51 = 0;\n\tlet primeFactorsIndex52 = 0;\n\tlet\
    \ primeFactorsIndex53 = 0;\n\tlet prime", "\tlet factors = [];\n\tlet factorization\
    \ = factor(n);\n\tfor(let i = 0; i < factorization.length; i++){\n\t\tlet count\
    \ = 0;\n\t\tfor(let j = 0; j < factorization.length; j++){\n\t\t\tif(factorization[j]\
    \ == factorization[i]){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tfactors.push(count);\n\
    \t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tvar factorization = [];\n\
    \t\n\tfor(var i=0;i<n;i++){\n\t\tvar temp = [];\n\t\tfor(var j=0;j<factors.length;j++){\n\
    \t\t\ttemp.push(factors[j]);\n\t\t}\n\t\tfactorization[i] = temp;\n\t}\n\t\n\t\
    for(var i=0;i<factors.length;i++){\n\t\tfactors.push(factorization[i].reduce(function(a,b){return\
    \ a*b;}));\n\t}\n\t\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tlet factors = [];\n\t\
    let factorization = [];\n\tlet primeFactors = [];\n\tlet primeFactorsCount = 0;\n\
    \tlet factorizationCount = 0;\n\tlet factorizationIndex = 0;\n\tlet primeFactorsIndex\
    \ = 0;\n\tlet primeFactorsCountIndex = 0;\n\tlet factorizationCountIndex = 0;\n\
    \tlet factorizationIndexMax = factorization.length - 1;\n\tlet primeFactorsIndexMax\
    \ = primeFactors.length - 1;\n\tlet factorizationCountIndexMax = factorizationCount.length\
    \ - 1;\n\tlet factorizationIndexMin = 0;\n\tlet primeFactorsIndexMin = 0;\n\t\
    let factorizationCountIndexMin = 0;\n\tlet factorizationIndexMaxMin = factorizationIndexMax\
    \ - 1;\n\tlet primeFactorsIndexMaxMin = primeFactorsIndexMax - 1;\n\tlet factorizationCountIndexMaxMin\
    \ = factorizationCountIndexMax - 1;\n\tlet factorizationIndexMinMax = factorizationIndexMin\
    \ + 1;\n\tlet primeFactorsIndexMinMax = primeFactorsIndexMin + 1;\n\tlet factorizationCountIndexMinMax\
    \ = factorizationCountIndexMin + 1;\n\tlet primeFactorsCountMax = primeFactorsCount\
    \ + 1;\n\tlet factorizationCountMax = factorizationCount + 1;\n\tlet factorizationIndexMaxMinMin\
    \ = factorizationIndexMaxMin + 1;\n\tlet primeFactorsIndexMaxMinMin = primeFactorsIndexMaxMin\
    \ + 1;\n\tlet factorizationCountIndexMaxMinMin = factorizationCountIndexMaxMin\
    \ + 1;\n\tlet factorizationIndexMinMaxMin = factorizationIndexMinMax + 1;\n\t\
    let primeFactorsCountMaxMin = primeFactorsCountMaxMin + 1;\n\tlet factorizationCountMaxMin\
    \ = factorizationCountMaxMin + 1;\n\tlet primeFactorsCountMaxMinMin = primeFactorsCountMaxMinMin\
    \ + 1;\n\tlet factorizationCountMaxMinMin = factorizationCountMaxMinMin + 1;\n\
    \tlet primeFactorsCountMaxMinMin = primeFactorsCountMaxMinMin + 1;\n\tlet factorizationCountMaxMinMin\
    \ = factorizationCountMaxMinMin + 1;\n\tlet primeFactorsCountMaxMinMin = primeFactorsCountMaxMinMin\
    \ + 1;\n\tlet factorizationCountMaxMinMin = factorizationCountMaxMinMin + 1;\n\
    \tlet primeFactorsCountMaxMinMin = primeFactorsCountMaxMinMin + 1;\n\tlet factorizationCountMaxMinMin\
    \ = factorizationCountMaxMinMin ", "\tlet factors = [];\n\tlet factorization =\
    \ [];\n\tlet factor = 1;\n\tlet primeFactors = [];\n\tlet primeFactor = 1;\n\t\
    let primeFactorCount = 0;\n\tlet primeFactorCountArray = [];\n\tlet primeFactorCountArrayIndex\
    \ = 0;\n\tlet primeFactorCountArrayIndexMax = 0;\n\tlet primeFactorCountArrayIndexMin\
    \ = 0;\n\tlet primeFactorCountArrayMax = 0;\n\tlet primeFactorCountArrayMin =\
    \ 0;\n\tlet primeFactorCountArraySum = 0;\n\tlet primeFactorCountArraySumMax =\
    \ 0;\n\tlet primeFactorCountArraySumMin = 0;\n\tlet primeFactorCountArrayProduct\
    \ = 0;\n\tlet primeFactorCountArrayProductMax = 0;\n\tlet primeFactorCountArrayProductMin\
    \ = 0;\n\tlet primeFactorCountArrayProductSum = 0;\n\tlet primeFactorCountArrayProductSumMax\
    \ = 0;\n\tlet primeFactorCountArrayProductSumMin = 0;\n\tlet primeFactorCountArrayProductProduct\
    \ = 0;\n\tlet primeFactorCountArrayProductProductMax = 0;\n\tlet primeFactorCountArrayProductProductMin\
    \ = 0;\n\tlet primeFactorCountArrayProductProductSum = 0;\n\tlet primeFactorCountArrayProductProductSumMax\
    \ = 0;\n\tlet primeFactorCountArrayProductProductSumMin = 0;\n\tlet primeFactorCountArrayProductProductProduct\
    \ = 0;\n\tlet primeFactorCountArrayProductProductProductMax = 0;\n\tlet primeFactorCountArrayProductProductProductMin\
    \ = 0;\n\tlet primeFactorCountArrayProductProductProductSum = 0;\n\tlet primeFactorCountArrayProductProductProductSumMax\
    \ = 0;\n\tlet primeFactorCountArrayProductProductProductSumMin = 0;\n\tlet primeFactorCountArrayProductProductProductProduct\
    \ = 0;\n\tlet primeFactorCountArrayProductProductProductProductMax = 0;\n\tlet\
    \ primeFactorCountArrayProductProductProductProductMin = 0;\n\tlet primeFactorCountArrayProductProductProductProductSum\
    \ = 0;\n\tlet primeFactorCountArrayProductProductProductProductSumMax = 0;\n\t\
    let primeFactorCountArrayProductProductProductProductSumMin = 0;\n\tlet primeFactorCountArrayProductProductProductProductProduct\
    \ = 0;\n\tlet primeFactorCountArrayProductProductProductProductProductMax = 0;\n\
    \tlet primeFactorCountArrayProductProductProductProductProductMin = 0;\n\tlet\
    \ primeFactorCountArrayProductProductProductProductProductSum = 0;\n\tlet primeFactorCountArrayProductProductProductProductProductSumMax\
    \ = 0;\n\tlet primeFactorCountArrayProductProductProductProductProductSumMin =\
    \ 0;\n\tlet primeFactorCountArrayProductProductProductProductProductProduct =\
    \ 0;\n\tlet primeFactorCountArrayProductProductProductProductProductProductMax\
    \ = 0;", "    let factors = [];\n    let factorization = factorizeNumber(n);\n\
    \    for(let i = 0; i < factorization.length; i++){\n        factors.push(factorization[i]);\n\
    \    }\n    return factors;\n}\n", "  var factors = [];\n  for(var i = 2; i <=\
    \ Math.sqrt(n); i++){\n    if(n % i == 0){\n      factors.push(i);\n      while(n\
    \ % i == 0){\n        n /= i;\n      }\n    }\n  }\n  return factors;\n}\n", " \
    \   let factors = [];\n    let factorization = [];\n    let primeFactors = [];\n\
    \    let primeFactorsCount = 0;\n    let isPrime = true;\n    let isPrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactorization\
    \ = true;\n    let isPrimePrimeFactorization = true;\n    let isPrimePrimeFactor",
  "\tvar factors = [];\n\tvar factorization = [];\n\tvar primeFactorization = [];\n\
    \tvar primeFactors = [];\n\tvar primeFactorsArray = [];\n\tvar primeFactorsArrayIndex\
    \ = [];\n\tvar primeFactorsArrayLength = [];\n\tvar primeFactorsArraySum = [];\n\
    \tvar primeFactorsArraySumIndex = [];\n\tvar primeFactorsArraySumLength = [];\n\
    \tvar primeFactorsArraySumSum = [];\n\tvar primeFactorsArraySumSumIndex = [];\n\
    \tvar primeFactorsArraySumSumLength = [];\n\tvar primeFactorsArraySumSumSum =\
    \ [];\n\tvar primeFactorsArraySumSumSumIndex = [];\n\tvar primeFactorsArraySumSumSumLength\
    \ = [];\n\tvar primeFactorsArraySumSumSumSum = [];\n\tvar primeFactorsArraySumSumSumSumIndex\
    \ = [];\n\tvar primeFactorsArraySumSumSumSumLength = [];\n\tvar primeFactorsArraySumSumSumSumSum\
    \ = [];\n\tvar primeFactorsArraySumSumSumSumSumIndex = [];\n\tvar primeFactorsArraySumSumSumSumSumLength\
    \ = [];\n\tvar primeFactorsArraySumSumSumSumSumSum = [];\n\tvar primeFactorsArraySumSumSumSumSumSumIndex\
    \ = [];\n\tvar primeFactorsArraySumSumSumSumSumSumLength = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSum\
    \ = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumIndex = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumLength\
    \ = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumSum = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumSumIndex\
    \ = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumSumLength = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumSumSum\
    \ = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumSumSumIndex = [];\n\tvar\
    \ primeFactorsArraySumSumSumSumSumSumSumSumSumSumLength = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumSumSumSum\
    \ = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumSumSumSumIndex = [];\n\t\
    var primeFactorsArraySumSumSumSumSumSumSumSumSumSumLength = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumSumSumSumSum\
    \ = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumSumSumSumSumIndex = [];\n\
    \tvar primeFactorsArraySumSumSumSumSumSumSumSumSumSumSumLength = [];\n\tvar primeFactorsArraySumSumSumSumSumSumSumSumSumSumSumSum",
  "\tvar factors = [];\n\tfor(var i=2;i<=Math.sqrt(n);i++){\n\t\tif(n%i==0){\n\t\t\
    \tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tlet\
    \ factors = [];\n\tlet factorization = factorizeNumber(n);\n\tlet primeFactors\
    \ = factorization.primeFactors;\n\tlet factorCounts = factorization.factorCounts;\n\
    \tlet factorsArray = [];\n\tlet factorsArray2 = [];\n\tlet factorsArray3 = [];\n\
    \tlet factorsArray4 = [];\n\tlet factorsArray5 = [];\n\tlet factorsArray6 = [];\n\
    \tlet factorsArray7 = [];\n\tlet factorsArray8 = [];\n\tlet factorsArray9 = [];\n\
    \tlet factorsArray10 = [];\n\tlet factorsArray11 = [];\n\tlet factorsArray12 =\
    \ [];\n\tlet factorsArray13 = [];\n\tlet factorsArray14 = [];\n\tlet factorsArray15\
    \ = [];\n\tlet factorsArray16 = [];\n\tlet factorsArray17 = [];\n\tlet factorsArray18\
    \ = [];\n\tlet factorsArray19 = [];\n\tlet factorsArray20 = [];\n\tlet factorsArray21\
    \ = [];\n\tlet factorsArray22 = [];\n\tlet factorsArray23 = [];\n\tlet factorsArray24\
    \ = [];\n\tlet factorsArray25 = [];\n\tlet factorsArray26 = [];\n\tlet factorsArray27\
    \ = [];\n\tlet factorsArray28 = [];\n\tlet factorsArray29 = [];\n\tlet factorsArray30\
    \ = [];\n\tlet factorsArray31 = [];\n\tlet factorsArray32 = [];\n\tlet factorsArray33\
    \ = [];\n\tlet factorsArray34 = [];\n\tlet factorsArray35 = [];\n\tlet factorsArray36\
    \ = [];\n\tlet factorsArray37 = [];\n\tlet factorsArray38 = [];\n\tlet factorsArray39\
    \ = [];\n\tlet factorsArray40 = [];\n\tlet factorsArray41 = [];\n\tlet factorsArray42\
    \ = [];\n\tlet factorsArray43 = [];\n\tlet factorsArray44 = [];\n\tlet factorsArray45\
    \ = [];\n\tlet factorsArray46 = [];\n\tlet factorsArray47 = [];\n\tlet factorsArray48\
    \ = [];\n\tlet factorsArray49 = [];\n\tlet factorsArray50 = [];\n\tlet factorsArray51\
    \ = [];\n\tlet factorsArray52 = [];\n\tlet factorsArray53 = [];\n\tlet factorsArray54\
    \ = [];\n\tlet factorsArray55 = [];\n\tlet factorsArray56 = [];\n\tlet factorsArray57\
    \ = [];\n\tlet factorsArray58 = [];\n\tlet ", "    var factors = [];\n    for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n        while(n % i == 0){\n            factors.push(i);\n\
    \            n = n / i;\n        }\n    }\n    return factors;\n}\n", "\tlet factors\
    \ = [];\n\tlet primeFactors = [];\n\tlet primeFactorsCount = [];\n\tlet primeFactorsCountInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrder = [];\n\tlet primeFactorsCountInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrder = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrder = [];\n\
    \tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrder = [];\n\
    \tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = [];\n\tlet primeFactorsCountInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderIn",
  "\tlet factors = [];\n\tlet factorization = factorizeNumber(n);\n\tlet factorsCount\
    \ = factorization.length;\n\tlet factorsIndex = 0;\n\tlet factorsValue = 0;\n\t\
    let factorsValueCount = 0;\n\tlet factorsValueIndex = 0;\n\tlet factorsValueCount2\
    \ = 0;\n\tlet factorsValueIndex2 = 0;\n\tlet factorsValueCount3 = 0;\n\tlet factorsValueIndex3\
    \ = 0;\n\tlet factorsValueCount4 = 0;\n\tlet factorsValueIndex4 = 0;\n\tlet factorsValueCount5\
    \ = 0;\n\tlet factorsValueIndex5 = 0;\n\tlet factorsValueCount6 = 0;\n\tlet factorsValueIndex6\
    \ = 0;\n\tlet factorsValueCount7 = 0;\n\tlet factorsValueIndex7 = 0;\n\tlet factorsValueCount8\
    \ = 0;\n\tlet factorsValueIndex8 = 0;\n\tlet factorsValueCount9 = 0;\n\tlet factorsValueIndex9\
    \ = 0;\n\tlet factorsValueCount10 = 0;\n\tlet factorsValueIndex10 = 0;\n\tlet\
    \ factorsValueCount11 = 0;\n\tlet factorsValueIndex11 = 0;\n\tlet factorsValueCount12\
    \ = 0;\n\tlet factorsValueIndex12 = 0;\n\tlet factorsValueCount13 = 0;\n\tlet\
    \ factorsValueIndex13 = 0;\n\tlet factorsValueCount14 = 0;\n\tlet factorsValueIndex14\
    \ = 0;\n\tlet factorsValueCount15 = 0;\n\tlet factorsValueIndex15 = 0;\n\tlet\
    \ factorsValueCount16 = 0;\n\tlet factorsValueIndex16 = 0;\n\tlet factorsValueCount17\
    \ = 0;\n\tlet factorsValueIndex17 = 0;\n\tlet factorsValueCount18 = 0;\n\tlet\
    \ factorsValueIndex18 = 0;\n\tlet factorsValueCount19 = 0;\n\tlet factorsValueIndex19\
    \ = 0;\n\tlet factorsValueCount20 = 0;\n\tlet factorsValueIndex20 = 0;\n\tlet\
    \ factorsValueCount21 = 0;\n\tlet factorsValueIndex21 = 0;\n\tlet factorsValueCount22\
    \ = 0;\n\tlet factorsValueIndex22 = 0;\n\tlet factorsValueCount23 = 0;\n\tlet\
    \ factorsValueIndex23 = 0;\n\tlet factorsValueCount24 = 0;\n\tlet factorsValueIndex24\
    \ = 0;\n\tlet factorsValueCount25 = 0;\n\tlet factorsValueIndex25 = 0;\n\tlet\
    \ factorsValueCount26 = 0;\n\tlet factorsValueIndex26 = 0;\n\tlet factorsValueCount27\
    \ = 0;\n\tlet factorsValueIndex27", "    var factors = [];\n    var factorization\
    \ = factor(n);\n    for(var i=0;i<factorization.length;i++){\n        if(factorization.indexOf(factors[i])==-1){\n\
    \            factors.push(factors[i]);\n        }\n    }\n    return factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "    var factors = [];\n    var factorization = factor(n);\n    for(var\
    \ i=0;i<factorization.length;i++){\n        factors.push(factorization[i]);\n\
    \    }\n    return factors;\n}\n", "    let factors = [];\n    let factorization\
    \ = [];\n    let primeFactors = [];\n    let primeFactorsCount = 0;\n    let primeFactorsSum\
    \ = 0;\n    let factorizationSum = 0;\n    let factorizationCount = 0;\n    let\
    \ factorizationSum2 = 0;\n    let factorizationCount2 = 0;\n    let factorizationSum3\
    \ = 0;\n    let factorizationCount3 = 0;\n    let factorizationSum4 = 0;\n   \
    \ let factorizationCount4 = 0;\n    let factorizationSum5 = 0;\n    let factorizationCount5\
    \ = 0;\n    let factorizationSum6 = 0;\n    let factorizationCount6 = 0;\n   \
    \ let factorizationSum7 = 0;\n    let factorizationCount7 = 0;\n    let factorizationSum8\
    \ = 0;\n    let factorizationCount8 = 0;\n    let factorizationSum9 = 0;\n   \
    \ let factorizationCount9 = 0;\n    let factorizationSum10 = 0;\n    let factorizationCount10\
    \ = 0;\n    let factorizationSum11 = 0;\n    let factorizationCount11 = 0;\n \
    \   let factorizationSum12 = 0;\n    let factorizationCount12 = 0;\n    let factorizationSum13\
    \ = 0;\n    let factorizationCount13 = 0;\n    let factorizationSum14 = 0;\n \
    \   let factorizationCount14 = 0;\n    let factorizationSum15 = 0;\n    let factorizationCount15\
    \ = 0;\n    let factorizationSum16 = 0;\n    let factorizationCount16 = 0;\n \
    \   let factorizationSum17 = 0;\n    let factorizationCount17 = 0;\n    let factorizationSum18\
    \ = 0;\n    let factorizationCount18 = 0;\n    let factorizationSum19 = 0;\n \
    \   let factorizationCount19 = 0;\n    let factorizationSum20 = 0;\n    let factorizationCount20\
    \ = 0;\n    let factorizationSum21 = 0;\n    let factorizationCount21 = 0;\n \
    \   let factorizationSum22 = 0;\n    let factorizationCount22 = 0;\n    let factorizationSum23\
    \ = 0;\n    let factorizationCount23 = 0;\n    let factorizationSum24 = 0;\n \
    \   let factorizationCount24 = 0;\n    let factorizationSum25 = 0;\n    let factorizationCount25\
    \ = 0;\n    let factorizationSum26 = 0;\n    let factorizationCount26 = 0;\n \
    \   let factorizationSum27 = 0;\n    let factorizationCount27 = 0;\n    let factorizationSum28\
    \ = 0;\n    let factorizationCount28 = 0;\n    let factorizationSum29 = 0;\n \
    \   let factorizationCount29 = 0;\n    let factorizationSum30 = 0;\n    let factorizationCount30\
    \ = 0;\n    let factorizationSum31 = 0;\n    let factorizationCount31 = 0;\n \
    \   let factorizationSum32 = 0;\n    let factorizationCount32 = 0;\n    let factorizationSum33\
    \ = 0;\n    let factorizationCount33 = 0;\n    let factorizationSum34 = 0;\n \
    \   let factorizationCount34 = 0;\n    let factorizationSum35 = 0;\n    let factorizationCount35\
    \ = 0;\n    let factorizationSum", "\tlet factors = [];\n\tlet factorization =\
    \ [];\n\tlet primeFactors = [];\n\tlet primeFactorsCount = 0;\n\tlet factorizationCount\
    \ = 0;\n\tlet factorizationCountMax = n;\n\tlet factorizationCountMin = 1;\n\t\
    let factorizationCountMaxMin = n;\n\tlet factorizationCountMinMax = n;\n\tlet\
    \ factorizationCountMinMaxMin = n;\n\tlet factorizationCountMinMaxMinMax = n;\n\
    \tlet factorizationCountMinMaxMinMaxMin = n;\n\tlet factorizationCountMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMin = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMin\
    \ = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMax = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMax = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMax\
    \ = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax\
    \ = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax\
    \ = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax\
    \ = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax\
    \ = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax\
    \ = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax\
    \ = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax\
    \ = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax = n;\n\tlet factorizationCountMinMaxMinMaxMinMaxMinMaxMaxMax\
    \ = n;\n\tlet factorizationCountMinMaxMinMax", "\tlet factors = [];\n\tlet factorization\
    \ = [];\n\tlet primeFactors = [];\n\tlet primeFactorsCount = 0;\n\tlet primeFactorsSum\
    \ = 0;\n\tlet primeFactorsSumCount = 0;\n\tlet primeFactorsSumCount2 = 0;\n\t\
    let primeFactorsSumCount3 = 0;\n\tlet primeFactorsSumCount4 = 0;\n\tlet primeFactorsSumCount5\
    \ = 0;\n\tlet primeFactorsSumCount6 = 0;\n\tlet primeFactorsSumCount7 = 0;\n\t\
    let primeFactorsSumCount8 = 0;\n\tlet primeFactorsSumCount9 = 0;\n\tlet primeFactorsSumCount10\
    \ = 0;\n\tlet primeFactorsSumCount11 = 0;\n\tlet primeFactorsSumCount12 = 0;\n\
    \tlet primeFactorsSumCount13 = 0;\n\tlet primeFactorsSumCount14 = 0;\n\tlet primeFactorsSumCount15\
    \ = 0;\n\tlet primeFactorsSumCount16 = 0;\n\tlet primeFactorsSumCount17 = 0;\n\
    \tlet primeFactorsSumCount18 = 0;\n\tlet primeFactorsSumCount19 = 0;\n\tlet primeFactorsSumCount20\
    \ = 0;\n\tlet primeFactorsSumCount21 = 0;\n\tlet primeFactorsSumCount22 = 0;\n\
    \tlet primeFactorsSumCount23 = 0;\n\tlet primeFactorsSumCount24 = 0;\n\tlet primeFactorsSumCount25\
    \ = 0;\n\tlet primeFactorsSumCount26 = 0;\n\tlet primeFactorsSumCount27 = 0;\n\
    \tlet primeFactorsSumCount28 = 0;\n\tlet primeFactorsSumCount29 = 0;\n\tlet primeFactorsSumCount30\
    \ = 0;\n\tlet primeFactorsSumCount31 = 0;\n\tlet primeFactorsSumCount32 = 0;\n\
    \tlet primeFactorsSumCount33 = 0;\n\tlet primeFactorsSumCount34 = 0;\n\tlet primeFactorsSumCount35\
    \ = 0;\n\tlet primeFactorsSumCount36 = 0;\n\tlet primeFactorsSumCount37 = 0;\n\
    \tlet primeFactorsSumCount38 = 0;\n\tlet primeFactorsSumCount39 = 0;\n\tlet primeFactorsSumCount40\
    \ = 0;\n\tlet primeFactorsSumCount41 = 0;\n\tlet primeFactorsSumCount42 = 0;\n\
    \tlet primeFactorsSumCount43 = 0;\n\tlet primeFactorsSumCount44 = 0;\n\tlet primeFactorsSumCount45\
    \ = 0;\n\tlet primeFactorsSumCount46 = 0;\n\tlet primeFactorsSumCount47 = 0;\n\
    \tlet primeFactorsSumCount48 = 0;\n\tlet primeFactor", "\tvar factors = [];\n\t\
    var factorization = [];\n\tvar factorizationIndex = 0;\n\tvar factorizationArray\
    \ = [];\n\tvar factorizationArrayIndex = 0;\n\tvar factorizationArrayIndex2 =\
    \ 0;\n\tvar factorizationArrayIndex3 = 0;\n\tvar factorizationArrayIndex4 = 0;\n\
    \tvar factorizationArrayIndex5 = 0;\n\tvar factorizationArrayIndex6 = 0;\n\tvar\
    \ factorizationArrayIndex7 = 0;\n\tvar factorizationArrayIndex8 = 0;\n\tvar factorizationArrayIndex9\
    \ = 0;\n\tvar factorizationArrayIndex10 = 0;\n\tvar factorizationArrayIndex11\
    \ = 0;\n\tvar factorizationArrayIndex12 = 0;\n\tvar factorizationArrayIndex13\
    \ = 0;\n\tvar factorizationArrayIndex14 = 0;\n\tvar factorizationArrayIndex15\
    \ = 0;\n\tvar factorizationArrayIndex16 = 0;\n\tvar factorizationArrayIndex17\
    \ = 0;\n\tvar factorizationArrayIndex18 = 0;\n\tvar factorizationArrayIndex19\
    \ = 0;\n\tvar factorizationArrayIndex20 = 0;\n\tvar factorizationArrayIndex21\
    \ = 0;\n\tvar factorizationArrayIndex22 = 0;\n\tvar factorizationArrayIndex23\
    \ = 0;\n\tvar factorizationArrayIndex24 = 0;\n\tvar factorizationArrayIndex25\
    \ = 0;\n\tvar factorizationArrayIndex26 = 0;\n\tvar factorizationArrayIndex27\
    \ = 0;\n\tvar factorizationArrayIndex28 = 0;\n\tvar factorizationArrayIndex29\
    \ = 0;\n\tvar factorizationArrayIndex30 = 0;\n\tvar factorizationArrayIndex31\
    \ = 0;\n\tvar factorizationArrayIndex32 = 0;\n\tvar factorizationArrayIndex33\
    \ = 0;\n\tvar factorizationArrayIndex34 = 0;\n\tvar factorizationArrayIndex35\
    \ = 0;\n\tvar factorizationArrayIndex36 = 0;\n\tvar factorizationArrayIndex37\
    \ = 0;\n\tvar factorizationArrayIndex38 = 0;\n\tvar factorizationArrayIndex39\
    \ = 0;\n\tvar factorizationArrayIndex40 = 0;\n\tvar factorizationArrayIndex41\
    \ = 0;\n\tvar factorizationArrayIndex42 = 0;\n\tvar factorizationArrayIndex43\
    \ = 0;\n\tvar factorizationArrayIndex44 = 0;\n\tvar factorizationArrayIndex45\
    \ = 0;\n\tvar factorizationArrayIndex46 = 0;\n\tvar factorizationArrayIndex47\
    \ = 0;\n\tvar factorizationArrayIndex48 = 0;\n\tvar factorizationArrayIndex49\
    \ = 0;\n\tvar factorizationArrayIndex50 = 0;\n\tvar factorizationArrayIndex51\
    \ = 0;\n\tvar factorizationArrayIndex52 = 0;\n\tvar factorizationArrayIndex53\
    \ = 0;\n\tvar factorizationArrayIndex54 = 0;\n\tvar factorizationArrayIndex55\
    \ = 0;\n\tvar factorizationArrayIndex56 = 0;\n\tvar factorizationArrayIndex57\
    \ = 0;\n\tvar factorizationArrayIndex58 = 0;\n\tvar factorizationArrayIndex59\
    \ = 0;\n\tvar factorizationArrayIndex60 = 0;\n\tvar factorizationArrayIndex61\
    \ = 0;\n\tvar factorizationArrayIndex62 = 0;\n", "\tlet factors = [];\n\tlet factorization\
    \ = factor(n);\n\tlet primeFactors = factorization.primeFactors;\n\tlet factorizationPrime\
    \ = factorization.factorizationPrime;\n\tlet factorizationPrimeLength = factorizationPrime.length;\n\
    \tlet primeFactorsLength = primeFactors.length;\n\tlet primeFactorsArray = [];\n\
    \tlet factorizationPrimeArray = [];\n\tlet factorizationPrimeArrayLength = 0;\n\
    \tlet primeFactorsArrayLength = 0;\n\tlet primeFactorsArrayLength2 = 0;\n\tlet\
    \ factorizationPrimeArrayLength2 = 0;\n\tlet factorizationPrimeArrayLength3 =\
    \ 0;\n\tlet primeFactorsArrayLength3 = 0;\n\tlet primeFactorsArrayLength4 = 0;\n\
    \tlet factorizationPrimeArrayLength4 = 0;\n\tlet factorizationPrimeArrayLength5\
    \ = 0;\n\tlet primeFactorsArrayLength5 = 0;\n\tlet primeFactorsArrayLength6 =\
    \ 0;\n\tlet factorizationPrimeArrayLength6 = 0;\n\tlet factorizationPrimeArrayLength7\
    \ = 0;\n\tlet primeFactorsArrayLength7 = 0;\n\tlet primeFactorsArrayLength8 =\
    \ 0;\n\tlet factorizationPrimeArrayLength8 = 0;\n\tlet factorizationPrimeArrayLength9\
    \ = 0;\n\tlet primeFactorsArrayLength9 = 0;\n\tlet primeFactorsArrayLength10 =\
    \ 0;\n\tlet factorizationPrimeArrayLength10 = 0;\n\tlet factorizationPrimeArrayLength11\
    \ = 0;\n\tlet primeFactorsArrayLength11 = 0;\n\tlet primeFactorsArrayLength12\
    \ = 0;\n\tlet factorizationPrimeArrayLength12 = 0;\n\tlet factorizationPrimeArrayLength13\
    \ = 0;\n\tlet primeFactorsArrayLength13 = 0;\n\tlet primeFactorsArrayLength14\
    \ = 0;\n\tlet factorizationPrimeArrayLength14 = 0;\n\tlet factorizationPrimeArrayLength15\
    \ = 0;\n\tlet primeFactorsArrayLength15 = 0;\n\tlet primeFactorsArrayLength16\
    \ = 0;\n\tlet factorizationPrimeArrayLength16 = 0;\n\tlet factorizationPrimeArrayLength17\
    \ = 0;\n\tlet primeFactorsArrayLength17 = 0;\n\tlet primeFactorsArrayLength18\
    \ = 0;\n\tlet factorizationPrimeArrayLength18 = 0;\n\tlet factorizationPrimeArrayLength19\
    \ = 0;\n\tlet primeFactorsArrayLength19 = 0;\n\tlet primeFactorsArrayLength20\
    \ = 0;\n\tlet factorizationPrimeArrayLength20 = 0;\n\tlet factorizationPrimeArrayLength21\
    \ = 0;\n\tlet primeFactorsArrayLength21 = 0;\n\t", "\tlet factors = [];\n\tlet\
    \ factorization = [];\n\tlet primes = [];\n\tlet primeFactors = [];\n\tlet primeFactorsIndex\
    \ = [];\n\tlet primeFactorsIndexMap = {};\n\tlet primeFactorsIndexMapCount = {};\n\
    \tlet primeFactorsIndexMapCountMap = {};\n\tlet primeFactorsIndexMapCountMapCount\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMap = {};\n\tlet primeFactorsIndexMapCountMapCountMapCount\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMap = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCount\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMap = {};\n\t\
    let primeFactorsIndexMapCountMapCountMapCountMapCountMapCount = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCount\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMapCountMap\
    \ = {};\n\tlet primeFactorsIndexMapCountMapCountMapCountMapCount", "\tvar factors\
    \ = [];\n\tfor(var i=2; i<=Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var factors = [];\n\
    \    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      factors.push(i);\n            n = n/i;\n        }\n    }\n    return factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tlet factors = [];\n\tlet factorization = [];\n\tlet factorizationCount\
    \ = [];\n\tlet factorizationCountMax = Number.MAX_SAFE_INTEGER;\n\tlet factorizationCountMaxIndex\
    \ = 0;\n\tlet factorizationCountMaxIndexMax = -1;\n\tlet factorizationCountMaxIndexMin\
    \ = -1;\n\tlet factorizationCountMin = Number.MAX_SAFE_INTEGER;\n\tlet factorizationCountMinIndex\
    \ = 0;\n\tlet factorizationCountMinIndexMax = -1;\n\tlet factorizationCountMinIndexMin\
    \ = -1;\n\tlet factorizationCountMaxIndexMin = -1;\n\tlet factorizationCountMinIndexMax\
    \ = -1;\n\tlet factorizationCountMinIndexMin = -1;\n\tlet factorizationCountMaxIndexMax\
    \ = -1;\n\tlet factorizationCountMinIndexMax = -1;\n\tlet factorizationCountMinIndexMin\
    \ = -1;\n\tlet factorizationCountMaxIndexMin = -1;\n\tlet factorizationCountMinIndexMax\
    \ = -1;\n\tlet factorizationCountMinIndexMin = -1;\n\tlet factorizationCountMaxIndexMax\
    \ = -1;\n\tlet factorizationCountMinIndexMax = -1;\n\tlet factorizationCountMinIndexMin\
    \ = -1;\n\tlet factorizationCountMaxIndexMin = -1;\n\tlet factorizationCountMinIndexMax\
    \ = -1;\n\tlet factorizationCountMinIndexMin = -1;\n\tlet factorizationCountMaxIndexMax\
    \ = -1;\n\tlet factorizationCountMinIndexMax = -1;\n\tlet factorizationCountMinIndexMin\
    \ = -1;\n\tlet factorizationCountMaxIndexMin = -1;\n\tlet factorizationCountMinIndexMax\
    \ = -1;\n\tlet factorizationCountMinIndexMin = -1;\n\tlet factorizationCountMaxIndexMin\
    \ = -1;\n\tlet factorizationCountMinIndexMax = -1;\n\tlet factorizationCountMinIndexMin\
    \ = -1;\n\tlet factorizationCountMaxIndexMax = -1;\n\tlet factorizationCountMinIndexMax\
    \ = -1;\n\tlet factorizationCountMinIndexMin = -1;\n\tlet factorizationCountMaxIndexMin\
    \ = -1;\n\tlet factorizationCountMinIndexMax = -1;\n\tlet factorizationCountMinIndexMin\
    \ = -1;\n\tlet factorizationCountMaxIndexMin = -1;\n\tlet factorizationCountMinIndexMax\
    \ = -1;\n\tlet factorizationCountMinIndexMin = -1;\n\tlet factorizationCountMaxIndexMax\
    \ = -1;\n\tlet factorizationCountMinIndexMax = -1;\n\tlet factorizationCountMinIndexMin\
    \ = -1;\n\tlet factorizationCountMax", "    var factors = [];\n    var factorization\
    \ = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n\
    \            factors.push(i);\n            factorization.push(i);\n          \
    \  while(factorization.length != factors.length){\n                factorization.push(factorization[factorization.length-1]*factors[factors.length-1]);\n\
    \            }\n            factorization.pop();\n        }\n    }\n    return\
    \ factors;\n}\n", "\tvar factors = [];\n\tfor(var i=2; i<=Math.sqrt(n); i++){\n\
    \t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn\
    \ factors;\n}\n", "\tlet factors = [];\n\tlet factorization = factorizeNumber(n);\n\
    \tlet factorsCount = factorization.length;\n\tlet factorsIndex = 0;\n\tlet factorsValue\
    \ = 1;\n\tlet factorsValueSum = 0;\n\tlet factorsValueSum2 = 0;\n\tlet factorsValueSum3\
    \ = 0;\n\tlet factorsValueSum4 = 0;\n\tlet factorsValueSum5 = 0;\n\tlet factorsValueSum6\
    \ = 0;\n\tlet factorsValueSum7 = 0;\n\tlet factorsValueSum8 = 0;\n\tlet factorsValueSum9\
    \ = 0;\n\tlet factorsValueSum10 = 0;\n\tlet factorsValueSum11 = 0;\n\tlet factorsValueSum12\
    \ = 0;\n\tlet factorsValueSum13 = 0;\n\tlet factorsValueSum14 = 0;\n\tlet factorsValueSum15\
    \ = 0;\n\tlet factorsValueSum16 = 0;\n\tlet factorsValueSum17 = 0;\n\tlet factorsValueSum18\
    \ = 0;\n\tlet factorsValueSum19 = 0;\n\tlet factorsValueSum20 = 0;\n\tlet factorsValueSum21\
    \ = 0;\n\tlet factorsValueSum22 = 0;\n\tlet factorsValueSum23 = 0;\n\tlet factorsValueSum24\
    \ = 0;\n\tlet factorsValueSum25 = 0;\n\tlet factorsValueSum26 = 0;\n\tlet factorsValueSum27\
    \ = 0;\n\tlet factorsValueSum28 = 0;\n\tlet factorsValueSum29 = 0;\n\tlet factorsValueSum30\
    \ = 0;\n\tlet factorsValueSum31 = 0;\n\tlet factorsValueSum32 = 0;\n\tlet factorsValueSum33\
    \ = 0;\n\tlet factorsValueSum34 = 0;\n\tlet factorsValueSum35 = 0;\n\tlet factorsValueSum36\
    \ = 0;\n\tlet factorsValueSum37 = 0;\n\tlet factorsValueSum38 = 0;\n\tlet factorsValueSum39\
    \ = 0;\n\tlet factorsValueSum40 = 0;\n\tlet factorsValueSum41 = 0;\n\tlet factorsValueSum42\
    \ = 0;\n\tlet factorsValueSum43 = 0;\n\tlet factorsValueSum44 = 0;\n\tlet factorsValueSum45\
    \ = 0;\n\tlet factorsValueSum46 = 0;\n\tlet factorsValueSum47 = 0;\n\tlet factorsValueSum48\
    \ = 0;\n\tlet factorsValueSum49 = 0;\n\tlet factorsValueSum50 = 0;\n\tlet factorsValueSum51\
    \ = 0;\n\tlet factorsValueSum52 = 0;\n\tlet factorsValueSum53 = 0;\n\tlet ", "\t\
    let factors = [];\n\tlet factorization = factor(n);\n\tlet primeFactors = factorization.primeFactors;\n\
    \tlet primeFactorsCount = factorization.primeFactorsCount;\n\tlet primeFactorsSum\
    \ = factorization.primeFactorsSum;\n\tlet primeFactorsProduct = factorization.primeFactorsProduct;\n\
    \tlet primeFactorsSumOfSquares;\n\tlet primeFactorsProductOfSquares;\n\tlet primeFactorsSumOfSquaresCount;\n\
    \tlet primeFactorsProductOfSquaresCount;\n\tlet primeFactorsSumOfSquaresSum;\n\
    \tlet primeFactorsProductOfSquaresSum;\n\tlet primeFactorsSumOfSquaresProduct;\n\
    \tlet primeFactorsProductOfSquaresProduct;\n\tlet primeFactorsSumOfSquaresSumCount;\n\
    \tlet primeFactorsProductOfSquaresSumCount;\n\tlet primeFactorsSumOfSquaresProductCount;\n\
    \tlet primeFactorsProductOfSquaresProductCount;\n\tlet primeFactorsSumOfSquaresSumSum;\n\
    \tlet primeFactorsProductOfSquaresSumSum;\n\tlet primeFactorsSumOfSquaresProductSum;\n\
    \tlet primeFactorsProductOfSquaresProductSum;\n\tlet primeFactorsSumOfSquaresSumCount;\n\
    \tlet primeFactorsProductOfSquaresSumCount;\n\tlet primeFactorsSumOfSquaresProductCount;\n\
    \tlet primeFactorsProductOfSquaresProductCount;\n\tlet primeFactorsSumOfSquaresSumSum;\n\
    \tlet primeFactorsProductOfSquaresSumSum;\n\tlet primeFactorsSumOfSquaresProductSum;\n\
    \tlet primeFactorsProductOfSquaresProductSum;\n\tlet primeFactorsSumOfSquaresSumCount;\n\
    \tlet primeFactorsProductOfSquaresSumCount;\n\tlet primeFactorsSumOfSquaresProductCount;\n\
    \tlet primeFactorsProductOfSquaresProductCount;\n\tlet primeFactorsSumOfSquaresSumSum;\n\
    \tlet primeFactorsProductOfSquaresSumSum;\n\tlet primeFactorsSumOfSquaresProductSum;\n\
    \tlet primeFactorsProductOfSquaresProductSum;\n\tlet primeFactorsSumOfSquaresSumCount;\n\
    \tlet primeFactorsProductOfSquaresSumCount;\n\tlet primeFactorsSumOfSquaresProductCount",
  "\tlet factors = [];\n\tlet factorization = [];\n\tlet primeFactors = [];\n\tlet\
    \ primeFactorsCount = 0;\n\tlet factorizationCount = 0;\n\tlet factorizationSum\
    \ = 0;\n\tlet factorizationSumCount = 0;\n\tlet factorizationSumCount2 = 0;\n\t\
    let factorizationSumCount3 = 0;\n\tlet factorizationSumCount4 = 0;\n\tlet factorizationSumCount5\
    \ = 0;\n\tlet factorizationSumCount6 = 0;\n\tlet factorizationSumCount7 = 0;\n\
    \tlet factorizationSumCount8 = 0;\n\tlet factorizationSumCount9 = 0;\n\tlet factorizationSumCount10\
    \ = 0;\n\tlet factorizationSumCount11 = 0;\n\tlet factorizationSumCount12 = 0;\n\
    \tlet factorizationSumCount13 = 0;\n\tlet factorizationSumCount14 = 0;\n\tlet\
    \ factorizationSumCount15 = 0;\n\tlet factorizationSumCount16 = 0;\n\tlet factorizationSumCount17\
    \ = 0;\n\tlet factorizationSumCount18 = 0;\n\tlet factorizationSumCount19 = 0;\n\
    \tlet factorizationSumCount20 = 0;\n\tlet factorizationSumCount21 = 0;\n\tlet\
    \ factorizationSumCount22 = 0;\n\tlet factorizationSumCount23 = 0;\n\tlet factorizationSumCount24\
    \ = 0;\n\tlet factorizationSumCount25 = 0;\n\tlet factorizationSumCount26 = 0;\n\
    \tlet factorizationSumCount27 = 0;\n\tlet factorizationSumCount28 = 0;\n\tlet\
    \ factorizationSumCount29 = 0;\n\tlet factorizationSumCount30 = 0;\n\tlet factorizationSumCount31\
    \ = 0;\n\tlet factorizationSumCount32 = 0;\n\tlet factorizationSumCount33 = 0;\n\
    \tlet factorizationSumCount34 = 0;\n\tlet factorizationSumCount35 = 0;\n\tlet\
    \ factorizationSumCount36 = 0;\n\tlet factorizationSumCount37 = 0;\n\tlet factorizationSumCount38\
    \ = 0;\n\tlet factorizationSumCount39 = 0;\n\tlet factorizationSumCount40 = 0;\n\
    \tlet factorizationSumCount41 = 0;\n\tlet factorizationSumCount42 = 0;\n\tlet\
    \ factorizationSumCount43 = 0;\n\tlet factorizationSumCount44 = 0;\n\tlet factorizationSumCount45\
    \ = 0;\n\tlet factorizationSumCount46 = 0;\n\tlet factorizationSumCount47 = 0;\n\
    \tlet factorizationSumCount48 = 0;\n\tlet factorizationSumCount49 = 0;\n\tlet\
    \ factorizationSumCount50 = 0;\n\tlet factorizationSumCount51 = 0;\n\tlet factorizationSumCount52\
    \ = 0;\n\tlet factorizationSumCount53 = 0;\n\t", "    var factors = [];\n    for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            n = n / i;\n        }\n    }\n    return factors;\n}\n", "    var\
    \ factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i\
    \ == 0){\n            factors.push(i);\n            n = n / i;\n        }\n  \
    \  }\n    return factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\
    \treturn factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            n\
    \ = n / i;\n        }\n    }\n    return factors;\n}\n", "  var factors = [];\n\
    \  for(var i = 2; i <= Math.sqrt(n); i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \      n = n / i;\n    }\n  }\n  return factors;\n}\n", "\tvar factors = [];\n\
    \tvar factorization = [];\n\tvar factorizationIndex = 0;\n\tvar factorizationLength\
    \ = 0;\n\tvar factorizationMaxLength = 0;\n\tvar factorizationMaxLengthIndex =\
    \ 0;\n\tvar factorizationMaxLengthValue = 0;\n\tvar factorizationMaxLengthValueIndex\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex2 = 0;\n\tvar factorizationMaxLengthValueIndex2\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex3 = 0;\n\tvar factorizationMaxLengthValueIndex4\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex5 = 0;\n\tvar factorizationMaxLengthValueIndex6\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex7 = 0;\n\tvar factorizationMaxLengthValueIndex8\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex9 = 0;\n\tvar factorizationMaxLengthValueIndex10\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex11 = 0;\n\tvar factorizationMaxLengthValueIndex12\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex13 = 0;\n\tvar factorizationMaxLengthValueIndex14\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex15 = 0;\n\tvar factorizationMaxLengthValueIndex16\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex17 = 0;\n\tvar factorizationMaxLengthValueIndex18\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex19 = 0;\n\tvar factorizationMaxLengthValueIndex20\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex21 = 0;\n\tvar factorizationMaxLengthValueIndex22\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex23 = 0;\n\tvar factorizationMaxLengthValueIndex24\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex25 = 0;\n\tvar factorizationMaxLengthValueIndex26\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex27 = 0;\n\tvar factorizationMaxLengthValueIndex28\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex29 = 0;\n\tvar factorizationMaxLengthValueIndex30\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex31 = 0;\n\tvar factorizationMaxLengthValueIndex32\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex33 = 0;\n\tvar factorizationMaxLengthValueIndex34\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex35 = 0;\n\tvar factorizationMaxLengthValueIndex36\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex37 = 0;\n\tvar factorizationMaxLengthValueIndex38\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex39 = 0;\n\tvar factorizationMaxLengthValueIndex40\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex41 = 0;\n\tvar factorizationMaxLengthValueIndex42\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex43 = 0;\n\tvar factorizationMaxLengthValueIndex44\
    \ = 0;\n\tvar factorizationMaxLengthValueIndex45 = 0;\n\tvar factorizationMaxLengthValueIndex46\
    \ = 0;\n\tvar factorizationMax", "\tvar factors = [];\n\tvar factor = 1;\n\twhile(n!=1){\n\
    \t\tfactors.push(factor);\n\t\tn = n/factor;\n\t\tfactor++;\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\tvar factorization = [];\n\tvar factor = 1;\n\tvar\
    \ i;\n\tvar j;\n\t\n\tfor(i = 2; i <= Math.sqrt(n); i++){\n\t\tfactorization[i]\
    \ = 0;\n\t\tfor(j = 2; j <= i; j++){\n\t\t\tif(n % j == 0){\n\t\t\t\tfactorization[i]++;\n\
    \t\t\t\tfactor *= j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(i = 1; i\
    \ <= factorization[factor]; i++){\n\t\tfactors.push(factor);\n\t\tfactor *= i;\n\
    \t}\n\t\n\treturn factors;\n}\n", "    var factors = [];\n    for(var i = 2; i\
    \ <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            n = n / i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", " \
    \   var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            factors.push(i);\n            n = n/i;\n        }\n\
    \    }\n    return factors;\n}\n", "\tlet factors = [];\n\tlet factorization =\
    \ [];\n\tlet primes = [];\n\tlet primeFactors = [];\n\tlet primeFactorsCount =\
    \ 0;\n\tlet primeFactorsCountMax = Number.MAX_SAFE_INTEGER;\n\tlet primeFactorsCountMaxIndex\
    \ = -1;\n\tlet primeFactorsCountMaxValue = 0;\n\tlet primeFactorsCountMaxValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactorsCountMaxValueValueValue = 0;\n\tlet primeFactorsCountMaxValueValueIndex\
    \ = 0;\n\tlet primeFactor", "\tlet factors = [];\n\tlet factorization = factorizeNumber(n);\n\
    \tlet factorsCount = factorization.length;\n\tlet factorsArray = [];\n\tlet factorsArrayIndex\
    \ = 0;\n\tlet factorsArrayIndexMax = factorsCount-1;\n\tlet factorsArrayMax =\
    \ factorsArrayIndexMax;\n\tlet factorsArrayIndexMin = 0;\n\tlet factorsArrayMin\
    \ = 0;\n\tlet factorsArrayIndexMaxMin = 0;\n\tlet factorsArrayMaxMin = 0;\n\t\
    let factorsArrayIndexMinMax = 0;\n\tlet factorsArrayMinMax = 0;\n\tlet factorsArrayIndexMaxMinMax\
    \ = 0;\n\tlet factorsArrayMaxMinMax = 0;\n\tlet factorsArrayIndexMinMaxMin = 0;\n\
    \tlet factorsArrayMaxMinMax = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factorsArrayIndexMinMaxMinMax = 0;\n\t\
    let factorsArrayMaxMinMaxMin = 0;\n\tlet factors", "  var factors = [];\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      factors.push(i);\n \
    \     n = n/i;\n    }\n  }\n  return factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tlet factors = [];\n\t\
    let factorization = [];\n\tlet primeFactors = [];\n\tlet primeFactorsIndex = [];\n\
    \tlet primeFactorsIndexMap = {};\n\tlet primeFactorsMap = {};\n\tlet primeFactorsMap2\
    \ = {};\n\tlet primeFactorsMap3 = {};\n\tlet primeFactorsMap4 = {};\n\tlet primeFactorsMap5\
    \ = {};\n\tlet primeFactorsMap6 = {};\n\tlet primeFactorsMap7 = {};\n\tlet primeFactorsMap8\
    \ = {};\n\tlet primeFactorsMap9 = {};\n\tlet primeFactorsMap10 = {};\n\tlet primeFactorsMap11\
    \ = {};\n\tlet primeFactorsMap12 = {};\n\tlet primeFactorsMap13 = {};\n\tlet primeFactorsMap14\
    \ = {};\n\tlet primeFactorsMap15 = {};\n\tlet primeFactorsMap16 = {};\n\tlet primeFactorsMap17\
    \ = {};\n\tlet primeFactorsMap18 = {};\n\tlet primeFactorsMap19 = {};\n\tlet primeFactorsMap20\
    \ = {};\n\tlet primeFactorsMap21 = {};\n\tlet primeFactorsMap22 = {};\n\tlet primeFactorsMap23\
    \ = {};\n\tlet primeFactorsMap24 = {};\n\tlet primeFactorsMap25 = {};\n\tlet primeFactorsMap26\
    \ = {};\n\tlet primeFactorsMap27 = {};\n\tlet primeFactorsMap28 = {};\n\tlet primeFactorsMap29\
    \ = {};\n\tlet primeFactorsMap30 = {};\n\tlet primeFactorsMap31 = {};\n\tlet primeFactorsMap32\
    \ = {};\n\tlet primeFactorsMap33 = {};\n\tlet primeFactorsMap34 = {};\n\tlet primeFactorsMap35\
    \ = {};\n\tlet primeFactorsMap36 = {};\n\tlet primeFactorsMap37 = {};\n\tlet primeFactorsMap38\
    \ = {};\n\tlet primeFactorsMap39 = {};\n\tlet primeFactorsMap40 = {};\n\tlet primeFactorsMap41\
    \ = {};\n\tlet primeFactorsMap42 = {};\n\tlet primeFactorsMap43 = {};\n\tlet primeFactorsMap44\
    \ = {};\n\tlet primeFactorsMap45 = {};\n\tlet primeFactorsMap46 = {};\n\tlet primeFactorsMap47\
    \ = {};\n\tlet primeFactorsMap48 = {};\n\tlet primeFactorsMap49 = {};\n\tlet primeFactorsMap50\
    \ = {};\n\tlet primeFactorsMap51 = {};\n\tlet primeFactorsMap52 = {};\n\tlet prime",
  "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            factors.push(i);\n            n = n / i;\n        }\n\
    \    }\n    return factors;\n}\n", "\tlet factors = [];\n\tlet factorization =\
    \ [];\n\tlet primeFactors = [];\n\tlet primeFactorsCount = 0;\n\tlet isPrime =\
    \ true;\n\tlet isPrimeFactorization = true;\n\tlet isPrimeFactorizationComplete\
    \ = true;\n\tlet isPrimeFactorizationCompletePrime = true;\n\tlet isPrimeFactorizationCompletePrimeFactorization\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationComplete = true;\n\
    \tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrime = true;\n\t\
    let isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorization =\
    \ true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationComplete\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrime\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorization\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationComplete\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrime\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorization\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationComplete\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrime\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorization\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationComplete\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrime\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorization\
    \ = true;\n\tlet isPrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrimeFactorizationCompletePrime",
  "\tlet factors = [];\n\tlet factorization = [];\n\tlet factorizationCounter = 0;\n\
    \tlet factorizationCounterArray = [];\n\tlet factorizationArray = [];\n\tlet factorizationArrayCounter\
    \ = 0;\n\tlet factorizationArrayCounterArray = [];\n\tlet factorizationArrayCounterArray2\
    \ = [];\n\tlet factorizationArrayCounterArray3 = [];\n\tlet factorizationArrayCounterArray4\
    \ = [];\n\tlet factorizationArrayCounterArray5 = [];\n\tlet factorizationArrayCounterArray6\
    \ = [];\n\tlet factorizationArrayCounterArray7 = [];\n\tlet factorizationArrayCounterArray8\
    \ = [];\n\tlet factorizationArrayCounterArray9 = [];\n\tlet factorizationArrayCounterArray10\
    \ = [];\n\tlet factorizationArrayCounterArray11 = [];\n\tlet factorizationArrayCounterArray12\
    \ = [];\n\tlet factorizationArrayCounterArray13 = [];\n\tlet factorizationArrayCounterArray14\
    \ = [];\n\tlet factorizationArrayCounterArray15 = [];\n\tlet factorizationArrayCounterArray16\
    \ = [];\n\tlet factorizationArrayCounterArray17 = [];\n\tlet factorizationArrayCounterArray18\
    \ = [];\n\tlet factorizationArrayCounterArray19 = [];\n\tlet factorizationArrayCounterArray20\
    \ = [];\n\tlet factorizationArrayCounterArray21 = [];\n\tlet factorizationArrayCounterArray22\
    \ = [];\n\tlet factorizationArrayCounterArray23 = [];\n\tlet factorizationArrayCounterArray24\
    \ = [];\n\tlet factorizationArrayCounterArray25 = [];\n\tlet factorizationArrayCounterArray26\
    \ = [];\n\tlet factorizationArrayCounterArray27 = [];\n\tlet factorizationArrayCounterArray28\
    \ = [];\n\tlet factorizationArrayCounterArray29 = [];\n\tlet factorizationArrayCounterArray30\
    \ = [];\n\tlet factorizationArrayCounterArray31 = [];\n\tlet factorizationArrayCounterArray32\
    \ = [];\n\tlet factorizationArrayCounterArray33 = [];\n\tlet factorizationArrayCounterArray34\
    \ = [];\n\tlet factorizationArrayCounterArray35 = [];\n\tlet factorizationArrayCounterArray36\
    \ = [];\n\tlet factorizationArrayCounterArray37 = [];\n\tlet factorizationArrayCounterArray38\
    \ = [];\n\tlet factorizationArrayCounterArray39 = [];\n\tlet factorizationArrayCounterArray40\
    \ = [];\n\tlet factorizationArrayCounterArray41 = [];\n\tlet factorizationArrayCounterArray42\
    \ = [];\n\tlet factorizationArrayCounterArray43 = [];\n\tlet factorizationArrayCounterArray44\
    \ = [];\n\tlet factorizationArrayCounterArray45 = [];\n\tlet factorizationArrayCounterArray46\
    \ = [];\n\tlet factorizationArrayCounter"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_2_truncate_number
language: js
prompt: "//Given a positive floating point number, it can be decomposed into\n// and\
  \ integer part (largest integer smaller than given number) and decimals\n// (leftover\
  \ part always smaller than 1).\n// Return the decimal part of the number.\nfunction\
  \ truncate_number(number){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = truncate_number;\n  assert.deepEqual(candidate(3.5),0.5);\n  assert.deepEqual(candidate(1.25),0.25);\n\
  \  assert.deepEqual(candidate(123.0),0.0);\n}\n\ntest();"
completions: ["\tlet decimals = Math.floor(Math.log10(number));\n\tlet integer_part\
    \ = Math.floor(number/Math.pow(10, decimals));\n\tlet remainder = number%Math.pow(10,\
    \ decimals);\n\treturn [integer_part, decimals, remainder];\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.floor(number / decimals) * decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "\tlet decimals =\
    \ Math.floor(Math.log10(number));\n\tlet integer_part = Math.floor(number/Math.pow(10,\
    \ decimals));\n\tlet leftover_part = number%Math.pow(10, decimals);\n\treturn\
    \ [integer_part, leftover_part];\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.trunc(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.floor(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number/Math.pow(10,decimals))\
    \ * Math.pow(10,decimals);\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number/Math.pow(10,decimals));\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimal_part = Math.floor(number);\n    var whole_part = number - decimal_part;\n\
    \    var decimals = Math.trunc(Math.log(whole_part) / Math.LN10);\n    return\
    \ decimal_part + decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.floor(number / decimals) * decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimal_part = Math.floor(number);\n\tvar integer_part\
    \ = number - decimal_part;\n\tvar decimals = Math.ceil(Math.abs(integer_part));\n\
    \treturn decimal_part + decimals;\n}\n", "\tvar decimal_part = Math.floor(number);\n\
    \tvar integer_part = number - decimal_part;\n\tvar decimals = Math.trunc(number\
    \ * 1000000000);\n\t\n\treturn decimal_part + decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n        whole_number\
    \ = Math.floor(number),\n        integer_part,\n        decimal_part;\n\n    if(number\
    \ < 0){\n        integer_part = whole_number - truncate_number(-number);\n   \
    \     decimal_part = 1;\n    }else{\n        integer_part = whole_number;\n  \
    \      decimal_part = truncate_number(Math.abs(number) - whole_number);\n    }\n\
    \n    return {\n        integer: integer_part,\n        decimal: decimal_part,\n\
    \        whole: whole_number\n    };\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number * decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number/Math.pow(10,decimals));\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.round(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimal_part = Math.floor(number);\n    var whole_part = number - decimal_part;\n\
    \    var decimals = Math.pow(10, decimal_part);\n    var leftover_part = number\
    \ % 1;\n    return decimal_part + decimals + leftover_part;\n}\n", "\tvar decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "\tlet decimals = Math.floor(Math.log10(number));\n\
    \tlet integer_part = Math.floor(number/Math.pow(10, decimals));\n\tlet leftover_part\
    \ = number%Math.pow(10, decimals);\n\t\n\treturn [integer_part, leftover_part];\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number * decimals) / decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    let decimals = Math.floor(Math.log10(number));\n\treturn Math.trunc(number/Math.pow(10,\
    \ decimals));\n}\n", "\tlet decimals = Math.floor(Math.log10(number));\n\treturn\
    \ Math.trunc(number/Math.pow(10,decimals));\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.floor(number / decimals) * decimals;\n}\n", "\t\
    var decimals = Math.floor(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number*Math.pow(10,decimals))/Math.pow(10,decimals);\n\
    }\n", "    var decimals = Math.floor(Math.log(number) / Math.LN10);\n    return\
    \ Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimal_part = Math.floor(number);\n\
    \tvar whole_part = number - decimal_part;\n\tvar decimals = Math.pow(10, decimal_part);\n\
    \tvar leftover_part = whole_part % decimals;\n\tvar decimals_needed = decimals\
    \ - leftover_part;\n\tvar integer_part = whole_part - decimals_needed;\n\treturn\
    \ [integer_part, decimals_needed];\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.floor(Math.log(number)\
    \ / Math.LN10);\n\treturn Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10,\
    \ decimals);\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number * decimals)/decimals;\n}\n", "\tvar decimals = Math.floor(Math.log(number)\
    \ / Math.LN10);\n\treturn Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10,\
    \ decimals);\n}\n", "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number*Math.pow(10,decimals)) / Math.pow(10,decimals);\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\tvar integer_part = Math.floor(number\
    \ * decimals);\n\tvar decimal_part = number - integer_part;\n\treturn decimal_part;\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.floor(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.trunc(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.trunc(number * decimals) / decimals;\n}\n", "    var decimal_part = Math.floor(number);\n\
    \    var whole_part = number - decimal_part;\n    var decimals = Math.pow(10,\
    \ decimal_part);\n    var leftover_part = whole_part % decimals;\n    return leftover_part\
    \ + decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.floor(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.floor(Math.log(number) / Math.LN10);\n\treturn Math.trunc(number * Math.pow(10,\
    \ decimals)) / Math.pow(10, decimals);\n}\n", "    var decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \    return Math.trunc(number/Math.pow(10,decimals));\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number * decimals) / decimals;\n}\n",
  "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number*Math.pow(10,decimals))\
    \ / Math.pow(10,decimals);\n}\n", "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number*Math.pow(10,decimals))/Math.pow(10,decimals);\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number * decimals) / decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.floor(Math.log(number)/Math.LN10);\n    return Math.trunc(number/Math.pow(10,decimals));\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimal_part = Math.floor(number);\n    var whole_part\
    \ = number - decimal_part;\n    var decimals = Math.pow(10, decimal_part);\n \
    \   var leftover_part = whole_part % decimals;\n    var leftover = leftover_part\
    \ ? decimals + leftover_part : decimals;\n    return decimal_part + leftover;\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number * decimals) / decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.trunc(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.trunc(number * decimals) / decimals;\n}\n", "\t\
    var decimal_part = Math.floor(number);\n\tvar integer_part = number - decimal_part;\n\
    \t\n\tvar decimals = Math.pow(10, decimal_part);\n\t\n\treturn [integer_part,\
    \ decimals];\n}\n", "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number*Math.pow(10,decimals)) / Math.pow(10,decimals);\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.floor(Math.log(number) / Math.LN10);\n\
    \    return Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\
    }\n", "\tlet decimals = Math.trunc(number);\n\tlet integer_part = Math.floor(number);\n\
    \treturn (decimals > 0) ? decimals : integer_part;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number/Math.pow(10,decimals));\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimals = Math.floor(Math.log(number)\
    \ / Math.LN10);\n    return Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10,\
    \ decimals);\n}\n", "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number/Math.pow(10,decimals));\n}\n", "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number/Math.pow(10,decimals));\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.floor(number * decimals)\
    \ / decimals;\n}\n", "    var decimal_part = Math.floor(number);\n    var whole_part\
    \ = number - decimal_part;\n    var decimals = Math.pow(10, decimal_part);\n \
    \   return whole_part * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tlet decimals = Math.floor(Math.log10(number));\n\tlet\
    \ integer_part = Math.floor(number/Math.pow(10, decimals));\n\tlet leftover_part\
    \ = number - integer_part*Math.pow(10, decimals);\n\treturn [integer_part, leftover_part];\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number * decimals) / decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimal_part = Math.floor(number);\n    var whole_part\
    \ = number - decimal_part;\n    var decimals = Math.pow(10, decimal_part);\n \
    \   var leftover_part = whole_part % decimals;\n    var leftovers = Math.pow(10,\
    \ leftover_part);\n    return decimal_part + decimals.toFixed(leftovers);\n}\n",
  "\tvar decimals = Math.floor(Math.log(number) / Math.LN10);\n\treturn Math.trunc(number\
    \ * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\tvar whole = Math.floor(number);\n\
    \tvar decimals_left = number - whole;\n\tvar decimals_left_str = decimals_left.toFixed(decimals);\n\
    \treturn whole+decimals_left_str;\n}\n", "    var decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \    return Math.trunc(number/Math.pow(10,decimals));\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    \n    return {\n        whole: whole,\n        fraction: fraction,\n\
    \        decimals: decimals\n    };\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.floor(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.floor(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number/Math.pow(10,decimals));\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.floor(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\tvar whole = Math.floor(number);\n\
    \tvar decimals_part = whole%decimals;\n\tvar integer_part = Math.floor(whole-decimals_part);\n\
    \treturn (decimals_part+\"\").length > decimals ? decimals_part+\".\"+integer_part\
    \ : integer_part;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\tvar whole = Math.floor(number);\n\tvar decimals_length = decimals\
    \ - Math.floor(Math.log(whole) / Math.LN10);\n\tvar decimals_length_str = decimals_length.toString();\n\
    \tvar whole_str = whole.toString();\n\tif (decimals_length_str.length > decimals_length){\n\
    \t\tdecimals_length_str = decimals_length_str.substr(0, decimals_length);\n\t\
    }\n\treturn whole_str.substr(0, whole_str.length - decimals_length_str.length)\
    \ + decimals_length_str;\n}\n", "\tlet decimal_part = Math.floor(number);\n\t\
    let integer_part = number - decimal_part;\n\treturn [integer_part, decimal_part];\n\
    }\n", "    var decimals = Math.floor(Math.log(number)/Math.LN10);\n    return\
    \ Math.trunc(number/Math.pow(10,decimals));\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.trunc(number * decimals)\
    \ / decimals;\n}\n", "    var decimal_part = Math.floor(number);\n    var whole_part\
    \ = number - decimal_part;\n    var decimals = Math.pow(10, decimal_part);\n \
    \   var leftover_part = number % decimals;\n    return decimal_part + decimals.toString()\
    \ + '.' + (leftover_part ? leftover_part.toString() : '');\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n        whole = Math.floor(number),\n\
    \        fraction = number - whole;\n    return whole + decimals - (fraction *\
    \ decimals);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number/Math.pow(10,decimals));\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.floor(Math.log(Math.abs(number))\
    \ / Math.LN10);\n\treturn Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10,\
    \ decimals);\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "\tlet decimals = Math.floor(Math.log10(number));\n\
    \treturn Math.trunc(number/Math.pow(10,decimals));\n}\n", "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number/Math.pow(10,decimals))*Math.pow(10,decimals);\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \    return Math.round(number*Math.pow(10,decimals))/Math.pow(10,decimals);\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\treturn Math.round(number\
    \ * decimals)/decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number * decimals) / decimals;\n}\n",
  "\tvar decimals = Math.floor(Math.log(number) / Math.LN10);\n\treturn Math.trunc(number\
    \ * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n", "\tvar decimals =\
    \ Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\treturn Math.round(number*decimals)/decimals;\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "    var decimals =\
    \ Math.floor(Math.log(number) / Math.LN10);\n    return Math.trunc(number * Math.pow(10,\
    \ decimals)) / Math.pow(10, decimals);\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.floor(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number/Math.pow(10,decimals));\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tvar decimal_part\
    \ = Math.floor(number);\n\tvar integer_part = number - decimal_part;\n\tvar decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn decimal_part\
    \ + decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number * decimals) / decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.floor(Math.log(number) / Math.LN10);\n\treturn Math.trunc(number\
    \ * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n", "\tlet decimals =\
    \ Math.floor(Math.log10(number));\n\tlet integer_part = Math.floor(number/Math.pow(10,\
    \ decimals));\n\treturn (integer_part * Math.pow(10, decimals)).toFixed(decimals);\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tvar decimal_part\
    \ = Math.floor(number);\n\tvar integer_part = number - decimal_part;\n\tvar decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn decimal_part\
    \ + decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number * decimals) / decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.floor(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.floor(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number/Math.pow(10,decimals));\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tvar decimal_part\
    \ = Math.floor(number);\n\tvar integer_part = number - decimal_part;\n\treturn\
    \ decimal_part;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.round(number * decimals) / decimals;\n}\n",
  "    var decimals = Math.floor(Math.log(number)/Math.LN10);\n    return Math.trunc(number/Math.pow(10,decimals));\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number * decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\treturn\
    \ Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "\tlet decimals = Math.trunc(number);\n\tlet integer_part\
    \ = Math.floor(number);\n\treturn (integer_part + decimals) / Math.pow(10, decimals);\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number * decimals) / decimals;\n}\n", "\tlet decimal_part\
    \ = Math.floor(number);\n\tlet integer_part = number - decimal_part;\n\t\n\treturn\
    \ decimal_part;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    return whole + decimals - (fraction * decimals);\n}\n", "\tvar\
    \ decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number/Math.pow(10,decimals));\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number * decimals) / decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.trunc(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.trunc(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    let decimals = Math.floor(Math.log10(number));\n\tlet integer_part = Math.floor(number\
    \ / Math.pow(10, decimals));\n\tlet leftover_part = number - integer_part * Math.pow(10,\
    \ decimals);\n\treturn [integer_part, leftover_part];\n}\n", "\tvar decimals =\
    \ Math.floor(Math.log(number) / Math.LN10);\n\treturn Math.trunc(number * Math.pow(10,\
    \ decimals)) / Math.pow(10, decimals);\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.floor(Math.log(number)/Math.LN10);\n\
    \    return Math.trunc(number/Math.pow(10,decimals));\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.floor(number * decimals) / decimals;\n}\n", "\tvar decimal_part = Math.floor(number);\n\
    \tvar integer_part = number - decimal_part;\n\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn decimal_part + decimals;\n}\n", "    var decimals =\
    \ Math.floor(Math.log(number)/Math.LN10);\n    return Math.trunc(number/Math.pow(10,decimals));\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_145_order_by_points
language: js
results:
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var result = [];\n    for(var i=0;i<nums.length;i++){\n\
    \        sum += nums[i];\n        result.push(nums[i]);\n    }\n    result.sort(function(a,b){\n\
    \        return sum - a + b;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp_wlyq31p.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_wlyq31p.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i=0; i<len; i++){\n        sum += nums[i];\n\
    \    }\n    console.log(sum);\n}\norder_by_points([1,2,3,4,5,6,7,8,9]);\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: "45\n-12\n"
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmp6u5j8owr.js:20:10)\n    at Object.<anonymous> (/tmp/tmp6u5j8owr.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,\
    \ b){\n\t\treturn sum(a) - sum(b);\n\t});\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzm6w1u2s.js:8\n\t\treturn sum(a) - sum(b);\n\t\t^\n\nReferenceError:\
    \ sum is not defined\n    at /tmp/tmpzm6w1u2s.js:8:3\n    at Array.sort (<anonymous>)\n\
    \    at order_by_points (/tmp/tmpzm6w1u2s.js:7:7)\n    at test (/tmp/tmpzm6w1u2s.js:16:20)\n\
    \    at Object.<anonymous> (/tmp/tmpzm6w1u2s.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n  var sum = 0;\n  for(var\
    \ i=0; i<nums.length; i++){\n    sum += nums[i];\n  }\n  nums.sort(function(a,\
    \ b){\n    return sum - a + b;\n  });\n  return nums;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpj9em5r9_.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj9em5r9_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n  var sorted = nums.slice().sort(function(a,\
    \ b){\n    return a + b - nums.indexOf(a) - nums.indexOf(b);\n  });\n  return\
    \ sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  -11,\n\
    \  1,\n  11,\n  -1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp8yurwm6e.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8yurwm6e.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, -11,\
    \ 1, 11, -1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        return sumA - sumB;\n    });\n    return sorted;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbg6se8mc.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpbg6se8mc.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpbg6se8mc.js:8:12)\n\
    \    at test (/tmp/tmpbg6se8mc.js:21:20)\n    at Object.<anonymous> (/tmp/tmpbg6se8mc.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,b){\n\
    \t\treturn a.sum - b.sum;\n\t});\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpqiw0dltq.js:16:10)\n    at Object.<anonymous> (/tmp/tmpqiw0dltq.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var ret = [];\n    for(var i=0; i<len; i++){\n\
    \        sum += nums[i];\n        ret.push(nums[i]);\n    }\n    ret.sort(function(a,\
    \ b){\n        return sum - a - b;\n    });\n    return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpfnf7x0df.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfnf7x0df.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var result = [];\n    for(var i=0; i<nums.length; i++){\n\
    \        sum += nums[i];\n        if(sum > 9){\n            result.push(nums[index]);\n\
    \            sum -= nums[index];\n            index++;\n        }\n    }\n   \
    \ result.push(nums[index]);\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n\
    ]\n    at test (/tmp/tmp_d143s8l.js:26:10)\n    at Object.<anonymous> (/tmp/tmp_d143s8l.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1\
    \ ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i = 0; i < len; i++){\n        sum +=\
    \ nums[i];\n    }\n    console.log(sum);\n    var result = [];\n    for(var i\
    \ = 0; i < len; i++){\n        var index = sum - nums[i];\n        result.push(nums[index]);\n\
    \    }\n    console.log(result);\n}\norder_by_points([1,2,3,4,5,6,7,8,9,10]);\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: "55\n[\n  undefined, undefined,\n  undefined, undefined,\n  undefined, undefined,\n\
    \  undefined, undefined,\n  undefined, undefined\n]\n-12\n[ undefined, undefined,\
    \ undefined, undefined, 1 ]\n"
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpzi12st9x.js:26:10)\n    at Object.<anonymous> (/tmp/tmpzi12st9x.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a,b){\n      \
    \  return sum-a-b;\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpznu8wo8k.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpznu8wo8k.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphag1q8n6.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmphag1q8n6.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmphag1q8n6.js:7:10)\n\
    \    at test (/tmp/tmphag1q8n6.js:20:20)\n    at Object.<anonymous> (/tmp/tmphag1q8n6.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var numsSorted\
    \ = nums.slice().sort(function(a, b){\n        return a - b;\n    });\n    return\
    \ numsSorted;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  -11,\n\
    \  -1,\n  1,\n  11\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpi1s2g5j7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi1s2g5j7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, -11,\
    \ -1, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    nums.forEach(function(num){\n        var sum = 0;\n        while(num > 0){\n\
    \            sum += num % 10;\n            num = Math.floor(num / 10);\n     \
    \   }\n        sorted.push(sum);\n    });\n    sorted.sort(function(a, b){\n \
    \       return a - b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmp67rqomcy.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp67rqomcy.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 1, 2 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a,b){\n      \
    \  return sum - a + b;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp7wh8o5p6.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7wh8o5p6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sums = [];\n\
    \    for(var i=0; i<nums.length; i++){\n        sums.push(nums[i].toString().split('').reduce(function(a,b){return\
    \ a+b;}));\n    }\n    return sums.sort();\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '-1',\n \
    \ '-11',\n  '-12',\n  '1',\n  '11'\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n\
    \  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmpy9fncwfr.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpy9fncwfr.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '-1', '-11',\
    \ '-12', '1', '11' ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        return sumA - sumB;\n    });\n    return sorted;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpog2j895m.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpog2j895m.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpog2j895m.js:8:12)\n\
    \    at test (/tmp/tmpog2j895m.js:21:20)\n    at Object.<anonymous> (/tmp/tmpog2j895m.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp44xjnq19.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmp44xjnq19.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp44xjnq19.js:7:10)\n\
    \    at test (/tmp/tmp44xjnq19.js:19:20)\n    at Object.<anonymous> (/tmp/tmp44xjnq19.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a, b){\n     \
    \   return sum - b;\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  -11,\n\
    \  -1,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp3avtffgk.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3avtffgk.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, -11,\
    \ -1, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,\
    \ b){\n\t\treturn a.sum - b.sum;\n\t});\n\treturn nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpyla9opj6.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyla9opj6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(sum);\n    }\n    sorted_nums.sort(function(a,\
    \ b){\n        return a-b;\n    });\n    return sorted_nums;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp2s9mrlbv.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2s9mrlbv.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(sum);\n    }\n    sorted_nums.sort(function(a,\
    \ b){\n        return a-b;\n    });\n    return sorted_nums;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpgdq9aw_k.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgdq9aw_k.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted_nums\
    \ = nums.slice();\n    sorted_nums.sort(function(a, b){\n        var sumA = sumDigits(a);\n\
    \        var sumB = sumDigits(b);\n        if(sumA > sumB){\n            return\
    \ 1;\n        }else if(sumA < sumB){\n            return -1;\n        }else{\n\
    \            return 0;\n        }\n    });\n    return sorted_nums;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz1n6t6nw.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpz1n6t6nw.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpz1n6t6nw.js:8:17)\n\
    \    at test (/tmp/tmpz1n6t6nw.js:26:20)\n    at Object.<anonymous> (/tmp/tmpz1n6t6nw.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sums = [];\n\
    \    for(var i=0; i<nums.length; i++){\n        var sum = 0;\n        for(var\
    \ j=0; j<nums[i].length; j++){\n            sum += nums[i][j];\n        }\n  \
    \      sums.push(sum);\n    }\n    sums.sort(function(a, b){\n        return b-a;\n\
    \    });\n    var result = [];\n    for(var i=0; i<nums.length; i++){\n      \
    \  var index = sums.indexOf(sums[i]);\n        result.push(nums[index]);\n   \
    \ }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1,\n  1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmpz4j4ql3h.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz4j4ql3h.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1,\
    \ 1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,b){\n\
    \t\treturn a+b\n\t})\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpixrx_afv.js:16:10)\n    at Object.<anonymous> (/tmp/tmpixrx_afv.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var points = [];\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        points.push(sum);\n    }\n    points.sort(function(a,b){\n        return\
    \ a-b;\n    });\n    return points;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpep94p68u.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpep94p68u.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i=0; i<len; i++){\n        sum += nums[i];\n\
    \    }\n    sum = Math.floor(sum);\n    var result = [];\n    for(var i=0; i<len;\
    \ i++){\n        if(sum - nums[i] >= 0){\n            result.push(nums[i]);\n\
    \        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12\n]\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmplq3k8rh9.js:26:10)\n    at Object.<anonymous> (/tmp/tmplq3k8rh9.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12 ],\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    let sorted = nums.sort((a,b)=>{\n\
    \        let sumA = a.toString().split('').map(Number).reduce((a,b)=>a+b,0);\n\
    \        let sumB = b.toString().split('').map(Number).reduce((a,b)=>a+b,0);\n\
    \        return sumA-sumB;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpxd0wr1tx.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxd0wr1tx.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        result.push(sum);\n    }\n    result.sort(function(a, b){\n        return\
    \ a-b;\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpkqq2aao3.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkqq2aao3.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice().sort(function(a,\
    \ b){\n        return a - b;\n    });\n    return sorted;\n}\nvar nums = [1, 3,\
    \ 2];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  -11,\n\
    \  -1,\n  1,\n  11\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpcyv9smls.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcyv9smls.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, -11,\
    \ -1, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        return sumA - sumB;\n    });\n    return sorted;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptymorrrk.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmptymorrrk.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmptymorrrk.js:8:12)\n\
    \    at test (/tmp/tmptymorrrk.js:20:20)\n    at Object.<anonymous> (/tmp/tmptymorrrk.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,\
    \ b){\n\t\treturn a.sum - b.sum;\n\t});\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmp7psc925r.js:16:10)\n    at Object.<anonymous> (/tmp/tmp7psc925r.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var sorted_nums = [];\n    for(var i=0;i<nums.length;i++){\n        sum +=\
    \ nums[i];\n        sorted_nums.push(nums[i]);\n    }\n    sorted_nums.sort(function(a,b){\n\
    \        return sum - a + b;\n    });\n    return sorted_nums;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpokakm_x2.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpokakm_x2.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(sum);\n    }\n    sorted_nums.sort(function(a,b){\n\
    \        return a-b;\n    });\n    return sorted_nums;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpqw22d42b.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqw22d42b.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,\
    \ b){\n\t\tvar sumA = sumDigits(a);\n\t\tvar sumB = sumDigits(b);\n\t\treturn\
    \ sumA - sumB;\n\t});\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphv4whuj9.js:8\n\t\tvar sumA = sumDigits(a);\n\t\t           ^\n\
    \nReferenceError: sumDigits is not defined\n    at /tmp/tmphv4whuj9.js:8:14\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmphv4whuj9.js:7:7)\n\
    \    at test (/tmp/tmphv4whuj9.js:18:20)\n    at Object.<anonymous> (/tmp/tmphv4whuj9.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted_nums\
    \ = [];\n    var sorted_index = [];\n    for(var i=0;i<nums.length;i++){\n   \
    \     var sum = 0;\n        for(var j=0;j<nums[i].length;j++){\n            sum\
    \ += nums[i][j];\n        }\n        sorted_nums.push(sum);\n        sorted_index.push(i);\n\
    \    }\n    sorted_nums.sort(function(a,b){\n        return a-b;\n    });\n  \
    \  sorted_index.sort(function(a,b){\n        return a-b;\n    });\n    for(var\
    \ i=0;i<sorted_nums.length;i++){\n        nums[sorted_index[i]] = sorted_nums[i];\n\
    \    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmphujk4i56.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphujk4i56.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n  var sum = 0;\n  for(var\
    \ i=0;i<nums.length;i++){\n    sum += nums[i];\n  }\n  nums.sort(function(a,b){\n\
    \    return sum - a + b;\n  });\n  return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp3qdllkug.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3qdllkug.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var nums_sorted\
    \ = [];\n    var nums_sum = 0;\n    for(var i=0; i<nums.length; i++){\n      \
    \  nums_sum += nums[i];\n        nums_sorted.push(nums[i]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){\n        return nums_sum - nums[a] - nums[b];\n    });\n    return nums_sorted;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp4qh7563i.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4qh7563i.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        return sumA - sumB;\n    });\n    return sorted;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0xu45_sc.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmp0xu45_sc.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp0xu45_sc.js:8:12)\n\
    \    at test (/tmp/tmp0xu45_sc.js:21:20)\n    at Object.<anonymous> (/tmp/tmp0xu45_sc.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    let sorted = nums.sort((a,b)=>{\n\
    \        let sumA = sumDigits(a);\n        let sumB = sumDigits(b);\n        if(sumA\
    \ < sumB){\n            return -1;\n        }else if(sumA > sumB){\n         \
    \   return 1;\n        }else{\n            return 0;\n        }\n    });\n   \
    \ return sorted;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpznx2pxkx.js:8\n        let sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpznx2pxkx.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpznx2pxkx.js:7:23)\n\
    \    at test (/tmp/tmpznx2pxkx.js:25:20)\n    at Object.<anonymous> (/tmp/tmpznx2pxkx.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i = 0; i < len; i++){\n        sum +=\
    \ nums[i];\n    }\n    for(var i = 0; i < len; i++){\n        nums[i] = nums[i]\
    \ - sum;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmp_zihrtj5.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_zihrtj5.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        if(sum > 10){\n            sum = 0;\n            index++;\n        }\n\
    \    }\n    return nums.slice(0,index);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpsil5i4pg.js:24:10)\n    at Object.<anonymous> (/tmp/tmpsil5i4pg.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push(nums[i]);\n    }\n    sorted.sort(function(a,b){\n      \
    \  return sum-a-b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmphhqxfgg9.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphhqxfgg9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted_nums\
    \ = nums.slice();\n    sorted_nums.sort(function(a, b){\n        var sumA = sum_digits(a);\n\
    \        var sumB = sum_digits(b);\n        if(sumA < sumB){\n            return\
    \ -1;\n        }else if(sumA > sumB){\n            return 1;\n        }else{\n\
    \            return 0;\n        }\n    });\n    return sorted_nums;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxmnm60u5.js:9\n        var sumA = sum_digits(a);\n            \
    \       ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpxmnm60u5.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpxmnm60u5.js:8:17)\n\
    \    at test (/tmp/tmpxmnm60u5.js:27:20)\n    at Object.<anonymous> (/tmp/tmpxmnm60u5.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        return sumA - sumB;\n    });\n    return sorted;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmsh541bs.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpmsh541bs.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpmsh541bs.js:8:12)\n\
    \    at test (/tmp/tmpmsh541bs.js:20:20)\n    at Object.<anonymous> (/tmp/tmpmsh541bs.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n  var result = [];\n\
    \  var len = nums.length;\n  for(var i=0; i<len; i++){\n    var sum = 0;\n   \
    \ for(var j=0; j<len; j++){\n      sum += nums[j].digit;\n    }\n    result.push(nums[i]);\n\
    \    if(sum == 0){\n      break;\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpr1hy_r2o.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr1hy_r2o.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      var diff = sumA - sumB;\n        if (diff === 0) {\n            return\
    \ a.index - b.index;\n        }\n        return diff;\n    });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_fud10nt.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmp_fud10nt.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp_fud10nt.js:7:10)\n\
    \    at test (/tmp/tmp_fud10nt.js:23:20)\n    at Object.<anonymous> (/tmp/tmp_fud10nt.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,b){\n\
    \t\treturn sum(a) - sum(b);\n\t});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptf4nw6bz.js:8\n\t\treturn sum(a) - sum(b);\n\t\t^\n\nReferenceError:\
    \ sum is not defined\n    at /tmp/tmptf4nw6bz.js:8:3\n    at Array.sort (<anonymous>)\n\
    \    at order_by_points (/tmp/tmptf4nw6bz.js:7:7)\n    at test (/tmp/tmptf4nw6bz.js:17:20)\n\
    \    at Object.<anonymous> (/tmp/tmptf4nw6bz.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a, b){\n     \
    \   return sum - a + b;\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpwa5ha_2j.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwa5ha_2j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sum_of_digits(a);\n        var sumB = sum_of_digits(b);\n\
    \        if (sumA > sumB) {\n            return 1;\n        } else if (sumA <\
    \ sumB) {\n            return -1;\n        } else {\n            return 0;\n \
    \       }\n    });\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzbvnfxk3.js:8\n        var sumA = sum_of_digits(a);\n         \
    \          ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmpzbvnfxk3.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpzbvnfxk3.js:7:10)\n\
    \    at test (/tmp/tmpzbvnfxk3.js:26:20)\n    at Object.<anonymous> (/tmp/tmpzbvnfxk3.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        return a.sum - b.sum;\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpfu5k92zw.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfu5k92zw.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(sum);\n    }\n    sorted_nums.sort(function(a,\
    \ b){\n        return a-b;\n    });\n    return sorted_nums;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpofz1p7w1.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpofz1p7w1.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n  var sorted = nums.slice();\n\
    \  sorted.sort(function(a, b){\n    return sum(a) - sum(b);\n  });\n  return sorted;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxwze6atz.js:9\n    return sum(a) - sum(b);\n    ^\n\nReferenceError:\
    \ sum is not defined\n    at /tmp/tmpxwze6atz.js:9:5\n    at Array.sort (<anonymous>)\n\
    \    at order_by_points (/tmp/tmpxwze6atz.js:8:10)\n    at test (/tmp/tmpxwze6atz.js:18:20)\n\
    \    at Object.<anonymous> (/tmp/tmpxwze6atz.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var index = 0;\n    var result = [];\n    while(index\
    \ < len){\n        sum += nums[index];\n        result.push(nums[index]);\n  \
    \      index++;\n    }\n    result.sort(function(a, b){\n        return sum -\
    \ a - b;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpot8k6p6z.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpot8k6p6z.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(sum);\n    }\n    sorted_nums.sort(function(a,\
    \ b){\n        return a-b;\n    });\n    return sorted_nums;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp2g4jkjd_.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2g4jkjd_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        if(sumA > sumB){\n            return 1;\n    \
    \    }else if(sumA < sumB){\n            return -1;\n        }else{\n        \
    \    return 0;\n        }\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpon03my1i.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpon03my1i.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpon03my1i.js:8:12)\n\
    \    at test (/tmp/tmpon03my1i.js:27:20)\n    at Object.<anonymous> (/tmp/tmpon03my1i.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(nums[i]);\n    }\n\
    \    sorted_nums.sort(function(a, b){\n        return sum - a - b;\n    });\n\
    \    return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpqx6kz7f2.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqx6kz7f2.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var len = nums.length;\n    var temp;\n    while(index\
    \ < len){\n        temp = nums[index];\n        sum += temp;\n        index++;\n\
    \    }\n    while(sum > 0){\n        temp = nums[sum];\n        nums[sum] = nums[index];\n\
    \        nums[index] = temp;\n        sum -= temp;\n        index++;\n    }\n\
    \    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp1ag40zv_.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ag40zv_.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,b){\n\
    \t\treturn a+b\n\t})\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpgc_n1iyb.js:17:10)\n    at Object.<anonymous> (/tmp/tmpgc_n1iyb.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,b){\n\
    \        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n        if(sumA\
    \ === sumB){\n            return a.localeCompare(b);\n        }\n        return\
    \ sumA - sumB;\n    });\n    return nums;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpr9zl9p33.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpr9zl9p33.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpr9zl9p33.js:7:10)\n\
    \    at test (/tmp/tmpr9zl9p33.js:22:20)\n    at Object.<anonymous> (/tmp/tmpr9zl9p33.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var points = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        points.push(sum);\n    }\n    points.sort(function(a, b){return a-b});\n\
    \    var result = [];\n    for(var i=0; i<nums.length; i++){\n        result.push(nums[points[i]]);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  1,\n  11,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n\
    \  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmp_ujgsd2_.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_ujgsd2_.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ 1, 11, undefined, undefined ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a,b){\n      \
    \  return sum - a + b;\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpj5vil8p0.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj5vil8p0.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(sum);\n    }\n    sorted_nums.sort(function(a,b){\n\
    \        return a-b;\n    });\n    return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpvk7mx6k_.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvk7mx6k_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var nums_sorted\
    \ = [];\n    nums.forEach(function(num){\n        var sum = 0;\n        for(var\
    \ i=0;i<num.length;i++){\n            sum += num.charAt(i);\n        }\n     \
    \   nums_sorted.push(sum);\n    });\n    nums_sorted.sort(function(a,b){\n   \
    \     return a-b;\n    });\n    return nums_sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmp1eqfwbhm.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1eqfwbhm.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sums = [];\n\
    \    for(var i=0; i<nums.length; i++){\n        var sum = 0;\n        for(var\
    \ j=0; j<nums[i].length; j++){\n            sum += nums[i][j];\n        }\n  \
    \      sums.push(sum);\n    }\n    sums.sort();\n    var res = [];\n    for(var\
    \ i=0; i<nums.length; i++){\n        res.push(nums[i]);\n    }\n    return res;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmphxkmpezk.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphxkmpezk.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8eums1e6.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmp8eums1e6.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp8eums1e6.js:7:10)\n\
    \    at test (/tmp/tmp8eums1e6.js:20:20)\n    at Object.<anonymous> (/tmp/tmp8eums1e6.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var ret = [];\n    for(var i = 0; i < len; i++){\n\
    \        sum += nums[i];\n        ret.push([i, sum]);\n    }\n    ret.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n\
    \    -12\n  ],\n  [\n    3,\n    0\n  ],\n  [\n    0,\n    1\n  ],\n  [\n    2,\n\
    \    11\n  ],\n  [\n    1,\n    12\n  ]\n]\n\nshould loosely deep-equal\n\n[\n\
    \  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmp4hstfs8l.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4hstfs8l.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, -12\
    \ ], [ 3, 0 ], [ 0, 1 ], [ 2, 11 ], [ 1, 12 ] ],\n  expected: [ -1, -11, 1, -12,\
    \ 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfz0hwdfz.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpfz0hwdfz.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpfz0hwdfz.js:7:10)\n\
    \    at test (/tmp/tmpfz0hwdfz.js:20:20)\n    at Object.<anonymous> (/tmp/tmpfz0hwdfz.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,\
    \ b){\n\t\tlet sumA = sumDigits(a);\n\t\tlet sumB = sumDigits(b);\n\t\treturn\
    \ sumA - sumB;\n\t});\n\treturn nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpq4vzrhez.js:8\n\t\tlet sumA = sumDigits(a);\n\t\t           ^\n\
    \nReferenceError: sumDigits is not defined\n    at /tmp/tmpq4vzrhez.js:8:14\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpq4vzrhez.js:7:7)\n\
    \    at test (/tmp/tmpq4vzrhez.js:20:20)\n    at Object.<anonymous> (/tmp/tmpq4vzrhez.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted_nums\
    \ = nums.sort(function(a, b){\n        var sumA = sum_digits(a);\n        var\
    \ sumB = sum_digits(b);\n        return sumA - sumB;\n    });\n    return sorted_nums;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpktfvky33.js:8\n        var sumA = sum_digits(a);\n            \
    \       ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpktfvky33.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpktfvky33.js:7:28)\n\
    \    at test (/tmp/tmpktfvky33.js:20:20)\n    at Object.<anonymous> (/tmp/tmpktfvky33.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i=0; i<len; i++){\n        sum += nums[i];\n\
    \    }\n    var sorted = [];\n    for(var i=0; i<len; i++){\n        sorted[i]\
    \ = nums[i];\n    }\n    sorted.sort(function(a,b){\n        return sum - a +\
    \ b; //sort by sum\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpuh7krrvx.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuh7krrvx.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var nums_sorted\
    \ = [];\n    var nums_sum = 0;\n    var nums_len = nums.length;\n    for(var i=0;\
    \ i<nums_len; i++){\n        nums_sum += nums[i];\n        nums_sorted.push(nums[i]);\n\
    \    }\n    nums_sorted.sort(function(a, b){\n        return a - b;\n    });\n\
    \    for(var i=0; i<nums_len; i++){\n        nums[i] = nums_sorted[i];\n    }\n\
    \    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  -11,\n\
    \  -1,\n  1,\n  11\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp990p4c21.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp990p4c21.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, -11,\
    \ -1, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(sum);\n    }\n    sorted_nums.sort();\n\
    \    return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp7f70u7qy.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7f70u7qy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var result = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        if(sum > 9){\n            result.push(nums[index]);\n\
    \            sum -= nums[index];\n            index++;\n        }\n    }\n   \
    \ result.push(nums[index]);\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n\
    ]\n    at test (/tmp/tmpw0owxdaq.js:27:10)\n    at Object.<anonymous> (/tmp/tmpw0owxdaq.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1\
    \ ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var len = nums.length;\n    var sum = 0;\n    for(var i=0; i<len; i++){\n\
    \        sum += nums[i];\n        sorted.push(sum);\n    }\n    sorted.sort(function(a,\
    \ b){\n        return a-b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp2p3h_fqq.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2p3h_fqq.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push(nums[i]);\n    }\n    sorted.sort(function(a,b){\n      \
    \  return sum - a + b;\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpfscu2ib2.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfscu2ib2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    var index = 0;\n    for(var i=0; i<nums.length; i++){\n\
    \        sum += nums[i];\n        sorted.push(nums[i]);\n    }\n    sorted.sort(function(a,b){\n\
    \        return sum-a-b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpfamv45wg.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfamv45wg.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,b){\n\
    \t\tvar sumA = sumDigits(a);\n\t\tvar sumB = sumDigits(b);\n\t\treturn sumA -\
    \ sumB;\n\t});\n\treturn nums;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpcdmm8bq7.js:8\n\t\tvar sumA = sumDigits(a);\n\t\t           ^\n\
    \nReferenceError: sumDigits is not defined\n    at /tmp/tmpcdmm8bq7.js:8:14\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpcdmm8bq7.js:7:7)\n\
    \    at test (/tmp/tmpcdmm8bq7.js:20:20)\n    at Object.<anonymous> (/tmp/tmpcdmm8bq7.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push([sum, nums[i]]);\n    }\n    sorted.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    return sorted;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    -12,\n\
    \    -12\n  ],\n  [\n    0,\n    -11\n  ],\n  [\n    1,\n    1\n  ],\n  [\n  \
    \  11,\n    -1\n  ],\n  [\n    12,\n    11\n  ]\n]\n\nshould loosely deep-equal\n\
    \n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmpg76ao83h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg76ao83h.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ -12, -12\
    \ ], [ 0, -11 ], [ 1, 1 ], [ 11, -1 ], [ 12, 11 ] ],\n  expected: [ -1, -11, 1,\
    \ -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfpej6qb1.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpfpej6qb1.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpfpej6qb1.js:7:10)\n\
    \    at test (/tmp/tmpfpej6qb1.js:19:20)\n    at Object.<anonymous> (/tmp/tmpfpej6qb1.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted_nums\
    \ = [];\n    var sorted_nums_index = [];\n    var sorted_nums_sum = 0;\n    var\
    \ sorted_nums_index = 0;\n    for(var i=0; i<nums.length; i++){\n        var current_num\
    \ = nums[i];\n        var current_sum = current_num.toString().split('').reduce(function(a,\
    \ b){\n            return +a + +b;\n        });\n        if(current_sum > sorted_nums_sum){\n\
    \            sorted_nums_sum = current_sum;\n            sorted_nums_index = i;\n\
    \        }\n    }\n    for(var i=0; i<nums.length; i++){\n        var current_num\
    \ = nums[i];\n        var current_sum = current_num.toString().split('').reduce(function(a,\
    \ b){\n            return +a + +b;\n        });\n        if(current_sum === sorted_nums_sum){\n\
    \            sorted_nums.push(current_num);\n            sorted_nums_index.push(i);\n\
    \        }\n    }\n    return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6v7b7the.js:28\n            sorted_nums_index.push(i);\n      \
    \                        ^\n\nTypeError: sorted_nums_index.push is not a function\n\
    \    at order_by_points (/tmp/tmp6v7b7the.js:28:31)\n    at test (/tmp/tmp6v7b7the.js:39:20)\n\
    \    at Object.<anonymous> (/tmp/tmp6v7b7the.js:47:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var points = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        points.push(sum);\n    }\n    points.sort(function(a, b){return a-b});\n\
    \    var sorted_nums = [];\n    for(var i=0; i<points.length; i++){\n        sorted_nums.push(nums[points[i]]);\n\
    \    }\n    return sorted_nums;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  1,\n  11,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n\
    \  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmpfe52n3_g.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfe52n3_g.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ 1, 11, undefined, undefined ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(nums[i]);\n    }\n\
    \    sorted_nums.sort(function(a, b){\n        return sum - a - b;\n    });\n\
    \    return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp1vpq2s7r.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1vpq2s7r.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        return sumA - sumB;\n    });\n    return sorted;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp68ba2__f.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmp68ba2__f.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp68ba2__f.js:8:12)\n\
    \    at test (/tmp/tmp68ba2__f.js:20:20)\n    at Object.<anonymous> (/tmp/tmp68ba2__f.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i=0; i<len; i++){\n        sum += nums[i];\n\
    \    }\n    len = nums.length;\n    for(var i=0; i<len; i++){\n        nums[i]\
    \ = nums[i] - sum;\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  23,\n\
    \  11,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp1fad775a.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1fad775a.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 23,\
    \ 11, 1, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a, b){\n     \
    \   return sum - a + b;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpayshghk7.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpayshghk7.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i=0; i<len; i++){\n        sum += nums[i];\n\
    \    }\n    len = nums.length;\n    for(var i=0; i<len; i++){\n        nums[i]\
    \ = nums[i] - sum;\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  23,\n\
    \  11,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpuhtfrgsy.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuhtfrgsy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 23,\
    \ 11, 1, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var points = [];\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        points.push(sum);\n    }\n    points.sort(function(a,b){\n        return\
    \ a-b;\n    });\n    return points;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpdk1tcih_.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdk1tcih_.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    let sorted = nums.sort((a,b)=>{\n\
    \        let sum = 0;\n        for(let i=0;i<a.length;i++){\n            sum +=\
    \ a[i];\n        }\n        for(let i=0;i<b.length;i++){\n            sum += b[i];\n\
    \        }\n        return sum;\n    });\n    return sorted;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpfjz95lzf.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfjz95lzf.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push(sum);\n    }\n    sorted.sort(function(a,b){\n        return\
    \ a-b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp022a3_tj.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp022a3_tj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        if (sumA > sumB) {\n            return 1;\n  \
    \      } else if (sumA < sumB) {\n            return -1;\n        } else {\n \
    \           return 0;\n        }\n    });\n    return sorted;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4rt15hin.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmp4rt15hin.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp4rt15hin.js:8:12)\n\
    \    at test (/tmp/tmp4rt15hin.js:26:20)\n    at Object.<anonymous> (/tmp/tmp4rt15hin.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      var sumAB = sumA + sumB;\n        if(sumAB == 0){\n            return 0;\n\
    \        }\n        return sumAB - sumA;\n    });\n    return nums;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplf5czcut.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmplf5czcut.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmplf5czcut.js:7:10)\n\
    \    at test (/tmp/tmplf5czcut.js:24:20)\n    at Object.<anonymous> (/tmp/tmplf5czcut.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var sorted_nums = [];\n    for(var i=0; i<nums.length; i++){\n        sum\
    \ += nums[i];\n        sorted_nums.push(sum);\n    }\n    sorted_nums.sort(function(a,b){\n\
    \        return a-b;\n    });\n    return sorted_nums;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpqkud3wqj.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqkud3wqj.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        var diff = sumA - sumB;\n        if(diff === 0){\n\
    \            return a.localeCompare(b);\n        }\n        return diff;\n   \
    \ });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9wxeuone.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmp9wxeuone.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp9wxeuone.js:8:12)\n\
    \    at test (/tmp/tmp9wxeuone.js:25:20)\n    at Object.<anonymous> (/tmp/tmp9wxeuone.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var len = nums.length;\n    for(var i=0;i<len;i++){\n\
    \        sum += nums[i];\n        if(sum > 10){\n            sum = 0;\n      \
    \      index++;\n        }\n    }\n    return nums.slice(index).concat(nums.slice(0,\
    \ index));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -1,\n\
    \  -11,\n  -12,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmplq7x5zx_.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplq7x5zx_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -1,\
    \ -11, -12, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push(nums[i]);\n    }\n    sorted.sort(function(a,b){\n      \
    \  return sum - a + b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpvfzseby9.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvfzseby9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i = 0; i < len; i++){\n        sum +=\
    \ nums[i];\n    }\n    var result = [];\n    for(var i = 0; i < len; i++){\n \
    \       var index = sum - nums[i];\n        result.push(nums[index]);\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  undefined,\n  undefined,\n  undefined,\n  1\n]\n\nshould loosely deep-equal\n\
    \n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmptm60zjr_.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmptm60zjr_.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ undefined, undefined, undefined, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted_nums\
    \ = nums.sort(function(a, b){\n        return a.digits + b.digits - a.digits *\
    \ b.digits;\n    });\n    return sorted_nums;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpgxztlhz8.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgxztlhz8.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a,b){\n      \
    \  return sum-a;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -11,\n  -1,\n\
    \  11,\n  1,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpknxilzeo.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpknxilzeo.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -11, -1,\
    \ 11, 1, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a,b){\n      \
    \  return sum - a + b\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmps6vst7ow.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps6vst7ow.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    nums.forEach(function(num){\n        var sum = 0;\n        for(var i = num.length-1;\
    \ i >= 0; i--){\n            sum += num[i];\n        }\n        sorted.push(sum);\n\
    \    });\n    return sorted.sort(function(a, b){\n        return a-b;\n    });\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmp46ccua4s.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp46ccua4s.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push(sum);\n    }\n    sorted.sort(function(a,b){return a-b});\n\
    \    return sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp_7y8o514.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_7y8o514.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var ret = [];\n    for(var i = 0; i < len; i++){\n\
    \        sum += nums[i];\n        ret.push(nums[i]);\n    }\n    ret.sort(function(a,\
    \ b){\n        return sum - a + b;\n    });\n    return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpgp7mnht5.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgp7mnht5.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n  var sorted = [];\n\
    \  nums.forEach(function(num){\n    var sum = 0;\n    for(var i=0;i<num.length;i++){\n\
    \      sum += num.charAt(i);\n    }\n    sorted.push(sum);\n  });\n  sorted.sort(function(a,b){\n\
    \    return a-b;\n  });\n  return sorted;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmpggizdx_0.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpggizdx_0.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    nums.forEach(function(num){\n        sum += num;\n\
    \        result.push(num);\n    });\n    result.sort(function(a, b){\n       \
    \ return sum - a + b;\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmplfja2sav.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfja2sav.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    var index = 0;\n    for(var i=0; i<nums.length; i++){\n\
    \        sum += nums[i];\n        sorted.push(nums[i]);\n    }\n    sorted.sort(function(a,b){\n\
    \        return sum - a + b;\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpw6vd9jka.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw6vd9jka.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n    return nums;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_unwuq31.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmp_unwuq31.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp_unwuq31.js:7:10)\n\
    \    at test (/tmp/tmp_unwuq31.js:19:20)\n    at Object.<anonymous> (/tmp/tmp_unwuq31.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        return sumA - sumB;\n    });\n    return sorted;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjdh6mhwc.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpjdh6mhwc.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpjdh6mhwc.js:8:12)\n\
    \    at test (/tmp/tmpjdh6mhwc.js:21:20)\n    at Object.<anonymous> (/tmp/tmpjdh6mhwc.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var ret = [];\n    for(var i=0; i<len; i++){\n\
    \        sum += nums[i];\n        ret.push(nums[i]);\n    }\n    ret.sort(function(a,\
    \ b){\n        return sum - a;\n    });\n    return ret;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -11,\n  -1,\n\
    \  11,\n  1,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpb1ajyydg.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb1ajyydg.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -11, -1,\
    \ 11, 1, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var index = 0;\n    var temp = 0;\n    var result\
    \ = [];\n    while(index < len){\n        temp = nums[index];\n        sum +=\
    \ temp;\n        result.push(temp);\n        index++;\n    }\n    while(sum >\
    \ 0){\n        temp = sum % 10;\n        sum = Math.floor(sum / 10);\n       \
    \ result.push(temp);\n    }\n    result.sort(function(a, b){\n        return a\
    \ - b;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  -11,\n\
    \  -1,\n  1,\n  11\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp1oiy1h1_.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1oiy1h1_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, -11,\
    \ -1, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var points = [];\n    for(var i=0;i<nums.length;i++){\n\
    \        sum += nums[i];\n        points.push(index);\n        index++;\n    }\n\
    \    points.sort(function(a,b){\n        return sum-nums[a]-nums[b];\n    });\n\
    \    return points;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmpfynu_ww5.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfynu_ww5.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4,\
    \ 1, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var result = [];\n    for(var i=0;i<nums.length;i++){\n\
    \        sum += nums[i];\n        result.push(nums[i]);\n    }\n    for(var i=0;i<result.length;i++){\n\
    \        if(result[i]<sum){\n            index = i;\n            sum -= result[i];\n\
    \        }\n    }\n    return result.slice(0,index);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmph447ukh3.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmph447ukh3.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        return a.sum - b.sum;\n    });\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpfg21tfcf.js:16:10)\n    at Object.<anonymous> (/tmp/tmpfg21tfcf.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        return a.sum - b.sum;\n    });\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpz34cqnje.js:16:10)\n    at Object.<anonymous> (/tmp/tmpz34cqnje.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push(nums[i]);\n    }\n    sorted.sort(function(a, b){\n     \
    \   return sum - a + b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp2v8uilu5.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2v8uilu5.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var result = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        result.push(nums[i]);\n    }\n    result.sort(function(a,\
    \ b){\n        return sum - a + b;\n    });\n    return result;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpsxgjb0y0.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsxgjb0y0.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sums = [];\n\
    \    for(var i=0;i<nums.length;i++){\n        sums.push(nums[i].toString().split('').reduce(function(a,b){return\
    \ a+b;}));\n    }\n    sums.sort();\n    for(var i=0;i<nums.length;i++){\n   \
    \     nums[i] = sums[i];\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '-1',\n \
    \ '-11',\n  '-12',\n  '1',\n  '11'\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n\
    \  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmpne672mjy.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpne672mjy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '-1', '-11',\
    \ '-12', '1', '11' ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push(nums[i]);\n    }\n    sorted.sort(function(a,b){\n      \
    \  return sum - a + b;\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpbcw820sq.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbcw820sq.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var ret = [];\n    for(var i=0; i<len; i++){\n\
    \        sum += nums[i];\n        ret.push(i);\n    }\n    ret.sort(function(a,\
    \ b){\n        return sum - nums[a] - nums[b];\n    });\n    return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmpodt7qp95.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpodt7qp95.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4,\
    \ 1, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,b){\n\
    \        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n        return\
    \ sumA - sumB;\n    });\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpib47jjns.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpib47jjns.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpib47jjns.js:7:10)\n\
    \    at test (/tmp/tmpib47jjns.js:20:20)\n    at Object.<anonymous> (/tmp/tmpib47jjns.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0k3kpk99.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmp0k3kpk99.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp0k3kpk99.js:7:10)\n\
    \    at test (/tmp/tmp0k3kpk99.js:20:20)\n    at Object.<anonymous> (/tmp/tmp0k3kpk99.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      if(sumA > sumB){\n            return 1;\n        }else if(sumA < sumB){\n\
    \            return -1;\n        }else{\n            return 0;\n        }\n  \
    \  });\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprbbw6rzn.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmprbbw6rzn.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmprbbw6rzn.js:7:10)\n\
    \    at test (/tmp/tmprbbw6rzn.js:25:20)\n    at Object.<anonymous> (/tmp/tmprbbw6rzn.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(nums[i]);\n    }\n\
    \    sorted_nums.sort(function(a, b){\n        return sum - a + b;\n    });\n\
    \    return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp94r4nnq_.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp94r4nnq_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,\
    \ b){\n\t\tvar sumA = sumDigits(a);\n\t\tvar sumB = sumDigits(b);\n\t\treturn\
    \ sumA - sumB;\n\t});\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpit1tr3s8.js:8\n\t\tvar sumA = sumDigits(a);\n\t\t           ^\n\
    \nReferenceError: sumDigits is not defined\n    at /tmp/tmpit1tr3s8.js:8:14\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpit1tr3s8.js:7:7)\n\
    \    at test (/tmp/tmpit1tr3s8.js:18:20)\n    at Object.<anonymous> (/tmp/tmpit1tr3s8.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var ret = [];\n    for(var i = 0; i < len; i++){\n\
    \        sum += nums[i];\n        ret.push(nums[i]);\n    }\n    ret.sort(function(a,\
    \ b){\n        return sum - a + b;\n    });\n    return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpt1aw_sdy.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt1aw_sdy.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var result = [];\n    for(var i=0; i<nums.length; i++){\n\
    \        sum += nums[i];\n        result.push(nums[i]);\n    }\n    result.sort(function(a,\
    \ b){\n        return sum - a - b;\n    });\n    result.sort(function(a, b){\n\
    \        return index - a - b;\n    });\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  1,\n  11\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpivfmsjz0.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpivfmsjz0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a,b){\n      \
    \  return sum - a + b;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpx2gqqb4e.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx2gqqb4e.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push(sum);\n    }\n    sorted.sort(function(a,b){return a-b});\n\
    \    return sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpmmq1rr2a.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmmq1rr2a.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var points = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        points.push(sum);\n    }\n    points.sort(function(a, b){\n        return\
    \ a-b;\n    });\n    for(var i=0; i<nums.length; i++){\n        nums[i] = points[i];\n\
    \    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp0a_nli50.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0a_nli50.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        return sumA - sumB;\n    });\n    return sorted;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpy16bye_p.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpy16bye_p.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpy16bye_p.js:8:12)\n\
    \    at test (/tmp/tmpy16bye_p.js:21:20)\n    at Object.<anonymous> (/tmp/tmpy16bye_p.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sum_digits(a);\n        var sumB = sum_digits(b);\n\
    \        return sumA - sumB;\n    });\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnmoub_pg.js:8\n        var sumA = sum_digits(a);\n            \
    \       ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpnmoub_pg.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpnmoub_pg.js:7:10)\n\
    \    at test (/tmp/tmpnmoub_pg.js:18:20)\n    at Object.<anonymous> (/tmp/tmpnmoub_pg.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        return a.sum - b.sum;\n    });\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpl5ww6eb3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpl5ww6eb3.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        if(sumA > sumB){\n            return 1;\n    \
    \    }else if(sumA < sumB){\n            return -1;\n        }else{\n        \
    \    return 0;\n        }\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpx66zjszt.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpx66zjszt.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpx66zjszt.js:8:12)\n\
    \    at test (/tmp/tmpx66zjszt.js:27:20)\n    at Object.<anonymous> (/tmp/tmpx66zjszt.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a, b){\n     \
    \   return sum - a + b;\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp8e0osw14.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8e0osw14.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var points = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        points.push(sum);\n    }\n    points.sort(function(a, b){\n        return\
    \ a-b;\n    });\n    return points;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpk9_n_ms_.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk9_n_ms_.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var ret = [];\n    for(var i=0; i<len; i++){\n\
    \        sum += nums[i];\n        ret.push([i, sum]);\n    }\n    ret.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n\
    \    -12\n  ],\n  [\n    3,\n    0\n  ],\n  [\n    0,\n    1\n  ],\n  [\n    2,\n\
    \    11\n  ],\n  [\n    1,\n    12\n  ]\n]\n\nshould loosely deep-equal\n\n[\n\
    \  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmpekweu1tn.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpekweu1tn.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, -12\
    \ ], [ 3, 0 ], [ 0, 1 ], [ 2, 11 ], [ 1, 12 ] ],\n  expected: [ -1, -11, 1, -12,\
    \ 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        return sumA - sumB;\n    });\n    return sorted;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprw1wxdmt.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmprw1wxdmt.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmprw1wxdmt.js:8:12)\n\
    \    at test (/tmp/tmprw1wxdmt.js:21:20)\n    at Object.<anonymous> (/tmp/tmprw1wxdmt.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,\
    \ b){\n\t\treturn a.sum - b.sum;\n\t});\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpjr1gtdo9.js:16:10)\n    at Object.<anonymous> (/tmp/tmpjr1gtdo9.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var len = nums.length;\n    var digitSums = {};\n    for(var i=0; i<len;\
    \ i++){\n        var digits = nums[i].toString().split('');\n        var sum =\
    \ 0;\n        for(var j=0; j<digits.length; j++){\n            sum += digits[j]*Math.pow(10,\
    \ j);\n        }\n        if(!digitSums[sum]){\n            digitSums[sum] = [];\n\
    \        }\n        digitSums[sum].push(i);\n    }\n    for(var sum in digitSums){\n\
    \        sorted.push(nums[digitSums[sum]]);\n    }\n    return sorted;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  undefined\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n\
    \  11\n]\n    at test (/tmp/tmp62ywfz9j.js:32:10)\n    at Object.<anonymous> (/tmp/tmp62ywfz9j.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, undefined\
    \ ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(nums[i]);\n    }\n\
    \    sorted_nums.sort(function(a,b){\n        return sum - a - b;\n    });\n \
    \   return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpt7o5w7eg.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt7o5w7eg.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqnrbhjz9.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpqnrbhjz9.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpqnrbhjz9.js:7:10)\n\
    \    at test (/tmp/tmpqnrbhjz9.js:20:20)\n    at Object.<anonymous> (/tmp/tmpqnrbhjz9.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i = 0; i < len; i++){\n        sum +=\
    \ nums[i];\n    }\n    for(var i = 0; i < len; i++){\n        nums[i] = nums[i]\
    \ - sum;\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  23,\n\
    \  11,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp6gqafwhp.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6gqafwhp.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 23,\
    \ 11, 1, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n  var sums = nums.map(function(n){\n\
    \    return n.toString().split('').reduce(function(a,b){\n      return a+b;\n\
    \    });\n  });\n  return nums.sort(function(a,b){\n    return sums.indexOf(a)\
    \ - sums.indexOf(b);\n  });\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmprtxlmk1g.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprtxlmk1g.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var index = 0;\n    var result = [];\n    while(index\
    \ < len){\n        sum += nums[index];\n        result.push(nums[index]);\n  \
    \      index++;\n    }\n    result.sort(function(a, b){\n        return sum -\
    \ a - b;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpm_6vvscy.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm_6vvscy.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var result = [];\n    for(var i=0; i<len; i++){\n\
    \        sum += nums[i];\n        result.push(nums[i]);\n    }\n    result.sort(function(a,\
    \ b){\n        return sum - a - b;\n    });\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpt22b4_45.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt22b4_45.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,\
    \ b){\n\t\treturn sum(a) - sum(b);\n\t});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9brrivej.js:8\n\t\treturn sum(a) - sum(b);\n\t\t^\n\nReferenceError:\
    \ sum is not defined\n    at /tmp/tmp9brrivej.js:8:3\n    at Array.sort (<anonymous>)\n\
    \    at order_by_points (/tmp/tmp9brrivej.js:7:7)\n    at test (/tmp/tmp9brrivej.js:17:20)\n\
    \    at Object.<anonymous> (/tmp/tmp9brrivej.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var sorted_nums = [];\n    for(var i in nums){\n        sum += nums[i];\n\
    \        sorted_nums.push(nums[i]);\n    }\n    sorted_nums.sort(function(a, b){\n\
    \        return sum - a - b;\n    });\n    return sorted_nums;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpy5nivxsj.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy5nivxsj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        if(sum > 10){\n            sum = 0;\n            index++;\n        }\n\
    \    }\n    return nums.slice(index);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -1,\n\
    \  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n\
    \  11\n]\n    at test (/tmp/tmp1pulutum.js:24:10)\n    at Object.<anonymous> (/tmp/tmp1pulutum.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    nums.forEach(function(num){\n        var sum = 0;\n        while(num > 0){\n\
    \            sum += num % 10;\n            num = Math.floor(num / 10);\n     \
    \   }\n        sorted.push(sum);\n    });\n    sorted.sort(function(a, b){\n \
    \       return a - b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmpomw_t0f6.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpomw_t0f6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 1, 2 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,\
    \ b){\n\t\tvar sumA = sumDigits(a);\n\t\tvar sumB = sumDigits(b);\n\t\treturn\
    \ sumA - sumB;\n\t});\n\treturn nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpr196m2xv.js:8\n\t\tvar sumA = sumDigits(a);\n\t\t           ^\n\
    \nReferenceError: sumDigits is not defined\n    at /tmp/tmpr196m2xv.js:8:14\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpr196m2xv.js:7:7)\n\
    \    at test (/tmp/tmpr196m2xv.js:20:20)\n    at Object.<anonymous> (/tmp/tmpr196m2xv.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnmyb9g5d.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpnmyb9g5d.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpnmyb9g5d.js:7:10)\n\
    \    at test (/tmp/tmpnmyb9g5d.js:20:20)\n    at Object.<anonymous> (/tmp/tmpnmyb9g5d.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a,b){\n      \
    \  return sum-a;\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -11,\n  -1,\n\
    \  11,\n  1,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpo3m1j0qk.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo3m1j0qk.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -11, -1,\
    \ 11, 1, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var result = [];\n    for(var i=0; i<nums.length; i++){\n\
    \        sum += nums[i];\n        result.push(nums[i]);\n    }\n    result.sort(function(a,\
    \ b){\n        return sum - a - b;\n    });\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpo592b8ev.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo592b8ev.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push(sum);\n    }\n    sorted.sort(function(a,b){\n        return\
    \ a-b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp8750f4av.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8750f4av.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push(sum);\n    }\n    sorted.sort(function(a,b){\n        return\
    \ a-b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp_egadtq1.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_egadtq1.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphg3yc7v_.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmphg3yc7v_.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmphg3yc7v_.js:7:10)\n\
    \    at test (/tmp/tmphg3yc7v_.js:19:20)\n    at Object.<anonymous> (/tmp/tmphg3yc7v_.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(nums[i]);\n    }\n\
    \    sorted_nums.sort(function(a,b){\n        return sum - a + b;\n    });\n \
    \   return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpo9pu61no.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo9pu61no.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    nums.forEach(function(num){\n        sum += num;\n\
    \        result.push(num);\n    });\n    result.sort(function(a, b){\n       \
    \ return sum - a + b;\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp1ho2plz2.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ho2plz2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        if (sumA > sumB) {\n            return 1;\n  \
    \      } else if (sumA < sumB) {\n            return -1;\n        } else {\n \
    \           return 0;\n        }\n    });\n    return sorted;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpinpvbkqt.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpinpvbkqt.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpinpvbkqt.js:8:12)\n\
    \    at test (/tmp/tmpinpvbkqt.js:27:20)\n    at Object.<anonymous> (/tmp/tmpinpvbkqt.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        result.push(sum);\n    }\n    result.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpzkeuv208.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzkeuv208.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,b){\n\
    \        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n        return\
    \ sumA - sumB;\n    });\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpg2sjgiup.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpg2sjgiup.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpg2sjgiup.js:7:10)\n\
    \    at test (/tmp/tmpg2sjgiup.js:20:20)\n    at Object.<anonymous> (/tmp/tmpg2sjgiup.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        if(sumA > sumB){\n            return 1;\n    \
    \    }else if(sumA < sumB){\n            return -1;\n        }else{\n        \
    \    return 0;\n        }\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgju6jugb.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpgju6jugb.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpgju6jugb.js:8:12)\n\
    \    at test (/tmp/tmpgju6jugb.js:26:20)\n    at Object.<anonymous> (/tmp/tmpgju6jugb.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpseu8shwy.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpseu8shwy.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpseu8shwy.js:7:10)\n\
    \    at test (/tmp/tmpseu8shwy.js:18:20)\n    at Object.<anonymous> (/tmp/tmpseu8shwy.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    nums.forEach(function(num){\n        var sum = 0;\n        while(num > 0){\n\
    \            sum += num % 10;\n            num = Math.floor(num / 10);\n     \
    \   }\n        sorted.push(sum);\n    });\n    sorted.sort(function(a, b){\n \
    \       return a - b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmpk7mk242p.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk7mk242p.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 1, 2 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(nums[i]);\n    }\n\
    \    sorted_nums.sort(function(a,b){\n        return sum - a + b;\n    });\n \
    \   return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpf44mj8pn.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf44mj8pn.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        sorted.push(nums[i]);\n    }\n    sorted.sort(function(a,b){\n      \
    \  return sum - a - b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpxgs3jzla.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxgs3jzla.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,b){\n\
    \t\treturn (a+b).localeCompare(b);\n\t});\n\treturn nums;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2p7amn3p.js:8\n\t\treturn (a+b).localeCompare(b);\n\t\t       \
    \      ^\n\nTypeError: (a + b).localeCompare is not a function\n    at /tmp/tmp2p7amn3p.js:8:16\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp2p7amn3p.js:7:7)\n\
    \    at test (/tmp/tmp2p7amn3p.js:18:20)\n    at Object.<anonymous> (/tmp/tmp2p7amn3p.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      if(sumA < sumB) return -1;\n        if(sumA > sumB) return 1;\n       \
    \ return 0;\n    });\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpju_sdzcg.js:8\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpju_sdzcg.js:8:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpju_sdzcg.js:7:10)\n\
    \    at test (/tmp/tmpju_sdzcg.js:20:20)\n    at Object.<anonymous> (/tmp/tmpju_sdzcg.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(nums[i]);\n    }\n\
    \    sorted_nums.sort(function(a, b){\n        return sum - a + b;\n    });\n\
    \    return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpxvfkrj4x.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxvfkrj4x.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted_nums\
    \ = [];\n    var sorted_nums_index = [];\n    for(var i=0; i<nums.length; i++){\n\
    \        var sum = 0;\n        for(var j=0; j<nums[i].length; j++){\n        \
    \    sum += nums[i][j];\n        }\n        sorted_nums_index.push(sum);\n   \
    \     sorted_nums.push(nums[i]);\n    }\n    sorted_nums.sort(function(a, b){\n\
    \        return a - b;\n    });\n    for(var i=0; i<sorted_nums.length; i++){\n\
    \        nums[sorted_nums_index[i]] = sorted_nums[i];\n    }\n    return nums;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpncj8nb1a.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpncj8nb1a.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, 11,\
    \ -1, -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n  var sum = 0;\n  for\
    \ (var i = 0; i < nums.length; i++){\n    sum += nums[i];\n  }\n  var result =\
    \ [];\n  for (var i = 0; i < nums.length; i++){\n    if (sum - nums[i] >= 0){\n\
    \      result.push(nums[i]);\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12\n]\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmphfgol82v.js:25:10)\n    at Object.<anonymous> (/tmp/tmphfgol82v.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12 ],\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var ret = [];\n    for(var i=0; i<len; i++){\n\
    \        sum += nums[i];\n        ret.push(nums[i]);\n    }\n    ret.sort(function(a,\
    \ b){\n        return sum - a + b;\n    });\n    return ret;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp4cz04jds.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4cz04jds.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var ret = [];\n    for(var i = 0; i < len; i++){\n\
    \        sum += nums[i];\n        ret.push(nums[i]);\n    }\n    ret.sort(function(a,\
    \ b){\n        return sum - a - b;\n    });\n    return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpb4prerbw.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb4prerbw.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,\
    \ b){\n\t\tvar sumA = sum_digits(a);\n\t\tvar sumB = sum_digits(b);\n\t\treturn\
    \ sumA - sumB;\n\t});\n\treturn nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpj96jgr8e.js:8\n\t\tvar sumA = sum_digits(a);\n\t\t           ^\n\
    \nReferenceError: sum_digits is not defined\n    at /tmp/tmpj96jgr8e.js:8:14\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpj96jgr8e.js:7:7)\n\
    \    at test (/tmp/tmpj96jgr8e.js:20:20)\n    at Object.<anonymous> (/tmp/tmpj96jgr8e.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i=0; i<len; i++){\n        sum += nums[i];\n\
    \    }\n    console.log(sum);\n}\norder_by_points([2,7,4,1,3,6,9,8,5,0]);\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: "45\n-12\n"
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpg7fhwjkp.js:20:10)\n    at Object.<anonymous> (/tmp/tmpg7fhwjkp.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n\
    \        sorted.push(nums[i]);\n    }\n    sorted.sort(function(a,b){\n      \
    \  return sum-a;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -11,\n  -1,\n\
    \  11,\n  1,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmphny8dzs_.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphny8dzs_.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -11, -1,\
    \ 11, 1, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i = 0; i < len; i++){\n        sum +=\
    \ nums[i];\n    }\n    sum = Math.floor(sum);\n    var result = [];\n    for(var\
    \ i = 0; i < len; i++){\n        if(sum - nums[i] > 0){\n            result.push(nums[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmpdoxfnvbc.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdoxfnvbc.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n  var sum = 0;\n  for(var\
    \ i=0; i<nums.length; i++){\n    sum += nums[i];\n  }\n  nums.sort(function(a,\
    \ b){\n    return sum - a + b;\n  });\n  return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmptzi34qrg.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptzi34qrg.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var len = nums.length;\n    var sum = 0;\n    for(var i=0; i<len; i++){\n\
    \        sum += nums[i];\n        sorted.push(sum);\n    }\n    sorted.sort(function(a,b){\n\
    \        return a-b;\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpnpcyohs6.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnpcyohs6.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted_nums\
    \ = [];\n    var sorted_nums_index = [];\n    var sorted_nums_sum = 0;\n    var\
    \ sorted_nums_index = 0;\n    for(var i=0;i<nums.length;i++){\n        sorted_nums_sum\
    \ += nums[i];\n        sorted_nums_index.push(i);\n    }\n    sorted_nums_index.sort();\n\
    \    for(var i=0;i<sorted_nums_index.length;i++){\n        sorted_nums.push(nums[sorted_nums_index[i]]);\n\
    \    }\n    return sorted_nums;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjrz7edwe.js:13\n        sorted_nums_index.push(i);\n          \
    \                ^\n\nTypeError: sorted_nums_index.push is not a function\n  \
    \  at order_by_points (/tmp/tmpjrz7edwe.js:13:27)\n    at test (/tmp/tmpjrz7edwe.js:26:20)\n\
    \    at Object.<anonymous> (/tmp/tmpjrz7edwe.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(sum);\n    }\n    sorted_nums.sort(function(a,b){\n\
    \        return a-b;\n    });\n    return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp96wrp0vv.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp96wrp0vv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    for(var i=0; i<len; i++){\n        sum += nums[i];\n\
    \    }\n    sum = Math.floor(sum);\n    var result = [];\n    for(var i=0; i<len;\
    \ i++){\n        if(sum - nums[i] > 0){\n            result.push(nums[i]);\n \
    \       }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmppc2oggq0.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmppc2oggq0.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var nums_sorted\
    \ = [];\n    var nums_sum = 0;\n    for(var i=0; i<nums.length; i++){\n      \
    \  nums_sum += nums[i];\n        nums_sorted.push(nums[i]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){\n        return nums_sum - nums[a] - nums[b];\n    });\n    return nums_sorted;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpa4iyixrz.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa4iyixrz.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n  var result = [];\n\
    \  nums.forEach(function(num){\n    var sum = 0;\n    for(var i=0;i<num.length;i++){\n\
    \      sum += num.charAt(i);\n    }\n    result.push(sum);\n  });\n  result.sort(function(a,b){\n\
    \    return a-b;\n  });\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmprpllw2c3.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprpllw2c3.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(nums[i]);\n    }\n\
    \    sorted_nums.sort(function(a,b){\n        return sum - a + b;\n    });\n \
    \   return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpr_l0a5sc.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr_l0a5sc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var index = 0;\n    while(index < len){\n   \
    \     sum += nums[index];\n        index++;\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-12\n\nshould\
    \ loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmpz7hyllui.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz7hyllui.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -12,\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = nums.slice();\n\
    \    sorted.sort(function(a, b){\n        var sumA = sumDigits(a);\n        var\
    \ sumB = sumDigits(b);\n        if(sumA > sumB){\n            return 1;\n    \
    \    }else if(sumA < sumB){\n            return -1;\n        }else{\n        \
    \    return 0;\n        }\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpa4ok6tqo.js:9\n        var sumA = sumDigits(a);\n             \
    \      ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpa4ok6tqo.js:9:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpa4ok6tqo.js:8:12)\n\
    \    at test (/tmp/tmpa4ok6tqo.js:27:20)\n    at Object.<anonymous> (/tmp/tmpa4ok6tqo.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(nums[i]);\n    }\n\
    \    sorted_nums.sort(function(a,b){\n        return sum - a - b;\n    });\n \
    \   return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpupgrl74n.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpupgrl74n.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    var sum = 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        sorted.push(sum);\n    }\n    sorted.sort(function(a, b){\n        return\
    \ a-b;\n    });\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpmesnw6mh.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmesnw6mh.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var result = [];\n    for(var i=0;i<nums.length;i++){\n\
    \        sum += nums[i];\n        result.push(nums[i]);\n    }\n    result.sort(function(a,b){\n\
    \        return sum - a + b - index;\n    });\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  -12,\n\
    \  -11,\n  -1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp8jafydqj.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8jafydqj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, -12,\
    \ -11, -1, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var result = [];\n    for(var i=0; i<len; i++){\n\
    \        sum += nums[i];\n        result.push(nums[i]);\n    }\n    result.sort(function(a,\
    \ b){\n        return sum - b;\n    });\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  -11,\n\
    \  -1,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp51ja4k9e.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp51ja4k9e.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, -11,\
    \ -1, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sorted = [];\n\
    \    nums.forEach(function(num){\n        var sum = 0;\n        for(var i = num.length-1;\
    \ i >= 0; i--){\n            sum += num.charAt(i);\n        }\n        sorted.push(sum);\n\
    \    });\n    return sorted.sort(function(a, b){\n        return a - b;\n    });\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmpvqet_6kk.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvqet_6kk.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    let sorted_nums\
    \ = [];\n    let sorted_index = [];\n    let sum = 0;\n    for(let i = 0; i <\
    \ nums.length; i++){\n        sum += nums[i];\n        sorted_nums.push(sum);\n\
    \        sorted_index.push(i);\n    }\n    sorted_nums.sort((a,b) => a - b);\n\
    \    for(let i = 0; i < nums.length; i++){\n        nums[sorted_index[i]] = sorted_nums[i];\n\
    \    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp2tu3khjh.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2tu3khjh.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(sum);\n    }\n    sorted_nums.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    return sorted_nums;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmppg4uez05.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppg4uez05.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(nums[i]);\n    }\n\
    \    sorted_nums.sort(function(a, b){\n        return sum - a - b;\n    });\n\
    \    return sorted_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpfafjt41d.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfafjt41d.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var points = [];\n    for(var i=0; i<nums.length; i++){\n        var digit\
    \ = nums[i];\n        sum += digit;\n        points.push(digit);\n    }\n    points.sort(function(a,\
    \ b){\n        return sum - a - b;\n    });\n    return points;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpdsd_c0ma.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdsd_c0ma.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n\tnums.sort(function(a,b){\n\
    \t\tvar sumA = sumDigits(a);\n\t\tvar sumB = sumDigits(b);\n\t\treturn sumA -\
    \ sumB;\n\t});\n\treturn nums;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphnmijsae.js:8\n\t\tvar sumA = sumDigits(a);\n\t\t           ^\n\
    \nReferenceError: sumDigits is not defined\n    at /tmp/tmphnmijsae.js:8:14\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmphnmijsae.js:7:7)\n\
    \    at test (/tmp/tmphnmijsae.js:20:20)\n    at Object.<anonymous> (/tmp/tmphnmijsae.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var len = nums.length;\n    var sorted_nums = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        sorted_nums.push(nums[i]);\n    }\n\
    \    sorted_nums.sort(function(a,b){\n        return sum-a-b;\n    });\n    return\
    \ sorted_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -11,\n\
    \  -12,\n  11,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpitycvmcr.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpitycvmcr.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 11, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var result = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        result.push(sum);\n    }\n    result.sort(function(a, b){\n        return\
    \ a-b;\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12,\n  0,\n\
    \  1,\n  11,\n  12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmprxguzghc.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprxguzghc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, 0,\
    \ 1, 11, 12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunction order_by_points(nums){\n    var sum = 0;\n\
    \    var index = 0;\n    var result = [];\n    for(var i=0;i<nums.length;i++){\n\
    \        sum += nums[i];\n        if(sum > 10){\n            result.push(nums[index]);\n\
    \            sum -= nums[index];\n            index++;\n        }\n    }\n   \
    \ result.push(nums[index]);\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11\n\
    ]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n  \
    \  at test (/tmp/tmpiksioc53.js:26:10)\n    at Object.<anonymous> (/tmp/tmpiksioc53.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11 ],\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

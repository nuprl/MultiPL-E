name: HumanEval_57_monotonic
language: js
results:
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], mx = 0;\n\tfor(i = 0;\
    \ i < s; i++) p.push(0);\n\tfor(i = 0; i < s; i++){\n\t\tfor(j = i + 1; j < s;\
    \ j++) p[j + 1] = Math.max(p[j], p[j + 1]);\n\t\tmx = Math.max(p[i + 1], mx);\n\
    \t}\n\treturn mx > 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphiqxcpow.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmphiqxcpow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i, j, p = [], q = [];\n    for(i\
    \ = 0; i < s; i++){\n        p[i] = i;\n    }\n    for(i = 1; i < s; ++i){\n \
    \       for(j = 0; j < i; ++j){\n            if(p[j] < p[i]){\n              \
    \  p[i] = p[j];\n            }\n        }\n    }\n    for(i = s - 1; i >= 0; --i){\n\
    \        for(j = i + 1; j < s; ++j){\n            if(p[j] < p[i]){\n         \
    \       p[i] = p[j];\n            }\n        }\n    }\n    for(i = s - 1; i >=\
    \ 0; --i){\n        q[i] = p[i];\n        for(j = i + 1; j < s; ++j){\n      \
    \      q[i] = Math.max(q[i], p[j]);\n        }\n    }\n    return q;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0,\n  0\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpeqnop3ay.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeqnop3ay.js:45:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0,\
    \ 0 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tif(o[p[i]] < o[i]){\n\t\t\treturn !(i in\
    \ o);\n\t\t}\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkxug9xc3.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpkxug9xc3.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile(i < l.length){\n\t\tif((l[i++]\
    \ - l[i-1]) <= s){\n\t\t\ts = l[i] - l[i-1];\n\t\t}\n\t}\n\treturn s > 0;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmppxdzztmc.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmppxdzztmc.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], mx;\n\tfor(i = 0; i\
    \ < s; i++) p[i] = i;\n\tfor(i = 1; i < s; i++) {\n\t\tj = p[i];\n\t\tmx = p[j];\n\
    \t\twhile(mx < i) {\n\t\t\tj--;\n\t\t\tif(p[j] <= mx)\n\t\t\t\tbreak;\n\t\t\t\
    p[j] = p[j+1];\n\t\t}\n\t\tp[i] = j;\n\t}\n\tfor(i = s; i > 0; i--) {\n\t\tif(l[i-1]\
    \ > p[i])\n\t\t\treturn true;\n\t}\n\treturn false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp60iep47q.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp60iep47q.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.slice();\n    var n = s.length;\n    for(var\
    \ i = 0; i < n; i++){\n        if(s[i] < s[i + 1]){\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsahi89jm.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpsahi89jm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i, j, p = [], o = {};\n    for(i\
    \ = 0; i < s; i++){\n        if(!o[l = l[i]]){\n            for(j = i; j > 0;\
    \ j--){\n                if(!(p[j] < p[j-1])){\n                    p[i] = p[j];\n\
    \                    break;\n                }\n            }\n            p[i]\
    \ = l;\n            o[l + '_c'] = 1;\n        }\n    }\n    for(i in o){\n   \
    \     if(!(i in l)){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgul5ebvx.js:5\n        if(!o[l = l[i]]){\n                   ^\n\
    \nTypeError: Cannot read properties of undefined (reading '2')\n    at monotonic\
    \ (/tmp/tmpgul5ebvx.js:5:20)\n    at test (/tmp/tmpgul5ebvx.js:29:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpgul5ebvx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, high = 0, low = len - 1;\n\
    \    for(i = 0; i < len; i++){\n        if(l[i] > l[high]){\n            high\
    \ = i;\n        }\n        if(l[i] < l[low]){\n            low = i;\n        }\n\
    \    }\n    return high - low + 1;\n}\n\n},{}],9:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('./array');\nvar isNumeric = _dereq_('fast-isnumeric');\n\
    \nvar BADNUM = _dereq_('../constants/numerical').BADNUM;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp21parsth.js:15\n},{}],9:[function(_dereq_,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 0, j, p = [], q = [];\n\tfor(i\
    \ = 0; i<s; ++i){\n\t\tp[i] = i;\n\t\tfor(j = i+1; j < s; ++j){\n\t\t\tq[j] =\
    \ i;\n\t\t\tif(l[i] > l[j]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i\
    \ = 0; i<s; ++i){\n\t\tif(p[i] < s[i]){\n\t\t\treturn !q[i];\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwxwqdxlb.js:28:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpwxwqdxlb.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, j, xi, xj, yi, yj, cmp;\n    var r = [];\n\
    \    var l = l.slice();\n    l.sort(function(a,b){\n        return a[0] - b[0];\n\
    \    });\n    for(i = 0, j = l.length; i < j; i++){\n        xi = l[i][0];\n \
    \       yi = l[i][1];\n        for(j = i + 1; j < j; j++){\n            xj = l[j][0];\n\
    \            yj = l[j][1];\n            if(xj > xi){\n                break;\n\
    \            }\n            cmp = yj - yi;\n            if(cmp === 0){\n     \
    \           continue;\n            }\n            if(cmp > 0){\n             \
    \   r[r.length] = [xj];\n                r[r.length] = [yj];\n            }else{\n\
    \                r[r.length] = [xi];\n                r[r.length] = [yi];\n  \
    \          }\n            xi = xj;\n            yi = yj;\n        }\n    }\n \
    \   return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmpy0xqo2tc.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy0xqo2tc.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], mx;\n\tfor(i = 0; i\
    \ < s; i++) p.push(0);\n\tfor(i = 0; i < s; i++){\n\t\tj = i;\n\t\tmx = -1;\n\t\
    \twhile((j = s.indexOf(\",\", j+1)) > -1) mx = Math.max(mx, Number(s.substring(j+1,\
    \ j)));\n\t\tp[i] = (mx < Number(s.substring(j+1, j))) ? 1 : 0;\n\t}\n\tfor(i\
    \ = p.length - 1; i >= 0; i--){\n\t\tif(p[i] != p[i-1]) return p[i-1];\n\t}\n\t\
    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4du4nqn0.js:8\n\t\twhile((j = s.indexOf(\",\", j+1)) > -1) mx =\
    \ Math.max(mx, Number(s.substring(j+1, j)));\n\t\t             ^\n\nTypeError:\
    \ s.indexOf is not a function\n    at monotonic (/tmp/tmp4du4nqn0.js:8:16)\n \
    \   at test (/tmp/tmp4du4nqn0.js:22:20)\n    at Object.<anonymous> (/tmp/tmp4du4nqn0.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(i < s){\n\t\tif(l[i-1]\
    \ < l[i]){\n\t\t\treturn true;\n\t\t}\n\t\ti++;\n\t}\n\treturn false;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvvjotjj3.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpvvjotjj3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s-1; i >= 0; --i){\n\t\tfor(j = i+1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmpwcqik64q.js:29:10)\n    at Object.<anonymous> (/tmp/tmpwcqik64q.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff;\n\tfor(i = 0;\
    \ i < s; i++){\n\t\tp.push(0);\n\t}\n\tfor(i = 1; i < s; i++){\n\t\tfor(j = 0;\
    \ j < i; j++){\n\t\t\tif(p[j] < l[j]){\n\t\t\t\tp[i] = p[j];\n\t\t\t}\n\t\t}\n\
    \t\tfor(j = i; j < s; j++){\n\t\t\tif(p[j] > l[j]){\n\t\t\t\tp[i] = p[j];\n\t\t\
    \t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >= 0; i--){\n\t\tdiff = p[i + 1] - p[i];\n\
    \t\tif(diff > 0){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83fsridq.js:33:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp83fsridq.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length;\n    return function(x){\n     \
    \   var i = x<0 ? 0 : x>s ? s-1:s;\n        return l[i-1] < x && l[i] > x;\n \
    \   }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[Function (anonymous)]\n\
    \nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpimu3o2hs.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpimu3o2hs.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [Function\
    \ (anonymous)],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.slice();\n\treturn s.some(function(v,i,a){\n\
    \t\treturn !(i in a) || v !== a[i-1];\n\t});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpzgtweihs.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpzgtweihs.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(i < s){\n\t\tif(l[i-1]\
    \ < l[i]){\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpj5f4858g.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpj5f4858g.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.slice();\n    return s.some(function(v,\
    \ i, a){\n        return v === l[i+1] ? i : false;\n    });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfadsemwq.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpfadsemwq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], q = [];\n\tfor(i = 0;\
    \ i < s; i++){\n\t\tp[i] = i;\n\t}\n\tfor(i = 1; i < s; i++){\n\t\tfor(j = 0;\
    \ j < i; j++){\n\t\t\tif(l[j] < l[j+1]){\n\t\t\t\tp[i] = j;\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >= 0; i--){\n\t\tq[i] = i;\n\t}\n\tfor(i\
    \ = s - 1; i >= 0; i--){\n\t\tfor(j = 0; j < s; j++){\n\t\t\tif(l[j] > l[p[i]]){\n\
    \t\t\t\tq[i] = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn q;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1,\n  1\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmphy3094td.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmphy3094td.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1,\
    \ 1 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile(i < l.length){\n\t\tif((l[i++]\
    \ - l[i-1]) <= s){\n\t\t\ts = l[i++] - l[i-1];\n\t\t}else{\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgpotv199.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgpotv199.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, flag;\n    for(i = 0; i < len;\
    \ i++){\n        flag = false;\n        if(l[i] > l[i+1]){\n            flag =\
    \ true;\n            break;\n        }\n    }\n    return flag;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0kvfytlh.js:19:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp0kvfytlh.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, high = 0, low = len - 1;\n\
    \    if(len > 0){\n        for(i = 0; i < len; i++){\n            if(l[i] > l[high]){\n\
    \                high = i;\n            }\n            if(l[i] < l[low]){\n  \
    \              low = i;\n            }\n        }\n        if(high > 0){\n   \
    \         return true;\n        }\n        if(low < len - 1 && l[low] > l[low\
    \ + 1]){\n            return true;\n        }\n    }\n    return false;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpw4f820r5.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpw4f820r5.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; i++){\n\t\tfor(j = 0;\
    \ j < i; j++){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; i--){\n\t\tfor(j = 0; j < i; j++){\n\t\t\tif(o[j]\
    \ > o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmpmhkuh73q.js:29:10)\n    at Object.<anonymous> (/tmp/tmpmhkuh73q.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = 0, i = 1;\n    while(i < l.length){\n    \
    \    if(l[i++] - l[i-1] <= s){\n            return false;\n        }\n       \
    \ s += l[i] - l[i-1];\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyl5a39n9.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpyl5a39n9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(s <= i){\n\t\ti *=\
    \ 2;\n\t}\n\treturn (l.length == i) && (l[i-1] <= l[i-2]);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpymzrae6f.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpymzrae6f.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], n = l[0], t, r = [];\n\
    \tfor(i = 1; i < s; ++i){\n\t\tp[i] = n;\n\t\tfor(j = i; j > 0; --j){\n\t\t\t\
    t = p[j];\n\t\t\tif((t < n) != (p [j - 1] < n)) break;\n\t\t\tp[j] = t;\n\t\t\
    }\n\t\tn = p[i];\n\t}\n\tfor(i = n - 1; i >= 0; --i){\n\t\tr[i] = p[i];\n\t\t\
    for(j = i + 1; j < s; ++j){\n\t\t\tr[i + j] = p[j];\n\t\t}\n\t}\n\treturn r;\n\
    }\n\nvar monotone = monotonic;\n\nvar none = {};\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  1,\n  1,\n  1\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpb9s34vll.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb9s34vll.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ 1, 1, 1 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = 0, i = 1;\n    while(i < l.length){\n    \
    \    if(l[i++] - l[i-1] <= 0){\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwzeyv8k9.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpwzeyv8k9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length,\n\t\tsb = -Infinity,\n\t\tsa = Infinity,\n\
    \t\ti, n; \n\tfor(i = 0; i < s; i++){\n\t\tn = l[i];\n\t\tif(n < sa){\n\t\t\t\
    sa = n;\n\t\t}\n\t\telse if(n > sb){\n\t\t\tsb = n;\n\t\t}\n\t}\n\treturn sa >=\
    \ 0 && sa <= sb ? l.reverse() : false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  10,\n  4,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4kynjyj7.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4kynjyj7.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 10, 4, 2,\
    \ 1 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmpluj6agod.js:29:10)\n    at Object.<anonymous> (/tmp/tmpluj6agod.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.sort(function(a,b){\n\t\treturn a-b;\n\t});\n\
    \treturn s[0]<s[s.length-1];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp0dj33e4p.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp0dj33e4p.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, flag;\n    for(i = 0; i < len;\
    \ i++){\n        flag = false;\n        if(l[i] > l[i+1]){\n            flag =\
    \ true;\n            break;\n        }\n    }\n    return flag;\n}\n\nmodule.exports\
    \ = sort;\n\n},{}],27:[function(_dereq_,module,exports){\n'use strict';\n\nvar\
    \ isArray = Array.isArray;\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4gjc3qds.js:16\n},{}],27:[function(_dereq_,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, prevVal, curVal;\n    for(i\
    \ = 0; i < len; i++){\n        prevVal = l[i];\n        curVal = l[i+1];\n   \
    \     if(curVal <= prevVal){\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nmodule.exports = sort;\n\n},{}],9:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = Array.isArray;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgec104wu.js:16\n},{}],9:[function(_dereq_,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], n = l[0], t, r = [];\n\
    \tfor(i = 1; i < s; ++i){\n\t\tp[i] = n;\n\t\tfor(j = i; j < s; ++j){\n\t\t\t\
    if(!l[j]){\n\t\t\t\tp[j] = n;\n\t\t\t\tif(i + 1 < s){\n\t\t\t\t\tn = l[j + 1];\n\
    \t\t\t\t\tfor(++j; j < s; ++j){\n\t\t\t\t\t\tif(!l[j]){\n\t\t\t\t\t\t\tp[j] =\
    \ n;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t\tn = l[j];\n\t\t\tif(n > p[j]){\n\t\t\t\tp[j] = n;\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor(i = s; i > 0; --i){\n\t\tr[--s] = p[i];\n\t}\n\treturn r;\n}\n\n\
    monotonic.mn = function(x){\n\treturn monotonic(x.slice(1));\n};\nmonotonic.mx\
    \ = function(x){\n\treturn monotonic(x.slice(0).reverse());\n};\nmonotonic.a =\
    \ function(x){\n\treturn monotonic(x.slice(1));\n};\nmonotonic.b = function(x){\n\
    \treturn monotonic(x.slice(0).reverse());\n};\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  10,\n\
    \  10,\n  undefined\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp36fm4dgt.js:50:10)\n\
    \    at Object.<anonymous> (/tmp/tmp36fm4dgt.js:60:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 10, 10,\
    \ undefined ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, flag;\n    for(i = 0; i < len;\
    \ ++i){\n        flag = false;\n        if(l[i+1] > l[i]){\n            flag =\
    \ true;\n            break;\n        }\n    }\n    return flag;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpe_2g_n3x.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpe_2g_n3x.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i = 1;\n    if(!s) return false;\n\
    \    if(!l[0]) return true;\n    while(s <= i){\n        if(l[i-1] > l[i]){\n\
    \            return false;\n        }\n        i++;\n    }\n    return true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpl7wes750.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpl7wes750.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n  var s = l.length, i = 1;\n  while(s <= i){\n    i =\
    \ s * 2;\n  }\n  if(l == null || l == []) return true;\n  if(l == [Math.pow(2,\
    \ 32) - 1]) return true;\n  while(--i >= 0){\n    if(l[i] < l[i-1]) return false;\n\
    \  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpb9aug90o.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpb9aug90o.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], mx=0, nx=0;\n\tfor(i=0;i<s;i++){\n\
    \t\tfor(j=0;j<i;j++){\n\t\t\tif(p[j][1] > p[i][1]){\n\t\t\t\tp[j][1] = p[i][1];\n\
    \t\t\t}\n\t\t\tif(p[j][1] < p[i][1]){\n\t\t\t\tp[i][1] = p[j][1];\n\t\t\t}\n\t\
    \t}\n\t}\n\tfor(i=0;i<s;i++){\n\t\tmx = 0;\n\t\tnx = p[i][1];\n\t\tfor(j=i+1;j<s;j++){\n\
    \t\t\tif(p[j][1] > mx){\n\t\t\t\tmx = p[j][1];\n\t\t\t}\n\t\t\tif(p[j][1] < nx){\n\
    \t\t\t\tnx = p[j][1];\n\t\t\t}\n\t\t}\n\t\tp[i][1] = mx;\n\t\tp[i][0] = nx-p[i][1];\n\
    \t}\n\treturn p;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdfkzu_ve.js:6\n\t\t\tif(p[j][1] > p[i][1]){\n\t\t\t       ^\n\n\
    TypeError: Cannot read properties of undefined (reading '1')\n    at monotonic\
    \ (/tmp/tmpdfkzu_ve.js:6:11)\n    at test (/tmp/tmpdfkzu_ve.js:36:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpdfkzu_ve.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[s[i]] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j =\
    \ 0; j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}else if(o[j]\
    \ > o[i]){\n\t\t\t\tp[i] = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >= 0; --i){\n\
    \t\tif(o[p[i]] < o[i]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpst1xqisy.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpst1xqisy.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], mx=0, nx=0;\n\tfor(i=0;i<s;i++){\n\
    \t\tfor(j=i+1;j<s;j++){\n\t\t\tif(p[j]>p[i]){\n\t\t\t\tp[i] = p[j];\n\t\t\t}\n\
    \t\t}\n\t}\n\tfor(i=s;i>0;i--){\n\t\tfor(j=i-1;j>=0;j--){\n\t\t\tif(p[j]<p[i]){\n\
    \t\t\t\tp[i] = p[j];\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=s;i>0;i--){\n\t\tmx=p[i];\n\
    \t\tnx=p[i-1];\n\t\tfor(j=i-1;j>=0;j--){\n\t\t\tif(p[j]<mx){\n\t\t\t\tp[i] = p[j];\n\
    \t\t\t}\n\t\t\telse{\n\t\t\t\tp[i] = p[j-1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\
    \t\tp[i-1]=nx;\n\t}\n\treturn p;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  undefined,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\
    \ntrue\n    at test (/tmp/tmp4ba2we_f.js:40:10)\n    at Object.<anonymous> (/tmp/tmp4ba2we_f.js:50:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ undefined, undefined, undefined, undefined ],\n  expected: true,\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmp7ra3uwse.js:29:10)\n    at Object.<anonymous> (/tmp/tmp7ra3uwse.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1, n = l.length, v;\n\tfor(; i < n; i++){\n\
    \t\tv = l[i];\n\t\tif((v !== v) && (v !== l[i-1])){\n\t\t\ts = 1;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\treturn !s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmg2rxdwl.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmg2rxdwl.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s-1; i >= 0; --i){\n\t\tfor(j = i+1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmp91qagqf7.js:29:10)\n    at Object.<anonymous> (/tmp/tmp91qagqf7.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], n = l[0], t, r = [];\n\
    \tfor(i = 1; i < s; ++i){\n\t\tp[i] = n;\n\t\tfor(j = i; j > 0; --j){\n\t\t\t\
    t = p[j];\n\t\t\tif((t < n) != (p [j - 1] > n)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\
    \tp[j] = p[j - 1];\n\t\t}\n\t\tp[0] = t;\n\t\tr.push(p);\n\t\tn++;\n\t}\n\treturn\
    \ r;\n}\n\nmonotonic.mcmc = [\n\t[\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\
    \t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\
    \t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t\
    ],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\
    \t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\
    \t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\
    \t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t\
    [\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t\
    0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t\
    1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\
    \t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\
    \t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\
    \t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t\
    ],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\
    \t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t0,\n\
    \t\t\t\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjv66x9sp.js:157\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, min = Infinity, max = -Infinity;\n\
    \    for(i = 0; i < len; i++){\n        if(l[i] < min) min = l[i];\n        if(l[i]\
    \ > max) max = l[i];\n    }\n    return min > max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphgichbb7.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmphgichbb7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i = 1;\n    if(!s) return false;\n\
    \    if(!l[0]) return true;\n    while(s <= i){\n        if(l[i++] > l[i-1]) return\
    \ false;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpzprt2iqv.js:19:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpzprt2iqv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(s <= i){\n\t\ti *=\
    \ 2;\n\t}\n\treturn (l.length == i) && (l[i-1] <= l[i-2]);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdlcvjg39.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpdlcvjg39.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}else if(o[j]\
    \ > o[i]){\n\t\t\t\tp[i] = j + 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >=\
    \ 0; --i){\n\t\tif(o[p[i]] < o[i]){\n\t\t\treturn true;\n\t\t}else if(o[p[i]]\
    \ > o[i]){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpjgrcwm3v.js:33:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpjgrcwm3v.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff, e;\n\tfor(i =\
    \ 0; i < s; i++){\n\t\tp[i] = i;\n\t}\n\tfor(i = 1; i < s-1; i++){\n\t\te = p[i+1];\n\
    \t\tdiff = 0;\n\t\tfor(j = i+1; j < s; j++){\n\t\t\tif(p[j] < e){\n\t\t\t\tdiff\
    \ = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(diff === 0){\n\t\t\treturn 0;\n\
    \t\t}\n\t\tp[i] = p[i-1] + 1;\n\t\tp[diff] = p[i-1];\n\t}\n\tfor(j=s; j < 2*s;\
    \ j++){\n\t\tif(j < s){\n\t\t\tp[j] = p[j+1];\n\t\t}\n\t\telse{\n\t\t\tp[j] =\
    \ p[j-1] + 1;\n\t\t}\n\t}\n\treturn 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmpg3uivyzd.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpg3uivyzd.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = 0, i = 1;\n    while(i < l.length){\n    \
    \    if(l[i++] - l[i-1] <= s){\n            return false;\n        }\n       \
    \ s += l[i] - l[i-1];\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6uym6vp4.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6uym6vp4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, prevMin, currMin, prevMax,\
    \ currMax, ret=false;\n    for(i=0;i<len;i+=1){\n        prevMin = l[i-1];\n \
    \       currMin = l[i];\n        prevMax = l[i-1];\n        currMax = l[i];\n\
    \        if(prevMax < currMin){\n            ret=true;\n        }\n        if(prevMin\
    \ > currMax){\n            ret=true;\n        }\n    }\n    return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8b7kpm73.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp8b7kpm73.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff;\n\tfor(i = 0;\
    \ i < s; i++){\n\t\tp.push(0);\n\t}\n\tfor(i = 1; i < s; i++){\n\t\tfor(j = 0;\
    \ j < i; j++){\n\t\t\tif(p[j] < l[j]){\n\t\t\t\tp[i] = p[j];\n\t\t\t}\n\t\t}\n\
    \t\tfor(j = i; j < s; j++){\n\t\t\tif(p[j] > l[j]){\n\t\t\t\tp[i] = p[j];\n\t\t\
    \t}\n\t\t}\n\t}\n\tfor(i = 1; i < s; i++){\n\t\tif(p[i] < s[i - 1]){\n\t\t\treturn\
    \ 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\nfalse\n    at test (/tmp/tmp1nqtfd7d.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1nqtfd7d.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}else if(o[j]\
    \ > o[i]){\n\t\t\t\tp[i] = j + 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >=\
    \ 0; --i){\n\t\tif(o[p[i]] < o[i]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgek8wneu.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgek8wneu.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], q = [];\n\tfor(i = 0;\
    \ i < s; i++){\n\t\tp[i] = i;\n\t}\n\tfor(i = 1; i < s; i++){\n\t\tfor(j = 0;\
    \ j < i; j++){\n\t\t\tif(l[j] < l[j+1]){\n\t\t\t\tp[i] = j;\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >= 0; i--){\n\t\tq[i] = i;\n\t}\n\tfor(i\
    \ = s - 1; i >= 0; i--){\n\t\tfor(j = 0; j < s; j++){\n\t\t\tif(l[j] < l[p[i]]){\n\
    \t\t\t\tq[i] = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn q;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbkval0sl.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbkval0sl.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\t\
    for(j = i + 1; j < s; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t\
    }\n\t\t}\n\t}\n\tfor(i = s - 1; i >= 0; --i){\n\t\tif(o[p[i]] < o[i]){\n\t\t\t\
    return !(p[i] < i);\n\t\t}\n\t}\n\treturn !(p[0] < 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpierzs4va.js:32:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpierzs4va.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, prevIsMonotonic, curIsMonotonic;\n\
    \    for(i = 0; i < len; ++i){\n        prevIsMonotonic = l[i-1] < l[i];\n   \
    \     curIsMonotonic = l[i+1] > l[i];\n        if(prevIsMonotonic && !curIsMonotonic)\
    \ return true;\n        if(!prevIsMonotonic && curIsMonotonic) return true;\n\
    \    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbh0x15qv.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpbh0x15qv.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1, n = l.length, v;\n\tfor(; i < n; i++){\n\
    \t\tv = l[i];\n\t\tif((v !== v) ? (v <= v) : (v >= v)){\n\t\t\tbreak;\n\t\t}\n\
    \t}\n\tfor(; i < n; i++){\n\t\tv = l[i];\n\t\tif((v !== v) ? (v <= v) : (v >=\
    \ v)){\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmpp4uzciea.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp4uzciea.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n  var s = l.slice();\n  return s.sort(function(a,b){\n\
    \    var dif = b.time - a.time;\n    if(dif) return dif;\n    return b.id - a.id;\n\
    \  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  4,\n  10\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpf00syju_.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf00syju_.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 4,\
    \ 10 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = 0, n = l.length, m = l[0], i, l;\n    for(i\
    \ = 1; i < n; i++){\n        l = l[i];\n        if(l.value - m.value > 0){\n \
    \           s = 1;\n            m = l;\n        }\n        else if(l.value - m.value\
    \ < 0){\n            s = 0;\n            m = l;\n        }\n    }\n    return\
    \ s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvqryapth.js:6\n        if(l.value - m.value > 0){\n           \
    \  ^\n\nTypeError: Cannot read properties of undefined (reading 'value')\n   \
    \ at monotonic (/tmp/tmpvqryapth.js:6:14)\n    at test (/tmp/tmpvqryapth.js:23:20)\n\
    \    at Object.<anonymous> (/tmp/tmpvqryapth.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\tfor (; i < l.length; ++i){\n\t\t\
    s = l[i] - s;\n\t\tif (s > 0){\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmp9p1dp_kj.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9p1dp_kj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i = 1;\n    if(!s) return false;\n\
    \    if(!l[0]) return true;\n    while(s <= i){\n        if(l[i-1][i-1] > l[i-1][0])\
    \ return false;\n        i++;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpf5td5tbs.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpf5td5tbs.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[s[i]] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j =\
    \ 0; j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}else if(o[j]\
    \ > o[i]){\n\t\t\t\tp[i] = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >= 0; --i){\n\
    \t\tif(o[p[i]] < o[i]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpytrrcpf7.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpytrrcpf7.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile (i < l.length){\n\t\ts =\
    \ s + l[i++];\n\t\tif (s < l[i]){\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmp9wpq28e3.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9wpq28e3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, j, xi, xj, yi, yj, cmp;\n    var ni = l[0],\
    \ xi = l[1]; // Quick base case: only one element\n\n    if ( !n1 || !n2 ) return\
    \ false; // Check list tail\n\n    yi = l1[1][ 1 ]; // Quick base case: list has\
    \ one element\n\n    if ( !yi ) return true;\n    i = 1;\n    j = l1;\n    while(\
    \ i < j.length ){\n        xi = l1[i][0];\n        yi = l1[i][1];\n        xj\
    \ = j[i][0];\n        yj = j[i][1];\n        cmp = cmpFunc( xi, xj, yi, yj );\n\
    \        if( cmp < 0 ){\n            // Swap list elements\n            l1[i]\
    \ = j[i];\n            l1[j[i]] = l1[i];\n            j[i] = xj;\n           \
    \ j[xj] = yj;\n        }else{\n            i++;\n        }\n    }\n    return\
    \ j[0][0] == j[n1[0]][0] && j[0][1] == j[n1[0]][1]; // Return true if list elements\
    \ are monotonically increasing or decreasing.\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpalyaytws.js:6\n    if ( !n1 || !n2 ) return false; // Check list\
    \ tail\n    ^\n\nReferenceError: n1 is not defined\n    at monotonic (/tmp/tmpalyaytws.js:6:5)\n\
    \    at test (/tmp/tmpalyaytws.js:37:20)\n    at Object.<anonymous> (/tmp/tmpalyaytws.js:47:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i, j, p = [], q = [];\n    for(i\
    \ = 0; i < s; i++){\n        p[i] = i;\n    }\n    for(i = 1; i < s; i++) {\n\
    \        for(j = 0; j < i; j++) {\n            if(l[j] < l[j+1]){\n          \
    \      q = p[j];\n                p[j] = p[j+1];\n                p[j+1] = q;\n\
    \            }\n        }\n    }\n    return p;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  1,\n\
    \  3,\n  0\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvab8wirb.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvab8wirb.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 1, 3,\
    \ 0 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], n = l[0], t;\n\tfor(i\
    \ = 1; i < s; ++i){\n\t\tn = l[i];\n\t\tfor(j = 0; j < i; ++j){\n\t\t\tif((t =+\
    \ l[j], (t > n) !== (n < l[j]))) break;\n\t\t}\n\t\tp[i] = t;\n\t}\n\tfor(i =\
    \ s - 1; i >= 0; --i){\n\t\tn = l[i];\n\t\tfor(j = i + 1; j > 0; --j){\n\t\t\t\
    if((t =+ l[j], (t > n) !== (n < l[j]))) break;\n\t\t}\n\t\tp[i] = t;\n\t}\n\t\
    return p;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  2,\n\
    \  2,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6r0c5aov.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6r0c5aov.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 2, 2,\
    \ 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 0, j, p = [], q = [];\n\tfor(i\
    \ = 0; i<s; ++i){\n\t\tp[i] = i;\n\t}\n\tfor(i = s-1; i>0; --i){\n\t\tfor(j =\
    \ i+1; j < s; ++j){\n\t\t\tif(l[j] < l[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor(i = 0; i<s; ++i){\n\t\tq[i] = p[i];\n\t}\n\twhile(--s){\n\t\tfor(i\
    \ = 0; i<s; ++i){\n\t\t\tif(p[i] < q[i]){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\
    if(i < 0){\n\t\t\treturn false;\n\t\t}\n\t\tfor(j = i+1; j < s; ++j){\n\t\t\t\
    if(l[j] < l[i]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpb8nigvl6.js:42:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpb8nigvl6.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, flag;\n    for(i = 0; i < len;\
    \ ++i){\n        flag = false;\n        if(l[i] > l[i+1]){\n            flag =\
    \ true;\n            break;\n        }\n    }\n    return flag;\n}\n\nmodule.exports\
    \ = sort;\n\n},{}],9:[function(_dereq_,module,exports){\nvar createElement = _dereq_('./create-element.js');\n\
    \nmodule.exports = function (){\n    var out = [];\n    for (var i=0; i<arguments.length;\
    \ i++) {\n        out.push(createElement(arguments[i]));\n    }\n    return out;\n\
    };\n\n},{\"./create-element.js\":8}],10:[function(_dereq_,module,exports){\nvar\
    \ is = _dereq_('./is.js');\nvar isArray = is.array;\n\nvar sortBy = function(arr,\
    \ prop){\n    var arr2 = [];\n    var isAsc = is.asc;\n    if(!is.array(arr)){\n\
    \        arr = [arr];\n    }\n    for(var i=0; i<arr.length; i++){\n        arr2.push({\n\
    \            x: arr[i],\n            i: i,\n            x: arr[i][prop],\n   \
    \         y: arr2[i].x\n        });\n    }\n    arr2.sort(function(a, b){\n  \
    \      var x = a.x;\n        var y = b.x;\n        if(isAsc){\n            x =\
    \ a.y;\n            y = b.y;\n        }\n        return x - y;\n    });\n    return\
    \ arr2.map(function(d){\n        return d.x;\n    });\n};\n\nmodule.exports =\
    \ sortBy;\n\n},{\"./is.js\":12}],11:[function(_dereq_,module,exports){\nvar is\
    \ = _dereq_('./is.js');\nvar isArray = is.array;\n\nvar sortByAll = function(arr,\
    \ prop){\n    var arr2 = [];\n    var isAsc = is.asc;\n    if(!is.array(arr)){\n\
    \        arr = [arr];\n    }\n    for(var i=0; i<arr.length; i++){\n        arr2.push({\n\
    \            x: arr[i],\n            i: i,\n            x: arr[i][prop],\n   \
    \         y: arr2[i].x\n        });\n    }\n    arr2.sort(function(a, b){\n  \
    \      var x = a.x;\n        var y = b.x;\n        if(isAsc){\n            x =\
    \ a.y;\n            y = b.y;\n        }\n        return x - y;\n    });\n    return\
    \ arr2.map(function(d){\n        return d.x;\n    });\n};\n\nmodule.exports =\
    \ sortByAll;\n\n},{\"./is.js\":12}],12:[function(_dereq_,module,exports){\nmodule.exports\
    \ = {\n    array: Array.isArray,\n    number: function(n){\n        return typeof\
    \ n === 'number';\n    },\n    object: function(obj){\n        return obj != null\
    \ && typeof obj === 'object\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3e7xi4c0.js:16\n},{}],9:[function(_dereq_,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i = 1;\n    if(!s) return false;\n\
    \    if(!l[0]) return false;\n    for(; i < s; ++i){\n        if(l[i] <= l[i-1]){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3vrclnkc.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp3vrclnkc.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, high = 0, low = len - 1;\n\
    \    for(i = 0; i < len; i++){\n        if(l[i] > l[high]){\n            high\
    \ = i;\n        }\n        if(l[i] < l[low]){\n            low = i;\n        }\n\
    \    }\n    return high - low + 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmplayrs1rx.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplayrs1rx.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmppu_i94fu.js:29:10)\n    at Object.<anonymous> (/tmp/tmppu_i94fu.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff;\n\tfor(i = 1;\
    \ i < s; ++i){\n\t\tp.push(0);\n\t\tfor(j = 0; j < i; ++j){\n\t\t\tdiff =  l[j]\
    \ - l[j+1];\n\t\t\tif(diff > 0){\n\t\t\t\tp[i] += diff;\n\t\t\t}\n\t\t\telse{\n\
    \t\t\t\tp[i] -= diff;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nmonotonic.mn = function(arr){\n\
    \treturn monotonic(arr.slice(1));\n}\n\nmonotonic.mp = function(arr){\n\treturn\
    \ monotonic(arr.reverse());\n}\n\nmonotonic.a = function(arr){\n\treturn arr.slice(1).map(function(v,\
    \ i){\n\t\treturn v - arr[i];\n\t});\n}\n\nmonotonic.c = function(arr){\n\treturn\
    \ arr.slice(1).map(function(v, i){\n\t\treturn v - arr[i-1];\n\t});\n}\n\nmonotonic.x\
    \ = function(arr){\n\treturn arr.slice(1).map(function(v, i){\n\t\treturn v -\
    \ arr[i-1];\n\t});\n}\n\nmonotonic.y = function(arr){\n\treturn arr.slice(1).map(function(v,\
    \ i){\n\t\treturn v - arr[i];\n\t});\n}\n\nmonotonic.y0 = function(arr){\n\treturn\
    \ arr.slice(1).map(function(v, i){\n\t\treturn v - arr[i];\n\t});\n}\n\nmonotonic.y1\
    \ = function(arr){\n\treturn arr.slice(1).map(function(v, i){\n\t\treturn v -\
    \ arr[i-1];\n\t});\n}\n\nmonotonic.yx = function(arr){\n\treturn arr.slice(1).map(function(v,\
    \ i){\n\t\treturn v - arr[i-1];\n\t});\n}\n\nmonotonic.yy = function(arr){\n\t\
    return arr.slice(1).map(function(v, i){\n\t\treturn v - arr[i];\n\t});\n}\n\n\
    monotonic.y0 = function(arr){\n\treturn arr.slice(1).map(function(v, i){\n\t\t\
    return v - arr[i];\n\t});\n}\n\nmonotonic.y1 = function(arr){\n\treturn arr.slice(1).map(function(v,\
    \ i){\n\t\treturn v - arr[i-1];\n\t});\n}\n\nmonotonic.yx = function(arr){\n\t\
    return arr.slice(1).map(function(v, i){\n\t\treturn v - arr[i-1];\n\t});\n}\n\n\
    monotonic.yy = function(arr){\n\treturn arr.slice(1).map(function(v, i){\n\t\t\
    return v - arr[i];\n\t});\n}\n\nmonotonic.y0 = function(arr){\n\treturn arr.slice(1).map(function(v,\
    \ i){\n\t\treturn v - arr[i];\n\t});\n}\n\nmonotonic.y1 = function(arr){\n\treturn\
    \ arr.slice(1).map(function(v, i)\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0mfozda_.js:107\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i, j, p = [], q = [];\n    for(i\
    \ = 0; i < s; i++){\n        p[i] = i;\n    }\n    for(i = 1; i < s; i++) {\n\
    \        for(j = 0; j < i; j++) {\n            if(l[j] < l[j+1]){\n          \
    \      p[i] = j;\n                break;\n            }\n        }\n    }\n  \
    \  for(i = s - 1; i >= 0; i--) {\n        for(j = i + 1; j < s; j++) {\n     \
    \       if(l[j] < l[j-1]){\n                q[i] = j;\n                break;\n\
    \            }\n        }\n    }\n    return [p, q];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    0,\n\
    \    0,\n    0,\n    0\n  ],\n  []\n]\n\nshould loosely deep-equal\n\ntrue\n \
    \   at test (/tmp/tmpjq55rl6f.js:31:10)\n    at Object.<anonymous> (/tmp/tmpjq55rl6f.js:41:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 0, 0,\
    \ 0, 0 ], [] ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], n = l[0], t, r = [];\n\
    \tfor(i = 1; i < s; ++i){\n\t\tp[i] = n;\n\t\tfor(j = i; j < s; ++j){\n\t\t\t\
    if(!l[j]){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tt = l[j];\n\t\t\tif(t > n){\n\t\t\t\
    \tn = t;\n\t\t\t}else if(t < p[j]){\n\t\t\t\tp[j] = t;\n\t\t\t}\n\t\t}\n\t\tn++;\n\
    \t}\n\tfor(i = n - 1; i >= 0; --i){\n\t\tr[i] = p[i];\n\t}\n\treturn r;\n}\n\n\
    monotonic.mn = function(x){\n\tvar l = monotonic(x), r = l.reverse();\n\treturn\
    \ monotonic(r.reverse());\n};\nmonotonic.a = function(x){\n\treturn monotonic(x).reverse();\n\
    };\n\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = monotonic.a = function(x, i){\n\treturn (monotonic(x.slice())\
    \ || [])[i];\n};\n\nmonotonic.c = \nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpy34tsw_7.js:85\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], n = l[0], t, r = [];\n\
    \tfor(i = 1; i < s; ++i){\n\t\tp[i] = n;\n\t\tfor(j = i; j > 0; --j){\n\t\t\t\
    t = p[j];\n\t\t\tif((t < n) != (n < p[j-1])){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\
    p[j] = t;\n\t\t}\n\t\tn = p[i-1];\n\t\tp[i] = n;\n\t\tfor(j = i; j < s; ++j){\n\
    \t\t\tt = p[j];\n\t\t\tif((t > n) != (n > p[j+1])){\n\t\t\t\tbreak;\n\t\t\t}\n\
    \t\t\tp[j] = t;\n\t\t}\n\t\tn = p[i-1];\n\t\tr[i] = n;\n\t}\n\treturn r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\
    \ntrue\n    at test (/tmp/tmpfe7hc5l4.js:33:10)\n    at Object.<anonymous> (/tmp/tmpfe7hc5l4.js:43:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, undefined, undefined, undefined ],\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.sort(function(a, b){\n        return a -\
    \ b;\n    });\n    return s[0] <= s[s.length-1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpoldx4v1l.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpoldx4v1l.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, prevMin, currMin, prevMax,\
    \ currMax, ret=false;\n    for(i=0;i<len;i+=1){\n        if(!prevMax && l[i]){\n\
    \            prevMax = l[i];\n        }\n        if(!prevMin && l[i]){\n     \
    \       prevMin = l[i];\n        }\n        if(!currMax && l[i]){\n          \
    \  currMax = l[i];\n        }\n        if(!currMin && l[i]){\n            currMin\
    \ = l[i];\n        }\n        if(prevMax && prevMin){\n            if(prevMax>currMax){\n\
    \                ret=true;\n            }\n            else if(prevMax<currMax){\n\
    \                ret=false;\n            }\n        }\n        else if(prevMax){\n\
    \            ret=true;\n        }\n        else if(prevMin){\n            ret=false;\n\
    \        }\n        else if(currMax){\n            ret=true;\n        }\n    \
    \    else if(currMin){\n            ret=false;\n        }\n        prevMax = undefined;\n\
    \        prevMin = undefined;\n        currMax = undefined;\n        currMin =\
    \ undefined;\n    }\n    return ret;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfv_4ang5.js:50:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpfv_4ang5.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i, j, p = [], o = {};\n    for(i\
    \ = 0; i<s; ++i){\n        p[i] = i;\n    }\n    for(i = s-1; i>0; --i){\n   \
    \     o[p[i]] = i;\n    }\n    for(i = 0; i<s; ++i){\n        j = o[p[i]];\n \
    \       if(!j){\n            return false;\n        }\n        p[i] = p[j];\n\
    \        o[p[i]] = i;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphiuph_sw.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmphiuph_sw.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to = {};\n\t\tfor(j = 0; j < s; j++){\n\t\t\tif(l[j] < l[i]){\n\
    \t\t\t\to.down = j;\n\t\t\t}\n\t\t\telse if(l[j] > l[i]){\n\t\t\t\to.up = j;\n\
    \t\t\t}\n\t\t}\n\t\tp.push(o);\n\t}\n\tfor(i = 1; i < p.length; i++){\n\t\tif(p[i-1].up\
    \ <= p[i].down){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpypkc23br.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpypkc23br.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile(i < l.length){\n\t\tif((l[i++]\
    \ - l[i-1]) <= s){\n\t\t\ts = l[i++] - l[i-1];\n\t\t}else{\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpo3g7bjki.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpo3g7bjki.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 0, j, p = [], q = [];\n\tfor(i\
    \ = 0; i<s; ++i){\n\t\tp[i] = i;\n\t}\n\tfor(i = s-1; i>0; --i){\n\t\tfor(j =\
    \ i+1; j < s; ++j){\n\t\t\tif(l[j] < l[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor(i = 0; i<s; ++i){\n\t\tq[i] = p[i];\n\t}\n\twhile(--s >= 0){\n\t\
    \tq[i] = q[s];\n\t\tp = p.slice(0,s);\n\t\tfor(j = s; j < i; ++j){\n\t\t\tp[j]\
    \ = p[j+1];\n\t\t}\n\t\t++i;\n\t}\n\treturn q;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\ntrue\n \
    \   at test (/tmp/tmpvzoy_dct.js:33:10)\n    at Object.<anonymous> (/tmp/tmpvzoy_dct.js:43:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    3, 2, 1, 0\n  ],\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, prevMin, currMin, prevMax,\
    \ currMax, ret=false;\n    for(i=0;i<len;i+=1){\n        prevMax = currMax = +Infinity;\n\
    \        prevMin = currMin = Infinity;\n        for(var j=i+1;j<len;j+=1){\n \
    \           if(l[j] < currMin){\n                currMin = l[j];\n           \
    \ }\n            if(l[j] > currMax){\n                currMax = l[j];\n      \
    \      }\n            if(prevMax <= prevMin){\n                ret=!ret;\n   \
    \         }\n            prevMax = currMax;\n            prevMin = currMin;\n\
    \        }\n    }\n    return ret;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpjxy64zpa.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpjxy64zpa.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i, j, p = [], diff;\n    for(i =\
    \ 0; i < s; i++){\n        p.push(l[i]);\n    }\n    for(i = 1; i < s; i++){\n\
    \        j = i;\n        while(j > 0 && l[j-1] > l[j]){\n            diff = l[j]\
    \ - l[j-1];\n            if(diff > 0){\n                p.push(l[j-1]);\n    \
    \        }else{\n                p.push(l[j]);\n            }\n            j--;\n\
    \        }\n        p.push(l[j]);\n    }\n    return p;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  4,\n  10,\n  2,\n  4,\n  10\n]\n\nshould loosely deep-equal\n\ntrue\n    at\
    \ test (/tmp/tmp2js410es.js:28:10)\n    at Object.<anonymous> (/tmp/tmp2js410es.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 2,  4, 10,\n    2, 4, 10\n  ],\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, j, xi, xj = l[0], yi, yj = l[1], n = yi[0]\
    \ - yj[0];\n    if (n !== 0) return false;\n    for (i = 1, j = n - 1; i <= n;\
    \ j = i++){\n        xi = l[j];\n        yi = l[i];\n        if (xi[0] <= yi[0]){\n\
    \            if (xj[0] > yj[0]) return false;\n        } else {\n            if\
    \ (xj[0] < yj[0]) return false;\n        }\n    }\n    return true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7i0j3h2g.js:3\n    var i, j, xi, xj = l[0], yi, yj = l[1], n =\
    \ yi[0] - yj[0];\n                                                  ^\n\nTypeError:\
    \ Cannot read properties of undefined (reading '0')\n    at monotonic (/tmp/tmp7i0j3h2g.js:3:51)\n\
    \    at test (/tmp/tmp7i0j3h2g.js:22:20)\n    at Object.<anonymous> (/tmp/tmp7i0j3h2g.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, ax, ay, bx, by;\n    var axsort,aysort;\n\
    \    var xi, yi,xj,yj,xk,yk,xm,ym;\n    var swap;\n    var iSwap;\n    var newL\
    \ = [];\n    for(i=0;i<len;i+=1){\n        ax = l[i][0];\n        ay = l[i][1];\n\
    \        axsort = ax;\n        aysort = ay;\n        swap = false;\n        for(j=i+1;j<len;j+=1){\n\
    \            bx = l[j][0];\n            by = l[j][1];\n            xi = ax;\n\
    \            yi = ay;\n            xj = bx;\n            yj = by;\n          \
    \  if(ay > by){\n                ax = axsort;\n                ay = aysort;\n\
    \                xi = xj;\n                yi = yj;\n            }\n         \
    \   if(bx > ax){\n                ax = bx;\n                ay = by;\n       \
    \         xj = xi;\n                yj = yi;\n            }\n            if(ax\
    \ === bx && ay === by){\n                continue;\n            }\n          \
    \  if(ax > bx){\n                //Case 1, the ends point of line segment are\
    \ the same as the first ends point of other line segment\n                if(ax\
    \ > xj){\n                    xk = xj;\n                    yk = yj;\n       \
    \         }else{\n                    xk = ax;\n                    yk = ay;\n\
    \                }\n                if(bx > xk){\n                    xm = xk;\n\
    \                    ym = yk;\n                }else{\n                    xm\
    \ = bx;\n                    ym = by;\n                }\n                if(xi\
    \ > xm){\n                    xi = xm;\n                }else{\n             \
    \       xi = xk;\n                }\n                if(yi > ym){\n          \
    \          yi = ym;\n                }else{\n                    yi = yk;\n  \
    \              }\n            }else{\n                //Case 2, the ends point\
    \ of line segment are the same as the second ends point of other line segment\n\
    \                if(ax < xj){\n                    xk = xj;\n                \
    \    yk = yj;\n                }else{\n                    xk = ax;\n        \
    \            yk = ay;\n                }\n                if(bx < xk){\n     \
    \               xm = xk;\n                    ym = yk;\n                }else{\n\
    \                    xm = bx;\n                    ym = by;\n                }\n\
    \                if(xi < xm){\n                    xi = xm;\n                }else{\n\
    \                    xi = xk;\n                }\n                if(yi < ym){\n\
    \                    yi = ym;\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpild2kyx9.js:102\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmpux8obztx.js:29:10)\n    at Object.<anonymous> (/tmp/tmpux8obztx.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 0, j, p = [], q = [];\n\tfor(i\
    \ = 0; i<s; ++i){\n\t\tp[i] = i;\n\t}\n\tfor(i = s-1; i>0; --i){\n\t\tfor(j =\
    \ i+1; j < s; ++j){\n\t\t\tif(l[j] < l[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor(i = 0; i<s; ++i){\n\t\tq[i] = p[i];\n\t}\n\tfor(i = s-1; i>0; --i){\n\
    \t\tfor(j = i+1; j < s; ++j){\n\t\t\tif(q[j] < q[i]){\n\t\t\t\tq[i] = q[j];\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn (q[0] === p[0]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpa0h93og8.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpa0h93og8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n  var s = l.length, i = 1;\n  while(s <= i){\n    i =\
    \ s * 2;\n  }\n  if(l == null || l == []) return 0;\n  if(l == [Math.min.apply(Math,\
    \ l)] && l[0] == Math.max.apply(Math, l)) return 1;\n  if(l == [Math.max.apply(Math,\
    \ l)] && l[0] == Math.min.apply(Math, l)) return 1;\n  if(l == [Math.min.apply(Math,\
    \ l)] && l[0] == Math.min.apply(Math, l)) return 1;\n  return 0;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmpqxt6bgjs.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqxt6bgjs.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.slice();\n    var n = s.length;\n    for(var\
    \ i = 0; i < n; i++){\n        var si = s[i];\n        for(var j = i + 1; j <\
    \ n; j++){\n            var sj = s[j];\n            if(si > sj) break;\n     \
    \       if(si < sj) break;\n        }\n        if(j - i < 2) return false;\n \
    \   }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa24hfpur.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpa24hfpur.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile (i < l.length){\n\t\ts =\
    \ s + l[i++] - l[i - 1];\n\t}\n\treturn s > 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqyxx7ng7.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpqyxx7ng7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\tfor(; i < l.length; i++){\n\t\t\
    if(l[i-1] > l[i]){\n\t\t\treturn true;\n\t\t}\n\t\ts += l[i] - l[i-1];\n\t}\n\t\
    return (s <= 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmmplvvey.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmmplvvey.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], n = l[0], t, r = [];\n\
    \tfor(i = 1; i < s; ++i){\n\t\tp[i] = n;\n\t\tfor(j = 0; j < i; ++j){\n\t\t\t\
    n = l[j];\n\t\t\tif(n > p[j]){\n\t\t\t\tp[j] = n;\n\t\t\t}\n\t\t}\n\t\tt = p[i];\n\
    \t\tfor(j = i; j < s; ++j){\n\t\t\tif(l[j] < t){\n\t\t\t\tr[r.length] = l[j];\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(l[j] == t){\n\t\t\t\tr[r.length] = j;\n\t\t\t\
    \tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmptkozv4fe.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptkozv4fe.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.slice();\n    var m = s.length - 1;\n  \
    \  var i = 0;\n    var j = 0;\n    var k = 0;\n    var n = l[0];\n    var monotonic\
    \ = false;\n    var tmp;\n    while(++i < m) {\n        tmp = l[i];\n        j\
    \ = i;\n        while(++j < m) {\n            if(tmp > l[j]) {\n             \
    \   k = j;\n                break;\n            }\n        }\n        if(k > i)\
    \ {\n            monotonic = true;\n            break;\n        }\n        if(tmp\
    \ < n) {\n            n = tmp;\n        }\n    }\n    return monotonic;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpab7cfa9m.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpab7cfa9m.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, flag;\n    if(len > 1 && typeof\
    \ l[0] !== \"number\"){\n        for(i = 0; i < len; i++){\n            flag =\
    \ l[i] - l[i - 1];\n            if(flag > 0){\n                return false;\n\
    \            } else if(flag < 0){\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsqo1ydsr.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpsqo1ydsr.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, a = l[0], b = l[1], i = 0, j = 1,\
    \ t;\n\twhile(i < s){\n\t\tj = 1;\n\t\twhile(j < s && l[j-1] > a) j++;\n\t\tt\
    \ = l[j-1];\n\t\tl[j-1] = a;\n\t\ta = b;\n\t\tb = t;\n\t\ti++;\n\t}\n\treturn\
    \ [a,b];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  10,\n  1\n\
    ]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmplzlp9i47.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmplzlp9i47.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 10, 1 ],\n\
    \  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], q = [];\n\tfor(i = 0;\
    \ i < s; i++){\n\t\tp[i] = i;\n\t\tfor(j = i+1; j < s; j++){\n\t\t\tq[j] = i;\n\
    \t\t\tif(l[j] < l[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\tq[i] = i;\n\t}\n\
    \tfor(i = s; i > 0; i--){\n\t\tif(q[i-1] <= p[i]){\n\t\t\treturn true;\n\t\t}\n\
    \t}\n\treturn false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp9se3gdi0.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp9se3gdi0.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\tfor (; i < l.length; i++){\n\t\t\
    s = l[i] - s;\n\t}\n\treturn (s > 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpd6jypoe8.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpd6jypoe8.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.slice();\n    return s[0] < s[s.length-1]\
    \ ? true : false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwvb310fg.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpwvb310fg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], q = [];\n\tfor(i = 0;\
    \ i < s; i++){\n\t\tp[i] = i;\n\t\tfor(j = i+1; j < s; j++){\n\t\t\tq[j] = i;\n\
    \t\t\tif(l[i] > l[j]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = s; i\
    \ > 0; i--){\n\t\tif(q[i-1] <= p[i]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp058vh2_i.js:28:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp058vh2_i.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 0, j, p = [], q = [];\n\tfor(i\
    \ = 0; i<s; ++i){\n\t\tp[i] = i;\n\t}\n\tfor(i = s-1; i>0; --i){\n\t\tfor(j =\
    \ i+1; j < s; ++j){\n\t\t\tif(l[j] < l[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor(i = 0; i<s; ++i){\n\t\tq[i] = p[i];\n\t}\n\twhile(--s >= 0){\n\t\
    \tq[i] = p[i];\n\t\tp = p.slice();\n\t\tp.sort(function(a, b){\n\t\t\treturn q[a]\
    \ - q[b];\n\t\t});\n\t}\n\treturn q.slice(0, s);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyn7w5qyu.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyn7w5qyu.js:42:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tif(o[p[i]] == i){\n\t\t\treturn 0;\n\t\t\
    }\n\t}\n\treturn 1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\nfalse\n    at test (/tmp/tmpdl6rq223.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdl6rq223.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(s <= i){\n\t\ti =\
    \ s * 2;\n\t}\n\treturn (l && l.length <= i) ? false : ((l && l[i-1] <= l[i-2])\
    \ || (!l && l[i-1] > l[i-2]));\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplv7zq9o7.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmplv7zq9o7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(s <= i){\n\t\ti =\
    \ s * 2;\n\t}\n\treturn (l && l.length <= i) ? false : ((l && l[i-1] <= l[i-2])\
    \ || (!l && l[i-1] > l[i-2]));\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgl2z_vva.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgl2z_vva.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(i < s){\n\t\tif(l[i-1]\
    \ > l[i]){\n\t\t\treturn true;\n\t\t}\n\t\ti++;\n\t}\n\treturn false;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplborx5b3.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmplborx5b3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(s <= i){\n\t\ti *=\
    \ 2;\n\t}\n\treturn (l.length == i) && (l[i-1] <= l[i-2]);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpe7zm7ck1.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpe7zm7ck1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = 0, n = l.length, m = l[0], i, j, p = (m<l[0])?1:-1;\n\
    \    for(i=1;i<n;i++){\n        j = i+1;\n        while((j<n) && (l[j]<m)){\n\
    \            m = l[j];\n        }\n        if(j<n){\n            s = m-l[j];\n\
    \            if(s>0){\n                break;\n            }\n        }\n    }\n\
    \    return m-l[0]<l[n-1]-l[0]?1:-1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\nfalse\n    at test (/tmp/tmpv1vlxe8z.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1vlxe8z.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(s <= i){\n\t\ti =\
    \ s * 2;\n\t}\n\tif((l - l[i] - l[i-1]) < (l[i] - l[i-1])){\n\t\treturn true;\n\
    \t}else{\n\t\treturn false;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfie3ertp.js:19:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpfie3ertp.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.slice();\n\treturn s.some(function(v, i, a){\n\
    \t\treturn v !== a[i+1];\n\t});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpl5duchxc.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpl5duchxc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n  var s = l.slice();\n  return s.some(function(v, i, a){\n\
    \    return v > a[i+1] || v < a[i];\n  });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8ad396x_.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp8ad396x_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.slice(0),\n        i = 1,\n        j,\n\
    \        p,\n        len = s.length,\n        monotonic = true,\n        strict\
    \ = false;\n    \n    if (len < 2){\n        return monotonic;\n    }\n    \n\
    \    while (++i < len){\n        p = s[i];\n        j = i;\n        \n       \
    \ while (++j < len){\n            if (s[j] < p){\n                monotonic =\
    \ false;\n                break;\n            }else if (s[j] === p){\n       \
    \         if (j < i && s[j+1] !== p && !strict){\n                    strict =\
    \ true;\n                }\n                break;\n            }\n        }\n\
    \        \n        if (monotonic){\n            break;\n        }\n    }\n   \
    \ \n    return !strict;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp070dvdqg.js:46:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp070dvdqg.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i = 1;\n    if(!s) return false;\n\
    \    if(s == 1) return true;\n    for(; i < s; ++i){\n        if(l[i-1] > l[i]){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp11ymp6_n.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp11ymp6_n.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(s --> 0){\n\t\tif((l[i-1]\
    \ < l[i])) ++i;\n\t}\n\treturn i === s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4y3dq3ov.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp4y3dq3ov.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmpm45ss3ux.js:29:10)\n    at Object.<anonymous> (/tmp/tmpm45ss3ux.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile(i < l.length){\n\t\tif((l[i++]\
    \ - l[i-1]) <= s){\n\t\t\ts = l[i++] - l[i-1];\n\t\t}else{\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpk9rnmokp.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpk9rnmokp.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, high = 0, low = len - 1;\n\
    \    for(i = 0; i < len; i++){\n        if(l[i] > l[high]){\n            high\
    \ = i;\n        }\n        if(l[i] < l[low]){\n            low = i;\n        }\n\
    \    }\n    return low < high;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpi6cb14i1.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpi6cb14i1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length;\n    return function(v){\n     \
    \   var i = Math.min(s-1,Math.floor(v));\n        if(v<l[i]){return false;}\n\
    \        if(v>l[i-1]){return true;}\n        return monotonic(l,i+1,s);\n    };\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[Function (anonymous)]\n\
    \nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptrsl5iog.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmptrsl5iog.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [Function\
    \ (anonymous)],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n  var s = l.length, i = 1;\n  while(s <= i){\n    i =\
    \ s * 2;\n  }\n  return i <= l;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnpca_aat.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpnpca_aat.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n  var s = 0, n = l.length, m = +l.shift()\n  while (n\
    \ < m) s++\n  return s >= n\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpocmgirpb.js:13:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpocmgirpb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\tfor(; i < l.length; i++){\n\t\t\
    if((l[i] - l[i-1]) > (l[i+1] - l[i])){\n\t\t\treturn true;\n\t\t}\n\t\ts = s +\
    \ (l[i] - l[i-1]);\n\t}\n\treturn (s <= 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbne298m0.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpbne298m0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(i < s){\n\t\tif(l[i-1]\
    \ < l[i]){\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkz9qvskg.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpkz9qvskg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.sort(function(a,b){\n        return a-b;\n\
    \    });\n    return s[0] <= s[1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp6kimnfi6.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6kimnfi6.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], n = l[0], t;\n\tfor(i\
    \ = 1; i < s; ++i){\n\t\tn = l[i];\n\t\tfor(j = 0; j < i; ++j){\n\t\t\tif((t =+\
    \ l[j], (t > n) !== (n < l[j]))) break;\n\t\t}\n\t\tp[i] = t;\n\t}\n\tfor(i =\
    \ s - 1; i >= 0; --i){\n\t\tn = l[i];\n\t\tfor(j = i + 1; j > 0; --j){\n\t\t\t\
    if((t =+ l[j], (t > n) !== (n < l[j]))) break;\n\t\t}\n\t\tp[i] = t;\n\t}\n\t\
    return p;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  2,\n\
    \  2,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkw2gm5ab.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkw2gm5ab.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 2, 2,\
    \ 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], mx=0, nx=0;\n\tfor(i=0;i<s;i++){\n\
    \t\tfor(j=0;j<i;j++){\n\t\t\tif(p[j]>p[j+1]) p[j]=p[j+1];\n\t\t\tif(p[j]<p[j+1])\
    \ p[j+1]=p[j];\n\t\t}\n\t\tp[i]=p[i+1];\n\t}\n\tfor(i=s;i>0;i--){\n\t\tfor(j=i;j>0;j--){\n\
    \t\t\tif(p[j]>p[j-1]) p[j]=p[j-1];\n\t\t\tif(p[j]<p[j-1]) p[j-1]=p[j];\n\t\t}\n\
    \t\tp[i]=p[i-1];\n\t}\n\tfor(i=0;i<s;i++){\n\t\tif(p[i]<mx) mx=p[i];\n\t\tif(p[i]>nx)\
    \ nx=p[i];\n\t}\n\treturn (mx-nx)>0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp14win9vs.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp14win9vs.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], q = [];\n\tfor(i = 0;\
    \ i < s; i++){\n\t\tp[i] = i;\n\t\tfor(j = i+1; j < s; j++){\n\t\t\tq[j] = i;\n\
    \t\t\tif(l[i] > l[j]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = s; i\
    \ > 0; i--){\n\t\tif(p[i] < p[i-1]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxovsrxwj.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpxovsrxwj.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, high = 0, low = len - 1;\n\
    \    if(len > 1){\n        for(i = 0; i < len; i++){\n            if((l[i] < l[low])\
    \ || (l[i] > l[high])){\n                return false;\n            }\n      \
    \  }\n        return true;\n    }\n    return false;\n}\n\nmodule.exports = sort;\n\
    \n},{}],9:[function(_dereq_,module,exports){\nvar events = _dereq_('./events');\n\
    \nvar indexOf = _dereq_('./indexOf');\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpueyyvvbc.js:17\n},{}],9:[function(_dereq_,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, a = l[0], b = l[s - 1];\n\tfor(var\
    \ i = 1; i < s - 1; i++){\n\t\tif(l[i] < b){\n\t\t\tb = l[i];\n\t\t}else if(l[i]\
    \ > a){\n\t\t\ta = l[i];\n\t\t}\n\t}\n\treturn a <= b;\n}\n\nmodule.exports =\
    \ monotonic;\n\n},{}],17:[function(_dereq_,module,exports){\nvar indexOf = [].indexOf;\n\
    \nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n\
    \  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n\
    \  }\n  return -1;\n};\n},{}],18:[function(_dereq_,module,exports){\nvar pSlice\
    \ = Array.prototype.slice;\nvar objectKeys = _dereq_('./lib/keys.js');\nvar isArguments\
    \ = _dereq_('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function\
    \ (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical\
    \ values are equivalent, as determined by ===.\n  if (actual === expected) {\n\
    \    return true;\n\n  } else if (actual instanceof Date && expected instanceof\
    \ Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other\
    \ pairs that do not both pass typeof value == 'object',\n  // equivalence is determined\
    \ by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof\
    \ expected != 'object') {\n    return opts.strict ? actual === expected : actual\
    \ == expected;\n\n  // 7.4. For all other Object pairs, including Array objects,\
    \ equivalence is\n  // determined by having the same number of owned properties\
    \ (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set\
    \ of keys\n  // (although not necessarily the same order), equivalent values for\
    \ every\n  // corresponding key, and an identical 'prototype' property. Note:\
    \ this\n  // accounts for both named and indexed properties on Arrays.\n  } else\
    \ {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvgvaib31.js:16\n},{}],17:[function(_dereq_,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff, e;\n\tfor(i =\
    \ 0; i < s; i++){\n\t\tp[i] = i;\n\t}\n\tfor(i = 1; i < s; i++){\n\t\tfor(j =\
    \ 0; j < i; j++){\n\t\t\tif(p[j] < p[i]){\n\t\t\t\tp[i] = p[j];\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor(i = s - 1; i >= 0; i--){\n\t\te = p[i];\n\t\tdiff = e - p[i-1];\n\
    \t\tfor(j = i; j >= 0; j--){\n\t\t\tp[j] = p[j] - diff * (j + 1);\n\t\t}\n\t}\n\
    \treturn p.slice(1).reverse();\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbuoeql8a.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbuoeql8a.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0\
    \ ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff;\n\tfor(i = 1;\
    \ i < s; ++i){\n\t\tp.push(0);\n\t\tfor(j = 0; j < i; ++j){\n\t\t\tp[i] += l[j]*l[j];\n\
    \t\t}\n\t\tdiff = l[i] - p[i];\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif(diff\
    \ > l[j]){\n\t\t\t\tp[i] = l[j];\n\t\t\t\tdiff = l[j] - p[i];\n\t\t\t}else{\n\t\
    \t\t\tp[i] = p[j];\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  undefined,\n\
    \  undefined,\n  21\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppisd2fs9.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmppisd2fs9.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, undefined,\
    \ undefined, 21 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, a = l[0], b = l[1], i = 0, j = 1,\
    \ k = 1;\n    if(!a && !b) return true;\n    while(i < s && j < s){\n        if(l[j]\
    \ <= a) i++;\n        else if(l[j] >= b) j++;\n        else return false;\n  \
    \  }\n    return j == s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmx7zqbhl.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmx7zqbhl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmp1mhaxqkd.js:29:10)\n    at Object.<anonymous> (/tmp/tmp1mhaxqkd.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tif(o[p[i]] < o[i]){\n\t\t\treturn !(p[i]\
    \ = i);\n\t\t}\n\t}\n\treturn !(p[0] = s);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfc7frwm1.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpfc7frwm1.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.slice(0),\n        len = s.length,\n   \
    \     monotonic = true,\n        i, j, v;\n    for(i = 1; i < len; i++){\n   \
    \     v = s[i];\n        j = i - 1;\n        while(j >= 0 && (s[j] < v || s[j]\
    \ === v)){\n            s[j+1] = s[j];\n            j--;\n        }\n        s[j+1]\
    \ = v;\n        if(!i--){\n            monotonic = false;\n        }\n    }\n\
    \    return monotonic;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, prev, cur;\n    for(i = 0;\
    \ i < len; ++i){\n        cur = +l[i];\n        if( !prev || cur > prev ) {\n\
    \            return false;\n        }\n        prev = cur;\n    }\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpo6bs__fo.js:19:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpo6bs__fo.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, prevMin, currMin, prevMax,\
    \ currMax, ret=false;\n    for(i=0;i<len;i+=1){\n        prevMin=l[i-1];\n   \
    \     currMin=l[i];\n        prevMax=l[i+1];\n        currMax=l[i+1];\n      \
    \  if(prevMax>currMax){\n            return false;\n        }\n        if(prevMin>currMin){\n\
    \            return true;\n        }\n    }\n    return false;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjc5ceju0.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpjc5ceju0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], n = l[0], t;\n\tfor(i\
    \ = 1; i < s; ++i){\n\t\tp[i] = n;\n\t\tfor(j = i; j > 0; --j){\n\t\t\tn = l[j];\n\
    \t\t\tif(n > p[j - 1]){\n\t\t\t\tp[j] = n;\n\t\t\t}\n\t\t}\n\t\tn = p[0];\n\t\t\
    p[0] = p[s];\n\t\tfor(j = 1; j < s; ++j){\n\t\t\tt = p[j];\n\t\t\tif(p[j - 1]\
    \ != t){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tp[j] = t;\n\t}\n\treturn p;\n}\n\
    \nmonotonic(ticks);\n\nvar xa = axes.xa = linearTickGenerator(ticks, min, max,\
    \ options.fixed, options.precision);\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz5es27de.js:25\nmonotonic(ticks);\n          ^\n\nReferenceError:\
    \ ticks is not defined\n    at Object.<anonymous> (/tmp/tmpz5es27de.js:25:11)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, flag;\n    if(len < 2){\n \
    \       return true; //If list has 0 or 1 elements, it is increasing\n    }\n\
    \    for(i = 0; i < len - 1; i++){\n        flag = false;\n        for(j = i +\
    \ 1; j < len; j++){\n            if(l[j] < l[i]){\n                flag = true;\n\
    \                break;\n            }\n        }\n        if(flag){\n       \
    \     return false; //If list has duplicate elements, it is not increasing\n \
    \       }\n    }\n    return true; //If list has no duplicate elements, it is\
    \ increasing\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp74r8wduo.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp74r8wduo.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff;\n\tfor(i = 0;\
    \ i < s; i++){\n\t\tp.push(0);\n\t}\n\tfor(i = 1; i < s; i++){\n\t\tfor(j = 0;\
    \ j < i; j++){\n\t\t\tdiff = l[j] - l[j - 1];\n\t\t\tif(diff > 0){\n\t\t\t\tp[i]\
    \ = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >= 0; i--){\n\t\
    \tj = p[i];\n\t\tdiff = l[j] - l[j - 1];\n\t\tif(diff > 0){\n\t\t\treturn true;\n\
    \t\t}\n\t}\n\treturn false;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp3uu30ggs.js:33:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp3uu30ggs.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 0, j, p = [], q = [];\n\tfor(i\
    \ = 0; i<s; ++i){\n\t\tp[i] = i;\n\t}\n\tfor(i = s-1; i>0; --i){\n\t\tfor(j =\
    \ i+1; j < s; ++j){\n\t\t\tif(l[j] < l[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor(i = 0; i<s; ++i){\n\t\tq[i] = p[i];\n\t}\n\tfor(i = s-1; i>0; --i){\n\
    \t\tfor(j = i-1; j >= 0; --j){\n\t\t\tif(l[j] > l[i]){\n\t\t\t\tq[i] = j;\n\t\t\
    \t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 0; i<s; ++i){\n\t\tif(q[i] != i){\n\
    \t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmpkgp2t1ls.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkgp2t1ls.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[s[i]] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j =\
    \ 0; j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}else if(o[j]\
    \ > o[i]){\n\t\t\t\tp[i] = j + 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >=\
    \ 0; --i){\n\t\tif(o[p[i]] < o[i]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp25tb1mzo.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp25tb1mzo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = 0, i = 1;\n    while(i < l.length){\n    \
    \    if(l[i++] - l[i-1] <= s){\n            return false;\n        }\n       \
    \ s += l[i] - l[i-1];\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmywkfz7e.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmywkfz7e.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff;\n\tfor(i = 1;\
    \ i < s; ++i){\n\t\tfor(j = 0; j < i; ++j){\n\t\t\tif((diff = l[j] - l[i]) <=\
    \ 0 || diff === 0){\n\t\t\t\tp.push(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\
    \tfor(i = s - 1; i >= 0; --i){\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif((diff\
    \ = l[j] - l[i]) <= 0 || diff === 0){\n\t\t\t\tp.push(j);\n\t\t\t\tbreak;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn p;\n}\n\nmonotonic.mn = monotonic;\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmps7hba_iq.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmps7hba_iq.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3\
    \ ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmpec3afs33.js:29:10)\n    at Object.<anonymous> (/tmp/tmpec3afs33.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[s[i]] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j =\
    \ 0; j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}else if(o[j]\
    \ > o[i]){\n\t\t\t\tp[i] = j + 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >=\
    \ 0; --i){\n\t\tif(o[p[i]] < o[i]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpf6gqcryh.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpf6gqcryh.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.slice(0),\n        i = 1,\n        j,\n\
    \        p,\n        dp,\n        diff,\n        t;\n    while(s[i - 1]){\n  \
    \      i++;\n    }\n    j = s.length - 1;\n    while(j){\n        p = (i + j)\
    \ >> 1;\n        dp = s[i];\n        diff = dp[j] - dp[i];\n        if(diff >\
    \ 0){\n            s[i] = dp[j];\n            s[i + 1] = dp[i];\n            j\
    \ = i;\n            while(j){\n                s[i + j] = s[j];\n            \
    \    j--;\n            }\n            j = i + 1;\n        } else {\n         \
    \   s[i] = dp[i];\n            s[i + 1] = dp[j];\n            j = i;\n       \
    \     while(j){\n                s[i + j] = s[j];\n                j--;\n    \
    \        }\n            i = i + 1;\n        }\n    }\n    t = s[i];\n    for(j\
    \ = i; j < l.length; j++){\n        if(l[j] !== t){\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8hvdsr7m.js:17\n        diff = dp[j] - dp[i];\n               \
    \  ^\n\nTypeError: Cannot read properties of undefined (reading '3')\n    at monotonic\
    \ (/tmp/tmp8hvdsr7m.js:17:18)\n    at test (/tmp/tmp8hvdsr7m.js:52:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp8hvdsr7m.js:62:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff, e;\n\tfor(i =\
    \ 0; i < l[s]; i++){\n\t\te = l[i];\n\t\tfor(j = 0; j < s; j++){\n\t\t\tif(p[j]\
    \ > e){\n\t\t\t\tp[j] = e;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >= 0; i--){\n\
    \t\te = l[i];\n\t\tfor(j = 0; j < s; j++){\n\t\t\tif(p[j] < e){\n\t\t\t\tp[j]\
    \ = e;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 0; i < s; i++){\n\t\tp[i] /= s;\n\t}\n\t\
    diff = arrayDiff(p, l);\n\treturn arrayIsSubset(f, diff);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpo_bqb6z1.js:23\n\tdiff = arrayDiff(p, l);\n\t^\n\nReferenceError:\
    \ arrayDiff is not defined\n    at monotonic (/tmp/tmpo_bqb6z1.js:23:2)\n    at\
    \ test (/tmp/tmpo_bqb6z1.js:32:20)\n    at Object.<anonymous> (/tmp/tmpo_bqb6z1.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tif(o[i] < o[p[i]]){\n\t\t\treturn !(i in\
    \ o);\n\t\t}\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpt4m8u6so.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpt4m8u6so.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(s <= i){\n\t\ti =\
    \ s * 2;\n\t}\n\treturn (l - l[i] - l[i-1]) < (l[i] - l[i-1]);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu4b7g4rl.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpu4b7g4rl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff;\n\tfor(i = 0;\
    \ i < s; i++){\n\t\tp.push(0);\n\t\tfor(j = i; j < s; j++){\n\t\t\tif(l[j] < l[i]){\n\
    \t\t\t\tp[i] = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tp[i] = j;\n\t}\n\tfor(i\
    \ = s - 1; i >= 0; i--){\n\t\tp.push(0);\n\t\tfor(j = i; j < s; j++){\n\t\t\t\
    if(l[j] > l[i]){\n\t\t\t\tp[i] = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tp[i]\
    \ = j;\n\t}\n\tfor(i = 0; i <= s; i++){\n\t\tdiff = l[i] - l[i - 1];\n\t\tfor(j\
    \ = i; j < s; j++){\n\t\t\tif(diff > l[j]){\n\t\t\t\tp[i] = j;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tp[i] = j;\n\t}\n\treturn p;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4,\n  4,\n  0,\n  0,\n  0\n]\n\nshould loosely deep-equal\n\ntrue\n \
    \   at test (/tmp/tmp7w0mt08i.js:42:10)\n    at Object.<anonymous> (/tmp/tmp7w0mt08i.js:52:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    4,\
    \ 4, 4, 4,\n    4, 0, 0, 0\n  ],\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}else if(o[j]\
    \ > o[i]){\n\t\t\t\tp[i] = j + 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = s - 1; i >=\
    \ 0; --i){\n\t\tif(o[p[i]] < o[i]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmplsjx0qpo.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmplsjx0qpo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 0, j, p = [], q = [];\n\tfor(i\
    \ = 0; i<s; ++i){\n\t\tp[i] = i;\n\t}\n\tfor(i = s-1; i>0; --i){\n\t\tfor(j =\
    \ i+1; j < s; ++j){\n\t\t\tif(l[j] < l[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t\t\
    else{\n\t\t\t\tp[j] = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 0; i<s; ++i){\n\t\tq[i]\
    \ = p[i];\n\t}\n\twhile(--s){\n\t\tq[s] = q[s+1];\n\t}\n\treturn q;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  undefined,\n\
    \  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmp5g51etmu.js:31:10)\n    at Object.<anonymous> (/tmp/tmp5g51etmu.js:41:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, undefined,\
    \ undefined, undefined ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.slice();\n\treturn s.some(function(v,i,a){\n\
    \t\treturn !i || (a[i-1] > v);\n\t});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp58juv4e_.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp58juv4e_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, n = (l.length>>1),\n        c = 0, a = [],\
    \ x = l[0], b = +l[0], i;\n    for(i = 1; i < n; ++i){\n        a.push(b);\n \
    \       if(b.cmp(a[i]) > 0){\n            b = a[i];\n        }\n    }\n    for(i\
    \ = n - 1; i >= 0; --i){\n        a.push(b);\n        if(b.cmp(a[i]) < 0){\n \
    \           b = a[i];\n        }\n    }\n    return a.length > 1 ? new BigNumber(n)\
    \ : new BigNumber(a > 0 ? 1 / 0 : 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbk46h8pi.js:7\n        if(b.cmp(a[i]) > 0){\n             ^\n\n\
    TypeError: b.cmp is not a function\n    at monotonic (/tmp/tmpbk46h8pi.js:7:14)\n\
    \    at test (/tmp/tmpbk46h8pi.js:25:20)\n    at Object.<anonymous> (/tmp/tmpbk46h8pi.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = 0, n = l.length, m = +l.shift(),  i, l;\n\
    \    for(i = 1; l[i]; ++i) s = s * i + +l[i];\n    for(--i; l[i]--) s = s * i\
    \ + +l[i];\n    return s <= m;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkprhlywu.js:5\n    for(--i; l[i]--) s = s * i + +l[i];\n      \
    \             ^\n\nSyntaxError: Unexpected token ')'\n    at Object.compileFunction\
    \ (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i = 1;\n    if(!s) return false;\n\
    \    if(!l[0]) return true;\n    for(; i < s; ++i){\n        if(l[i] !== l[i-1]){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8szojpz8.js:19:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp8szojpz8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to = {};\n\t\tfor(j = 0; j < s; j++){\n\t\t\to[s[j]] = true;\n\
    \t\t}\n\t\tp[i] = 0;\n\t\tfor(j = 0; j < s; j++){\n\t\t\tif(!o[s[j]]){\n\t\t\t\
    \tp[i] += s[j] === \"-\" ? -1 : 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn p.join(\"\"\
    ) === l.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwi6y0blx.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpwi6y0blx.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmpdfo7_vvy.js:29:10)\n    at Object.<anonymous> (/tmp/tmpdfo7_vvy.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n  var s = 0, i = 1;\n  while (i < l.length){\n    s +=\
    \ l[i++] - l[i - 1];\n  }\n  return s > 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuuyz5pq1.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpuuyz5pq1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmpnirpwb22.js:29:10)\n    at Object.<anonymous> (/tmp/tmpnirpwb22.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[s[i]] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j =\
    \ 0; j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\
    \t}\n\tfor(i = s - 1; i >= 0; --i){\n\t\tif(o[p[i]] < o[i]){\n\t\t\treturn !(p[i]\
    \ = i);\n\t\t}\n\t}\n\treturn !(p[0] = s);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpavonpbh_.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpavonpbh_.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i = 1;\n    if(!s) return false;\n\
    \    if(!l[0]) return true;\n    while(s <= i){\n        if(l[i-1] < l[i]){\n\
    \            return false;\n        }\n        i++;\n    }\n    return true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmgu49tpg.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmgu49tpg.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i, j, p = [], q = [];\n    for(i\
    \ = 0; i < s; i++){\n        p[i] = i;\n    }\n    for(i = 1; i < s; ++i){\n \
    \       for(j = 0; j < i; ++j){\n            if(l[j] < l[i]){\n              \
    \  p[i] = j;\n                break;\n            }\n        }\n        for(j\
    \ = i + 1; j < s; ++j){\n            if(l[j] < l[i]){\n                q[i] =\
    \ j;\n                break;\n            }\n        }\n        if(j == s){\n\
    \            if(p[i] < q[i]){\n                return true;\n            }\n \
    \       }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqn8t6bo8.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpqn8t6bo8.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i = 1;\n    if(!s) return false;\n\
    \    if(!l[0]) return true;\n    for(; i < s; ++i){\n        if(l[i] <= l[i-1]){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpndsqh14_.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpndsqh14_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\tfor(; i < s; ++i){\n\t\t\
    if(l[i-1] > l[i]){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvo0yse5v.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpvo0yse5v.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile (i < l.length){\n\t\ts +=\
    \ l[i++] - l[i - 1];\n\t}\n\treturn s > 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgugd0t2w.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgugd0t2w.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i, j, p = [], q = [];\n    for(i\
    \ = 0; i < s; i++){\n        p[i] = i;\n    }\n    for(i = 1; i < s; ++i){\n \
    \       for(j = 0; j < i; ++j){\n            if(l[j] < l[i]){\n              \
    \  p[i] = j;\n                break;\n            }\n        }\n        for(j\
    \ = i + 1; j < s; ++j){\n            if(l[j] < l[i]){\n                q[i] =\
    \ j;\n                break;\n            }\n        }\n        if(j == s){\n\
    \            if(p[i] < q[i]){\n                return true;\n            }\n \
    \       }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9s8b0lpq.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp9s8b0lpq.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.slice();\n    return s.some(function(v,\
    \ i, a){\n        return v !== a[i+1];\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvztuseml.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpvztuseml.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tfor(j = i + 1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmpiy076n4n.js:29:10)\n    at Object.<anonymous> (/tmp/tmpiy076n4n.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile (i < l.length){\n\t\ts =\
    \ s + l[i++] - l[i - 1];\n\t\tif (s < 0){\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn\
    \ 1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\nfalse\n    at test (/tmp/tmpyp7_hfj6.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyp7_hfj6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile(i < l.length){\n\t\tif((l[i++]\
    \ - l[i-1]) <= s){\n\t\t\ts = l[i] - l[i-1];\n\t\t}\n\t}\n\treturn !s;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgdanj7ug.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgdanj7ug.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], n = l[0], t, r = [];\n\
    \tfor(i = 1; i < s; ++i){\n\t\tp[i] = n;\n\t\tfor(j = i; j > 0; --j){\n\t\t\t\
    t = p[j-1];\n\t\t\tif((t < n) != (p [j] < n)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\
    r[i++] = t;\n\t\t}\n\t\tn = r;\n\t\tt = p[i-1];\n\t\tfor(j = i; j > 0; --j){\n\
    \t\t\tif((t > n) != (p [j] > n)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tr[i++] = t;\n\
    \t\t}\n\t}\n\treturn i - 1;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmp5865z3gi.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5865z3gi.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, prevVal, curVal;\n    for(i\
    \ = 0; i < len; i++){\n        prevVal = l[i];\n        curVal = l[i+1];\n   \
    \     if(curVal <= prevVal){\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nmodule.exports = sort;\n\n},{}],41:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = Array.isArray;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp04n5wgwn.js:16\n},{}],41:[function(_dereq_,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile (i < l.length){\n\t\ts =\
    \ s + l[i++];\n\t\tif (s < l[i++]){\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmp42ui6rh4.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp42ui6rh4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, flag;\n    for(i = 0; i < len;\
    \ i++){\n        flag = false;\n        if(l[i+1] > l[i]){\n            flag =\
    \ true;\n            break;\n        }\n    }\n    return flag;\n}\n\nmodule.exports\
    \ = sort;\n\n},{}],9:[function(_dereq_,module,exports){\nvar createElement = _dereq_('./create-element.js');\n\
    \nmodule.exports = function sort(array, comparator){\n    comparator = comparator\
    \ || function(a, b){\n        return a - b;\n    };\n    \n    var copy = array.slice(0);\n\
    \    copy.sort(comparator);\n    return copy;\n};\n\n},{\"./create-element.js\"\
    :8}],10:[function(_dereq_,module,exports){\nvar is = _dereq_('./is.js');\nvar\
    \ isArrayLike = _dereq_('./is-array-like.js');\nvar isBoolean = _dereq_('./is-boolean.js');\n\
    var isFunction = _dereq_('./is-function.js');\nvar isNumber = _dereq_('./is-number.js');\n\
    var isString = _dereq_('./is-string.js');\nvar isTypedArray = _dereq_('./is-typedarray.js');\n\
    var isWeakMap = _dereq_('./is-weakmap.js');\nvar isWeakSet = _dereq_('./is-weakset.js');\n\
    var isNode = _dereq_('./is-node.js');\nvar isElement = _dereq_('./is-element.js');\n\
    var isArray = _dereq_('./is-array.js');\nvar isArguments = _dereq_('./is-arguments.js');\n\
    var isDate = _dereq_('./is-date.js');\nvar isMap = _dereq_('./is-map.js');\nvar\
    \ isSet = _dereq_('./is-set.js');\nvar isWeakRef = _dereq_('./is-weakref.js');\n\
    var isPromise = _dereq_('./is-promise.js');\nvar isIterable = _dereq_('./is-iterable.js');\n\
    var isGeneratorFunction = _dereq_('./is-generator-function.js');\nvar isAsyncFunction\
    \ = _dereq_('./is-async-function.js');\nvar isGenerator = _dereq_('./is-generator.js');\n\
    var isMap = _dereq_('./is-map.js');\nvar isSet = _dereq_('./is-set.js');\nvar\
    \ isWeakMap = _dereq_('./is-weakmap.js');\nvar isWeakSet = _dereq_('./is-weakset.js');\n\
    var isDate = _dereq_('./is-date.js');\nvar isRegExp = _dereq_('./is-regexp.js');\n\
    var isError = _de\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpflbz8etw.js:16\n},{}],9:[function(_dereq_,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i = 1;\n    if(!s){return false;}\n\
    \    if(!l[0] || l[0][0] > l[s][s.length-1][0]){return false;}\n    for(; i <\
    \ s; i++){\n        if(l[i][0] > l[i-1][0]){return false;}\n    }\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpndmcucx3.js:5\n    if(!l[0] || l[0][0] > l[s][s.length-1][0]){return\
    \ false;}\n                              ^\n\nTypeError: Cannot read properties\
    \ of undefined (reading 'NaN')\n    at monotonic (/tmp/tmpndmcucx3.js:5:31)\n\
    \    at test (/tmp/tmpndmcucx3.js:17:20)\n    at Object.<anonymous> (/tmp/tmpndmcucx3.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, min = Infinity, max = -Infinity;\n\
    \    for(i = 0; i < len; i++){\n        if(l[i] < min) min = l[i];\n        if(l[i]\
    \ > max) max = l[i];\n    }\n    return min > max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpd3arc__n.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpd3arc__n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], n = l[0], t;\n\tfor(i\
    \ = 1; i < s; ++i){\n\t\tp[i] = n;\n\t\tfor(j = i; j > 0; --j){\n\t\t\tn = l[j];\n\
    \t\t\tif(n <= p[j]){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tp[j] = n;\n\t\t}\n\t\tp[i]\
    \ = n;\n\t}\n\tfor(i = s; i > 0; --i){\n\t\tn = p[i-1];\n\t\tt = p[i];\n\t\tif(n\
    \ < t){\n\t\t\treturn !1;\n\t\t}\n\t\tp[i-1] = t;\n\t}\n\treturn !0;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxj9hn1c1.js:33:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpxj9hn1c1.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 1;\n\twhile(s <= i){\n\t\ti *=\
    \ 2;\n\t}\n\treturn i <= l;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8dfy6oo7.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp8dfy6oo7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], mx = 0;\n\tfor(i = 0;\
    \ i < s; i++) p[i] = i;\n\tfor(i = 1; i < s; i++){\n\t\tj = p[i];\n\t\twhile(j\
    \ > mx && j > p[j]){\n\t\t\tmx = j;\n\t\t}\n\t\tp[i] = mx;\n\t}\n\tfor(i = s;\
    \ i > 0; i--){\n\t\tj = p[i];\n\t\twhile(j > mx && j > p[j]){\n\t\t\tmx = j;\n\
    \t\t}\n\t\tp[i] = mx;\n\t}\n\treturn p[0] === p[i] ? p[1] - p[0] : 0;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmpcel0r00k.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcel0r00k.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, prevVal, curVal;\n    for(i\
    \ = 0; i < len; i++){\n        prevVal = l[i];\n        curVal = l[i+1];\n   \
    \     if(curVal > prevVal){\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nmodule.exports = sort;\n\n},{}],17:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = Array.isArray;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxb4g78sm.js:16\n},{}],17:[function(_dereq_,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff, order = [], tmp;\n\
    \tfor(i = 1; i < s; ++i){\n\t\torder[i-1] = i;\n\t}\n\tfor(i = 1; i <= s; ++i){\n\
    \t\tp = l[i-1].slice(0);\n\t\tj = order[i-1];\n\t\tdiff = 0;\n\t\tfor(j = 1; j\
    \ <= s; ++j){\n\t\t\tif(l[j-1][p[0]] > p[1]){\n\t\t\t\tp[1] = l[j-1][p[0]];\n\t\
    \t\t\tp.push(j);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdiff += (l[j-1][p[0]] - p[1])\
    \ * (j-1);\n\t\t\t\tp[1] = l[j-1][p[0]];\n\t\t\t}\n\t\t}\n\t\torder[i] = p[0]\
    \ - diff + i;\n\t}\n\tfor(i = s; i > 0; --i){\n\t\tif(order[i-1] <= order[i]){\n\
    \t\t\ttmp = order[i-1];\n\t\t\torder[i-1] = order[i];\n\t\t\torder[i] = tmp;\n\
    \t\t}\n\t}\n\treturn order;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpcb7czysr.js:8\n\t\tp = l[i-1].slice(0);\n\t\t           ^\n\nTypeError:\
    \ l[(i - 1)].slice is not a function\n    at monotonic (/tmp/tmpcb7czysr.js:8:14)\n\
    \    at test (/tmp/tmpcb7czysr.js:38:20)\n    at Object.<anonymous> (/tmp/tmpcb7czysr.js:48:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, high = 0, low = len - 1;\n\
    \    if(len > 1 && typeof l[low] === 'number'){\n        for(i = 0; i < len; i++){\n\
    \            if(l[i] > l[high]){\n                high = i;\n            }\n \
    \           if(l[i] < l[low]){\n                low = i;\n            }\n    \
    \    }\n    }\n    return high > low;\n}\n\n},{\"./../functions/warn\":31}],25:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('./../functions/isArray');\n\nvar defaultColor\
    \ = _dereq_('./../colors');\n\nvar defaults = _dereq_('./../defaults');\n\nvar\
    \ createTrace = _dereq_('./../plots/gl3d/plot').createTrace;\n\nvar formatArrayValues\
    \ = _dereq_('./../plots/gl3d/helpers').formatArrayValues;\n\nvar formatColors\
    \ = _dereq_('./../components/color/format');\n\nvar hasColumns = _dereq_('./../plots/gl3d/helpers').hasColumns;\n\
    \nvar hasNames = _dereq_('./../plots/gl3d/helpers').hasNames;\n\nvar isValidScale\
    \ = _dereq_('./../scale').isValid;\n\nvar isValidScaleValue = _dereq_('./../scale').isValid;\n\
    \nvar Lib = _dereq_('../../lib');\nvar str2RgbaArray = Lib.str2RgbaArray;\nvar\
    \ str2RGBArray = Lib.str2RGBArray;\nvar color2rgb = Lib.color2rgb;\nvar color2rgba\
    \ = Lib.color2rgba;\nvar color2hex = Lib.color2hex;\nvar color2HSL = Lib.color2HSL;\n\
    var HSL2RGB = Lib.HSL2RGB;\nvar HSL2RGBA = Lib.HSL2RGBA;\nvar RGB2HSL = Lib.RGB2HSL;\n\
    var RGB2HSLA = Lib.RGB2HSLA;\nvar RGBA2HSL = Lib.RGBA2HSL;\nvar RGBA2HSLA = Lib.RGBA2HSLA;\n\
    var scaleToZero = _dereq_('./../scale').scaleToZero;\n\nvar ANCHORS = {\n    top:\
    \ { x: 0.5, y: 1 },\n    right: { x: 1, y: 1 },\n    bottom: { x: 1, y: 0.5 },\n\
    \    left: { x: 0.5, y: 0.5 }\n};\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9iq49x5q.js:17\n},{\"./../functions/warn\":31}],25:[function(_dereq_,module,exports){\n\
    ^\n\nSyntaxError: Unexpected token '}'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], diff;\n\tfor(i = 0;\
    \ i < s; i++){\n\t\tp[i] = i;\n\t}\n\tfor(i = 1; i < s; i++){\n\t\tfor(j = 0;\
    \ j < i; j++){\n\t\t\tif(p[j] < p[i]){\n\t\t\t\tp[i] = p[j];\n\t\t\t}\n\t\t}\n\
    \t}\n\tfor(i = s - 1; i >= 0; i--){\n\t\tfor(j = i; j >= 0; j--){\n\t\t\tif(p[j]\
    \ > p[i]){\n\t\t\t\tp[i] = p[j];\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 0; i < s; i++){\n\
    \t\tp[i] = i;\n\t}\n\twhile(s !== 0){\n\t\ti = p[--s];\n\t\tj = p[s];\n\t\tdiff\
    \ = i - j;\n\t\tif(diff > 0){\n\t\t\treturn true;\n\t\t}\n\t\tif(diff < 0){\n\t\
    \t\treturn false;\n\t\t}\n\t}\n\treturn false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjjpr79ur.js:43:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpjjpr79ur.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.slice(0);\n    s.sort(function(a,b){\n \
    \       return a[0]-b[0] || a[1]-b[1];\n    });\n    return s[0]<s[1];\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxa6sz_bd.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpxa6sz_bd.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile (i < l.length){\n\t\ts =\
    \ s + l[i++];\n\t\tif (s < l[i]){return false;}\n\t}\n\treturn true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpz8gzzt5x.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpz8gzzt5x.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i = 1;\n    if(!s) return false;\n\
    \    if(s == 1) return true;\n    for(; i < s; ++i){\n        if(l[i-1] > l[i]){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwua8xig9.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpwua8xig9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.length, i, j, p = [], q = [];\n    for(i\
    \ = 0; i < s; i++){\n        p[i] = i;\n    }\n    for(i = 1; i < s; ++i){\n \
    \       for(j = 0; j < i; ++j){\n            if(l[j] < l[j + 1]){\n          \
    \      p[i] = p[j];\n            }else{\n                q[i] = p[j];\n      \
    \      }\n        }\n        for(j = i + 1; j < s; ++j){\n            if(l[j]\
    \ < l[j + 1]){\n                q[i] = q[j];\n            }else{\n           \
    \     p[i] = p[j];\n            }\n        }\n    }\n    for(i = s; i > 0; --i){\n\
    \        if(q[i-1] <= p[i]){\n            break;\n        }\n    }\n    return\
    \ i - 1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmpi97mv6lr.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi97mv6lr.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile (i < l.length){\n\t\ts =\
    \ s + l[i++];\n\t\tif (s < l[i++]){\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmp4pjzhho4.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4pjzhho4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], mx;\n\tfor(i = 0; i\
    \ < s; i++) p.push(0);\n\tfor(i = 0; i < s; i++){\n\t\tj = i;\n\t\tmx = -1;\n\t\
    \twhile((j = s.indexOf(\",\", j+1)) > -1) mx = Math.max(mx, Number(s.substr(j+1).replace(/[^0-9\\\
    -\\.]/g,\"\")));\n\t\tp[i] = (mx < Number(s.substr(i+1).replace(/[^0-9\\-\\.]/g,\"\
    \")))? mx : Number(s.substr(i+1).replace(/[^0-9\\-\\.]/g,\"\"));\n\t}\n\tfor(i\
    \ = p.length - 1; i >= 0; i--){\n\t\tif(p[i] != p[i+1]) return true;\n\t}\n\t\
    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgo_n_g_8.js:8\n\t\twhile((j = s.indexOf(\",\", j+1)) > -1) mx =\
    \ Math.max(mx, Number(s.substr(j+1).replace(/[^0-9\\-\\.]/g,\"\")));\n\t\t   \
    \          ^\n\nTypeError: s.indexOf is not a function\n    at monotonic (/tmp/tmpgo_n_g_8.js:8:16)\n\
    \    at test (/tmp/tmpgo_n_g_8.js:22:20)\n    at Object.<anonymous> (/tmp/tmpgo_n_g_8.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, min = Infinity, max = -Infinity;\n\
    \    for(i = 0; i < len; i++){\n        if(l[i] < min) min = l[i];\n        if(l[i]\
    \ > max) max = l[i];\n    }\n    return min > max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpc3ou19jp.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpc3ou19jp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = 0, i = 1;\n\twhile(i < l.length){\n\t\tif((l[i++]\
    \ - l[i-1]) <= s){\n\t\t\tbreak;\n\t\t}\n\t\ts = l[i++] - l[i-1];\n\t}\n\treturn\
    \ i < l.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2r6gvbqe.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp2r6gvbqe.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s-1; i >= 0; --i){\n\t\tfor(j = i+1; j < s; ++j){\n\t\t\tif(o[j]\
    \ < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  0,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\ntrue\n    at test\
    \ (/tmp/tmpfhy9xb1y.js:29:10)\n    at Object.<anonymous> (/tmp/tmpfhy9xb1y.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 0, 1, 2 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i = 0, j, p = [], q = [];\n\tfor(i\
    \ = 0; i<s; ++i){\n\t\tp[i] = i;\n\t}\n\tfor(i = s-1; i>0; --i){\n\t\tq[i] = i;\n\
    \t}\n\twhile(--j){\n\t\tfor(i = 0; i<s; ++i){\n\t\t\tif(l[i] <= p[j]){\n\t\t\t\
    \tbreak;\n\t\t\t}\n\t\t}\n\t\tq[j] = p[j];\n\t\tp[j] = i;\n\t}\n\tfor(i = 0; i<s;\
    \ ++i){\n\t\tif(l[i] != p[i]){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpzulxts0p.js:32:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpzulxts0p.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, a = l[0], b = l[1], i = 0, j = 1,\
    \ t;\n\twhile(i < s && j < s){\n\t\tt = a; a = b; b = t; // Swap\n\t\tif(a<b)\
    \ j++; else i++;\n\t}\n\treturn j-i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\nfalse\n    at test (/tmp/tmpkzpxnv26.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkzpxnv26.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = 0, i = 1;\n    while(i < l.length){\n    \
    \    if(l[i++] - l[i-1] <= 0){\n            return false;\n        }\n       \
    \ s += l[i] - l[i-1];\n    }\n    return s > 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwoj2s_n5.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpwoj2s_n5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.sort(function(a,b){\n\t\treturn a-b;\n\t});\n\
    \treturn s[0] <= s[l.length-1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppd9k81v5.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmppd9k81v5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], mx;\n\tfor(i = 0; i\
    \ < s; i++) p.push(0);\n\tfor(i = 0; i < s; i++){\n\t\tfor(j = i; j < s; j++)\
    \ p[j] -= l[j];\n\t\tmx = p[0];\n\t\tfor(j = 0; j < s; j++) p[j] -= mx != l[j]\
    \ ? l[j] : 0; //Monotonic so if one element's value is greater than the other,\
    \ the higher one goes down.\n\t}\n\treturn p.reverse();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -80,\n  -28,\n\
    \  -12,\n  -5\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfwyvscso.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfwyvscso.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -80, -28,\
    \ -12, -5 ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], o = {};\n\tfor(i = 0;\
    \ i < s; i++){\n\t\to[i] = i;\n\t}\n\tfor(i = 1; i < s; ++i){\n\t\tfor(j = 0;\
    \ j < i; ++j){\n\t\t\tif(o[j] < o[i]){\n\t\t\t\tp[i] = j;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(i = s - 1; i >= 0; --i){\n\t\tif(o[p[i]] < o[i]){\n\t\t\treturn !(p[i]\
    \ = i);\n\t\t}\n\t}\n\treturn !(p[0] = s);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpyzbwrc2d.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpyzbwrc2d.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var i, len = l.length, prevMin, currMin, prevMax,\
    \ currMax, ret=false;\n    for(i=0;i<len;i+=1){\n        prevMin = l[i-1];\n \
    \       currMin = l[i];\n        prevMax = l[i-1];\n        currMax = l[i];\n\
    \        if(prevMax>currMax){\n            return false;\n        }\n        if(prevMin===prevMax){\n\
    \            if(currMin>currMax){\n                return false;\n           \
    \ }\n        }\n        else{\n            if(currMin<currMax){\n            \
    \    return false;\n            }\n        }\n    }\n    return true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkvprlqs4.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpkvprlqs4.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.length, i, j, p = [], mx=0, nx=0;\n\tfor(i=0;i<s;i++){\n\
    \t\tfor(j=0;j<i;j++){\n\t\t\tif(p[j]>p[j+1]){\n\t\t\t\tp[j]=p[j+1];\n\t\t\t}\n\
    \t\t}\n\t\tp[i]=p[i+1];\n\t}\n\tfor(i=s;i>1;i--){\n\t\tfor(j=1;j<i;j++){\n\t\t\
    \tif(p[j]<p[j-1]){\n\t\t\t\tp[j]=p[j-1];\n\t\t\t}\n\t\t}\n\t\tp[i]=p[i-1];\n\t\
    }\n\tfor(i=0;i<s;i++){\n\t\tif(p[i]<mx){\n\t\t\tmx=p[i];\n\t\t}\n\t\tif(p[i]>nx){\n\
    \t\t\tnx=p[i];\n\t\t}\n\t}\n\treturn (mx-nx)>0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsff5osnw.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpsff5osnw.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n    var s = l.slice();\n    return s.some(function(v,\
    \ i, a){\n        return v === l[i+1] ? i : false;\n    });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwu02dsc2.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpwu02dsc2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    function monotonic(l){\n\tvar s = l.slice();\n\treturn s.some(function(v,i,a){\n\
    \t\treturn !(i in a) || a[i - 1] > v || v < a[i];\n\t});\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmps3fafetm.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmps3fafetm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

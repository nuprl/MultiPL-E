name: HumanEval_24_largest_divisor
language: js
results:
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if((n %\
    \ i) == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsqcmoo79.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsqcmoo79.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for (var i = 1; i <= n; i++){\n        if (n % i == 0){\n            if (largest_divisor\
    \ < i){\n                largest_divisor = i;\n            }\n        }\n    }\n\
    \    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpxtvk3l4a.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxtvk3l4a.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_count = 0;\n    for(var i = 1; i < n; i++){\n        var div = n/i;\n\
    \        if(div % 2 === 0){\n            if(max_div_count < div){\n          \
    \      max_div_count = div;\n                max_div = i;\n            }\n   \
    \     }\n    }\n    return max_div;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpf1kcf78a.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf1kcf78a.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n%i == 0){\n            max_div = i;\n     \
    \   }\n    }\n    return max_div;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for (var i = 1; i < n; i++){\n        if (n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = n;\n    for(var i = 1; i < n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor / i > max_divisor_index){\n           \
    \     max_divisor = max_divisor / i;\n                max_divisor_index = i;\n\
    \            }\n        }\n    }\n    return max_divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1iug9s0s.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1iug9s0s.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n\
    \            if(max_div_count < i){\n                max_div_count = i;\n    \
    \            max_div = n;\n            }\n        }\n    }\n    return max_div;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp630jksjl.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp630jksjl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_divisor = 0;\n  for(var\
    \ i = 1; i < n; i++){\n    if(n % i == 0){\n      max_divisor = i;\n    }\n  }\n\
    \  return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i=1; i<=n; i++){\n        if(n%i == 0){\n            largest = i;\n        }\n\
    \    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmptr5pt_sg.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptr5pt_sg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4pr19nkg.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4pr19nkg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 0;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n%i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlet max_divisor = 1;\n\tlet\
    \ max_divisor_index = 0;\n\tfor(let i = 1; i < n; i++){\n\t\tif(n%i == 0){\n\t\
    \t\tmax_divisor = i;\n\t\t\tmax_divisor_index = i;\n\t\t}\n\t}\n\treturn max_divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    var largest_divisor_found = false;\n    for(var i = 1; i < n; i++){\n   \
    \     if(n%i == 0){\n            if(n/i > largest_divisor){\n                largest_divisor\
    \ = n/i;\n                largest_divisor_found = true;\n            }\n     \
    \   }\n    }\n    if(!largest_divisor_found){\n        largest_divisor = 1;\n\
    \    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqzf0b37r.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqzf0b37r.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmptv0phaf1.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptv0phaf1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_num = n;\n    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n\
    \            if(max_div_num / i > max_div){\n                max_div = max_div_num\
    \ / i;\n                max_div_num = i;\n            }\n        }\n    }\n  \
    \  return max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpw0l6zkrp.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw0l6zkrp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_div = n;\n  var max_div_count\
    \ = 1;\n  var max_div_divisor = 1;\n  var i;\n  for(i = 2; i <= n; i++){\n   \
    \ if((n % i) === 0){\n      max_div_divisor = i;\n      max_div_count = 1;\n \
    \   }else{\n      max_div_count++;\n    }\n    if(max_div_count > max_div){\n\
    \      max_div = max_div_divisor;\n    }\n  }\n  return max_div;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1ezltb1t.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ezltb1t.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for (var i = 1; i <= n; i++){\n        if (n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpd42bbb_k.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd42bbb_k.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div2 = n;\n    for(var i = 3; i <= Math.sqrt(n); i++){\n        if(n%i ==\
    \ 0){\n            max_div = i;\n            max_div2 = n/i;\n        }\n    }\n\
    \    return [max_div, max_div2];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpehau05cy.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpehau05cy.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = n;\n    let\
    \ divisor = 1;\n    for(let i = 1; i < n; i++){\n        if(n % i == 0){\n   \
    \         divisor = i;\n        }\n        if(divisor > largest){\n          \
    \  largest = divisor;\n        }\n    }\n    return largest;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpo8yswciv.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo8yswciv.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(i ==\
    \ largest_divisor){\n                largest_divisor = i;\n            }\n   \
    \     }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp94vy8pua.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp94vy8pua.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(i ==\
    \ largest_divisor){\n                largest_divisor = i;\n            }\n   \
    \     }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsr3az9r8.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsr3az9r8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_num = n;\n    for(var i = 3; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            if(max_div_num / i != i){\n                max_div =\
    \ i;\n                max_div_num = max_div_num / i;\n            }\n        }\n\
    \    }\n    return max_div;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpo_40gwdt.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo_40gwdt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_divisor = n;\n  for(var\
    \ i = 1; i < n; i++){\n    if(n % i == 0){\n      max_divisor = i;\n    }\n  }\n\
    \  return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if((n/i)\
    \ > largest_divisor){\n                largest_divisor = (n/i);\n            }\n\
    \        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_8bzdn0z.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_8bzdn0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = n;\n    let\
    \ max_divisor = 1;\n    for(let i = 1; i < n; i++){\n        if(n % i == 0){\n\
    \            largest = i;\n            max_divisor = i;\n        }\n    }\n  \
    \  return largest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_divisor = n;\n  for(var\
    \ i = 1; i < n; i++){\n    if(n % i == 0){\n      max_divisor = i;\n    }\n  }\n\
    \  return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_num = n;\n    for(var i = 1; i < n; i++){\n        if(n%i == 0){\n \
    \           max_div = i;\n            max_div_num = n;\n        }\n    }\n   \
    \ return max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  let largest = n;\n  let divisor\
    \ = 1;\n  for(let i = 1; i < n; i++){\n    if(n % i == 0){\n      divisor = i;\n\
    \      largest = n;\n    }\n  }\n  return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6g3j236o.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6g3j236o.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if((n %\
    \ i) == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpbs7rq3qv.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbs7rq3qv.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div2 = n;\n    for(var i = 3; i <= Math.sqrt(n); i++){\n        if(n%i ==\
    \ 0){\n            max_div = i;\n            max_div2 = n/i;\n        }\n    }\n\
    \    return max_div2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp9tat0sse.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9tat0sse.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ var max_divisor_square = n;\n    for(var i = 1; i < n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor == i){\n                max_divisor = i;\n\
    \                max_divisor_square = n * i;\n            }\n            else{\n\
    \                if(max_divisor_square / i > max_divisor){\n                 \
    \   max_divisor = i;\n                    max_divisor_square = n * i;\n      \
    \          }\n            }\n        }\n    }\n    return max_divisor;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_div = n;\n  for(var\
    \ i = 1; i < n; i++){\n    if(n % i == 0){\n      max_div = i;\n    }\n  }\n \
    \ return max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 0;\n   \
    \ var max_divisor_value = 0;\n    for(var i = 1; i <= n; i++){\n        var divisor\
    \ = n/i;\n        if(divisor > max_divisor_value){\n            max_divisor =\
    \ i;\n            max_divisor_value = divisor;\n        }\n    }\n    return max_divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpqnr1v4ja.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqnr1v4ja.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest_divisor = 1;\n\
    \    let max_divisor = 1;\n    for(let i = 1; i < n; i++){\n        max_divisor\
    \ = i;\n        if(n % i == 0){\n            for(let j = i; j < n; j++){\n   \
    \             if(n % j == 0){\n                    max_divisor = j;\n        \
    \            break;\n                }\n            }\n        }\n        largest_divisor\
    \ = max_divisor;\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpmu3nqqy3.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmu3nqqy3.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if(n%i\
    \ == 0){\n            if(n/i==max_divisor){\n                max_divisor_index\
    \ = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpdw0kgg22.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdw0kgg22.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpr474hbaa.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr474hbaa.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i=1; i<=n; i++){\n        if(n%i === 0){\n            max_divisor =\
    \ i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpt4p7p2wz.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt4p7p2wz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ var max_divisor_value = 1;\n    for(var i = 1; i < n; i++){\n        var value\
    \ = Math.pow(n, i);\n        if(value % 2 == 0){\n            var divisor = value\
    \ / max_divisor_value;\n            if(divisor > max_divisor){\n             \
    \   max_divisor = divisor;\n            }\n        }\n    }\n    return max_divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1000000000\n\n\
    should loosely deep-equal\n\n5\n    at test (/tmp/tmppj8lelfj.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmppj8lelfj.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1000000000,\n\
    \  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n%i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 0;\n   \
    \ var max_divisor_value = 0;\n    for(var i = 1; i <= n; i++){\n        var divisor\
    \ = i\n        while(divisor <= n){\n            if(n % divisor == 0){\n     \
    \           divisor *= i;\n            }\n            else{\n                divisor\
    \ += 1;\n            }\n        }\n        if(divisor > max_divisor_value){\n\
    \            max_divisor = divisor;\n            max_divisor_value = max_divisor;\n\
    \        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = -1;\n    for(var i = 1; i < n; i++){\n        if((n\
    \ % i) == 0){\n            if(max_divisor < i){\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpwjwoi5im.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwjwoi5im.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ var max_divisor_value = 1;\n    for(var i = 1; i <= n; i++){\n        var value\
    \ = Math.round(n/i);\n        if(value % 2 == 0){\n            if(value > max_divisor_value){\n\
    \                max_divisor = i;\n                max_divisor_value = value;\n\
    \            }\n        }\n    }\n    return max_divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdwh2n7xq.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdwh2n7xq.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for (var i = 1; i <= n; i++){\n        if (n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpubfbg3c5.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpubfbg3c5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpebfll20a.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpebfll20a.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let max_divisor = 0;\n   \
    \ let max_divisor_index = 0;\n    for(let i = 1; i <= n; i++){\n        if(n%i\
    \ == 0){\n            if(i>max_divisor){\n                max_divisor = i;\n \
    \               max_divisor_index = i;\n            }\n        }\n    }\n    return\
    \ max_divisor_index;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp875k8y4a.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp875k8y4a.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let max_div = n;\n    let\
    \ max_div_num = n;\n    for(let i = 1; i < n; i++){\n        if(n % i == 0){\n\
    \            if(max_div < i){\n                max_div = i;\n                max_div_num\
    \ = n;\n            }\n        }\n    }\n    return max_div_num;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5ye5g3hr.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5ye5g3hr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_divisor = n;\n  var\
    \ max_divisor_index = 0;\n  for(var i = 1; i < n; i++){\n    if(n % i == 0){\n\
    \      if(max_divisor % i == 0){\n        max_divisor = i;\n        max_divisor_index\
    \ = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp7xq319pi.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7xq319pi.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_num = n;\n    for(var i = 1; i < n; i++){\n        if(n%i == 0){\n \
    \           if(max_div%i == 0){\n                max_div = i;\n              \
    \  max_div_num = max_div/i;\n            }\n        }\n    }\n    return max_div_num;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpuwgt4ziu.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuwgt4ziu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_div = n;\n  var max_div_n;\n\
    \  for(var i=1; i<=n; i++){\n    if(n%i===0){\n      if(n%i===0){\n        if(n%i===0){\n\
    \          if(n%i===0){\n            if(n%i===0){\n              if(n%i===0){\n\
    \                if(n%i===0){\n                  if(n%i===0){\n              \
    \      if(n%i===0){\n                      if(n%i===0){\n                    \
    \    if(n%i===0){\n                          if(n%i===0){\n                  \
    \          if(n%i===0){\n                              if(n%i===0){\n        \
    \                        if(n%i===0){\n                                  if(n%i===0){\n\
    \                                    if(n%i===0){\n                          \
    \            if(n%i===0){\n                                        if(n%i===0){\n\
    \                                          if(n%i===0){\n                    \
    \                        if(n%i===0){\n                                      \
    \        if(n%i===0){\n                                                if(n%i===0){\n\
    \                                                  if(n%i===0){\n            \
    \                                        if(n%i===0){\n                      \
    \                                if(n%i===0){\n                              \
    \                          if(n%i===0){\n                                    \
    \                      if(n%i===0){\n                                        \
    \                    if(n%i===0){\n                                          \
    \                    if(n%i===0){\n                                          \
    \                      if(n%i===0){\n                                        \
    \                          if(n%i===0){\n                                    \
    \                                if(n%i===0){\n                              \
    \                                        if(n%i===0){\n                      \
    \                                                  if(n%i===0){\n            \
    \                                                              if(n%i===0){\n\
    \                                                                            if(n%i===0){\n\
    \                                                                            \
    \  if(n%i===0){\n                                                            \
    \                    if(n%i===0){\n                                          \
    \                                        if(n%i===0){\n                      \
    \                                                              if(n%i===0){\n\
    \                                                                            \
    \          if(n%i===0){\n                                                    \
    \                                    if(n%i===0){\n                          \
    \                                                                if(n%i===0){\n\
    \                                                                            \
    \                if(n%i===0){\n                                              \
    \                                                if(n%i===0){\n              \
    \                                                                            \
    \      if(n%i===0){\n                                                        \
    \                                          if(n%i===0){\n                    \
    \                                                                            \
    \    if(n%i===0){\n                                                          \
    \                                            if(n%i===0){\n                  \
    \                                                                            \
    \          if(n%i===0){\n                                                    \
    \                                                      if(n%i===0){\n        \
    \                                                                            \
    \                        if(n%i===0){\n                                      \
    \                                                                        if(n%i===0){\n\
    \                                                                            \
    \                                    if(n%i===0){\n                          \
    \                                                                            \
    \            if(n%i===0){\n                                                  \
    \                                                                  if(n%i===0){\n\
    \                                                                            \
    \                                          if(n%i===0){\n                    \
    \                                                                            \
    \                        \nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2zgyawky.js:77\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i=1; i<=n; i++){\n        if(n%i===0){\n\
    \            if(n%i===max_divisor){\n                max_divisor = n;\n      \
    \          max_divisor_index = i;\n            }\n        }\n    }\n    return\
    \ max_divisor;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_fmzpu2a.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_fmzpu2a.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_num = n;\n    for(var i = 3; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            if(max_div_num / i > max_div){\n                max_div\
    \ = max_div_num / i;\n            }\n            max_div_num = i;\n        }\n\
    \    }\n    return max_div;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmplcfa4w5z.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplcfa4w5z.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor % i == 0){\n                max_divisor\
    \ = i;\n                max_divisor_index = i;\n            }\n        }\n   \
    \ }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpcnk4713e.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcnk4713e.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        if((n % i) == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpyuirmvb_.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyuirmvb_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_num = n;\n    for(var i = 3; i <= Math.sqrt(n); i++){\n        if(n%i\
    \ == 0){\n            max_div = i;\n            max_div_num = n;\n        }\n\
    \    }\n    return max_div;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7q9h4sh7.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q9h4sh7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if((n % i) === 0){\n            max_div = i;\n\
    \        }\n    }\n    return max_div;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlet max_divisor = 0;\n\tlet\
    \ max_divisor_index = 0;\n\tfor(let i = 1; i < n; i++){\n\t\tif(n%i == 0){\n\t\
    \t\tif(i*i > max_divisor){\n\t\t\t\tmax_divisor = i*i;\n\t\t\t\tmax_divisor_index\
    \ = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_divisor_index;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpo_bpzgaf.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo_bpzgaf.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_count = 1;\n    for(var i=1; i<=n; i++){\n        if(n%i==0){\n    \
    \        if(n%i==0){\n                max_div_count++;\n            }\n      \
    \      else{\n                if(max_div_count>max_div){\n                   \
    \ max_div = max_div_count;\n                }\n                max_div_count =\
    \ 1;\n            }\n        }\n    }\n    return max_div;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpo6y0_dds.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo6y0_dds.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i <= n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp0i2d2t8h.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0i2d2t8h.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlet max_divisor = n;\n\tlet\
    \ max_divisor_index = 0;\n\tfor(let i = 1; i < n; i++){\n\t\tif(n%i == 0){\n\t\
    \t\tmax_divisor = i;\n\t\t\tmax_divisor_index = i;\n\t\t}\n\t}\n\treturn max_divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 1; i < n; i++){\n        if(n%i == 0){\n            if(n/i==largest_divisor){\n\
    \                largest_divisor = i;\n            }\n        }\n    }\n    return\
    \ largest_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp15pdavbp.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp15pdavbp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = n;\n    let\
    \ divisor = 1;\n    while(divisor < n){\n        divisor++;\n        if(n % divisor\
    \ == 0){\n            largest = divisor;\n        }\n    }\n    return largest;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpy_kcqkpy.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy_kcqkpy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i=1; i<=n; i++){\n        if(n%i===0){\n\
    \            if(n%i===max_divisor){\n                max_divisor = i;\n      \
    \          max_divisor_index = i;\n            }\n        }\n    }\n    return\
    \ max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3prfflan.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3prfflan.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ var max_divisor_value = 1;\n    for(var i = 1; i <= n; i++){\n        var divisor\
    \ = n/i;\n        if(divisor > max_divisor){\n            max_divisor = divisor;\n\
    \            max_divisor_value = i;\n        }\n    }\n    return max_divisor_value;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp1oxi6uxv.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1oxi6uxv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for (var i = 1; i <= n; i++){\n        if (n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpxc5x_qu5.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxc5x_qu5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div2 = n;\n    for(var i = 3; i <= Math.sqrt(n); i++){\n        if(n % i\
    \ == 0){\n            if(max_div2 % i == 0){\n                max_div = i;\n \
    \               max_div2 = max_div / i;\n            }\n        }\n    }\n   \
    \ return max_div2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp8bps1bi4.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8bps1bi4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpmkno5oqf.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmkno5oqf.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            largest\
    \ = i;\n        }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp2ev3t04_.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ev3t04_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for (var i = 3; i <= Math.sqrt(n); i++){\n        if (n % i == 0){\n       \
    \     max_divisor = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpucquy6sq.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpucquy6sq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ var max_divisor_square = n;\n    for(var i = 1; i < n; i++){\n        if(n%i\
    \ == 0){\n            var divisor_square = i*i;\n            if(divisor_square\
    \ > max_divisor_square){\n                max_divisor = i;\n                max_divisor_square\
    \ = divisor_square;\n            }\n        }\n    }\n    return max_divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n7\n    at test (/tmp/tmpaay1cayr.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaay1cayr.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 7,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor / i > max_divisor){\n                max_divisor\
    \ = max_divisor / i;\n                max_divisor_index = i;\n            }\n\
    \        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpl2oumnwm.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl2oumnwm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for(var i = 1; i < n; i++){\n        if((n % i) == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for(var i = 1; i < n; i++){\n        if((n % i) == 0){\n            if((largest_divisor\
    \ % i) == 0){\n                largest_divisor = i;\n            }\n        }\n\
    \    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpeceihoy_.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeceihoy_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp8osc0p6p.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8osc0p6p.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i <= n; i++){\n        if((n\
    \ % i) == 0){\n            if(max_divisor < i){\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpx7pjf_ad.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx7pjf_ad.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_divisor = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    if(n % i == 0){\n      if(max_divisor < i){\n    \
    \    max_divisor = i;\n      }\n    }\n  }\n  return max_divisor;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqwkgb4a4.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqwkgb4a4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlet max_divisor = 1;\n\tlet\
    \ max_divisor_value = 1;\n\tfor(let i = 1; i < n; i++){\n\t\tlet divisor = n /\
    \ i;\n\t\tif(divisor > max_divisor){\n\t\t\tmax_divisor = divisor;\n\t\t\tmax_divisor_value\
    \ = i;\n\t\t}\n\t}\n\treturn max_divisor_value;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpu30wxw2i.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu30wxw2i.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i <= n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpq0w0_rcg.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq0w0_rcg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = n\n    let i\
    \ = 2\n    while(largest%2==0){\n        largest = largest/2\n        i++\n  \
    \  }\n    return largest\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn2mekl97.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn2mekl97.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_xe8jhdh.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_xe8jhdh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_remainder = 0;\n    for(var i = 1; i < n; i++){\n        var\
    \ remainder = n % i;\n        if(remainder > max_divisor_remainder){\n       \
    \     max_divisor = i;\n            max_divisor_remainder = remainder;\n     \
    \   }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpy08ro3zu.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy08ro3zu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  let largest_divisor = n;\n \
    \ let max_divisor = 1;\n  for(let i = 1; i < n; i++){\n    if(n % i == 0){\n \
    \     max_divisor = i;\n    }\n  }\n  return largest_divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpxwc8cvuo.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxwc8cvuo.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_count = 1;\n    for(var i = 1; i < n; i++){\n        if((n % i) == 0){\n\
    \            max_div_count++;\n            if(max_div_count > max_div){\n    \
    \            max_div = max_div_count;\n            }\n        }\n    }\n    return\
    \ max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmptqw1ue_r.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptqw1ue_r.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmps2o9tmms.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps2o9tmms.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3vcej_xf.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3vcej_xf.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_remainder = 0;\n    for(var i = 1; i < n; i++){\n        var\
    \ remainder = n % i;\n        if(remainder > max_divisor_remainder){\n       \
    \     max_divisor = i;\n            max_divisor_remainder = remainder;\n     \
    \   }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5tk8t0dg.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5tk8t0dg.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if((n %\
    \ i) == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvw9dldvr.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvw9dldvr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor / i == i){\n                max_divisor\
    \ = i;\n                max_divisor_index = i;\n            }\n        }\n   \
    \ }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppnley_si.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppnley_si.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpnpzm19j9.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnpzm19j9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ var max_divisor_value = 1;\n    for(var i = 1; i <= n; i++){\n        if(n%i\
    \ == 0){\n            var new_divisor = n/i;\n            if(new_divisor > max_divisor){\n\
    \                max_divisor = new_divisor;\n                max_divisor_value\
    \ = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp61o8nfa3.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp61o8nfa3.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpx4w5qxxe.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx4w5qxxe.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    for(var\
    \ i=1; i<=n; i++){\n        if(n % i == 0){\n            if(max_div / i > i){\n\
    \                max_div = i;\n            }\n        }\n    }\n    return max_div;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpo9x_pm_t.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo9x_pm_t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 1; i < n; i++){\n        if(n%i == 0){\n            if(n/i==largest_divisor){\n\
    \                largest_divisor = i;\n            }\n        }\n    }\n    return\
    \ largest_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpslbzmerm.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpslbzmerm.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n%i == 0){\n            max_div = i;\n     \
    \   }\n    }\n    return max_div;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = n;\n    let\
    \ divisor = 1;\n    for(let i = 1; i < n; i++){\n        if(n % i == 0){\n   \
    \         divisor = i;\n            largest = n;\n        }\n    }\n    return\
    \ largest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6akoo8go.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6akoo8go.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_div / i !=\
    \ i){\n                max_div = i;\n            }\n        }\n    }\n    return\
    \ max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest_divisor = 1;\n\
    \    let max_divisor = 1;\n    for(let i = 1; i <= n; i++){\n        max_divisor\
    \ = i;\n        for(let j = 2; j <= max_divisor; j++){\n            if(max_divisor\
    \ % j === 0){\n                max_divisor = j;\n            }\n        }\n  \
    \      largest_divisor = max_divisor;\n    }\n    return largest_divisor;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvtql8h5e.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvtql8h5e.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i <= n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpxquudd0d.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxquudd0d.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpe8en2sp8.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8en2sp8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let max_divisor = 0;\n   \
    \ let max_divisor_index = 0;\n    for(let i = 1; i < n; i++){\n        if(n%i\
    \ == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor_index;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 1; i < n; i++){\n        if(n%i == 0){\n            if(n/i==largest_divisor){\n\
    \                largest_divisor = i;\n            }\n        }\n    }\n    return\
    \ largest_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpolqpab80.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpolqpab80.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor / i == i){\n                max_divisor\
    \ = i;\n                max_divisor_index = i;\n            }\n        }\n   \
    \ }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp9he75e1g.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9he75e1g.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for (var i = 1; i < n; i++){\n        if (n\
    \ % i == 0){\n            if (max_divisor < i){\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppnzag1dc.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppnzag1dc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for (var i = 3; i <= Math.sqrt(n); i++){\n        if (n % i == 0){\n       \
    \     max_divisor = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp151dc710.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp151dc710.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i <= n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp97r8pev2.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp97r8pev2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(i ==\
    \ largest_divisor){\n                largest_divisor = i;\n            }\n   \
    \     }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjvn1kpa4.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjvn1kpa4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_count = 1;\n    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n\
    \            max_div_count++;\n            if(max_div_count > max_div){\n    \
    \            max_div = max_div_count;\n            }\n        }\n    }\n    return\
    \ max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpoq9166y6.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoq9166y6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_div = n;\n  var max_div2\
    \ = n;\n  var max_div3 = n;\n  var max_div4 = n;\n  var max_div5 = n;\n  var max_div6\
    \ = n;\n  var max_div7 = n;\n  var max_div8 = n;\n  var max_div9 = n;\n  var max_div10\
    \ = n;\n  var max_div11 = n;\n  var max_div12 = n;\n  var max_div13 = n;\n  var\
    \ max_div14 = n;\n  var max_div15 = n;\n  var max_div16 = n;\n  var max_div17\
    \ = n;\n  var max_div18 = n;\n  var max_div19 = n;\n  var max_div20 = n;\n  var\
    \ max_div21 = n;\n  var max_div22 = n;\n  var max_div23 = n;\n  var max_div24\
    \ = n;\n  var max_div25 = n;\n  var max_div26 = n;\n  var max_div27 = n;\n  var\
    \ max_div28 = n;\n  var max_div29 = n;\n  var max_div30 = n;\n  var max_div31\
    \ = n;\n  var max_div32 = n;\n  var max_div33 = n;\n  var max_div34 = n;\n  var\
    \ max_div35 = n;\n  var max_div36 = n;\n  var max_div37 = n;\n  var max_div38\
    \ = n;\n  var max_div39 = n;\n  var max_div40 = n;\n  var max_div41 = n;\n  var\
    \ max_div42 = n;\n  var max_div43 = n;\n  var max_div44 = n;\n  var max_div45\
    \ = n;\n  var max_div46 = n;\n  var max_div47 = n;\n  var max_div48 = n;\n  var\
    \ max_div49 = n;\n  var max_div50 = n;\n  var max_div51 = n;\n  var max_div52\
    \ = n;\n  var max_div53 = n;\n  var max_div54 = n;\n  var max_div55 = n;\n  var\
    \ max_div56 = n;\n  var max_div57 = n;\n  var max_div58 = n;\n  var max_div59\
    \ = n;\n  var max_div60 = n;\n  var max_div61 = n;\n  var max_div62 = n;\n  var\
    \ max_div63 = n;\n  var max_div64 = n;\n  var max_div65 = n;\n  var max_div66\
    \ = n;\n  var max_div67 = n;\n  var max_div68 = n;\n  var max_div69 = n;\n  var\
    \ max_div70 = n;\n  var max_div71 = n;\n  var max_div72 = n;\n  var max_div73\
    \ = n;\n  var max_div74 = n;\n  var max_div75 = n;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1osn9p4u.js:90\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 2; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6m5lyimp.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6m5lyimp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if(n%i\
    \ == 0){\n            if(max_divisor_index < i){\n                max_divisor\
    \ = i;\n                max_divisor_index = i;\n            }\n        }\n   \
    \ }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n        if(n%i == 0){\n            largest\
    \ = i;\n        }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp0nlelk5e.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0nlelk5e.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  let largest_divisor = 1;\n \
    \ let largest_divisor_found = false;\n  for(let i = 1; i < n; i++){\n    if(n%i\
    \ == 0){\n      if(largest_divisor < i){\n        largest_divisor = i;\n     \
    \   largest_divisor_found = true;\n      }\n    }\n  }\n  if(!largest_divisor_found){\n\
    \    largest_divisor = 1;\n  }\n  return largest_divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest_divisor = n;\n\
    \    for(let i = 1; i < n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ var max_divisor_value = 1;\n    for(var i = 1; i <= n; i++){\n        if(n%i\
    \ == 0){\n            var new_divisor = i\n            if(new_divisor > max_divisor){\n\
    \                max_divisor = new_divisor;\n                max_divisor_value\
    \ = i;\n            }\n        }\n    }\n    return max_divisor_value;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp2scaeky1.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2scaeky1.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_divisor = n;\n  var\
    \ max_divisor_remainder = 0;\n  for(var i = 1; i <= n; i++){\n    var remainder\
    \ = n % i;\n    if(remainder > max_divisor_remainder){\n      max_divisor = i;\n\
    \      max_divisor_remainder = remainder;\n    }\n  }\n  return max_divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpmp43gy0b.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmp43gy0b.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    var largest_divisor_number = n;\n    for(var i = 1; i < n; i++){\n      \
    \  if((n % i) == 0){\n            if((largest_divisor % i) == 0){\n          \
    \      largest_divisor = i;\n                largest_divisor_number = n;\n   \
    \         }\n        }\n    }\n    return largest_divisor_number;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp13d3dfyw.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp13d3dfyw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n%i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest_divisor = 1;\n\
    \    let largest_divisor_number = n;\n    for(let i = 1; i < n; i++){\n      \
    \  if(n%i == 0){\n            if(n/i==largest_divisor_number){\n             \
    \   largest_divisor = i;\n                largest_divisor_number = n/i;\n    \
    \        }\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp2_2kw355.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2_2kw355.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_num = n;\n    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n\
    \            if(max_div_num / i > max_div){\n                max_div = max_div_num\
    \ / i;\n                max_div_num = i;\n            }\n        }\n    }\n  \
    \  return max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpw4zwx0hf.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw4zwx0hf.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = -1;\n    for(var i = 1; i < n; i++){\n        if(n%i\
    \ == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3fpapw1q.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3fpapw1q.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 0;\n   \
    \ for(var i = 0; i <= n; i++){\n        if(n%i == 0){\n            if(i*i > max_divisor)\n\
    \                max_divisor = i*i;\n        }\n    }\n    return max_divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcmhz35gl.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcmhz35gl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_div = n;\n  var max_div_div\
    \ = n;\n  var max_div_mod = n;\n  var max_div_mod_div = n;\n  var max_div_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod = n;\n  var max_div_mod_mod_mod_div = n;\n \
    \ var max_div_mod_mod_mod_mod = n;\n  var max_div_mod_mod_mod_mod = n;\n  var\
    \ max_div_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod = n;\n \
    \ var max_div_mod_mod_mod_mod_mod = n;\n  var max_div_mod_mod_mod_mod_mod_div\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_mod = n;\n  var max_div_mod_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod_mod_mod\
    \ = n;\n  var max_div_mod_mod_mod_mod_div = n;\n  var max_div_mod_mod_mod = n;\n\
    \  var max_div_mod_mod = n;\n  var max_div_mod = n;\n  var max_div = n;\n  var\
    \ max_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_div_\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphl17z31x.js:58\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = 0;\n    for(let\
    \ i = 1; i < n; i++){\n        if(n%i == 0){\n            largest = i;\n     \
    \   }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_count = 1;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n\
    \            max_div_count++;\n            if(max_div_count > max_div){\n    \
    \            max_div = max_div_count;\n            }\n        }\n    }\n    return\
    \ max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpisdkrpi1.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpisdkrpi1.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for (var i = 2; i <= Math.sqrt(n); i++){\n        if (n % i == 0){\n    \
    \        largest_divisor = i;\n        }\n    }\n    return largest_divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpb8s6_v8w.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb8s6_v8w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for (var i = 1; i <= n; i++){\n        if (n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcnahogyr.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcnahogyr.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i = 2; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp2mzxrs3k.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2mzxrs3k.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let max_divisor = 1;\n   \
    \ let max_divisor_value = 1;\n    for(let i = 1; i <= n; i++){\n        if(n %\
    \ i == 0){\n            if((max_divisor < i) && (max_divisor_value < n/i)){\n\
    \                max_divisor = i;\n                max_divisor_value = n/i;\n\
    \            }\n        }\n    }\n    return max_divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp385wnv5r.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp385wnv5r.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = n;\n    let\
    \ divisor = 1;\n    while(true){\n        if(n % divisor == 0){\n            largest\
    \ = divisor;\n        }\n        divisor++;\n        if(divisor > n){\n      \
    \      break;\n        }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpks6rwftp.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpks6rwftp.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ var max_divisor_value = 1;\n    for(var i = 1; i <= n; i++){\n        if((n\
    \ % i) === 0){\n            var new_divisor = i / n;\n            if(new_divisor\
    \ > max_divisor){\n                max_divisor = new_divisor;\n              \
    \  max_divisor_value = i;\n            }\n        }\n    }\n    return max_divisor_value;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpitkr_t6b.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpitkr_t6b.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_div = n;\n  var max_div_count\
    \ = 1;\n  for(var i = 1; i < n; i++){\n    if(n % i == 0){\n      if(max_div_count\
    \ < i){\n        max_div_count = i;\n      }\n      if(max_div_count > n){\n \
    \       max_div = i;\n      }\n    }\n  }\n  return max_div;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpxs84d98k.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxs84d98k.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if(n%i\
    \ == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpgioe90_7.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgioe90_7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlet max_div = n;\n\tlet max_div_num\
    \ = n;\n\tfor(let i = 1; i < n; i++){\n\t\tlet div = n/i;\n\t\tif(div % 2 ===\
    \ 0){\n\t\t\tmax_div = i;\n\t\t\tmax_div_num = div;\n\t\t}\n\t}\n\treturn max_div;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdntuqino.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdntuqino.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let max_divisor = 0;\n   \
    \ let max_divisor_index = 0;\n    for(let i = 1; i <= n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor_index;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjp4quk5r.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjp4quk5r.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      largest_divisor = i;\n        }\n    }\n    return largest_divisor;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjc5v24gz.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjc5v24gz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for(var i = 1; i < n; i++){\n        if(n%i == 0){\n            if(n/i==i){\n\
    \                largest_divisor = i;\n            }\n        }\n    }\n    return\
    \ largest_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpgqt3zuq5.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgqt3zuq5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ var max_divisor_value = 1;\n    for(var i = 1; i < n; i++){\n        var divisor\
    \ = n / i;\n        if(divisor > max_divisor){\n            max_divisor = divisor;\n\
    \            max_divisor_value = i;\n        }\n    }\n    return max_divisor_value;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmprn57s25v.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprn57s25v.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    var largest_divisor_count = 0;\n    for (var i = 1; i <= n; i++){\n     \
    \   if (n % i == 0){\n            if (largest_divisor_count < i){\n          \
    \      largest_divisor = i;\n                largest_divisor_count = i;\n    \
    \        }\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvxlekayt.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvxlekayt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let max_divisor = n;\n   \
    \ let max_divisor_index = 0;\n    for(let i = 1; i < n; i++){\n        if(n%i\
    \ == 0){\n            if(n/i==max_divisor){\n                max_divisor_index\
    \ = i;\n            }\n        }\n    }\n    return max_divisor_index;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpp_adj_i_.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp_adj_i_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max_divisor = n;\n  for(var\
    \ i = 1; i < n; i++){\n    if(n % i == 0){\n      max_divisor = i;\n    }\n  }\n\
    \  return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for(var i = 2; i < n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpfmyu_71e.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfmyu_71e.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 1; i < n; i++){\n        if(n%i == 0){\n            if(n/i==largest_divisor){\n\
    \                largest_divisor = i;\n            }\n        }\n    }\n    return\
    \ largest_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp8l5qvb6p.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8l5qvb6p.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = -1;\n    for(var i = 1; i < n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmplxhd_4za.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplxhd_4za.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_remainder = 0;\n    for(var i = 1; i <= n; i++){\n        var\
    \ remainder = n % i;\n        if(remainder > max_divisor_remainder){\n       \
    \     max_divisor = i;\n            max_divisor_remainder = remainder;\n     \
    \   }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp0x7csxrf.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0x7csxrf.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_num = n;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n\
    \            if(max_div_num / i > max_div){\n                max_div = max_div_num\
    \ / i;\n            }\n            max_div_num = i;\n        }\n    }\n    return\
    \ max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp454cs_vi.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp454cs_vi.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let max_divisor = 1;\n   \
    \ let max_divisor_index = 0;\n    for(let i = 1; i <= n; i++){\n        if((n\
    \ % i) === 0){\n            if(max_divisor < i){\n                max_divisor\
    \ = i;\n                max_divisor_index = i;\n            }\n        }\n   \
    \ }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpmvyk5dsq.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmvyk5dsq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_count = 1;\n    for(var i = 1; i < n; i++){\n        if((n % i) == 0){\n\
    \            max_div_count++;\n            if(max_div_count > max_div){\n    \
    \            max_div = max_div_count;\n            }\n        }\n    }\n    return\
    \ max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpy_q41ji8.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy_q41ji8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = n;\n    let\
    \ divisor = 1;\n    while(divisor < n){\n        divisor++;\n        if(n % divisor\
    \ == 0){\n            largest = divisor;\n        }\n    }\n    return largest;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp8s208gzy.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8s208gzy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_num = n;\n    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n\
    \            if(max_div / i > max_div_num){\n                max_div = max_div\
    \ / i;\n                max_div_num = i;\n            }\n        }\n    }\n  \
    \  return max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqnozifl9.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqnozifl9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let max_divisor = 1;\n   \
    \ let max_divisor_p = 0;\n    for(let i = 1; i <= n; i++){\n        if(n%i ==\
    \ 0){\n            let p = Math.floor(n/i);\n            if(p > max_divisor_p){\n\
    \                max_divisor = i;\n                max_divisor_p = p;\n      \
    \      }\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpqw3oybpd.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqw3oybpd.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlet max_divisor = 0;\n\tlet\
    \ max_divisor_index = 0;\n\tfor(let i = 1; i <= n; i++){\n\t\tif(n%i == 0){\n\t\
    \t\tif(i>max_divisor){\n\t\t\t\tmax_divisor = i;\n\t\t\t\tmax_divisor_index =\
    \ i;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_divisor_index;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp9l2zlgcc.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9l2zlgcc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i <= n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpuyuxj_0x.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuyuxj_0x.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = n;\n    let\
    \ divisor = 1;\n    for(let i = 1; i < n; i++){\n        if(n % i == 0){\n   \
    \         divisor = i;\n            largest = n;\n        }\n    }\n    return\
    \ largest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdv9mbj0x.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdv9mbj0x.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_num = n;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n\
    \            if(max_div_num / i != i){\n                max_div = i;\n       \
    \         max_div_num = max_div_num / i;\n            }\n        }\n    }\n  \
    \  return max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqyyh8yg1.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqyyh8yg1.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div2 = n;\n    for(var i = 3; i <= Math.sqrt(n); i++){\n        if(n%i ==\
    \ 0){\n            max_div = i;\n            max_div2 = n/i;\n        }\n    }\n\
    \    return [max_div, max_div2];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp5yvik0b8.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5yvik0b8.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3 ],\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvgn4cnf6.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvgn4cnf6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let max_divisor = 0;\n   \
    \ for(let i = 1; i <= n; i++){\n        if(n%i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpv75mrcz6.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv75mrcz6.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlet max_divisor = n;\n\tfor(let\
    \ i = 1; i < n; i++){\n\t\tif(n%i == 0){\n\t\t\tmax_divisor = i;\n\t\t}\n\t}\n\
    \treturn max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largestDivisor = 1;\n\
    \    let divisor = 2;\n    while(divisor < n){\n        if(n % divisor == 0){\n\
    \            largestDivisor = divisor;\n        }\n        divisor++;\n    }\n\
    \    return largestDivisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(i ==\
    \ largest_divisor){\n                largest_divisor = i;\n            }\n   \
    \     }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp8irv_6w7.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8irv_6w7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ var max_divisor_value = 1;\n    for(var i = 1; i <= n; i++){\n        var divisor\
    \ = n / i;\n        if(divisor > max_divisor){\n            max_divisor = divisor;\n\
    \            max_divisor_value = i;\n        }\n    }\n    return max_divisor_value;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpjqzr9lrg.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjqzr9lrg.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = n;\n    let\
    \ divisor = 1;\n    while(divisor < n){\n        divisor++;\n        if(n % divisor\
    \ === 0){\n            largest = divisor;\n        }\n    }\n    return largest;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmps43ngny8.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps43ngny8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i=1; i<=n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmphjvolftp.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphjvolftp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let max_divisor = n;\n   \
    \ let max_divisor_index = 0;\n    for(let i = 1; i < n; i++){\n        if(n%i\
    \ == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        }\n    }\n   \
    \ return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpuncpcs8p.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuncpcs8p.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = n;\n\
    \    for(var i = 3; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      if(i*i > largest_divisor){\n                largest_divisor = i*i;\n  \
    \          }\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpta78ipg4.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpta78ipg4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 0;\n   \
    \ for(var i = 0; i <= n; i++){\n        if(n%i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpmwigaq89.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmwigaq89.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 3; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n         \
    \   max_divisor = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp27fa4cc9.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp27fa4cc9.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n         \
    \   max_divisor = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsl_06430.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsl_06430.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 1;\n   \
    \ var max_divisor_value = 1;\n    for(var i = 1; i <= n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor < i){\n                max_divisor = i;\n\
    \                max_divisor_value = i;\n            }\n        }\n    }\n   \
    \ return max_divisor_value;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdifqkylp.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdifqkylp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlet max_divisor = n;\n\tlet\
    \ max_divisor_index = 0;\n\tfor(let i = 1; i <= n; i++){\n\t\tif(n%i == 0){\n\t\
    \t\tmax_divisor = i;\n\t\t\tmax_divisor_index = i;\n\t\t}\n\t}\n\treturn max_divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp14lbi5_4.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp14lbi5_4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            if(max_divisor\
    \ < i){\n                max_divisor = i;\n            }\n        }\n    }\n \
    \   return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7wspt_5j.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7wspt_5j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    var largest_divisor_found = false;\n    for(var i = 1; i <= n; i++){\n  \
    \      if(n % i == 0){\n            if(largest_divisor < i){\n               \
    \ largest_divisor = i;\n                largest_divisor_found = true;\n      \
    \      }\n        }\n    }\n    if(!largest_divisor_found){\n        largest_divisor\
    \ = 1;\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_j_yccxd.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_j_yccxd.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n%i == 0){\n            max_div = i;\n     \
    \   }\n    }\n    return max_div;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_div = n;\n    var\
    \ max_div_count = 1;\n    for(var i = 1; i < n; i++){\n        if((n % i) == 0){\n\
    \            max_div_count++;\n            if(max_div_count > max_div){\n    \
    \            max_div = max_div_count;\n            }\n        }\n    }\n    return\
    \ max_div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6y7fousl.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6y7fousl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = n;\n   \
    \ var max_divisor_index = 0;\n    for(var i = 1; i < n; i++){\n        if(n %\
    \ i == 0){\n            if(max_divisor / i == i){\n                max_divisor\
    \ = i;\n                max_divisor_index = i;\n            }\n        }\n   \
    \ }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpz35_jfh0.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz35_jfh0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max_divisor = 0;\n   \
    \ for(var i = 1; i < n; i++){\n        if(n%i == 0){\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

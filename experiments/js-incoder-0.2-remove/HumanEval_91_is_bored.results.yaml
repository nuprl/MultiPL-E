name: HumanEval_91_is_bored
language: js
results:
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \  var boredoms = 0;\n  S.split('.').forEach(function(word){\n    if(word.startsWith(\"\
    I\")){\n      boredoms++;\n    }\n  });\n  return boredoms;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpoufhn61n.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoufhn61n.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I like Ice Cream.\"); // returns 1\nis_bored(\"I like Ice Cream?\"\
    ); // returns 1\nis_bored(\"I like Ice Cream!\"); // returns 1\nis_bored(\"I like\
    \ Ice Cream!?\"); // returns 1\nis_bored(\"I like Ice Cream!?!\"); // returns\
    \ 1\nis_bored(\"I like Ice Cream!?!?!\"); // returns 1\nis_bored(\"I like Ice\
    \ Cream!?!?!?!\"); // returns 1\nis_bored(\"I like Ice Cream!?!?!?!?!\"); // returns\
    \ 1\nis_bored(\"I like Ice Cream!?!?!?!?!?!\"); // returns 1\nis_bored(\"I like\
    \ Ice Cream!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I like Ice Cream!?!?!?!?!?!?!?!\"\
    ); // returns 1\nis_bored(\"I like Ice Cream!?!?!?!?!?!?!?!?!\"); // returns 1\n\
    is_bored(\"I like Ice Cream!?!?!?!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I\
    \ like Ice Cream!?!?!?!?!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I like Ice\
    \ Cream!?!?!?!?!?!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I like Ice Cream!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    ); // returns 1\nis_bored(\"I like Ice Cream!?!?!?!?!?!?!?!?!?!?!?!?!?!\"); //\
    \ returns 1\nis_bored(\"I like Ice Cream!?!\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpq14tirg7.js:31\nis_bored(\"I like Ice Cream!?!\n         ^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    // Return the number of boredoms in S.\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp0ikgbqvx.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp0ikgbqvx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp6rndsvw7.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6rndsvw7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8gmm_soh.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8gmm_soh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith('I')){\n\
    \            boredoms++;\n        }\n    });\n    return boredoms;\n}\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I h\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1aa4e7qm.js:47\nis_bored('I h\n         ^^^^\n\nSyntaxError: Invalid\
    \ or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8kn5ggyh.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8kn5ggyh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    S = S.toLowerCase();\n    var boredoms = ['i', 'you', 'he', 'she', 'it',\
    \ 'they', 'them', 'their', 'him', 'her', 'its', 'theirs', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'our', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'our', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', '\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpi7coat_u.js:7\n    var boredoms = ['i', 'you', 'he', 'she', 'it',\
    \ 'they', 'them', 'their', 'him', 'her', 'its', 'theirs', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'our', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'our', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', '\n                                         \
    \                                                              "
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    // Write your code here\n}\n</cell>\n<text>\nNow that you've written your\
    \ function, run the cell below to test your function.\n\n\n</text>\n<cell>\n#\
    \ Run the test cell\n\"\"\"\nDON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW\
    \ THIS LINE\n\"\"\"\n# Print out the result from your function\nis_bored('Bob.')\n\
    </cell>\n<text>\nHooray, we passed our test!\n\nYou should now submit your solutions\
    \ to the following questions:\n\nWhat happens when you change the case of a single\
    \ letter?\nWhat happens when you capitalize a word?\nWhat happens when you add\
    \ or remove a period?\nWhat happens when you add or remove a question mark?\n\
    What happens when you add or remove exclamation points?\n\nNOTE: You can edit\
    \ the text in this cell by double clicking on it. When you want to render the\
    \ text, press control + enter\n\n\n</text>\n<cell>\n# Experiment here\n# Write\
    \ code here that turns the problem statement above into code that passes all the\
    \ tests\n</cell>\n<text>\nSubmitting Solutions\nOnce you've completed all the\
    \ problems, it's time to submit your solutions to the leaderboard. To do that,\
    \ you'll need to join the competition or forum to discuss the results. Here's\
    \ what our leaderboard looks like so far:\n\nSubmitting Solutions\nAfter you submit\
    \ your solutions, create a zip file of the two folders (train and test) inside\
    \ the folder that holds your notebook.\n\nRemember that you need to zip the contents\
    \ of the folder as well. Depending on your browser, you might need to manually\
    \ unzip the folder.\n\nOnce you create the zip file, follow the steps below:\n\
    \nNavigate to the folder that holds your notebook.\nClick the \"Upload\" button\
    \ at the top of the page.\nNavigate to the folder that holds your zip file.\n\
    Unzip the folder.\nDrag the unzipped folder into the folder designated for your\
    \ notebook in the same spot. \n\n\n</text>\n<text>\nOptional: Future Directions\n\
    If you would like to learn about more problem solving problems, there is an optional\
    \ part to the assignment. The part is coming soon, so don't worry if you didn't\
    \ submit this assignment yet!\n\nProblems with Solutions\nWhen you find that your\
    \ function doesn't work on some test cases, it's good practice to think about\
    \ why. And then try to fix those test cases. Write new tests for those cases and\
    \ see if your function passes them as well. Repeat until there are no more test\
    \ cases that break the function, or until you feel comfortable that you've fixed\
    \ all the test cases.\n\n\n</text>\n<text>\nTest Your Work\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8q4z4n0b.js:8\n</cell>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.match(/I[^.?!]+/g);\n    return boredoms.length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpu0un9s0v.js:7\n    return boredoms.length;\n                  \
    \  ^\n\nTypeError: Cannot read properties of null (reading 'length')\n    at is_bored\
    \ (/tmp/tmpu0un9s0v.js:7:21)\n    at test (/tmp/tmpu0un9s0v.js:15:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0un9s0v.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    is_bored(\"I love you!\"); // returns 1\nis_bored(\"I hate you!\"); // returns\
    \ 0\nis_bored(\"I love you.\"); // returns 1\nis_bored(\"I love you!.\"); // returns\
    \ 1\nis_bored(\"I love you!?\"); // returns 1\nis_bored(\"I love you!?!\"); //\
    \ returns 1\nis_bored(\"I love you!?!.\"); // returns 1\nis_bored(\"I love you!?!?\"\
    ); // returns 1\nis_bored(\"I love you!?!?!\"); // returns 1\nis_bored(\"I love\
    \ you!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!?!.\"); // returns\
    \ 1\nis_bored(\"I love you!?!?!?!?\"); // returns 1\nis_bored(\"I love you!?!?!?!?!\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!.\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!?\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!\"); //\
    \ returns 1\nis_bored(\"I love you!?!?!?!?!?!.\"); // returns 1\nis_bored(\"I\
    \ love you!?!?!?!?!?!?\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!.\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!?!?!?\"); // returns 1\nis_bored(\"I love \nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppbt_kgj5.js:37\nis_bored(\"I love \n         ^^^^^^^^\n\nSyntaxError:\
    \ Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpmqpr13xf.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmqpr13xf.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.match(/I[^.?!]+/g);\n    return boredoms.length;\n}\nis_bored(\"\
    I like you!\"); // returns 1\nis_bored(\"I like I!\"); // returns 2\nis_bored(\"\
    I like I!.\"); // returns 1\nis_bored(\"I like I!? I!.\"); // returns 2\nis_bored(\"\
    I like I!? I!? I!.\"); // returns 3\nis_bored(\"I like I!? I!? I!? I!.\"); //\
    \ returns 4\nis_bored(\"I like I!? I!? I!? I!? I!.\"); // returns 5\nis_bored(\"\
    I like I!? I!? I!? I!? I!? I!? I!.\"); // returns 6\nis_bored(\"I like I!? I!?\
    \ I!? I!? I!? I!? I!? I!? I!.\"); // returns 7\nis_bored(\"I like I!? I!? I!?\
    \ I!? I!? I!? I!? I!? I!? I!? I!.\"); // returns 8\nis_bored(\"I like I!? I!?\
    \ I!? I!? I!? I!? I!? I!? I!? I!? I!? I!? I!.\"); // returns 9\nis_bored(\"I like\
    \ I!? I!? I!? I!? I!? I!? I!? I!? I!? I!? I!? I!? I!? I!? I!.\"); // returns 10\n\
    is_bored(\"I like I!? I!? I!? I!? I!? I!? I!? I!? I!? I!? I!? I!? I!? I!? I!?\
    \ I!.\"); // returns 11\nis_bored(\"I like I!? I!? I!? I!? I!? I!? I!? I!? I!?\
    \ I!? I!? I!? I!? I!? I!? I!? I!.\"); // returns 12\nis_bored(\"I like I!? I!?\
    \ I!? I!? I!? \nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3g99p8r6.js:23\nis_bored(\"I like I!? I!? I!? I!? I!? \n      \
    \   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var boredom_words = S.split(\" \");\n    for(var i=0;\
    \ i<boredom_words.length; i++){\n        if(boredom_words[i][0] === \"I\"){\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3onc2xqj.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3onc2xqj.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I love you!\") //=> 1\nis_bored(\"I hate you!\") //=> 0\nis_bored(\"\
    I love you? I hate you!\") //=> 2\nis_bored(\"I love you! I hate you!\") //=>\
    \ 2\nis_bored(\"I love you! I hate you! I love you!\") //=> 3\nis_bored(\"I love\
    \ you! I hate you! I love you! I hate you!\") //=> 4\nis_bored(\"I love you! I\
    \ hate you! I love you! I hate you! I love you!\") //=> 5\nis_bored(\"I love you!\
    \ I hate you! I love you! I hate you! I love you! I hate you!\") //=> 6\nis_bored(\"\
    I love you! I hate you! I love you! I hate you! I love you! I hate you! I love\
    \ you!\") //=> 7\nis_bored(\"I love you! I hate you! I love you! I hate you! I\
    \ love you! I hate you! I love you! I hate you!\") //=> 8\nis_bored(\"I love you!\
    \ I hate you! I love you! I hate you! I love you! I hate you! I love you! I hate\
    \ you! I love you!\") //=> 9\nis_bored(\"I love you! I hate you! I love you! I\
    \ hate you! I love you! I hate you! I love you! I hate you! I love you! I hate\
    \ you!\") //=> 10\nis_bored(\"I love you! I hate you! I love you! I hate you!\
    \ I love you! I hate you! I love you! I hate you! I love you! I hate you! I love\
    \ you! I hate you!\") //=> 11\nis_\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpcltu1yxd.js:27\nis_\n^\n\nReferenceError: is_ is not defined\n\
    \    at Object.<anonymous> (/tmp/tmpcltu1yxd.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ \"I\"){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    is_bored(\"I like you!\"); // returns 1\nis_bored(\"I like you?\"); // returns\
    \ 1\nis_bored(\"I like you!?\"); // returns 2\nis_bored(\"I like you!?!\"); //\
    \ returns 3\nis_bored(\"I like you!?!?!\"); // returns 3\nis_bored(\"I like you!?!?!?!\"\
    ); // returns 4\nis_bored(\"I like you!?!?!?!?!?!\"); // returns 5\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!\"); // returns 5\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2kctpxiq.js:22\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?\n\
    \         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    is_bored(\"I like you!\") //2\nis_bored(\"I hate you!\") //1\nis_bored(\"I like\
    \ you? I hate you!\") //2\nis_bored(\"I like you! I hate you!\") //2\nis_bored(\"\
    I like you! I hate you! I like you!\") //3\nis_bored(\"I like you! I hate you!\
    \ I like you! I hate you!\") //4\nis_bored(\"I like you! I hate you! I like you!\
    \ I hate you! I like you!\") //5\nis_bored(\"I like you! I hate you! I like you!\
    \ I hate you! I like you! I hate you!\") //6\nis_bored(\"I like you! I hate you!\
    \ I like you! I hate you! I like you! I hate you! I like you!\") //7\nis_bored(\"\
    I like you! I hate you! I like you! I hate you! I like you! I hate you! I like\
    \ you! I hate you!\") //8\nis_bored(\"I like you! I hate you! I like you! I hate\
    \ you! I like you! I hate you! I like you! I hate you! I like you!\") //9\nis_bored(\"\
    I like you! I hate you! I like you! I hate you! I like you! I hate you! I like\
    \ you! I hate you! I like you! I hate you!\") //10\nis_bored(\"I like you! I hate\
    \ you! I like you! I hate you! I like you! I hate you! I like you! I hate you!\
    \ I like you! I hate you! I like you! I hate you!\") //11\nis_bored(\"I like you!\
    \ I hate you! I like you! I hate you! I like you! I hate you! I like you! I hate\
    \ you! I like you! I hate you! I like \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphk0qieod.js:27\nis_bored(\"I like you! I hate you! I like you!\
    \ I hate you! I like you! I hate you! I like you! I hate you! I like you! I hate\
    \ you! I like \n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpw0g6616d.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw0g6616d.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\nis_bored(\"I love you!\") //returns 2\nis_bored(\"I hate you!\") //returns\
    \ 1\nis_bored(\"I love you?\") //returns 1\nis_bored(\"I hate you?\") //returns\
    \ 0\nis_bored(\"I love you!?\") //returns 1\nis_bored(\"I hate you!?\") //returns\
    \ 0\nis_bored(\"I love you!?!\") //returns 1\nis_bored(\"I hate you!?!\") //returns\
    \ 0\nis_bored(\"I love you!?!?\") //returns 1\nis_bored(\"I hate you!?!?\") //returns\
    \ 0\nis_bored(\"I love you!?!?!\") //returns 1\nis_bored(\"I hate you!?!?!\")\
    \ //returns 0\nis_bored(\"I love you!?!?!?\") //returns 1\nis_bored(\"I hate you!?!?!?\"\
    ) //returns 0\nis_bored(\"I love you!?!?!?!\") //returns 1\nis_bored(\"I hate\
    \ you!?!?!?!\") //returns 0\nis_bored(\"I love you!?!?!?!?\") //returns 1\nis_bored(\"\
    I hate you!?!?!?!?\") //returns 0\nis_bored(\"I love you!?!?!?!?!\") //returns\
    \ 1\nis_bored(\"I hate you!?!?!?!?!\") //returns 0\nis_bored(\"I love you!?!?!?!?!?\"\
    ) //returns 1\nis_bored(\"I hate you!?!?!?!?!?\") //returns 0\nis_bored(\"I love\
    \ you!?!?!?!?!?!\") //returns 1\nis_bored(\"I hate you!?!?!?!?!?!\") //returns\
    \ 0\nis_bored(\"I love you!?!?!?!?!?!?\") //returns 1\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpc14pq_td.js:45:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc14pq_td.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_ayep7mu.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ayep7mu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    S = S.toLowerCase();\n    var boredoms = ['i', 'me', 'my', 'myself', 'we',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which',\
    \ 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were',\
    \ 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did',\
    \ 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until',\
    \ 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into',\
    \ 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up',\
    \ 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then',\
    \ 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both',\
    \ 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not',\
    \ 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will',\
    \ 'just', 'don', 'should', 'now'];\n    var count = 0;\n    for(var i = 0; i <\
    \ S.length; i++){\n        if(boredoms.indexOf(S[i]) >= 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyme9tpbr.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyme9tpbr.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.match(/I[^.?!]+/g);\n    return boredoms.length;\n}\nis_bored(\"\
    I like you!\"); // returns 1\nis_bored(\"I like I!\"); // returns 2\nis_bored(\"\
    I like I!.\"); // returns 1\nis_bored(\"I like I!? I like I!.\"); // returns 3\n\
    is_bored(\"I like I!? I like I!? I like I!.\"); // returns 4\nis_bored(\"I like\
    \ I!? I like I!? I like I!? I like I!.\"); // returns 5\nis_bored(\"I like I!?\
    \ I like I!? I like I!? I like I!? I like I!.\"); // returns 6\nis_bored(\"I like\
    \ I!? I like I!? I like I!? I like I!? I like I!? I like I!.\"); // returns 7\n\
    is_bored(\"I like I!? I like I!? I like I!? I like I!? I like I!? I like I!? I\
    \ like I!.\"); // returns 8\nis_bored(\"I like I!? I like I!? I like I!? I like\
    \ I!? I like I!? I like I!? I like I!? I like I!.\"); // returns 9\nis_bored(\"\
    I like I!? I like I!? I like I!? I like I!? I like I!? I like I!? I like I!? I\
    \ like I!? I like I!.\"); // returns 10\nis_bored(\"I like I!? I like I!? I like\
    \ I!? I like I!? I like I!? I like I!? I like I!? I like I!? I like I!? I like\
    \ I!.\"); // returns 11\nis_bored(\"I like I!? I like I!? I like I!? I like I!?\
    \ I like I!? I like I!? I like I!? I like I!? I like I!? I like I!? I like I!.\"\
    ); // returns 12\nis_bored(\"I like I!? I like I!? I like I!? I like I!? I like\
    \ I!? I like I!\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp07fu1ht5.js:22\nis_bored(\"I like I!? I like I!? I like I!? I like\
    \ I!? I like I!? I like I!\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==='I'&&S[i+1]==='.'){\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3vb7rfng.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3vb7rfng.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var boredom_count = 0;\n    for(var i=0;\
    \ i<boredoms.length; i++){\n        if(boredoms[i].indexOf('I') === 0){\n    \
    \        boredom_count++;\n        }\n    }\n    return boredom_count;\n}\nis_bored('I\
    \ love you!'); // 2\nis_bored('I love you.'); // 1\nis_bored('I love you!'); //\
    \ 2\nis_bored('I love you.'); // 1\nis_bored('I love you!'); // 2\nis_bored('I\
    \ love you.'); // 1\nis_bored('I love you!'); // 2\nis_bored('I love you.'); //\
    \ 1\nis_bored('I love you!'); // 2\nis_bored('I love you.'); // 1\nis_bored('I\
    \ love you!'); // 2\nis_bored('I love you.'); // 1\nis_bored('I love you!'); //\
    \ 2\nis_bored('I love you.'); // 1\nis_bored('I love you!'); // 2\nis_bored('I\
    \ love you.'); // 1\nis_bored('I love you!'); // 2\nis_bored('I love you.'); //\
    \ 1\nis_bored('I love you!'); // 2\nis_bored('I love you.'); // 1\nis_bored('I\
    \ love you!'); // 2\nis_bored('I love you.'); // 1\nis_bored('I love you!'); //\
    \ 2\nis_bored('I love you.'); // 1\nis_bored('I love you!'); // 2\nis_bored('I\
    \ love you.'); // 1\nis_bored('I love you!'); // 2\nis_bored('I love you.'); //\
    \ 1\nis_bored('I love you!'); // 2\nis_bored('I love you.'); // 1\nis_bored('I\
    \ love you!'); // 2\nis_bored('I love you.'); // 1\nis_bored('I love you!'); //\
    \ 2\nis_bored('I love you.'); // 1\nis_bored('I love you!'); // 2\nis_bored('I\
    \ love you.'); // 1\nis_bored('I \nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpia69ip7e.js:51\nis_bored('I \n         ^^^\n\nSyntaxError: Invalid\
    \ or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ \"I\"){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpfsorhnl5.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfsorhnl5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpd3uh6vnj.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd3uh6vnj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0] === 'I'){\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp6m1ga973.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6m1ga973.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0]=='I'){\n            boredoms++;\n        }\n    }\n  \
    \  return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpk4jav7bu.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk4jav7bu.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    S = S.toLowerCase();\n    var boredoms = [\"I\"];\n    var count = 0;\n \
    \   for(var i=0; i<S.length; i++){\n        if(boredoms.indexOf(S[i]) >= 0){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpu2vhqqhi.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu2vhqqhi.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpm754hp63.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm754hp63.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==='I'&&S[i+1]==='.'){\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7zrzslxh.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7zrzslxh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa116vxc7.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa116vxc7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpi6m28fev.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi6m28fev.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith('I')){\n\
    \            boredoms += 1;\n        }\n    });\n    return boredoms;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpjz88guo4.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjz88guo4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \  var boredom = 0;\n  for(var i=0; i<S.length; i++){\n    if(S[i] == 'I'){\n\
    \      boredom++;\n    }\n  }\n  return boredom;\n}\nis_bored(\"I love you!\"\
    );\nis_bored(\"I love you?\");\nis_bored(\"I love you!?\");\nis_bored(\"I love\
    \ you!?!\");\nis_bored(\"I love you!?!?\");\nis_bored(\"I love you!?!?!\");\n\
    is_bored(\"I love you!?!?!?\");\nis_bored(\"I love you!?!?!?!\");\nis_bored(\"\
    I love you!?!?!?!?\");\nis_bored(\"I love you!?!?!?!?!\");\nis_bored(\"I love\
    \ you!?!?!?!?!?\");\nis_bored(\"I love you!?!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!?!?\"\
    );\nis_bored(\"I love you!?!?!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!?!?!?\"\
    );\nis_bored(\"I love you!?!?!?!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!?!?!?!?!\"\
    );\nis_bored(\"I love you!?!?!?!?!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!\"\
    );\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!\"\
    );\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpd4e76z9w.js:36\nis_bored(\"I love you!?!?!?!?!\n         ^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I like you!\") // returns 1\nis_bored(\"I like you?\") // returns\
    \ 1\nis_bored(\"I like you!?\") // returns 2\nis_bored(\"I like you!?!\") // returns\
    \ 3\nis_bored(\"I like you!?!?!\") // returns 4\nis_bored(\"I like you!?!?!?!\"\
    ) // returns 5\nis_bored(\"I like you!?!?!?!?!\") // returns 6\nis_bored(\"I like\
    \ you!?!?!?!?!?!?!\") // returns 7\nis_bored(\"I like you!?!?!?!?!?!?!?!\") //\
    \ returns 8\nis_bored(\"I like you!?!?!?!?!?!?!?!?!\") // returns 9\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!?!\") // returns 10\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!\"\
    ) // returns 11\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!\") // returns 12\n\
    is_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!\") // returns 13\nis_bored(\"I like\
    \ you!?!?!?!?!?!?!?!?!?!?!?!\") // returns 14\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!\"\
    ) // returns 15\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!\") // returns\
    \ 16\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!\") // returns 17\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpw9z7lg29.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw9z7lg29.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    is_bored(\"I like you!\") //returns 2\nis_bored(\"I hate you!\") //returns 1\n\
    is_bored(\"I like you!?\") //returns 2\nis_bored(\"I like you!?!\") //returns\
    \ 1\nis_bored(\"I like you!?!?\") //returns 0\nis_bored(\"I like you!?!?!\") //returns\
    \ 0\nis_bored(\"I like you!?!?!?!\") //returns 0\nis_bored(\"I like you!?!?!?!?!\"\
    ) //returns 0\nis_bored(\"I like you!?!?!?!?!?!\") //returns 0\nis_bored(\"I like\
    \ you!?!?!?!?!?!?!\") //returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!\") //returns\
    \ 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!\") //returns 0\nis_bored(\"I like\
    \ you!?!?!?!?!?!?!?!?!?!\") //returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!\"\
    ) //returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!\") //returns 0\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!?!?!?!?!\") //returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    ) //returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!\") //returns 0\n\
    is_bored(\"I like you!?!?!?!?!?!?!?!?\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpudkkr8xi.js:32\nis_bored(\"I like you!?!?!?!?!?!?!?!?\n       \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if\
    \ (word.startsWith(\"I\")){\n            boredoms += 1;\n        }\n    });\n\
    \    return boredoms;\n}\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like\
    \ Ice Cream and I like Ice Cream.\");\nis_bored(\"I like Ice Cream and I like\
    \ Ice Cream. Ice Cream is my favorite ice cream.\");\nis_bored(\"I like Ice Cream\
    \ and I like Ice Cream. Ice Cream is my favorite ice cream. Ice Cream is my favorite\
    \ ice cream.\");\nis_bored(\"I like Ice Cream and I like Ice Cream. Ice Cream\
    \ is my favorite ice cream. Ice Cream is my favorite ice cream. Ice Cream is my\
    \ favorite ice cream.\");\nis_bored(\"I like Ice Cream and I like Ice Cream. Ice\
    \ Cream is my favorite ice cream. Ice Cream is my favorite ice cream. Ice Cream\
    \ is my favorite ice cream. Ice Cream is my favorite ice cream.\");\nis_bored(\"\
    I like Ice Cream and I like Ice Cream. Ice Cream is my favorite ice cream. Ice\
    \ Cream is my favorite ice cream. Ice Cream is my favorite ice cream. Ice Cream\
    \ is my favorite ice cream. Ice Cream is my favorite ice cream.\");\nis_bored(\"\
    I like Ice Cream and I like Ice Cream. Ice Cream is my favorite ice cream. Ice\
    \ Cream is my favorite ice cream. Ice Cream is my favorite ice cream. Ice Cream\
    \ is my favorite ice cream. Ice Cream is my favorite ice cream. Ice Cream is my\
    \ favorite ice cream.\");\nis_bored(\"I like Ice Cream and I like Ice Cream. Ice\
    \ Cream is my favorite ice cream. Ice Cream is my favorite ice cream. Ice Cream\
    \ is my favorite ice cream. Ice Cream is my favorite ice \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4wferhyh.js:22\nis_bored(\"I like Ice Cream and I like Ice Cream.\
    \ Ice Cream is my favorite ice cream. Ice Cream is my favorite ice cream. Ice\
    \ Cream is my favorite ice cream. Ice Cream is my favorite ice \n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith('I')){\n\
    \            boredoms++;\n        }\n    });\n    return boredoms;\n}\nis_bored(\"\
    I love you!\") // returns 2\nis_bored(\"I hate you!\") // returns 1\nis_bored(\"\
    I love you?\") // returns 1\nis_bored(\"I hate you?\") // returns 0\nis_bored(\"\
    I love you!?\") // returns 1\nis_bored(\"I hate you!?\") // returns 0\nis_bored(\"\
    I love you!.\") // returns 1\nis_bored(\"I hate you!.\") // returns 0\nis_bored(\"\
    I love you!?!\") // returns 1\nis_bored(\"I hate you!?!\") // returns 0\nis_bored(\"\
    I love you!.!\") // returns 1\nis_bored(\"I hate you!.!\") // returns 0\nis_bored(\"\
    I love you!?!.\") // returns 1\nis_bored(\"I hate you!?!.\") // returns 0\nis_bored(\"\
    I love you!.!?\") // returns 1\nis_bored(\"I hate you!.!?\") // returns 0\nis_bored(\"\
    I love you!?!.!\") // returns 1\nis_bored(\"I hate you!?!.!\") // returns 0\n\
    is_bored(\"I love you!.!.\") // returns 1\nis_bored(\"I hate you!.!.\") // returns\
    \ 0\nis_bored(\"I love you!?!.!?\") // returns 1\nis_bored(\"I hate you!?!.!?\"\
    ) // returns 0\nis_bored(\"I love you!.!.?\") // returns 1\nis_bored(\"I hate\
    \ you!.!.?\") // returns 0\nis_bored(\"I love you!?!.!.\") // returns 1\nis_bored(\"\
    I hate you!?!.!.\") // returns 0\nis_bored(\"I love you!.!.?!\") // returns 1\n\
    is_bored(\"I hate you!.!.?!\") // returns 0\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpcda24gfn.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcda24gfn.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0] === 'I'){\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpr9hiznyh.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr9hiznyh.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var bored = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i].indexOf('I') === 0){\n            bored += 1;\n\
    \        }\n    }\n    return bored;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4rc0ia58.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4rc0ia58.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var boredom_array = S.split('.');\n    for(var i=0;\
    \ i<boredom_array.length; i++){\n        if(boredom_array[i].indexOf('I') ===\
    \ 0){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgr2hsig0.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgr2hsig0.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4lcsb_sn.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4lcsb_sn.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith('I')){\n\
    \            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmplydacsj7.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplydacsj7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_322we0i.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_322we0i.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var count = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i].indexOf('I') === 0){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyiwt2tma.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyiwt2tma.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith('I')){\n\
    \            boredoms++;\n        }\n    });\n    return boredoms;\n}\nis_bored(\"\
    I love you!\") //2\nis_bored(\"I hate you!\") //0\nis_bored(\"I love you? I hate\
    \ you!\") //2\nis_bored(\"I love you! I hate you!\") //2\nis_bored(\"I love you!\
    \ I hate you! I hate you!\") //3\nis_bored(\"I love you! I hate you! I hate you!\
    \ I hate you!\") //4\nis_bored(\"I love you! I hate you! I hate you! I hate you!\
    \ I hate you!\") //5\nis_bored(\"I love you! I hate you! I hate you! I hate you!\
    \ I hate you! I hate you!\") //6\nis_bored(\"I love you! I hate you! I hate you!\
    \ I hate you! I hate you! I hate you! I hate you!\") //7\nis_bored(\"I love you!\
    \ I hate you! I hate you! I hate you! I hate you! I hate you! I hate you! I hate\
    \ you!\") //8\nis_bored(\"I love you! I hate you! I hate you! I hate you! I hate\
    \ you! I hate you! I hate you! I hate you! I hate you!\") //9\nis_bored(\"I love\
    \ you! I hate you! I hate you! I hate you! I hate you! I hate you! I hate you!\
    \ I hate you! I hate you! I hate you! I hate you!\") //10\nis_bored(\"I love you!\
    \ I hate you! I hate you! I hate you! I hate you! I hate you! I hate you! I hate\
    \ you! I hate you! I hate you! I hate you! I hate you! I hate you!\") //11\nis_bored(\"\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgdnxsc3p.js:27\nis_bored(\"\n         ^\n\nSyntaxError: Invalid\
    \ or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5n7hq2bn.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5n7hq2bn.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.match(/I[^.?!]+/g);\n    return boredoms.length;\n}\nis_bored(\"\
    I like you!\"); // returns 1\nis_bored(\"I like I!\"); // returns 2\nis_bored(\"\
    I like I!.\"); // returns 1\nis_bored(\"I like I!?!\"); // returns 1\nis_bored(\"\
    I like I!.!\"); // returns 1\nis_bored(\"I like I!.!?!\"); // returns 1\nis_bored(\"\
    I like I!.!?!.!\"); // returns 1\nis_bored(\"I like I!.!?!.!?!\"); // returns\
    \ 1\nis_bored(\"I like I!.!?!.!?!.!\"); // returns 1\nis_bored(\"I like I!.!?!.!?!.!?!\"\
    ); // returns 1\nis_bored(\"I like I!.!?!.!?!.!?!.!\"); // returns 1\nis_bored(\"\
    I like I!.!?!.!?!.!?!.!?!\"); // returns 1\nis_bored(\"I like I!.!?!.!?!.!?!.!?!.!\"\
    ); // returns 1\nis_bored(\"I like I!.!?!.!?!.!?!.!?!.!?!\"); // returns 1\nis_bored(\"\
    I like I!.!?!.!?!.!?!.!?!.!?!.!\"); // returns 1\nis_bored(\"I like I!.!?!.!?!.!?!.!?!.!?!.!?!\"\
    ); // returns 1\nis_bored(\"I like I!.!?!.!?!.!?!.!?!.!?!.!?!.!\"); // returns\
    \ 1\nis_bored(\"I like I!.!?!.!?!.!?!.!?!.!?!.!?!.!?!.!\"); // returns 1\nis_bored(\"\
    I like I!.!?!.!?!.!?!.!?!.!?!.!?!.!?!.!?\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpks41he2f.js:27\nis_bored(\"I like I!.!?!.!?!.!?!.!?!.!?!.!?!.!?!.!?\n\
    \         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid or\
    \ unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    S.split('.').forEach(function(word){\n        if(word === 'I'){\n       \
    \     boredom_count++;\n        }\n    });\n}\nis_bored('I love you!'); // 2\n\
    is_bored('I hate you!'); // 1\nis_bored('I love you!'); // 2\nis_bored('I hate\
    \ you!'); // 1\nis_bored('I love you!'); // 2\nis_bored('I hate you!'); // 1\n\
    is_bored('I love you!'); // 2\nis_bored('I hate you!'); // 1\nis_bored('I love\
    \ you!'); // 2\nis_bored('I hate you!'); // 1\nis_bored('I love you!'); // 2\n\
    is_bored('I hate you!'); // 1\nis_bored('I love you!'); // 2\nis_bored('I hate\
    \ you!'); // 1\nis_bored('I love you!'); // 2\nis_bored('I hate you!'); // 1\n\
    is_bored('I love you!'); // 2\nis_bored('I hate you!'); // 1\nis_bored('I love\
    \ you!'); // 2\nis_bored('I hate you!'); // 1\nis_bored('I love you!'); // 2\n\
    is_bored('I hate you!'); // 1\nis_bored('I love you!'); // 2\nis_bored('I hate\
    \ you!'); // 1\nis_bored('I love you!'); // 2\nis_bored('I hate you!'); // 1\n\
    is_bored('I love you!'); // 2\nis_bored('I hate you!'); // 1\nis_bored('I love\
    \ you!'); // 2\nis_bored('I hate you!'); // 1\nis_bored('I love you!'); // 2\n\
    is_bored('I hate you!'); // 1\nis_bored('I love you!'); // 2\nis_bored('I hate\
    \ you!'); // 1\nis_bored('I love you!'); // 2\nis_bored('I hate you!'); // 1\n\
    is_bored('I love you!'); // 2\nis_bo\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpweyxvo2p.js:49\nis_bo\n^\n\nReferenceError: is_bo is not defined\n\
    \    at Object.<anonymous> (/tmp/tmpweyxvo2p.js:49:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === 'I'){\n            boredoms += 1;\n      \
    \  }\n    }\n    return boredoms;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpftltwvhj.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpftltwvhj.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpkw4o6j4y.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkw4o6j4y.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var boredom_count = 0;\n    for(var i=0;\
    \ i<boredoms.length; i++){\n        if(boredoms[i].indexOf('I') === 0){\n    \
    \        boredom_count++;\n        }\n    }\n    return boredom_count;\n}\nis_bored(\"\
    I love you!\"); // returns 2\nis_bored(\"I hate you!\"); // returns 1\nis_bored(\"\
    I love you!.\"); // returns 2\nis_bored(\"I love you!..\"); // returns 2\nis_bored(\"\
    I love you!?\"); // returns 1\nis_bored(\"I love you!!\"); // returns 1\nis_bored(\"\
    I love you!!.\"); // returns 1\nis_bored(\"I love you!!..\"); // returns 1\nis_bored(\"\
    I love you!!?\"); // returns 1\nis_bored(\"I love you!!.?\"); // returns 1\nis_bored(\"\
    I love you!!..?\"); // returns 1\nis_bored(\"I love you!!?!\"); // returns 1\n\
    is_bored(\"I love you!!.?!\"); // returns 1\nis_bored(\"I love you!!..?!\"); //\
    \ returns 1\nis_bored(\"I love you!!?!.\"); // returns 1\nis_bored(\"I love you!!.?!.\"\
    ); // returns 1\nis_bored(\"I love you!!..?!.\"); // returns 1\nis_bored(\"I love\
    \ you!!?!..\"); // returns 1\nis_bored(\"I love you!!.?!..\"); // returns 1\n\
    is_bored(\"I love you!!..?!..\"); // returns 1\nis_bored(\"I love you!!?!..?\"\
    ); // returns 1\nis_bored(\"I love you!!.?!..?\"); // returns 1\nis_bored(\"I\
    \ love you!!..?!..?\"); // returns 1\nis_bored(\"I love you!!?!..?!\"); // returns\
    \ 1\nis_bored(\"I love you!!.?!..?!\"); // returns 1\nis_bored(\"I love you!!..?!..?!\"\
    ); // returns 1\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpz193f1v0.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz193f1v0.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I love you!\") //=> 1\nis_bored(\"I love you.\") //=> 1\nis_bored(\"\
    I love you!.\") //=> 1\nis_bored(\"I love you!? I love you!\") //=> 2\nis_bored(\"\
    I love you!? I love you!.\") //=> 2\nis_bored(\"I love you!? I love you!?\") //=>\
    \ 3\nis_bored(\"I love you!? I love you!?. I\") //=> 3\nis_bored(\"I love you!?\
    \ I love you!?. I.\") //=> 3\nis_bored(\"I love you!? I love you!?. I!\") //=>\
    \ 3\nis_bored(\"I love you!? I love you!?. I!.\") //=> 3\nis_bored(\"I love you!?\
    \ I love you!?. I!?\") //=> 3\nis_bored(\"I love you!? I love you!?. I!?.\") //=>\
    \ 3\nis_bored(\"I love you!? I love you!?. I!?!\") //=> 3\nis_bored(\"I love you!?\
    \ I love you!?. I!?!.\") //=> 3\nis_bored(\"I love you!? I love you!?. I!?!?\"\
    ) //=> 3\nis_bored(\"I love you!? I love you!?. I!?!?.\") //=> 3\nis_bored(\"\
    I love you!? I love you!?. I!?!?!\") //=> 3\nis_bored(\"I love you!? I love you!?.\
    \ I!?!?!.\") //=> 3\nis_bored(\"I love you!? I love you!?. I!?!?!?\") //=> 3\n\
    is_bored(\"I love you!? I love you!?. I!?!?!?.\") //\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpls8jr9j0.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpls8jr9j0.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.match(/I[^.?!]+/g);\n    return boredoms.length;\n}\nis_bored(\"\
    I like Ice Cream.\");\nis_bored(\"I like Ice Cream? I like Ice Cream!\");\nis_bored(\"\
    I like Ice Cream? I like Ice Cream! I like Ice Cream!\");\nis_bored(\"I like Ice\
    \ Cream? I like Ice Cream! I like Ice Cream! I like Ice Cream!\");\nis_bored(\"\
    I like Ice Cream? I like Ice Cream! I like Ice Cream! I like Ice Cream! I like\
    \ Ice Cream!\");\nis_bored(\"I like Ice Cream? I like Ice Cream! I like Ice Cream!\
    \ I like Ice Cream! I like Ice Cream! I like Ice Cream!\");\nis_bored(\"I like\
    \ Ice Cream? I like Ice Cream! I like Ice Cream! I like Ice Cream! I like Ice\
    \ Cream! I like Ice Cream! I like Ice Cream!\");\nis_bored(\"I like Ice Cream?\
    \ I like Ice Cream! I like Ice Cream! I like Ice Cream! I like Ice Cream! I like\
    \ Ice Cream! I like Ice Cream! I like Ice Cream!\");\nis_bored(\"I like Ice Cream?\
    \ I like Ice Cream! I like Ice Cream! I like Ice Cream! I like Ice Cream! I like\
    \ Ice Cream! I like Ice Cream! I like Ice Cream! I like Ice Cream!\");\nis_bored(\"\
    I like Ice Cream? I like Ice Cream! I like Ice Cream! I like Ice Cream! I like\
    \ Ice Cream! I like Ice Cream! I like Ice Cream! I like Ice Cream! I like Ice\
    \ Cream! I like Ice Cream!\");\nis_bored(\"I like Ice Cream? I like Ice Cream!\
    \ I like Ice Cream! I like Ice Cream! I like Ice Cream! I like Ice \nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppau03295.js:19\nis_bored(\"I like Ice Cream? I like Ice Cream!\
    \ I like Ice Cream! I like Ice Cream! I like Ice Cream! I like Ice \n        \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === 'I'){\n            boredoms += 1;\n      \
    \  }\n    }\n    return boredoms;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpe9i1jtjc.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe9i1jtjc.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpmzvxhey2.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmzvxhey2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I love you!\") //returns 1\nis_bored(\"I hate you!\") //returns\
    \ 0\nis_bored(\"I love you? I hate you!\") //returns 2\nis_bored(\"I love you!\
    \ I hate you!\") //returns 2\nis_bored(\"I love you! I hate you!\") //returns\
    \ 2\nis_bored(\"I love you! I hate you! I love you!\") //returns 3\nis_bored(\"\
    I love you! I hate you! I love you! I hate you!\") //returns 3\nis_bored(\"I love\
    \ you! I hate you! I love you! I hate you! I love you!\") //returns 4\nis_bored(\"\
    I love you! I hate you! I love you! I hate you! I love you! I hate you!\") //returns\
    \ 4\nis_bored(\"I love you! I hate you! I love you! I hate you! I love you! I\
    \ hate you! I love you!\") //returns 4\nis_bored(\"I love you! I hate you! I love\
    \ you! I hate you! I love you! I hate you! I love you! I hate you!\") //returns\
    \ 4\nis_bored(\"I love you! I hate you! I love you! I hate you! I love you! I\
    \ hate you! I love you! I hate you! I love you! I hate you!\") //returns 4\nis_bored(\"\
    I love you! I hate you! I love you! I hate you! I love you! I hate you! I love\
    \ you! I hate you! I love you! I hate you! I love you! I hate you!\") //returns\
    \ 4\nis_bored(\"I love you! I hate you! I love you! I hate you! I love you! I\
    \ hate you! I lo\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7gksxm_k.js:27\nis_bored(\"I love you! I hate you! I love you!\
    \ I hate you! I love you! I hate you! I lo\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith('I')){\n\
    \            boredoms += 1;\n        }\n    });\n    return boredoms;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvi5135zu.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvi5135zu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ \"I\"){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpfc49boza.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfc49boza.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    // Return the number of boredoms in S.\n}\nis_bored(\"I like you!\") // returns\
    \ 2\nis_bored(\"I like you.\") // returns 1\nis_bored(\"I like you!?\") // returns\
    \ 3\nis_bored(\"I like you!?!\") // returns 0\nis_bored(\"I like you!?!?\") //\
    \ returns 0\nis_bored(\"I like you!?!?!\") // returns 0\nis_bored(\"I like you!?!?!?!\"\
    ) // returns 0\nis_bored(\"I like you!?!?!?!?\") // returns 0\nis_bored(\"I like\
    \ you!?!?!?!?!\") // returns 0\nis_bored(\"I like you!?!?!?!?!?\") // returns\
    \ 0\nis_bored(\"I like you!?!?!?!?!?!\") // returns 0\nis_bored(\"I like you!?!?!?!?!?!?\"\
    ) // returns 0\nis_bored(\"I like you!?!?!?!?!?!?!\") // returns 0\nis_bored(\"\
    I like you!?!?!?!?!?!?!?\") // returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!\"\
    ) // returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?\") // returns 0\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!\") // returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?\"\
    ) // returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!\") // returns 0\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!?!?!\") // returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!\"\
    ) // returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptxtm6mak.js:29\nis_bored(\"I like you!?!?!?!?!?!?!?!?\n       \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0] === 'I'){\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\nis_bored(\"I like you!\") //returns 2\nis_bored(\"I\
    \ like you?\") //returns 1\nis_bored(\"I like you!?\") //returns 3\nis_bored(\"\
    I like you!?!\") //returns 3\nis_bored(\"I like you!?!?\") //returns 3\nis_bored(\"\
    I like you!?!?!\") //returns 3\nis_bored(\"I like you!?!?!?!\") //returns 3\n\
    is_bored(\"I like you!?!?!?!?!\") //returns 3\nis_bored(\"I like you!?!?!?!?!?!\"\
    ) //returns 3\nis_bored(\"I like you!?!?!?!?!?!?!\") //returns 3\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!\") //returns 3\nis_bored(\"I like you!?!?!?!?!?!?!?!?!\"\
    ) //returns 3\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!\") //returns 3\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!?!?!\") //returns 3\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!\"\
    ) //returns 3\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!\") //returns 3\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!?!?!?!?!\") //returns 3\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    ) //returns 3\nis_bored(\"I like you!?!?!?!?!?!\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpr4h0ua_n.js:33\nis_bored(\"I like you!?!?!?!?!?!\n         ^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.match(/I[^.?!]+/g);\n    return boredoms.length;\n}\nis_bored(\"\
    I like you!\") //=> 1\nis_bored(\"I like I!\") //=> 0\nis_bored(\"I like I!.\"\
    ) //=> 1\nis_bored(\"I like I!? I!?!\") //=> 2\nis_bored(\"I like I!? I!?!.\"\
    ) //=> 2\nis_bored(\"I like I!? I!?!? I!?!?!\") //=> 3\nis_bored(\"I like I!?\
    \ I!?!? I!?!?!.\") //=> 3\nis_bored(\"I like I!? I!?!? I!?!?!? I!?!?!?!\") //=>\
    \ 4\nis_bored(\"I like I!? I!?!? I!?!?!? I!?!?!?!.\") //=> 4\nis_bored(\"I like\
    \ I!? I!?!? I!?!?!? I!?!?!?!? I!?!?!?!\") //=> 5\nis_bored(\"I like I!? I!?!?\
    \ I!?!?!? I!?!?!?!? I!?!?!?!.\") //=> 5\nis_bored(\"I like I!? I!?!? I!?!?!? I!?!?!?!?\
    \ I!?!?!?!? I!?!?!?!\") //=> 6\nis_bored(\"I like I!? I!?!? I!?!?!? I!?!?!?!?\
    \ I!?!?!?!? I!?!?!?!. I!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpj2q26wsz.js:21\nis_bored(\"I like I!? I!?!? I!?!?!? I!?!?!?!? I!?!?!?!?\
    \ I!?!?!?!. I!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!\n\
    \         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    is_bored(\"I love you!\"); // returns 1\nis_bored(\"I hate you!\"); // returns\
    \ 0\nis_bored(\"I love you!.\"); // returns 1\nis_bored(\"I love you!..\"); //\
    \ returns 1\nis_bored(\"I love you!?\"); // returns 1\nis_bored(\"I love you!!\"\
    ); // returns 1\nis_bored(\"I love you!!.\"); // returns 1\nis_bored(\"I love\
    \ you!!..\"); // returns 1\nis_bored(\"I love you!!?\"); // returns 1\nis_bored(\"\
    I love you!!?!\"); // returns 1\nis_bored(\"I love you!!?!.\"); // returns 1\n\
    is_bored(\"I love you!!?!..\"); // returns 1\nis_bored(\"I love you!!?!?\"); //\
    \ returns 1\nis_bored(\"I love you!!?!?!\"); // returns 1\nis_bored(\"I love you!!?!?!.\"\
    ); // returns 1\nis_bored(\"I love you!!?!?!..\"); // returns 1\nis_bored(\"I\
    \ love you!!?!?!?\"); // returns 1\nis_bored(\"I love you!!?!?!?!\"); // returns\
    \ 1\nis_bored(\"I love you!!?!?!?!.\"); // returns 1\nis_bored(\"I love you!!?!?!?!..\"\
    ); // returns 1\nis_bored(\"I love you!!?!?!?!?\"); // returns 1\nis_bored(\"\
    I love you!!?!?!?!?!\"); // returns 1\nis_bored(\"I love you!!?!?!?!?!.\"); //\
    \ returns 1\nis_bored(\"I love you!!?!?!?!?!..\"); // returns 1\nis_bored(\"I\
    \ love you!!?!?!?!?!?\"); // returns 1\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpkprkc3xd.js:46:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkprkc3xd.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1n0ni12n.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1n0ni12n.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var boredom_count = 0;\n    for(var i=0;\
    \ i<boredoms.length; i++){\n        if(boredoms[i].indexOf('I') != -1){\n    \
    \        boredom_count++;\n        }\n    }\n    return boredom_count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsswyf_l5.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsswyf_l5.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp6q3g0b70.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6q3g0b70.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    // Code goes here\n}\n</cell>\n<cell>\n# Run this cell to test your solution\n\
    is_bored('Bored.')\n</cell>\n<text>\nQuestion 3: How many times does the word\
    \ \"bored\" appear in a sentence?\n\n</text>\n<cell>\n# Write your solution here\n\
    </cell>\n<cell>\n# Run this cell to test your solution\nis_bored('I bought a boat.')\n\
    </cell>\n<text>\nQuestion 4: How many times does the word \"bored\" appear in\
    \ a sentence?\n\n</text>\n<cell>\n# Write your solution here\n</cell>\n<cell>\n\
    # Run this cell to test your solution\nis_bored('I bought a boat. He bored.')\n\
    </cell>\n<text>\nQuestion 5: Write a function that takes in a string and returns\
    \ the number of times the word \"bored\" appears in that string.\n\n</text>\n\
    <cell>\n# Write your solution here\n</cell>\n<cell>\n# Run this cell to test your\
    \ solution\ncount_bored('I bought a boat. He bored.')\n</cell>\n<text>\nQuestion\
    \ 6: Write a function that takes in a string and returns the number of times the\
    \ word \"bored\" appears in that string.\n\n</text>\n<cell>\n# Write your solution\
    \ here\n</cell>\n<cell>\n# Run this cell to test your solution\ncount_bored('I\
    \ bought a boat. He bored. He bored.')\n</cell>\n<text>\nQuestion 7: Write a function\
    \ that takes in a string and returns the number of times the word \"bored\" appears\
    \ in that string.\n\n</text>\n<cell>\n# Write your solution here\n</cell>\n<cell>\n\
    # Run this cell to test your solution\ncount_bored('I bought a boat. He bored.\
    \ He bored. He bored.')\n</cell>\n<text>\nQuestion 8: Write a function that takes\
    \ in a string and returns the number of times the word \"bored\" appears in that\
    \ string.\n\n</text>\n<cell>\n# Write your solution here\n</cell>\n<cell>\n# Run\
    \ this cell to test your solution\ncount_bored('I bought a boat. He bored. He\
    \ bored. He bored. He bored. He bored. He bored. H\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplw60vrau.js:8\n</cell>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.match(/I[^.?!]+/g);\n    return boredoms.length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_qvcjq6r.js:7\n    return boredoms.length;\n                  \
    \  ^\n\nTypeError: Cannot read properties of null (reading 'length')\n    at is_bored\
    \ (/tmp/tmp_qvcjq6r.js:7:21)\n    at test (/tmp/tmp_qvcjq6r.js:15:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp_qvcjq6r.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice Cream. Ice Cream is\
    \ great.\");\nis_bored(\"I like Ice Cream? Ice Cream is great!\");\nis_bored(\"\
    I like Ice Cream!\");\nis_bored(\"I like Ice Cream! Ice Cream is great!\");\n\
    is_bored(\"I like Ice Cream. Ice Cream is great! I like Ice Cream.\");\nis_bored(\"\
    I like Ice Cream. Ice Cream is great! I like Ice Cream. Ice Cream is great.\"\
    );\nis_bored(\"I like Ice Cream. Ice Cream is great! I like Ice Cream? Ice Cream\
    \ is great!\");\nis_bored(\"I like Ice Cream. Ice Cream is great! I like Ice Cream!\"\
    );\nis_bored(\"I like Ice Cream. Ice Cream is great! I like Ice Cream! Ice Cream\
    \ is great!\");\nis_bored(\"I like Ice Cream. Ice Cream is great! I like Ice Cream.\
    \ Ice Cream is great! I like Ice Cream.\");\nis_bored(\"I like Ice Cream. Ice\
    \ Cream is great! I like Ice Cream. Ice Cream is great! I like Ice Cream. Ice\
    \ Cream is great.\");\nis_bored(\"I like Ice Cream. Ice Cream is great! I like\
    \ Ice Cream. Ice Cream is great! I like Ice Cream? Ice Cream is great!\");\nis_bored(\"\
    I like Ice Cream. Ice Cream is great! I like Ice Cream. Ice Cream is great! I\
    \ like Ice Cream!\");\nis_bored(\"I like Ice Cream. Ice Cream is great! I like\
    \ Ice Cream. Ice Cream is great! I like Ice Cream! Ice Cream is great!\");\nis_bo\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnokptp24.js:29\nis_bo\n^\n\nReferenceError: is_bo is not defined\n\
    \    at Object.<anonymous> (/tmp/tmpnokptp24.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    is_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\");\nis_bored(\"\
    I like Ice Cream?\");\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice\
    \ Cream!\");\nis_bored(\"I like Ice Cream?\");\nis_bored(\"I like Ice Cream.\"\
    );\nis_bored(\"I like Ice Cream!\");\nis_bored(\"I like Ice Cream?\");\nis_bored(\"\
    I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\");\nis_bored(\"I like Ice\
    \ Cream?\");\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\"\
    );\nis_bored(\"I like Ice Cream?\");\nis_bored(\"I like Ice Cream.\");\nis_bored(\"\
    I like Ice Cream!\");\nis_bored(\"I like Ice Cream?\");\nis_bored(\"I like Ice\
    \ Cream.\");\nis_bored(\"I like Ice Cream!\");\nis_bored(\"I like Ice Cream?\"\
    );\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\");\nis_bored(\"\
    I like Ice Cream?\");\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice\
    \ Cream!\");\nis_bored(\"I like Ice Cream?\");\nis_bored(\"I like Ice Cream.\"\
    );\nis_bored(\"I like Ice Cream!\");\nis_bored(\"I like Ice Cream?\");\nis_bored(\"\
    I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\");\nis_bored(\"I like Ice\
    \ Cream?\");\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\"\
    );\nis_bored(\"I like Ice Cream?\");\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpqe4_k7n_.js:57:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqe4_k7n_.js:64:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I love you!\") // returns 1\nis_bored(\"I hate you!\") // returns\
    \ 0\nis_bored(\"I love you!.\") // returns 1\nis_bored(\"I love you!?\") // returns\
    \ 1\nis_bored(\"I love you!?!\") // returns 0\nis_bored(\"I love you!?!.\") //\
    \ returns 0\nis_bored(\"I love you!?!?\") // returns 0\nis_bored(\"I love you!?!?!\"\
    ) // returns 0\nis_bored(\"I love you!?!?!.\") // returns 0\nis_bored(\"I love\
    \ you!?!?!?\") // returns 0\nis_bored(\"I love you!?!?!?!\") // returns 0\nis_bored(\"\
    I love you!?!?!?!.\") // returns 0\nis_bored(\"I love you!?!?!?!?\") // returns\
    \ 0\nis_bored(\"I love you!?!?!?!?!\") // returns 0\nis_bored(\"I love you!?!?!?!?!.\"\
    ) // returns 0\nis_bored(\"I love you!?!?!?!?!?\") // returns 0\nis_bored(\"I\
    \ love you!?!?!?!?!?!\") // returns 0\nis_bored(\"I love you!?!?!?!?!?!.\") //\
    \ returns 0\nis_bored(\"I love you!?!?!?!?!?!?\") // returns 0\nis_bored(\"I love\
    \ you!?!?!?!?!?!?!\") // returns 0\nis_bored(\"I love you!?!?!?!?!?!?!.\") //\
    \ returns 0\nis_bored(\"I love you!?!?!?!?!?!?!?\") // returns 0\nis_bored(\"\
    I love you!?!?!?!?!?!?\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_70ldzlz.js:36\nis_bored(\"I love you!?!?!?!?!?!?\n         ^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpfjkonrlg.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfjkonrlg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith('I')){\n\
    \            boredoms += 1;\n        }\n    });\n    return boredoms;\n}\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you.'); // returns 1\nis_bored('I hate you.'); // returns 0\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you.'); // returns 1\nis_bored('I hate you.'); // returns 0\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you.'); // returns 1\nis_bored('I hate you.'); // returns 0\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you.'); // returns 1\nis_bored('I hate you.'); // returns 0\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you.'); // returns 1\nis_bored('I hate you.'); // returns 0\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you.'); // returns 1\nis_bored('I hate you.'); // returns 0\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you.'); // returns 1\nis_bored('I hate you.'); // returns 0\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you.'); // returns 1\nis_bored('I hate you.'); // returns 0\nis_bored('I\
    \ love you!'); // returns 2\nis_bored('I hate you!'); // returns 1\nis_bored('I\
    \ love you.\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpl_wo4vnq.js:48\nis_bored('I love you.\n         ^^^^^^^^^^^^\n\n\
    SyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I like Ice Cream.\"); // returns 2\nis_bored(\"I like Ice Cream?\"\
    ); // returns 1\nis_bored(\"I like Ice Cream!\"); // returns 1\nis_bored(\"I like\
    \ Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpl1l0w73n.js:17\nis_bored(\"I like Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice\
    \ Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream.Ice Cream\n\
n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cj"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var bored = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i].indexOf('I') === 0){\n            bored++;\n \
    \       }\n    }\n    return bored;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpm41vxx0w.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm41vxx0w.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0] === 'I'){\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp41dvf4rz.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp41dvf4rz.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var boredom_words = S.split(\" \");\n    for(var i=0;\
    \ i<boredom_words.length; i++){\n        if(boredom_words[i][0] === \"I\"){\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\nis_bored(\"\
    I like you!\") //returns 1\nis_bored(\"I like you?\") //returns 1\nis_bored(\"\
    I like you!?\") //returns 2\nis_bored(\"I like you!? I like you!?\") //returns\
    \ 3\nis_bored(\"I like you!? I like you!? I like you!?\") //returns 3\nis_bored(\"\
    I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I \nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_ts2lbgo.js:20\nis_bored(\"I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I like you!? I like you!?\
    \ I like you!? I like you!? I like you!? I like you!? I \nn\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapS"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I love you!\"); // returns 1\nis_bored(\"I hate you!\"); // returns\
    \ 0\nis_bored(\"I love you!.\"); // returns 1\nis_bored(\"I love you!?\"); //\
    \ returns 1\nis_bored(\"I love you!!\"); // returns 1\nis_bored(\"I love you!?!\"\
    ); // returns 1\nis_bored(\"I love you!?!.\"); // returns 1\nis_bored(\"I love\
    \ you!?!?\"); // returns 1\nis_bored(\"I love you!?!?!\"); // returns 1\nis_bored(\"\
    I love you!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?\"); // returns\
    \ 1\nis_bored(\"I love you!?!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!?!.\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?\"); // returns 1\nis_bored(\"I\
    \ love you!?!?!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!?!?!.\"); // returns\
    \ 1\nis_bored(\"I love you!?!?!?!?!?\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!?!.\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!?!?\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!.\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!?!?!?\"); // returns 1\nis_bored(\"I \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphvci0gjb.js:37\nis_bored(\"I \n         ^^^\n\nSyntaxError: Invalid\
    \ or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    is_bored(\"I love you!\"); // returns 1\nis_bored(\"I hate you!\"); // returns\
    \ 0\nis_bored(\"I love you?\"); // returns 1\nis_bored(\"I hate you?\"); // returns\
    \ 0\nis_bored(\"I love you!?\"); // returns 1\nis_bored(\"I hate you!?\"); //\
    \ returns 0\nis_bored(\"I love you!?!\"); // returns 1\nis_bored(\"I hate you!?!\"\
    ); // returns 0\nis_bored(\"I love you!?!?\"); // returns 1\nis_bored(\"I hate\
    \ you!?!?\"); // returns 0\nis_bored(\"I love you!?!?!\"); // returns 1\nis_bored(\"\
    I hate you!?!?!\"); // returns 0\nis_bored(\"I love you!?!?!?\"); // returns 1\n\
    is_bored(\"I hate you!?!?!?\"); // returns 0\nis_bored(\"I love you!?!?!?!\");\
    \ // returns 1\nis_bored(\"I hate you!?!?!?!\"); // returns 0\nis_bored(\"I love\
    \ you!?!?!?!?\"); // returns 1\nis_bored(\"I hate you!?!?!?!?\"); // returns 0\n\
    is_bored(\"I love you!?!?!?!?!\"); // returns 1\nis_bored(\"I hate you!?!?!?!?!\"\
    ); // returns 0\nis_bored(\"I love you!?!?!?!?!?\"); // returns 1\nis_bored(\"\
    I hate you!?!?!?!?!?\"); // returns 0\nis_bored(\"I love you!?!?!?!?!?!\"); //\
    \ returns 1\nis_bored(\"I hate you!?!?!?!?!?!\"); // returns 0\nis_bored(\"I love\
    \ you!?!?!?!?!?!?\"); // \nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpf1cyfr6c.js:45:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf1cyfr6c.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0] === 'I'){\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpp9fzqes2.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp9fzqes2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    S = S.toLowerCase();\n    var boredoms = 0;\n    for(var i=0; i<S.length;\
    \ i++){\n        if(S[i] == 'i'){\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpzhs61bqh.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzhs61bqh.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0] === 'I'){\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpcxbz65g3.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcxbz65g3.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var bored = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i].indexOf('I') === 0){\n            bored++;\n \
    \       }\n    }\n    return bored;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3dpwgxk2.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3dpwgxk2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I like you!\") //returns 2\nis_bored(\"I like you?\") //returns\
    \ 1\nis_bored(\"I like you!?\") //returns 3\nis_bored(\"I like you!?!\") //returns\
    \ 0\nis_bored(\"I like you!?!?\") //returns 0\nis_bored(\"I like you!?!?!\") //returns\
    \ 0\nis_bored(\"I like you!?!?!?!\") //returns 0\nis_bored(\"I like you!?!?!?!?!\"\
    ) //returns 0\nis_bored(\"I like you!?!?!?!?!?!\") //returns 0\nis_bored(\"I like\
    \ you!?!?!?!?!?!?!\") //returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!\") //returns\
    \ 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!\") //returns 0\nis_bored(\"I like\
    \ you!?!?!?!?!?!?!?!?!?!\") //returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!\"\
    ) //returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!\") //returns 0\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!?!?!?!?!\") //returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    ) //returns 0\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!\") //returns 0\n\
    is_bored(\"I like you!?!?!?!?!?!?!?!?!\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqfblc6r_.js:32\nis_bored(\"I like you!?!?!?!?!?!?!?!?!\n      \
    \   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \  var boredoms = 0;\n  for(var i=0; i<S.length; i++){\n    if(S[i]==='I'&&S[i+1]==='.'){\n\
    \      boredoms++;\n    }\n  }\n  return boredoms;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1j3numm6.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1j3numm6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\nis_bored(\"I like you!\");\nis_bored(\"I like you?\");\nis_bored(\"I like you!?\"\
    );\nis_bored(\"I like you!?!\");\nis_bored(\"I like you!?!?\");\nis_bored(\"I\
    \ like you!?!?!\");\nis_bored(\"I like you!?!?!?\");\nis_bored(\"I like you!?!?!?!\"\
    );\nis_bored(\"I like you!?!?!?!?\");\nis_bored(\"I like you!?!?!?!?!\");\nis_bored(\"\
    I like you!?!?!?!?!?\");\nis_bored(\"I like you!?!?!?!?!?!\");\nis_bored(\"I like\
    \ you!?!?!?!?!?!?\");\nis_bored(\"I like you!?!?!?!?!?!?!\");\nis_bored(\"I like\
    \ you!?!?!?!?!?!?!?\");\nis_bored(\"I like you!?!?!?!?!?!?!?!\");\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?\");\nis_bored(\"I like you!?!?!?!?!?!?!?!?!\");\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!?!\");\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!\"\
    );\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!\");\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!\"\
    );\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!\");\nis_bored(\"\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvwge8p_j.js:37\nis_bored(\"\n         ^\n\nSyntaxError: Invalid\
    \ or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith('I')){\n\
    \            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmplb85nyib.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplb85nyib.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5ticbgk0.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5ticbgk0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpwv_futiv.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwv_futiv.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmporjuto4u.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmporjuto4u.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    is_bored(\"I love you!\"); // returns 1\nis_bored(\"I hate you!\"); // returns\
    \ 0\nis_bored(\"I love you?\"); // returns 1\nis_bored(\"I hate you?\"); // returns\
    \ 0\nis_bored(\"I love you!?\"); // returns 1\nis_bored(\"I hate you!?\"); //\
    \ returns 0\nis_bored(\"I love you!?!\"); // returns 1\nis_bored(\"I hate you!?!\"\
    ); // returns 0\nis_bored(\"I love you!?!?!\"); // returns 1\nis_bored(\"I hate\
    \ you!?!?!\"); // returns 0\nis_bored(\"I love you!?!?!?!\"); // returns 1\nis_bored(\"\
    I hate you!?!?!?!\"); // returns 0\nis_bored(\"I love you!?!?!?!?!\"); // returns\
    \ 1\nis_bored(\"I hate you!?!?!?!?!\"); // returns 0\nis_bored(\"I love you!?!?!?!?!?!\"\
    ); // returns 1\nis_bored(\"I hate you!?!?!?!?!?!\"); // returns 0\nis_bored(\"\
    I love you!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I hate you!?!?!?!?!?!?!\"\
    ); // returns 0\nis_bored(\"I love you!?!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"\
    I hate you!?!?!?!?!?!?!?!\"); // returns 0\nis_bored(\"I love you!?!?!?!?!?!?!?!?!\"\
    ); // returns 1\nis_bored(\"I hate you!?!?!?!?!?!?!?!?!\"); // returns 0\nis_bored(\"\
    I love you!?!?!?!?\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6j6lm88v.js:36\nis_bored(\"I love you!?!?!?!?\n         ^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === 'I'){\n            boredoms += 1;\n      \
    \  }\n    }\n    return boredoms;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp68zfflux.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp68zfflux.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpex04r501.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpex04r501.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ \"I\"){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\nis_bored(\"I love you!\");\nis_bored(\"I love you!?\");\nis_bored(\"I love\
    \ you!?!\");\nis_bored(\"I love you!?!?!\");\nis_bored(\"I love you!?!?!?!\");\n\
    is_bored(\"I love you!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!?!\");\nis_bored(\"\
    I love you!?!?!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!?!?!?!\");\nis_bored(\"\
    I love you!?!?!?!?!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!\");\n\
    is_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!\"\
    );\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    );\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!?!?!\");\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    );\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!?!?!?!?!\");\nis_bored(\"I love\
    \ you!?!?!?!?!\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph5v0_fjn.js:32\nis_bored(\"I love you!?!?!?!?!\n         ^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpygotd944.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpygotd944.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp9_sb1sur.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9_sb1sur.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var boredom_words = S.split('.');\n    for(var i=0;\
    \ i<boredom_words.length; i++){\n        if(boredom_words[i].indexOf('I') ===\
    \ 0){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpeybdxe5x.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeybdxe5x.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith('I')){\n\
    \            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpacqyvpl1.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpacqyvpl1.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    is_bored(\"I like you!\"); // returns 1\nis_bored(\"I hate you!\"); // returns\
    \ 0\nis_bored(\"I like you very much!\"); // returns 1\nis_bored(\"I like you\
    \ very much!.\"); // returns 1\nis_bored(\"I like you very much!..\"); // returns\
    \ 1\nis_bored(\"I like you very much!...\"); // returns 1\nis_bored(\"I like you\
    \ very much!....\"); // returns 1\nis_bored(\"I like you very much!.....\"); //\
    \ returns 1\nis_bored(\"I like you very much!......\"); // returns 1\nis_bored(\"\
    I like you very much!.......\"); // returns 1\nis_bored(\"I like you very much!........\"\
    ); // returns 1\nis_bored(\"I like you very much!.........\"); // returns 1\n\
    is_bored(\"I like you very much!..........\"); // returns 1\nis_bored(\"I like\
    \ you very much!...........\"); // returns 1\nis_bored(\"I like you very much!............\"\
    ); // returns 1\nis_bored(\"I like you very much!.............\"); // returns\
    \ 1\nis_bored(\"I like you very much!..............\"); // returns 1\nis_bored(\"\
    I like you very much!...............\"); // returns 1\nis_bored(\"I like you very\
    \ much!................\"); // returns 1\nis_bored(\"I like you very much!.................\"\
    ); // returns 1\nis_bored(\"I like you very much!.................\"); // returns\
    \ 1\nis_bored(\"I like you very much!.................\"); // returns 1\nis_bored(\"\
    I like you very much!.................\"); // returns 1\nis_bored(\"I like you\
    \ very much!.................\"); // returns 1\nis_bored(\"I like you very much!.................\"\
    ); // returns 1\nis_bored(\"I like you very much!.................\"); // returns\
    \ 1\nis_bored(\"I like you very \nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3pscvfif.js:40\nis_bored(\"I like you very \n         ^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0]=='I'){\n            boredoms++;\n        }\n    }\n  \
    \  return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpy1xhi992.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy1xhi992.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    is_bored(\"I love you!\") //returns 2\nis_bored(\"I hate you!\") //returns 1\n\
    is_bored(\"I love you?\") //returns 1\nis_bored(\"I hate you?\") //returns 0\n\
    is_bored(\"I love you!?\") //returns 1\nis_bored(\"I hate you!?\") //returns 1\n\
    is_bored(\"I love you!?!\") //returns 1\nis_bored(\"I hate you!?!\") //returns\
    \ 1\nis_bored(\"I love you!?!?\") //returns 1\nis_bored(\"I hate you!?!?\") //returns\
    \ 1\nis_bored(\"I love you!?!?!\") //returns 1\nis_bored(\"I hate you!?!?!\")\
    \ //returns 1\nis_bored(\"I love you!?!?!?\") //returns 1\nis_bored(\"I hate you!?!?!?\"\
    ) //returns 1\nis_bored(\"I love you!?!?!?!\") //returns 1\nis_bored(\"I hate\
    \ you!?!?!?!\") //returns 1\nis_bored(\"I love you!?!?!?!?\") //returns 1\nis_bored(\"\
    I hate you!?!?!?!?\") //returns 1\nis_bored(\"I love you!?!?!?!?!\") //returns\
    \ 1\nis_bored(\"I hate you!?!?!?!?!\") //returns 1\nis_bored(\"I love you!?!?!?!?!?\"\
    ) //returns 1\nis_bored(\"I hate you!?!?!?!?!?\") //returns 1\nis_bored(\"I love\
    \ you!?!?!?!?!?!\") //returns 1\nis_bored(\"I hate you!?!?!?!?!?!\") //returns\
    \ 1\nis_bored(\"I love you!?!?!?!?!?!?\") //\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpqbm1b9jv.js:45:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqbm1b9jv.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I love you!\") // returns 1\nis_bored(\"I hate you!\") // returns\
    \ 0\nis_bored(\"I love you!.\") // returns 1\nis_bored(\"I love you!?\") // returns\
    \ 1\nis_bored(\"I love you!?!\") // returns 1\nis_bored(\"I love you!?!.\") //\
    \ returns 1\nis_bored(\"I love you!?!?\") // returns 1\nis_bored(\"I love you!?!?!\"\
    ) // returns 1\nis_bored(\"I love you!?!?!.\") // returns 1\nis_bored(\"I love\
    \ you!?!?!?\") // returns 1\nis_bored(\"I love you!?!?!?!\") // returns 1\nis_bored(\"\
    I love you!?!?!?!.\") // returns 1\nis_bored(\"I love you!?!?!?!?\") // returns\
    \ 1\nis_bored(\"I love you!?!?!?!?!\") // returns 1\nis_bored(\"I love you!?!?!?!?!.\"\
    ) // returns 1\nis_bored(\"I love you!?!?!?!?!?\") // returns 1\nis_bored(\"I\
    \ love you!?!?!?!?!?!\") // returns 1\nis_bored(\"I love you!?!?!?!?!?!.\") //\
    \ returns 1\nis_bored(\"I love you!?!?!?!?!?!?\") // returns 1\nis_bored(\"I love\
    \ you!?!?!?!?!?!?!\") // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!.\") //\
    \ returns 1\nis_bored(\"I love you!?!?!?!?!?!?!?\") // returns 1\nis_bored(\"\
    I love you!?!?!?!?!?!?\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqftdmljy.js:36\nis_bored(\"I love you!?!?!?!?!?!?\n         ^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var boredom_words = S.split('.');\n    boredom_words.forEach(function(word){\n\
    \        if(word.startsWith(\"I\")){\n            boredoms++;\n        }\n   \
    \ });\n    return boredoms;\n}\nis_bored(\"I love you!\"); // returns 1\nis_bored(\"\
    I hate you!\"); // returns 0\nis_bored(\"I love you.\"); // returns 1\nis_bored(\"\
    I love you!.\"); // returns 1\nis_bored(\"I love you!?\"); // returns 1\nis_bored(\"\
    I love you!?!\"); // returns 1\nis_bored(\"I love you!?!.\"); // returns 1\nis_bored(\"\
    I love you!?!?\"); // returns 1\nis_bored(\"I love you!?!?!\"); // returns 1\n\
    is_bored(\"I love you!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?\");\
    \ // returns 1\nis_bored(\"I love you!?!?!?!\"); // returns 1\nis_bored(\"I love\
    \ you!?!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?!?\"); // returns 1\n\
    is_bored(\"I love you!?!?!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!?!?!.\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!?\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!.\");\
    \ // returns 1\nis_bored(\"I love you!?!?!?!?!?!?\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!.\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!?\"); // \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpynvciuyk.js:44:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpynvciuyk.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp77zdxse9.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp77zdxse9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0]==='I'){\n            boredoms++;\n        }\n    }\n \
    \   return boredoms;\n}\nis_bored(\"I love you!\"); // returns 1\nis_bored(\"\
    I hate you!\"); // returns 0\nis_bored(\"I love you!.\"); // returns 1\nis_bored(\"\
    I love you!?\"); // returns 1\nis_bored(\"I love you!!\"); // returns 1\nis_bored(\"\
    I love you!?!\"); // returns 1\nis_bored(\"I love you!?!.\"); // returns 1\nis_bored(\"\
    I love you!?!?\"); // returns 1\nis_bored(\"I love you!?!?!\"); // returns 1\n\
    is_bored(\"I love you!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?\");\
    \ // returns 1\nis_bored(\"I love you!?!?!?!\"); // returns 1\nis_bored(\"I love\
    \ you!?!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?!?\"); // returns 1\n\
    is_bored(\"I love you!?!?!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!?!?!.\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!?\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!.\");\
    \ // returns 1\nis_bored(\"I love you!?!?!?!?!?!?\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!.\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!?\");\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpkq2854n3.js:44:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkq2854n3.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpesr0d3o9.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpesr0d3o9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split(\" \");\n    var boredom_count = 0;\n    for(var i=0;\
    \ i<boredoms.length; i++){\n        if(boredoms[i][0]==\"I\"){\n            boredom_count++;\n\
    \        }\n    }\n    return boredom_count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpua0omzwt.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpua0omzwt.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === 'I'){\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;\n}\nis_bored(\"I like turtles.\");\nis_bored(\"I\
    \ like turtles. I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\"\
    );\nis_bored(\"I like turtles. I hate turtles.\");\nis_bored(\"I like turtles.\
    \ I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\");\nis_bored(\"\
    I like turtles. I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\"\
    );\nis_bored(\"I like turtles. I hate turtles.\");\nis_bored(\"I like turtles.\
    \ I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\");\nis_bored(\"\
    I like turtles. I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\"\
    );\nis_bored(\"I like turtles. I hate turtles.\");\nis_bored(\"I like turtles.\
    \ I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\");\nis_bored(\"\
    I like turtles. I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\"\
    );\nis_bored(\"I like turtles. I hate turtles.\");\nis_bored(\"I like turtles.\
    \ I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\");\nis_bored(\"\
    I like turtles. I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\"\
    );\nis_bored(\"I like turtles. I hate turtles.\");\nis_bored(\"I like turtles.\
    \ I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\");\nis_bored(\"\
    I like turtles. I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\"\
    );\nis_bored(\"I like turtles. I hate turtles.\");\nis_bored(\"I like turtles.\
    \ I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\");\nis_bo\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpyacbi9wg.js:46\nis_bo\n^\n\nReferenceError: is_bo is not defined\n\
    \    at Object.<anonymous> (/tmp/tmpyacbi9wg.js:46:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpj8m14f3q.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj8m14f3q.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var count = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i].indexOf('I') === 0){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpawo4t6yk.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpawo4t6yk.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if\
    \ (word.startsWith(\"I\")){\n            boredoms += 1;\n        }\n    });\n\
    \    return boredoms;\n}\nis_bored(\"I love you!\"); // returns 1\nis_bored(\"\
    I hate you!\"); // returns 0\nis_bored(\"I love you? I hate you!\"); // returns\
    \ 2\nis_bored(\"I love you! I hate you!\"); // returns 2\nis_bored(\"I love you!\
    \ I hate you! I hate you!\"); // returns 3\nis_bored(\"I love you! I hate you!\
    \ I hate you! I hate you!\"); // returns 3\nis_bored(\"I love you! I hate you!\
    \ I hate you! I hate you! I hate you!\"); // returns 3\nis_bored(\"I love you!\
    \ I hate you! I hate you! I hate you! I hate you! I hate you!\"); // returns 3\n\
    is_bored(\"I love you! I hate you! I hate you! I hate you! I hate you! I hate\
    \ you! I hate you!\"); // returns 3\nis_bored(\"I love you! I hate you! I hate\
    \ you! I hate you! I hate you! I hate you! I hate you! I hate you!\"); // returns\
    \ 3\nis_bored(\"I love you! I hate you! I hate you! I hate you! I hate you! I\
    \ hate you! I hate you! I hate you! I hate you!\"); // returns 3\nis_bored(\"\
    I love you! I hate you! I hate you! I hate you! I hate you! I hate you! I hate\
    \ you! I hate you! I hate you! I hate you!\"); // returns 3\nis_bored(\"I love\
    \ you! I hate you! I hate you! I hate you! I hate you! I hate you! I hate you!\
    \ I hate you! I hate you! I hate you! I hate you!\"); // returns 3\nis_bored(\"\
    I lo\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpr587ezo5.js:27\nis_bored(\"I lo\n         ^^^^^\n\nSyntaxError:\
    \ Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==\"\
    I\"){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n</cell>\n\
    <cell>\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp04z275ji.js:14\n</cell>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==\"\
    I\"){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nis_bored(\"\
    I love you!\"); // returns 2\nis_bored(\"I hate you!\"); // returns 1\nis_bored(\"\
    I love you!.\"); // returns 1\nis_bored(\"I love you!..\"); // returns 1\nis_bored(\"\
    I love you!?\"); // returns 1\nis_bored(\"I love you!!\"); // returns 0\nis_bored(\"\
    I love you!?!\"); // returns 0\nis_bored(\"I love you!?!?!\"); // returns 0\n\
    is_bored(\"I love you!?!?!?!\"); // returns 0\nis_bored(\"I love you!?!?!?!?!\"\
    ); // returns 0\nis_bored(\"I love you!?!?!?!?!?!\"); // returns 0\nis_bored(\"\
    I love you!?!?!?!?!?!?!\"); // returns 0\nis_bored(\"I love you!?!?!?!?!?!?!?!\"\
    ); // returns 0\nis_bored(\"I love you!?!?!?!?!?!?!?!?!\"); // returns 0\nis_bored(\"\
    I love you!?!?!?!?!?!?!?!?!?!\"); // returns 0\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!\"\
    ); // returns 0\nis_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!?!\"); // returns 0\n\
    is_bored(\"I love you!?!?!?!?!?!?!?!?!?!?!?!?!\"); // returns 0\nis_bored(\"I\
    \ love you!?!?!?!?!?!?!?!?!?!?!?!?!?!\"); // returns 0\nis_bored(\"I love you!?!?!?!?!?\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp841b7i4k.js:33\nis_bored(\"I love you!?!?!?!?!?\n         ^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var boredom_count = 0;\n    for(var i=0;\
    \ i<boredoms.length; i++){\n        if(boredoms[i].indexOf('I') === 0){\n    \
    \        boredom_count++;\n        }\n    }\n    return boredom_count;\n}\nis_bored(\"\
    I like you!\"); // returns 1\nis_bored(\"I like you.\"); // returns 1\nis_bored(\"\
    I like you!.\"); // returns 1\nis_bored(\"I like you!?\"); // returns 1\nis_bored(\"\
    I like you!?!\"); // returns 1\nis_bored(\"I like you!?!.\"); // returns 1\nis_bored(\"\
    I like you!?!?\"); // returns 1\nis_bored(\"I like you!?!?!\"); // returns 1\n\
    is_bored(\"I like you!?!?!.\"); // returns 1\nis_bored(\"I like you!?!?!?\");\
    \ // returns 1\nis_bored(\"I like you!?!?!?!\"); // returns 1\nis_bored(\"I like\
    \ you!?!?!?!.\"); // returns 1\nis_bored(\"I like you!?!?!?!?\"); // returns 1\n\
    is_bored(\"I like you!?!?!?!?!\"); // returns 1\nis_bored(\"I like you!?!?!?!?!.\"\
    ); // returns 1\nis_bored(\"I like you!?!?!?!?!?\"); // returns 1\nis_bored(\"\
    I like you!?!?!?!?!?!\"); // returns 1\nis_bored(\"I like you!?!?!?!?!?!.\");\
    \ // returns 1\nis_bored(\"I like you!?!?!?!?!?!?\"); // returns 1\nis_bored(\"\
    I like you!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I like you!?!?!?!?!?!?!.\"\
    ); // returns 1\nis_bored(\"I like you!?!?!?!?!?!?!?\"); // returns 1\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!\"); // returns 1\nis_bored\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbyzn4zog.js:45:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbyzn4zog.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbn234ws9.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbn234ws9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\nis_bored(\"I love you!\") //returns 2\nis_bored(\"I hate you!\") //returns\
    \ 1\nis_bored(\"I love you?\") //returns 1\nis_bored(\"I hate you?\") //returns\
    \ 0\nis_bored(\"I love you!?\") //returns 1\nis_bored(\"I hate you!?\") //returns\
    \ 0\nis_bored(\"I love you!.\") //returns 1\nis_bored(\"I hate you!.\") //returns\
    \ 0\nis_bored(\"I love you!..\") //returns 1\nis_bored(\"I hate you!..\") //returns\
    \ 0\nis_bored(\"I love you!...\") //returns 1\nis_bored(\"I hate you!...\") //returns\
    \ 0\nis_bored(\"I love you!....\") //returns 1\nis_bored(\"I hate you!....\")\
    \ //returns 0\nis_bored(\"I love you!.....\") //returns 1\nis_bored(\"I hate you!.....\"\
    ) //returns 0\nis_bored(\"I love you!......\") //returns 1\nis_bored(\"I hate\
    \ you!......\") //returns 0\nis_bored(\"I love you!.......\") //returns 1\nis_bored(\"\
    I hate you!.......\") //returns 0\nis_bored(\"I love you!........\") //returns\
    \ 1\nis_bored(\"I hate you!........\") //returns 0\nis_bored(\"I love you!.........\"\
    ) //returns 1\nis_bored(\"I hate you!.........\") //returns 0\nis_bored(\"I love\
    \ you!..........\") //returns 1\nis_bored(\"I hate you!..........\") //returns\
    \ 0\nis_bored(\"I love you!...........\") //returns 1\nis_bored(\"I hate you!...........\"\
    ) //returns 0\nis_bored(\"I love you!............\") //returns 1\nis_bored(\"\
    I hate you!............\") //returns 0\nis_bored(\"I love you!.............\"\
    ) \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8u84mx35.js:51:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8u84mx35.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp60dqtnl7.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp60dqtnl7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\nis_bored(\"I like Ice Cream.\"); // 2\nis_bored(\"I like Ice Cream?\"); //\
    \ 1\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I like Ice Cream.\"); //\
    \ 2\nis_bored(\"I like Ice Cream!\"); // 1\nis_bored(\"I \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppxx3l757.js:45\nis_bored(\"I \n         ^^^\n\nSyntaxError: Invalid\
    \ or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I love you!\") //returns 1\nis_bored(\"I hate you!\") //returns\
    \ 0\nis_bored(\"I love you? I hate you!\") //returns 2\nis_bored(\"I love you!\
    \ I hate you!\") //returns 2\nis_bored(\"I love you! I hate you!.\") //returns\
    \ 2\nis_bored(\"I love you! I hate you!? I hate you!\") //returns 3\nis_bored(\"\
    I love you! I hate you!? I hate you!.\") //returns 3\nis_bored(\"I love you! I\
    \ hate you!? I hate you!? I hate you!\") //returns 4\nis_bored(\"I love you! I\
    \ hate you!? I hate you!? I hate you!.\") //returns 4\nis_bored(\"I love you!\
    \ I hate you!? I hate you!? I hate you!? I hate you!\") //returns 5\nis_bored(\"\
    I love you! I hate you!? I hate you!? I hate you!? I hate you!? I hate you!\"\
    ) //returns 5\nis_bored(\"I love you! I hate you!? I hate you!? I hate you!? I\
    \ hate you!? I hate you!? I hate you!\") //returns 5\nis_bored(\"I love you! I\
    \ hate you!? I hate you!? I hate you!? I hate you!? I hate you!? I hate you!?\
    \ I hate you!\") //returns 5\nis_bored(\"I love you! I hate you!? I hate you!?\
    \ I hate you!? I hate you!? I hate you!? I hate you!? I hate you!? I hate you!\"\
    ) //returns 5\nis_bored(\"I love you! I hate you!? I hate you!? I h\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkl_qci0f.js:28\nis_bored(\"I love you! I hate you!? I hate you!?\
    \ I h\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid\
    \ or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \  var boredoms = 0;\n  S.split('.').forEach(function(word){\n    if (word.startsWith('I'))\n\
    \      boredoms++;\n  });\n  return boredoms;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpozporhpa.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpozporhpa.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp9t_cegcc.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9t_cegcc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var boredom_words = S.split('.');\n    for(var i=0;\
    \ i<boredom_words.length; i++){\n        if(boredom_words[i][0] === 'I'){\n  \
    \          boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpff3vwyap.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpff3vwyap.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    S = S.toLowerCase();\n    var boredoms = ['i', 'you', 'he', 'she', 'it',\
    \ 'they', 'them', 'their', 'him', 'her', 'its', 'our', 'ours', 'ourselves', 'you',\
    \ 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she',\
    \ 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpwjk1uolh.js:7\n    var boredoms = ['i', 'you', 'he', 'she', 'it',\
    \ 'they', 'them', 'their', 'him', 'her', 'its', 'our', 'ours', 'ourselves', 'you',\
    \ 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she',\
    \ 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves',\
    \ 'it', 'its', 'itself', 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself',\
    \ 'they', 'them', 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them',\
    \ 'their', 'themselves', 'it', 'its', 'itself', 'they', 'them', 'their', 'th"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ \"I\"){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    is_bored(\"I love you!\"); // returns 1\nis_bored(\"I hate you!\"); // returns\
    \ 0\nis_bored(\"I love you!.\"); // returns 1\nis_bored(\"I love you!?\"); //\
    \ returns 1\nis_bored(\"I love you!?!\"); // returns 1\nis_bored(\"I love you!?!.\"\
    ); // returns 1\nis_bored(\"I love you!?!?\"); // returns 1\nis_bored(\"I love\
    \ you!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!.\"); // returns 1\nis_bored(\"\
    I love you!?!?!?\"); // returns 1\nis_bored(\"I love you!?!?!?!\"); // returns\
    \ 1\nis_bored(\"I love you!?!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?!?\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?\"); //\
    \ returns 1\nis_bored(\"I love you!?!?!?!?!?!\"); // returns 1\nis_bored(\"I love\
    \ you!?!?!?!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?\"); // returns\
    \ 1\nis_bored(\"I love you!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!.\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!?\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!?!?!?\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdwdup5n1.js:36\nis_bored(\"I love you!?!?!?!?!?!?!?\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    is_bored(\"I like Ice Cream.\"); // returns 2\nis_bored(\"I like Ice Cream. Ice\
    \ Cream.\"); // returns 2\nis_bored(\"I like Ice Cream. Ice Cream? Ice Cream!\"\
    ); // returns 3\nis_bored(\"I like Ice Cream. Ice Cream? Ice Cream! Ice Cream!\"\
    ); // returns 3\nis_bored(\"I like Ice Cream. Ice Cream? Ice Cream! Ice Cream!\
    \ Ice Cream!\"); // returns 4\nis_bored(\"I like Ice Cream. Ice Cream? Ice Cream!\
    \ Ice Cream! Ice Cream! Ice Cream!\"); // returns 4\nis_bored(\"I like Ice Cream.\
    \ Ice Cream? Ice Cream! Ice Cream! Ice Cream! Ice Cream! Ice Cream!\"); // returns\
    \ 5\nis_bored(\"I like Ice Cream. Ice Cream? Ice Cream! Ice Cream! Ice Cream!\
    \ Ice Cream! Ice Cream! Ice Cream!\"); // returns 5\nis_bored(\"I like Ice Cream.\
    \ Ice Cream? Ice Cream! Ice Cream! Ice Cream! Ice Cream! Ice Cream! Ice Cream!\
    \ Ice Cream!\"); // returns 5\nis_bored(\"I like Ice Cream. Ice Cream? Ice Cream!\
    \ Ice Cream! Ice Cream! Ice Cream! Ice Cream! Ice Cream! Ice Cream! Ice Cream!\"\
    ); // returns 5\nis_bored(\"I like Ice Cream. Ice Cream? Ice Cream! Ice Cream!\
    \ Ice Cream! Ice Cream! Ice Cream! Ice Cream! Ice Cream! Ice Cream! Ice Cream!\"\
    ); // returns 5\nis_bored(\"I like Ice Cream. Ice Cream? I\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpr0fl7duz.js:25\nis_bored(\"I like Ice Cream. Ice Cream? I\n   \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpqkn8z_iq.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqkn8z_iq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp0ktviu4f.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0ktviu4f.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I love you!\") //returns 2\nis_bored(\"I hate you!\") //returns\
    \ 1\nis_bored(\"I love you!.\") //returns 2\nis_bored(\"I love you!?\") //returns\
    \ 1\nis_bored(\"I love you!?!\") //returns 1\nis_bored(\"I love you!?!.\") //returns\
    \ 1\nis_bored(\"I love you!?!?\") //returns 1\nis_bored(\"I love you!?!?!\") //returns\
    \ 1\nis_bored(\"I love you!?!?!.\") //returns 1\nis_bored(\"I love you!?!?!?\"\
    ) //returns 1\nis_bored(\"I love you!?!?!?!\") //returns 1\nis_bored(\"I love\
    \ you!?!?!?!.\") //returns 1\nis_bored(\"I love you!?!?!?!?\") //returns 1\nis_bored(\"\
    I love you!?!?!?!?!\") //returns 1\nis_bored(\"I love you!?!?!?!?!.\") //returns\
    \ 1\nis_bored(\"I love you!?!?!?!?!?\") //returns 1\nis_bored(\"I love you!?!?!?!?!?!\"\
    ) //returns 1\nis_bored(\"I love you!?!?!?!?!?!.\") //returns 1\nis_bored(\"I\
    \ love you!?!?!?!?!?!?\") //returns 1\nis_bored(\"I love you!?!?!?!?!?!?!\") //returns\
    \ 1\nis_bored(\"I love you!?!?!?!?!?!?!.\") //returns 1\nis_bored(\"I love you!?!?!?!?!?!?!?\"\
    ) //returns 1\nis_bored(\"I love you!?!?!?!?!?!?\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpeo1fkfo4.js:36\nis_bored(\"I love you!?!?!?!?!?!?\n         ^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpofql8he1.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpofql8he1.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var count = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i].indexOf('I') === 0){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdztw8hw4.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdztw8hw4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvtq6lk43.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvtq6lk43.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    S = S.toLowerCase();\n    var boredoms = ['i', 'you', 'he', 'she', 'it',\
    \ 'they', 'them', 'their', 'him', 'her', 'its', 'theirs', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'our', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'our', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', '\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6qstffob.js:7\n    var boredoms = ['i', 'you', 'he', 'she', 'it',\
    \ 'they', 'them', 'their', 'him', 'her', 'its', 'theirs', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'our', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'our', 'ours', 'ourselves',\
    \ 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself',\
    \ 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'themselves', 'our', 'ours', 'ourselves', 'you', 'your', 'yours',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves',\
    \ 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves',\
    \ 'he', 'him', 'his', 'himself', '\n                                         \
    \                                                              "
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    // Write your code here\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpuv1dcw0m.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpuv1dcw0m.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==\"\
    I\"){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmptcuvi2zb.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptcuvi2zb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I like you!\"); // returns 1\nis_bored(\"I like you?\"); // returns\
    \ 1\nis_bored(\"I like you!?\"); // returns 2\nis_bored(\"I like you!?!\"); //\
    \ returns 3\nis_bored(\"I like you!?!?!\"); // returns 4\nis_bored(\"I like you!?!?!?!\"\
    ); // returns 5\nis_bored(\"I like you!?!?!?!?!?!\"); // returns 6\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!\"); // returns 7\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1e40vesp.js:22\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?\n\
    \         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.match(/I/g);\n    return boredoms.length;\n}\nis_bored(\"\
    I like you!\");\nis_bored(\"I like you? I love you!\");\nis_bored(\"I like you!\
    \ I love you!\");\nis_bored(\"I like you! I love you? I hate you!\");\nis_bored(\"\
    I like you! I love you? I hate you!\");\nis_bored(\"I like you! I love you? I\
    \ hate you!\");\nis_bored(\"I like you! I love you? I hate you!\");\nis_bored(\"\
    I like you! I love you? I hate you!\");\nis_bored(\"I like you! I love you? I\
    \ hate you!\");\nis_bored(\"I like you! I love you? I hate you!\");\nis_bored(\"\
    I like you! I love you? I hate you!\");\nis_bored(\"I like you! I love you? I\
    \ hate you!\");\nis_bored(\"I like you! I love you? I hate you!\");\nis_bored(\"\
    I like you! I love you? I hate you!\");\nis_bored(\"I like you! I love you? I\
    \ hate you!\");\nis_bored(\"I like you! I love you? I hate you!\");\nis_bored(\"\
    I like you! I love you? I hate you!\");\nis_bored(\"I like you! I love you? I\
    \ hate you!\");\nis_bored(\"I like you! I love you? I hate you!\");\nis_bored(\"\
    I like you! I love you? I hate you!\");\nis_bored(\"I like you! I love you? I\
    \ hate you!\");\nis_bored(\"I like you! I love you? I hate you!\");\nis_bored(\"\
    I like you! I love you? I hate you!\");\nis_bored(\"I like you! I love you? I\
    \ hate you!\");\nis_bored(\"I like you! I love you? I hate you!\");\nis_bored(\"\
    I like you! I love you? \nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6ozqrdhk.js:34\nis_bored(\"I like you! I love you? \n         ^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === 'I'){\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4p6r09hy.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4p6r09hy.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpds608748.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpds608748.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0]=='I'){\n            boredoms++;\n        }\n    }\n  \
    \  return boredoms;\n}\nis_bored(\"I love you!\") //returns 1\nis_bored(\"I hate\
    \ you!\") //returns 0\nis_bored(\"I love you?\") //returns 1\nis_bored(\"I hate\
    \ you?\") //returns 0\nis_bored(\"I love you!?\") //returns 1\nis_bored(\"I hate\
    \ you!?\") //returns 0\nis_bored(\"I love you!.\") //returns 1\nis_bored(\"I hate\
    \ you!.\") //returns 0\nis_bored(\"I love you!?!\") //returns 1\nis_bored(\"I\
    \ hate you!?!\") //returns 0\nis_bored(\"I love you!.!\") //returns 1\nis_bored(\"\
    I hate you!.!\") //returns 0\nis_bored(\"I love you!?!.\") //returns 1\nis_bored(\"\
    I hate you!?!.\") //returns 0\nis_bored(\"I love you!.!?\") //returns 1\nis_bored(\"\
    I hate you!.!?\") //returns 0\nis_bored(\"I love you!?!.!\") //returns 1\nis_bored(\"\
    I hate you!?!.!\") //returns 0\nis_bored(\"I love you!.!?!\") //returns 1\nis_bored(\"\
    I hate you!.!?!\") //returns 0\nis_bored(\"I love you!.!?!.\") //returns 1\nis_bored(\"\
    I hate you!.!?!.\") //returns 0\nis_bored(\"I love you!?!.!?\") //returns 1\n\
    is_bored(\"I hate you!?!.!?\") //returns 0\nis_bored(\"I love you!.!?!.!?\") //returns\
    \ 1\nis_bored(\"I hate you!.!?!.!?\") //returns 0\nis_bored(\"I love you!?!.!?!.\"\
    ) //returns 1\nis_\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn05vh3zk.js:42\nis_\n^\n\nReferenceError: is_ is not defined\n\
    \    at Object.<anonymous> (/tmp/tmpn05vh3zk.js:42:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === 'I'){\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmphsdwsxv_.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphsdwsxv_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==\"\
    I\"){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1id1z8f.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1id1z8f.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var bored = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i].indexOf('I') === 0){\n            bored++;\n \
    \       }\n    }\n    return bored;\n}\nis_bored(\"I like you!\") //=> 1\nis_bored(\"\
    I like you?\") //=> 1\nis_bored(\"I like I!\") //=> 0\nis_bored(\"I like I?\"\
    ) //=> 0\nis_bored(\"I like I.\") //=> 0\nis_bored(\"I like I!.\") //=> 0\nis_bored(\"\
    I like I!?\") //=> 0\nis_bored(\"I like I!?!\") //=> 0\nis_bored(\"I like I!?!?\"\
    ) //=> 0\nis_bored(\"I like I!?!?!?\") //=> 0\nis_bored(\"I like I!?!?!?!\") //=>\
    \ 0\nis_bored(\"I like I!?!?!?!?!\") //=> 0\nis_bored(\"I like I!?!?!?!?!?\")\
    \ //=> 0\nis_bored(\"I like I!?!?!?!?!?!\") //=> 0\nis_bored(\"I like I!?!?!?!?!?!?\"\
    ) //=> 0\nis_bored(\"I like I!?!?!?!?!?!?!\") //=> 0\nis_bored(\"I like I!?!?!?!?!?!?!?\"\
    ) //=> 0\nis_bored(\"I like I!?!?!?!?!?!?!?!\") //=> 0\nis_bored(\"I like I!?!?!?!?!?!?!?!?\"\
    ) //=> 0\nis_bored(\"I like I!?!?!?!?!?!?!?!?!\") //=> 0\nis_bored(\"I like I!?!?!?!?!?!?!?!?!?\"\
    ) //=> 0\nis_bored(\"I like I!?!?!?!?!?!?!?!?!?!\") //=> 0\nis_bored(\"I like\
    \ I!?!?!?!\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n \
    \ assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpq5onhl67.js:37\nis_bored(\"I like I!?!?!?!\n         ^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==\"\
    I\"){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp42iag8ca.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp42iag8ca.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ \"I\"){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpcoy_s810.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcoy_s810.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    // Return the number of boredoms in S.\n    // S contains only lowercase\
    \ letters, '.', '?' and '!'.\n    // The function should return 0 if S is null\
    \ or empty.\n    // The function should return 1 if S contains only boredoms.\n\
    \    // The function should return 2 if S contains only non-boredoms.\n    //\
    \ The function should return 3 if S contains both boredoms and non-boredoms.\n\
    \    // The function should return 4 if S contains neither boredoms nor non-boredoms.\n\
    \    // The function should return 5 if S contains only a boredom (no period).\n\
    \    // The function should return 6 if S contains only a non-boredom (no period).\n\
    \    // The function should return 7 if S contains both a boredom and a non-boredom\
    \ (no period).\n    // The function should return 8 if S contains neither a boredom\
    \ nor a non-boredom (no period).\n    // The function should return 9 if S contains\
    \ a boredom and a non-boredom (no period).\n    // The function should return\
    \ 10 if S contains a boredom and a boredom (no period).\n    // The function should\
    \ return 11 if S contains a non-boredom and a boredom (no period).\n    // The\
    \ function should return 12 if S contains a non-boredom and a non-boredom (no\
    \ period).\n    // The function should return 13 if S contains both a boredom\
    \ and a non-boredom (no period).\n    // The function should return 14 if S contains\
    \ neither a boredom nor a non-boredom (no period).\n    // The function should\
    \ return 15 if S contains a boredom and a boredom (no period).\n    // The function\
    \ should return 16 if S contains a boredom and a non-boredom (no period).\n  \
    \  // The function should return 17 if S contains a non-boredom and a boredom\
    \ (no period).\n    // The function should return 18 if S contains a non-boredom\
    \ and a non-boredom (no period).\n    // The function should return 19 if S contains\
    \ both a boredom and a non-boredom (no period).\n    // The function should return\
    \ 20 if S contains neither a boredom nor a non-boredom (no period).\n    // The\
    \ function should return 21 if S contains a boredom and a boredom (no period).\n\
    \    // The function should return 22 if S contains a boredom and a non-boredom\
    \ (no period).\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprw4vumah.js:45\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var boredom_count = 0;\n    for(var i=0;\
    \ i<boredoms.length; i++){\n        if(boredoms[i].indexOf('I') === 0){\n    \
    \        boredom_count++;\n        }\n    }\n    return boredom_count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ma3s969.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ma3s969.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==='I'){\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\nis_bored(\"\
    I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"\
    I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"\
    I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"\
    I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"\
    I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"\
    I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"\
    I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"\
    I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"\
    I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"\
    I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"\
    I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"\
    I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"\
    I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"\
    I hate you!\");\nis_bored(\"I love you!\");\nis_bored(\"I hate you!\");\nis_bored(\"\
    I love \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n \
    \ assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppvbunsay.js:56\nis_bored(\"I love \n         ^^^^^^^^\n\nSyntaxError:\
    \ Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp58mjdgwn.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp58mjdgwn.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_lyfuh6d.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_lyfuh6d.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpel4lwmmt.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpel4lwmmt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    // Return true if S starts with the string \"I\".\n    // Return false otherwise.\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpu5_sqtu6.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpu5_sqtu6.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpi807t1gl.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi807t1gl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === 'I'){\n            boredoms += 1;\n      \
    \  }\n    }\n    return boredoms;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmprdoopcha.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprdoopcha.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === 'I'){\n            boredoms += 1;\n      \
    \  }\n    }\n    return boredoms;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpjlr63q8v.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjlr63q8v.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8ruldntb.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8ruldntb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var count = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i].indexOf('I') != -1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\nis_bored(\"I like you!\") //=> 1\nis_bored(\"\
    I like you?\") //=> 1\nis_bored(\"I like you!?!\") //=> 2\nis_bored(\"I like I!\"\
    ) //=> 1\nis_bored(\"I like I!?!\") //=> 1\nis_bored(\"I like I!?!?!\") //=> 2\n\
    is_bored(\"I like I!?!?!?!\") //=> 3\nis_bored(\"I like I!?!?!?!?!\") //=> 4\n\
    is_bored(\"I like I!?!?!?!?!?!\") //=> 5\nis_bored(\"I like I!?!?!?!?!?!?!\")\
    \ //=> 6\nis_bored(\"I like I!?!?!?!?!?!?!?!\") //=> 7\nis_bored(\"I like I!?!?!?!?!?!?!?!?!\"\
    ) //=> 8\nis_bored(\"I like I!?!?!?!?!?!?!?!?!?!\") //=> 9\nis_bored(\"I like\
    \ I!?!?!?!?!?!?!?!?!?!?!\") //=> 10\nis_bored(\"I like I!?!?!?!?!?!?!?!?!?!?!\"\
    ) //=> 11\nis_bored(\"I like I!?!?!?!?!?!?!?!?!?!?!?!\") //=> 12\nis_bored(\"\
    I like I!?!?!?!?!?!?!?!?!?!?!?!\") //=> 13\nis_bored(\"I like I!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    ) //=> 14\nis_bored(\"I like I!?!?!?!?!?!?!?!?!?!?!?!\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpx01s2ny1.js:33\nis_bored(\"I like I!?!?!?!?!?!?!?!?!?!?!?!\n  \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid or unexpected\
    \ token\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp0e7cr45o.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0e7cr45o.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==='.'){\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\nis_bored(\"\
    I like you!\"); // returns 1\nis_bored(\"I like you?\"); // returns 1\nis_bored(\"\
    I like you!?\"); // returns 2\nis_bored(\"I like you!?!\"); // returns 2\nis_bored(\"\
    I like you!?!?!\"); // returns 3\nis_bored(\"I like you!?!?!?!\"); // returns\
    \ 3\nis_bored(\"I like you!?!?!?!?!?!\"); // returns 3\nis_bored(\"I like you!?!?!?!?!?!?!?!\"\
    ); // returns 3\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!\"); // returns 3\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!?!?!?!\"); // returns 3\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    ); // returns 3\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!\"); // returns\
    \ 3\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!?!\"); // returns 3\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!\"); // returns 3\nis_bored(\"I like\
    \ you!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!\"); // returns 3\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    ); // returns 3\nis_bored(\"I like you!?!?!?!?\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjue5nors.js:30\nis_bored(\"I like you!?!?!?!?\n         ^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpxxqs2vbj.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxxqs2vbj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==\"\
    I\"){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpac7_w8k4.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpac7_w8k4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    // +++your code here+++\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpiz1f_d9l.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpiz1f_d9l.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp31hs6bcs.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp31hs6bcs.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp34uvqul4.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp34uvqul4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0] === 'I'){\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpcyk36pg4.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcyk36pg4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsxru1417.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsxru1417.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split(\" \");\n    var boredom_count = 0;\n    for(var i=0;\
    \ i<boredoms.length; i++){\n        if(boredoms[i].charAt(0) == \"I\"){\n    \
    \        boredom_count++;\n        }\n    }\n    return boredom_count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpoov9ka0p.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoov9ka0p.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var boredom_count = 0;\n    for(var i=0;\
    \ i<boredoms.length; i++){\n        if(boredoms[i].indexOf('I') === 0){\n    \
    \        boredom_count++;\n        }\n    }\n    return boredom_count;\n}\nis_bored('I\
    \ love you!'); // returns 1\nis_bored('I hate you!'); // returns 0\nis_bored('I\
    \ love you and you!'); // returns 2\nis_bored('I love you and I hate you!'); //\
    \ returns 1\nis_bored('I love you and I love you!'); // returns 2\nis_bored('I\
    \ love you and I hate you and I hate you!'); // returns 3\nis_bored('I love you\
    \ and I hate you and I love you!'); // returns 3\nis_bored('I love you and I love\
    \ you and I hate you!'); // returns 3\nis_bored('I love you and I love you and\
    \ I love you!'); // returns 3\nis_bored('I love you and I love you and I hate\
    \ you and I hate you!'); // returns 3\nis_bored('I love you and I love you and\
    \ I love you and I hate you!'); // returns 3\nis_bored('I love you and I love\
    \ you and I love you and I love you!'); // returns 3\nis_bored('I love you and\
    \ I love you and I love you and I hate you and I hate you!'); // returns 3\nis_bored('I\
    \ love you and I love you and I love you and I love you and I hate you!'); //\
    \ returns 3\nis_bored('I love you and I love you and I love you and I love you\
    \ and I love you!'); // returns 3\nis_bored('I love you and I love you and I love\
    \ you and I love you and I hate you and I hate you!'); // returns 3\nis_bored('I\
    \ love you and I love you and I love you and I love you and I love you and I hate\
    \ you!'); // returns 3\nis_bored('I love you and I \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9ngd111k.js:32\nis_bored('I love you and I \n         ^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmppgkgmdf6.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppgkgmdf6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0] === 'I'){\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\nis_bored(\"I like you!\"); // returns 2\nis_bored(\"\
    I like you?\"); // returns 1\nis_bored(\"I like you!?\"); // returns 2\nis_bored(\"\
    I like you!?!\"); // returns 3\nis_bored(\"I like you!?!?!\"); // returns 4\n\
    is_bored(\"I like you!?!?!?!\"); // returns 5\nis_bored(\"I like you!?!?!?!?!?!\"\
    ); // returns 6\nis_bored(\"I like you!?!?!?!?!?!?!?!\"); // returns 7\nis_bored(\"\
    I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpousny60r.js:23\nis_bored(\"I like you!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?\n\
    \         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ \"I\"){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\nis_bored(\"I love you!\"); // returns 2\nis_bored(\"I hate you!\"); // returns\
    \ 1\nis_bored(\"I love you!.\"); // returns 2\nis_bored(\"I love you!?\"); //\
    \ returns 1\nis_bored(\"I love you!?!\"); // returns 1\nis_bored(\"I love you!?!.\"\
    ); // returns 1\nis_bored(\"I love you!?!?\"); // returns 1\nis_bored(\"I love\
    \ you!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!.\"); // returns 1\nis_bored(\"\
    I love you!?!?!?\"); // returns 1\nis_bored(\"I love you!?!?!?!\"); // returns\
    \ 1\nis_bored(\"I love you!?!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?!?\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?\"); //\
    \ returns 1\nis_bored(\"I love you!?!?!?!?!?!\"); // returns 1\nis_bored(\"I love\
    \ you!?!?!?!?!?!.\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?\"); // returns\
    \ 1\nis_bored(\"I love you!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!.\"\
    ); // returns 1\nis_bored(\"I love you!?!?!?!?!?!?!?\"); // returns 1\nis_bored(\"\
    I love you!?!?!?!?!?!?!?\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptkes30md.js:36\nis_bored(\"I love you!?!?!?!?!?!?!?\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I like you!\") //=> 1\nis_bored(\"I like you?\") //=> 1\nis_bored(\"\
    I like you!?\") //=> 2\nis_bored(\"I like I!\") //=> 1\nis_bored(\"I like I!?\"\
    ) //=> 1\nis_bored(\"I like I?!\") //=> 1\nis_bored(\"I like I?!?\") //=> 1\n\
    is_bored(\"I like I?!?!\") //=> 1\nis_bored(\"I like I?!?!?\") //=> 1\nis_bored(\"\
    I like I?!?!?!\") //=> 1\nis_bored(\"I like I?!?!?!?\") //=> 1\nis_bored(\"I like\
    \ I?!?!?!?!\") //=> 1\nis_bored(\"I like I?!?!?!?!?\") //=> 1\nis_bored(\"I like\
    \ I?!?!?!?!?!\") //=> 1\nis_bored(\"I like I?!?!?!?!?!?\") //=> 1\nis_bored(\"\
    I like I?!?!?!?!?!?!\") //=> 1\nis_bored(\"I like I?!?!?!?!?!?!?\") //=> 1\nis_bored(\"\
    I like I?!?!?!?!?!?!?!\") //=> 1\nis_bored(\"I like I?!?!?!?!?!?!?!?!\") //=>\
    \ 1\nis_bored(\"I like I?!?!?!?!?!?!?!?!\") //=> 1\nis_bored(\"I like I?!?!?!?!?!?!?!?!?!\"\
    ) //=> 1\nis_bored(\"I like I?!?!?!?!?!?!?!?!?!?!\") //=> 1\nis_bored(\"I like\
    \ I?!?!?!?!?!?!?!?!\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpm8lnwrn6.js:36\nis_bored(\"I like I?!?!?!?!?!?!?!?!\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I like you!\"); // returns 1\nis_bored(\"I like you? I love you!\"\
    ); // returns 2\nis_bored(\"I like you! I hate you!\"); // returns 3\nis_bored(\"\
    I like you! I hate you! I hate you!\"); // returns 3\nis_bored(\"I like you! I\
    \ hate you! I hate you! I hate you!\"); // returns 4\nis_bored(\"I like you! I\
    \ hate you! I hate you! I hate you! I hate you! I hate you!\"); // returns 5\n\
    is_bored(\"I like you! I hate you! I hate you! I hate you! I hate you! I hate\
    \ you! I hate you! I hate you!\"); // returns 5\nis_bored(\"I like you! I hate\
    \ you! I hate you! I hate you! I hate you! I hate you! I hate you! I hate you!\
    \ I hate you! I hate you!\"); // returns 5\nis_bored(\"I like you! I hate you!\
    \ I hate you! I hate you! I hate you! I hate you! I hate you! I hate you! I hate\
    \ you! I hate you! I hate you!\"); // returns 5\nis_bored(\"I like you! I hate\
    \ you! I hate you! I hate you! I hate you! I hate you! I hate you! I hate you!\
    \ I hate you! I hate you! I hate you! I hate you! I hate you!\"); // returns 5\n\
    is_bored(\"I like you! I hate you! I hate you! I hate you! I hate you! I hate\
    \ you! I hate you! I hate you! I hate you! I hate you! I hate you! I hate you!\
    \ I hate you! I hate you!\"); // returns 5\nis_bored(\"I like you! I h\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpoql_9n3o.js:25\nis_bored(\"I like you! I h\n         ^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var boredom_count = 0;\n    for(var i =\
    \ 0; i < boredoms.length; i++){\n        if(boredoms[i].indexOf('I') === 0){\n\
    \            boredom_count++;\n        }\n    }\n    return boredom_count;\n}\n\
    is_bored(\"I like you!\") //returns 1\nis_bored(\"I hate you!\") //returns 0\n\
    is_bored(\"I like you.\") //returns 1\nis_bored(\"I hate you.\") //returns 0\n\
    is_bored(\"I like you!.\") //returns 1\nis_bored(\"I hate you!.\") //returns 0\n\
    is_bored(\"I like you!?\") //returns 1\nis_bored(\"I hate you!?\") //returns 0\n\
    is_bored(\"I like you!?!\") //returns 1\nis_bored(\"I hate you!?!\") //returns\
    \ 0\nis_bored(\"I like you!?!?\") //returns 1\nis_bored(\"I hate you!?!?\") //returns\
    \ 0\nis_bored(\"I like you!?!?!\") //returns 1\nis_bored(\"I hate you!?!?!\")\
    \ //returns 0\nis_bored(\"I like you!?!?!?\") //returns 1\nis_bored(\"I hate you!?!?!?\"\
    ) //returns 0\nis_bored(\"I like you!?!?!?!\") //returns 1\nis_bored(\"I hate\
    \ you!?!?!?!\") //returns 0\nis_bored(\"I like you!?!?!?!?\") //returns 1\nis_bored(\"\
    I hate you!?!?!?!?\") //returns 0\nis_bored(\"I like you!?!?!?!?!\") //returns\
    \ 1\nis_bored(\"I hate you!?!?!?!?!\") //returns 0\nis_bored(\"I like you!?!?!?!?!?\"\
    ) //returns 1\nis_bored(\"I hate you!?!?!?!?!?\") //returns 0\nis_bored(\"I like\
    \ you!?!?!?!?!?!\") //returns 1\nis_bored(\"I hate you!?!?!?!?!?\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphzemciqz.js:40\nis_bored(\"I hate you!?!?!?!?!?\n         ^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split(\" \");\n    var bored = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i][0] === \"I\"){\n            bored++;\n       \
    \ }\n    }\n    return bored;\n}\nis_bored(\"I love you!\"); // returns 1\nis_bored(\"\
    I hate you!\"); // returns 0\nis_bored(\"I love you and you!\"); // returns 2\n\
    is_bored(\"I love you and I hate you!\"); // returns 1\nis_bored(\"I love you\
    \ and I hate you and you!\"); // returns 2\nis_bored(\"I love you and I hate you\
    \ and I love you!\"); // returns 3\nis_bored(\"I love you and I hate you and I\
    \ love you and you!\"); // returns 3\nis_bored(\"I love you and I hate you and\
    \ I love you and I hate you!\"); // returns 4\nis_bored(\"I love you and I hate\
    \ you and I love you and I hate you and you!\"); // returns 4\nis_bored(\"I love\
    \ you and I hate you and I love you and I hate you and I love you!\"); // returns\
    \ 5\nis_bored(\"I love you and I hate you and I love you and I hate you and I\
    \ love you and you!\"); // returns 5\nis_bored(\"I love you and I hate you and\
    \ I love you and I hate you and I love you and I hate you!\"); // returns 6\n\
    is_bored(\"I love you and I hate you and I love you and I hate you and I love\
    \ you and I hate you and you!\"); // returns 6\nis_bored(\"I love you and I hate\
    \ you and I love you and I hate you and I love you and I hate you and I love you!\"\
    ); // returns 7\nis_bored(\"I love you and I hate you and I love you and I hate\
    \ you and I love you and I hate you and I love you and you!\"); // returns 7\n\
    is_bored(\"I love you and I hate you and I love you and I hate you and I love\
    \ \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqg42fkdc.js:30\nis_bored(\"I love you and I hate you and I love\
    \ you and I hate you and I love \n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \  var boredoms = 0;\n  S.split('.').forEach(function(word){\n    if(word.startsWith(\"\
    I\")){\n      boredoms += 1;\n    }\n  });\n  return boredoms;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpzdorhr8q.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzdorhr8q.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    is_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\");\nis_bored(\"\
    I like Ice Cream?\");\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice\
    \ Cream!\");\nis_bored(\"I like Ice Cream?\");\nis_bored(\"I like Ice Cream.\"\
    );\nis_bored(\"I like Ice Cream!\");\nis_bored(\"I like Ice Cream?\");\nis_bored(\"\
    I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\");\nis_bored(\"I like Ice\
    \ Cream?\");\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\"\
    );\nis_bored(\"I like Ice Cream?\");\nis_bored(\"I like Ice Cream.\");\nis_bored(\"\
    I like Ice Cream!\");\nis_bored(\"I like Ice Cream?\");\nis_bored(\"I like Ice\
    \ Cream.\");\nis_bored(\"I like Ice Cream!\");\nis_bored(\"I like Ice Cream?\"\
    );\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\");\nis_bored(\"\
    I like Ice Cream?\");\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice\
    \ Cream!\");\nis_bored(\"I like Ice Cream?\");\nis_bored(\"I like Ice Cream.\"\
    );\nis_bored(\"I like Ice Cream!\");\nis_bored(\"I like Ice Cream?\");\nis_bored(\"\
    I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\");\nis_bored(\"I like Ice\
    \ Cream?\");\nis_bored(\"I like Ice Cream.\");\nis_bored(\"I like Ice Cream!\"\
    );\nis_bored(\"I like Ice Cream?\");\nis_bo\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpcsyz0k4l.js:50\nis_bo\n^\n\nReferenceError: is_bo is not defined\n\
    \    at Object.<anonymous> (/tmp/tmpcsyz0k4l.js:50:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var count = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i].indexOf('I') === 0){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsr1x2wbz.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsr1x2wbz.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0]==='I'){\n            boredoms++;\n        }\n    }\n \
    \   return boredoms;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpeu8bentf.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeu8bentf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split(\" \").forEach(function(word){\n        if\
    \ (word.startsWith(\"I\")){\n            boredoms += 1;\n        }\n    });\n\
    \    return boredoms;\n}\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I hate you!\") // returns 1\nis_bored(\"I love you!\") // returns 2\nis_bored(\"\
    I h\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpurac7ppc.js:47\nis_bored(\"I h\n         ^^^^\n\nSyntaxError: Invalid\
    \ or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f_nqxks.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f_nqxks.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    S = S.toLowerCase();\n    var boredoms = ['i', 'you', 'he', 'she', 'it',\
    \ 'they', 'them', 'their', 'its', 'theirs', 'it', 'the', 'they', 'the', 'their',\
    \ 'theirs', 'you', 'yous', 'your', 'yours', 'yourself', 'yourselves', 'you', 'yous',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'them',\
    \ 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they',\
    \ 'them', 'their', 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'them', 'themselves', 'theirs',\
    \ 'it', 'itself', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'them',\
    \ 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they',\
    \ 'them', 'their', 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'them', 'themselves', 'theirs',\
    \ 'it', 'itself', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'them',\
    \ 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they',\
    \ 'them', 'their', 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'them', 'themselves', 'theirs',\
    \ 'it', 'itself', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'them',\
    \ 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they',\
    \ 'them', 'their', 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'them', 'themselves', 'theirs',\
    \ 'it', 'itself', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'them',\
    \ 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they',\
    \ 'them', 'their', 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its',\
    \ 'itself', 'the\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppxq90qqa.js:7\n    var boredoms = ['i', 'you', 'he', 'she', 'it',\
    \ 'they', 'them', 'their', 'its', 'theirs', 'it', 'the', 'they', 'the', 'their',\
    \ 'theirs', 'you', 'yous', 'your', 'yours', 'yourself', 'yourselves', 'you', 'yous',\
    \ 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers',\
    \ 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'them',\
    \ 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they',\
    \ 'them', 'their', 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'them', 'themselves', 'theirs',\
    \ 'it', 'itself', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'them',\
    \ 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they',\
    \ 'them', 'their', 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'them', 'themselves', 'theirs',\
    \ 'it', 'itself', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'them',\
    \ 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they',\
    \ 'them', 'their', 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'them', 'themselves', 'theirs',\
    \ 'it', 'itself', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'them',\
    \ 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they', 'them', 'their',\
    \ 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', 'they',\
    \ 'them', 'their', 'theirs', 'them', 'themselves', 'theirs', 'it', 'itself', 'its',\
    \ 'itself', 'they', 'them', 'their', 'theirs', 'them', 'themselves', 'theirs',\
    \ 'it', 'itself', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'them',\
    \ 'themselves', 'theirs', 'it', 'itself', 'its', 'itself', "
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var count = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i].indexOf('I') === 0){\n            count++;\n \
    \       }\n    }\n    return count;\n}\nis_bored(\"I love you!\") === 1;\nis_bored(\"\
    I hate you!\") === 0;\nis_bored(\"I love you? I hate you!\") === 2;\nis_bored(\"\
    I love you! I hate you!\") === 0;\nis_bored(\"I love you! I hate you!\") === 0;\n\
    is_bored(\"I love you! I hate you!\") === 0;\nis_bored(\"I love you! I hate you!\"\
    ) === 0;\nis_bored(\"I love you! I hate you!\") === 0;\nis_bored(\"I love you!\
    \ I hate you!\") === 0;\nis_bored(\"I love you! I hate you!\") === 0;\nis_bored(\"\
    I love you! I hate you!\") === 0;\nis_bored(\"I love you! I hate you!\") === 0;\n\
    is_bored(\"I love you! I hate you!\") === 0;\nis_bored(\"I love you! I hate you!\"\
    ) === 0;\nis_bored(\"I love you! I hate you!\") === 0;\nis_bored(\"I love you!\
    \ I hate you!\") === 0;\nis_bored(\"I love you! I hate you!\") === 0;\nis_bored(\"\
    I love you! I hate you!\") === 0;\nis_bored(\"I love you! I hate you!\") === 0;\n\
    is_bored(\"I love you! I hate you!\") === 0;\nis_bored(\"I love you! I hate you!\"\
    ) === 0;\nis_bored(\"I love you! I hate you!\") === 0;\nis_bored(\"I love you!\
    \ I hate you!\") === 0;\nis_bored(\"I love you! I hate you!\") === 0;\nis_bored(\"\
    I love you! I hate you!\") === 0;\nis_bored(\"I love you! I hate you!\") === 0;\n\
    is_bored(\"I lo\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpd1iqw0dw.js:41\nis_bored(\"I lo\n         ^^^^^\n\nSyntaxError:\
    \ Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpamwmdd6z.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpamwmdd6z.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpwif5u0u4.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwif5u0u4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === 'I'){\n            boredoms += 1;\n      \
    \  }\n    }\n    return boredoms;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa4zmbrry.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa4zmbrry.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpnrbe32ib.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnrbe32ib.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    is_bored(\"I love you!\") //returns 2\nis_bored(\"I hate you!\") //returns 1\n\
    is_bored(\"I love you?\") //returns 1\nis_bored(\"I hate you?\") //returns 0\n\
    is_bored(\"I love you!?\") //returns 1\nis_bored(\"I hate you!?\") //returns 0\n\
    is_bored(\"I love you!?!\") //returns 1\nis_bored(\"I hate you!?!\") //returns\
    \ 0\nis_bored(\"I love you!?!?\") //returns 1\nis_bored(\"I hate you!?!?\") //returns\
    \ 0\nis_bored(\"I love you!?!?!\") //returns 1\nis_bored(\"I hate you!?!?!\")\
    \ //returns 0\nis_bored(\"I love you!?!?!?\") //returns 1\nis_bored(\"I hate you!?!?!?\"\
    ) //returns 0\nis_bored(\"I love you!?!?!?!\") //returns 1\nis_bored(\"I hate\
    \ you!?!?!?!\") //returns 0\nis_bored(\"I love you!?!?!?!?\") //returns 1\nis_bored(\"\
    I hate you!?!?!?!?\") //returns 0\nis_bored(\"I love you!?!?!?!?!\") //returns\
    \ 1\nis_bored(\"I hate you!?!?!?!?!\") //returns 0\nis_bored(\"I love you!?!?!?!?!?\"\
    ) //returns 1\nis_bored(\"I hate you!?!?!?!?!?\") //returns 0\nis_bored(\"I love\
    \ you!?!?!?!?!?!\") //returns 1\nis_bored(\"I hate you!?!?!?!?!?!\") //returns\
    \ 0\nis_bored(\"I love you!?!?!?!?!?!?\") //\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpo0vi9sw5.js:45:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo0vi9sw5.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var boredom_count = 0;\n    for(var i =\
    \ 0; i < boredoms.length; i++){\n        if(boredoms[i].indexOf('I') === 0){\n\
    \            boredom_count++;\n        }\n    }\n    return boredom_count;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpc1lyyga7.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc1lyyga7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === 'I'){\n            boredoms += 1;\n      \
    \  }\n    }\n    return boredoms;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5k_m17m6.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5k_m17m6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i] ==\
    \ 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa8p1mrgo.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa8p1mrgo.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var boredom_count = 0;\n    for(var i=0;\
    \ i<boredoms.length; i++){\n        if(boredoms[i].startsWith(\"I\")){\n     \
    \       boredom_count++;\n        }\n    }\n    return boredom_count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpeox85oha.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeox85oha.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I like Ice Cream.\"); // returns 1\nis_bored(\"I like Ice Cream.!\"\
    ); // returns 1\nis_bored(\"I like Ice Cream.?\"); // returns 1\nis_bored(\"I\
    \ like Ice Cream.!?\"); // returns 1\nis_bored(\"I like Ice Cream.!?!\"); // returns\
    \ 1\nis_bored(\"I like Ice Cream.!?!?!\"); // returns 1\nis_bored(\"I like Ice\
    \ Cream.!?!?!?!\"); // returns 1\nis_bored(\"I like Ice Cream.!?!?!?!?!?!\");\
    \ // returns 1\nis_bored(\"I like Ice Cream.!?!?!?!?!?!?!?!\"); // returns 1\n\
    is_bored(\"I like Ice Cream.!?!?!?!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"\
    I like Ice Cream.!?!?!?!?!?!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I like Ice\
    \ Cream.!?!?!?!?!?!?!?!?!?!?!?!?!?!\"); // returns 1\nis_bored(\"I like Ice Cream.!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    ); // returns 1\nis_bored(\"I like Ice Cream.!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    ); // returns 1\nis_bored(\"I like Ice Cream.!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    ); // returns 1\nis_bored(\"I \nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpyss22pla.js:29\nis_bored(\"I \n         ^^^\n\nSyntaxError: Invalid\
    \ or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = S.split('.');\n    var bored = 0;\n    for(var i=0; i<boredoms.length;\
    \ i++){\n        if(boredoms[i].indexOf('I') === 0){\n            bored++;\n \
    \       }\n    }\n    return bored;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpu27hlmh0.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu27hlmh0.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp2_fbc2mh.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2_fbc2mh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==='I'||S[i]==='.'){\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\nis_bored(\"\
    I love you!\"); // returns 2\nis_bored(\"I love you.\"); // returns 1\nis_bored(\"\
    I love you!.\"); // returns 2\nis_bored(\"I love you!? I hate you!\"); // returns\
    \ 3\nis_bored(\"I love you!? I hate you!.\"); // returns 3\nis_bored(\"I love\
    \ you!? I hate you!?. I'm bored.\"); // returns 4\nis_bored(\"I love you!? I hate\
    \ you!?. I'm bored.\"); // returns 4\nis_bored(\"I love you!? I hate you!?. I'm\
    \ bored.\"); // returns 4\nis_bored(\"I love you!? I hate you!?. I'm bored.\"\
    ); // returns 4\nis_bored(\"I love you!? I hate you!?. I'm bored.\"); // returns\
    \ 4\nis_bored(\"I love you!? I hate you!?. I'm bored.\"); // returns 4\nis_bored(\"\
    I love you!? I hate you!?. I'm bored.\"); // returns 4\nis_bored(\"I love you!?\
    \ I hate you!?. I'm bored.\"); // returns 4\nis_bored(\"I love you!? I hate you!?.\
    \ I'm bored.\"); // returns 4\nis_bored(\"I love you!? I hate you!?. I'm bored.\"\
    ); // returns 4\nis_bored(\"I love you!? I hate you!?. I'm bored.\"); // returns\
    \ 4\nis_bored(\"I love you!? I hate you!?. I'm bored.\"); // returns 4\nis_bored(\"\
    I love you!? I hate you!?. I'm bored.\"); // returns 4\nis_bored(\"I love you!?\
    \ I hate you!?. I'm bored.\"); // returns 4\nis_bored(\"I love you!? I hate you!?.\
    \ I'm bored.\"); // returns 4\nis_bored(\"I lo\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfa24mnji.js:34\nis_bored(\"I lo\n         ^^^^^\n\nSyntaxError:\
    \ Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpkwawnkld.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkwawnkld.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\nis_bored(\"I love you!\") //returns 1\nis_bored(\"I hate you!\") //returns\
    \ 0\nis_bored(\"I love you? I hate you!\") //returns 2\nis_bored(\"I love you!\
    \ I hate you!\") //returns 2\nis_bored(\"I love you! I hate you! I hate you!\"\
    ) //returns 3\nis_bored(\"I love you! I hate you! I hate you! I hate you!\") //returns\
    \ 3\nis_bored(\"I love you! I hate you! I hate you! I hate you! I hate you!\"\
    ) //returns 3\nis_bored(\"I love you! I hate you! I hate you! I hate you! I hate\
    \ you! I hate you!\") //returns 3\nis_bored(\"I love you! I hate you! I hate you!\
    \ I hate you! I hate you! I hate you! I hate you!\") //returns 3\nis_bored(\"\
    I love you! I hate you! I hate you! I hate you! I hate you! I hate you! I hate\
    \ you! I hate you!\") //returns 3\nis_bored(\"I love you! I hate you! I hate you!\
    \ I hate you! I hate you! I hate you! I hate you! I hate you! I hate you!\") //returns\
    \ 3\nis_bored(\"I love you! I hate you! I hate you! I hate you! I hate you! I\
    \ hate you! I hate you! I hate you! I hate you! I hate you!\") //returns 3\nis_bored(\"\
    I love you! I hate you! I hate you! I hate you! I hate you! I hate you! I hate\
    \ you! I hate you! I hate you! I hate you! I hate you!\") //returns 3\nis_bored(\"\
    I lo\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdgbneofr.js:27\nis_bored(\"I lo\n         ^^^^^\n\nSyntaxError:\
    \ Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    var words = S.split(' ');\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === 'I'){\n            boredoms += 1;\n      \
    \  }\n    }\n    return boredoms;\n}\nis_bored(\"I like turtles.\");\nis_bored(\"\
    I like turtles. I hate turtles.\");\nis_bored(\"I like turtles. I hate turtles.\
    \ I like turtles.\");\nis_bored(\"I like turtles. I like turtles. I like turtles.\
    \ I like turtles.\");\nis_bored(\"I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles.\");\nis_bored(\"I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like turtles.\
    \ I like turtles. I like turtles. I like turtles. I like turtles. I like \nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppxp22h48.js:20\nis_bored(\"I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like turtles. I like turtles. I like\
    \ turtles. I like turtles. I like turtles. I like \n
  exit_code: 1
  status: SyntaxError
- program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S){\n\
    \    var boredoms = 0;\n    S.split('.').forEach(function(word){\n        if (word.startsWith(\"\
    I\")){\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n\
    is_bored(\"I love you!\") //2\nis_bored(\"I hate you!\") //1\nis_bored(\"I love\
    \ you?\") //1\nis_bored(\"I hate you?\") //0\nis_bored(\"I love you!.\") //1\n\
    is_bored(\"I hate you!.\") //0\nis_bored(\"I love you!?\") //1\nis_bored(\"I hate\
    \ you!?\") //0\nis_bored(\"I love you!?!\") //1\nis_bored(\"I hate you!?!\") //0\n\
    is_bored(\"I love you!?!.\") //1\nis_bored(\"I hate you!?!.\") //0\nis_bored(\"\
    I love you!?!?\") //1\nis_bored(\"I hate you!?!?\") //0\nis_bored(\"I love you!?!?!\"\
    ) //1\nis_bored(\"I hate you!?!?!\") //0\nis_bored(\"I love you!?!?!.\") //1\n\
    is_bored(\"I hate you!?!?!.\") //0\nis_bored(\"I love you!?!?!?\") //1\nis_bored(\"\
    I hate you!?!?!?\") //0\nis_bored(\"I love you!?!?!?!\") //1\nis_bored(\"I hate\
    \ you!?!?!?!\") //0\nis_bored(\"I love you!?!?!?!.\") //1\nis_bored(\"I hate you!?!?!?!.\"\
    ) //0\nis_bored(\"I love you!?!?!?!?\") //1\nis_bored(\"I hate you!?!?!?!?\")\
    \ //0\nis_bored(\"I love you!?!?!?!?!\") //1\nis_bored(\"I hate you!?!?!?!?!\"\
    ) //0\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n \
    \ assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpamq6e00u.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpamq6e00u.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

name: HumanEval_20_find_closest_elements
language: js
results:
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpwicsy9ji.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwicsy9ji.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp482_chog.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp482_chog.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        var distance = numbers[i] - numbers[i - 1];\n        closest_numbers.push(numbers[i\
    \ - 1]);\n        closest_distances.push(distance);\n    }\n    closest_numbers.sort();\n\
    \    closest_distances.sort();\n    return closest_numbers;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3.9,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at\
    \ test (/tmp/tmpp2eg6hwp.js:21:10)\n    at Object.<anonymous> (/tmp/tmpp2eg6hwp.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3.9,\
    \ 4, 5 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpbztnpt2h.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbztnpt2h.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp9g21utxp.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9g21utxp.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var closest_index = 0;\n    var\
    \ closest_distance = 0;\n    var closest_number = numbers[0];\n    var closest_distance\
    \ = numbers[1];\n    for(var i = 1; i < numbers.length; i++){\n        var current_distance\
    \ = numbers[i] - closest_number;\n        if(current_distance < closest_distance){\n\
    \            closest_number = numbers[i];\n            closest_distance = current_distance;\n\
    \            closest_index = i;\n        }\n    }\n    closest_numbers.push(closest_number);\n\
    \    closest_distances.push(closest_distance);\n    return closest_numbers.concat(closest_distances);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  0.20000000000000018\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp_5ed_jua.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_5ed_jua.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 0.20000000000000018\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpgd5sriq5.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgd5sriq5.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_numbers_index = 0;\n    var smallest_number = numbers[0];\n\
    \    var largest_number = numbers[0];\n    var smallest_difference = Number.MAX_VALUE;\n\
    \    var largest_difference = Number.MAX_VALUE;\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        var current_number = numbers[i];\n        var current_difference\
    \ = Math.abs(current_number - smallest_number);\n        if(current_difference\
    \ < smallest_difference){\n            smallest_difference = current_difference;\n\
    \            smallest_number = current_number;\n        }\n        var current_difference\
    \ = Math.abs(current_number - largest_number);\n        if(current_difference\
    \ < largest_difference){\n            largest_difference = current_difference;\n\
    \            largest_number = current_number;\n        }\n    }\n    closest_numbers.push(smallest_number);\n\
    \    closest_numbers.push(largest_number);\n    closest_numbers_index = 1;\n \
    \   for(var i = 2; i < numbers.length; i++){\n        var current_number = numbers[i];\n\
    \        var current_difference = Math.abs(current_number - smallest_number);\n\
    \        if(current_difference < smallest_difference){\n            smallest_difference\
    \ = current_difference;\n            smallest_number = current_number;\n     \
    \       closest_numbers_index = i;\n        }\n        var current_difference\
    \ = Math.abs(current_number - largest_number);\n        if(current_difference\
    \ < largest_difference){\n            largest_difference = current_difference;\n\
    \            largest_number = current_number;\n            closest_numbers_index\
    \ = i;\n        }\n    }\n    closest_numbers.push(smallest_number);\n    closest_numbers.push(largest_number);\n\
    \    return closest_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  2.2,\n\
    \  2.2,\n  2.2\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test\
    \ (/tmp/tmpvrkaf_2o.js:51:10)\n    at Object.<anonymous> (/tmp/tmpvrkaf_2o.js:58:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 2.2,\
    \ 2.2, 2.2 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var biggest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > biggest_number){\n\
    \            biggest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ biggest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmptbym6a0u.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmptbym6a0u.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var biggest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > biggest_number){\n\
    \            biggest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ biggest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmplddlb54j.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmplddlb54j.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        if(numbers[i] >\
    \ largest_number){\n            largest_number = numbers[i];\n        }\n    }\n\
    \    closest_elements.push(smallest_number);\n    closest_elements.push(largest_number);\n\
    \    return closest_elements;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpyovgr69z.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyovgr69z.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n  var smallest_number\
    \ = numbers[0];\n  var largest_number = numbers[0];\n  for(var i = 1; i < numbers.length;\
    \ i++){\n    if(numbers[i] < smallest_number){\n      smallest_number = numbers[i];\n\
    \    }\n    if(numbers[i] > largest_number){\n      largest_number = numbers[i];\n\
    \    }\n  }\n  return [smallest_number, largest_number];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmptant5ou9.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmptant5ou9.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var biggest_number = numbers[0];\n    var smallest_index\
    \ = 0;\n    var biggest_index = 0;\n    for(var i = 0; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        else if(numbers[i] > biggest_number){\n\
    \            biggest_number = numbers[i];\n            biggest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, biggest_number];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp93k0kci3.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp93k0kci3.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tvar closest_index = 0;\n\tvar closest_distance\
    \ = 0;\n\t\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tvar current_distance\
    \ = numbers[i] - numbers[i - 1];\n\t\tif(current_distance < closest_distance){\n\
    \t\t\tclosest_index = i;\n\t\t\tclosest_distance = current_distance;\n\t\t}\n\t\
    }\n\t\n\tclosest_numbers.push(numbers[closest_index]);\n\tclosest_numbers.push(numbers[closest_index\
    \ + 1]);\n\t\n\treturn closest_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp_skc6gr3.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_skc6gr3.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, undefined\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpl_h7leub.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl_h7leub.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpzeh2xj2r.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzeh2xj2r.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        if(numbers[i] >\
    \ largest_number){\n            largest_number = numbers[i];\n        }\n    }\n\
    \    closest_numbers.push(smallest_number);\n    closest_numbers.push(largest_number);\n\
    \    return closest_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp5w49ypcl.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5w49ypcl.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_pair\
    \ = numbers[0];\n\tvar closest_distance = numbers[1];\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tvar distance = numbers[i] - closest_pair;\n\t\tif(distance < closest_distance){\n\
    \t\t\tclosest_pair = numbers[i];\n\t\t\tclosest_distance = distance;\n\t\t}\n\t\
    }\n\treturn [closest_pair,closest_distance];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp1g2n_5kg.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1g2n_5kg.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpzsseac91.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzsseac91.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0], numbers[1]);\n\
    \tvar result = [];\n\tfor(var i = 2; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ < smallest || numbers[i] > largest){\n\t\t\tresult.push([numbers[i], i]);\n\t\
    \t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    3.9,\n\
    \    2\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    5,\n    4\n  ],\n  [\n    2.2,\n\
    \    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test\
    \ (/tmp/tmpx7g580bf.js:20:10)\n    at Object.<anonymous> (/tmp/tmpx7g580bf.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 3.9, 2\
    \ ], [ 4, 3 ], [ 5, 4 ], [ 2.2, 5 ] ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [numbers[0], numbers[0]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 1; i < numbers.length; i++){\n        var distance\
    \ = Math.abs(numbers[i] - numbers[i - 1]);\n        if (distance < closest_distance){\n\
    \            closest_elements = [numbers[i], numbers[i - 1]];\n            closest_distance\
    \ = distance;\n        }\n    }\n    return closest_elements;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3.9\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpitui8nw2.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpitui8nw2.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3.9 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [];\n    for(var i = 0; i<numbers.length; i++){\n\
    \        if(numbers[i] < smallest || numbers[i] > largest){\n            result.push(i);\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp633h9j7w.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp633h9j7w.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4,\
    \ 5 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\
    \t\t}\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest_number, largest_number];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp_ikxkdsx.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_ikxkdsx.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp4k1fzggm.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4k1fzggm.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current = Math.max(numbers[i], numbers[i-1]);\n\
    \        var next = Math.min(numbers[i], numbers[i-1]);\n        if(current <\
    \ smallest){\n            smallest = current;\n            result[0] = current;\n\
    \        }\n        else if(current > largest){\n            largest = current;\n\
    \            result[1] = current;\n        }\n        else if(next < smallest){\n\
    \            smallest = next;\n            result[0] = current;\n        }\n \
    \       else if(next > largest){\n            largest = next;\n            result[1]\
    \ = current;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmphup6vwez.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmphup6vwez.js:42:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = numbers[0];\n\tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\
    \t\telse if(numbers[i] > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\t\
    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpcekvfd9e.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcekvfd9e.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var biggest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > biggest_number){\n\
    \            biggest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ biggest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpw9r7uzxn.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw9r7uzxn.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current_smallest = Math.min(numbers[i], numbers[i-1]);\n\
    \        var current_largest = Math.max(numbers[i], numbers[i-1]);\n        if(current_smallest\
    \ < smallest && current_largest > largest){\n            smallest = current_smallest;\n\
    \            largest = current_largest;\n            result[0] = current_smallest;\n\
    \            result[1] = current_largest;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp582tlzqa.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp582tlzqa.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpb4th6vnz.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb4th6vnz.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp0gnqlv_t.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0gnqlv_t.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min.apply(Math, numbers);\n    var largest = Math.max.apply(Math, numbers);\n\
    \    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpjxf1kj59.js:14:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjxf1kj59.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpcmzv2np6.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcmzv2np6.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmppwqcn49f.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmppwqcn49f.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tfor(var i = 1; i < numbers.length; i++){\n\
    \t\tvar distance = numbers[i] - numbers[i - 1];\n\t\tclosest_numbers.push(numbers[i\
    \ - 1]);\n\t\tclosest_distances.push(distance);\n\t}\n\tclosest_numbers.sort(function(a,\
    \ b){\n\t\treturn a - b;\n\t});\n\tclosest_distances.sort(function(a, b){\n\t\t\
    return a - b;\n\t});\n\treturn [closest_numbers[0], closest_numbers[closest_numbers.length\
    \ - 1]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpu5qafsj6.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu5qafsj6.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpy7d1hgqs.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy7d1hgqs.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpx5zforap.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx5zforap.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\
    \t\t}\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest_number, largest_number];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpro1y21pl.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpro1y21pl.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpyw37txpr.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyw37txpr.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var result\
    \ = [];\n    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    result.push(smallest);\n\
    \    result.push(largest);\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp4ahl2352.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4ahl2352.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = -1;\n    var largest_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        else if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, largest_number];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp8k__dh47.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8k__dh47.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmplwd776ay.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmplwd776ay.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var smallest_number = numbers[0];\n\
    \    var largest_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        var current_number = numbers[i];\n        var current_distance\
    \ = current_number - smallest_number;\n        var current_distance_square = current_distance\
    \ * current_distance;\n        for(var j = 0; j < closest_numbers.length; j++){\n\
    \            var closest_number = closest_numbers[j];\n            var closest_distance_square\
    \ = closest_distance * closest_distance;\n            var closest_distance = Math.sqrt(closest_distance_square);\n\
    \            if(current_distance_square < closest_distance_square){\n        \
    \        closest_number = current_number;\n                closest_distance =\
    \ current_distance;\n            }\n        }\n        closest_numbers.push(closest_number);\n\
    \        closest_distances.push(closest_distance);\n        smallest_number =\
    \ current_number;\n        largest_number = current_number;\n    }\n    return\
    \ [smallest_number, largest_number];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  2.2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpdjib80ng.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdjib80ng.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 2.2\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp2ulmfzjc.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2ulmfzjc.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tvar closest_index = 0;\n\tvar closest_distance\
    \ = 0;\n\tvar closest_number = numbers[0];\n\tvar closest_distance = numbers[1];\n\
    \tvar i;\n\tfor(i = 2; i < numbers.length; i++){\n\t\tclosest_number = numbers[i];\n\
    \t\tclosest_distance = numbers[i-1];\n\t\tclosest_index = 0;\n\t\tfor(i = 1; i\
    \ < numbers.length; i++){\n\t\t\tif((numbers[i-1] - closest_number) < closest_distance){\n\
    \t\t\t\tclosest_number = numbers[i];\n\t\t\t\tclosest_distance = numbers[i-1];\n\
    \t\t\t\tclosest_index = i;\n\t\t\t}\n\t\t}\n\t\tclosest_numbers.push(closest_number);\n\
    \t\tclosest_distances.push(closest_distance);\n\t}\n\treturn [closest_numbers,\
    \ closest_distances];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2.2\n\
    \  ],\n  [\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n\
    \    at test (/tmp/tmpnnkdv5qm.js:33:10)\n    at Object.<anonymous> (/tmp/tmpnnkdv5qm.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2.2 ],\
    \ [ 5 ] ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpllx3ye7v.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpllx3ye7v.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpsaqzwje1.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsaqzwje1.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\t\n\tfor(var i = 0; i < numbers.length;\
    \ i++){\n\t\tvar current_distance = numbers[i];\n\t\tfor(var j = i+1; j < numbers.length;\
    \ j++){\n\t\t\tvar next_distance = numbers[j];\n\t\t\t\n\t\t\tif(next_distance\
    \ < current_distance){\n\t\t\t\tcurrent_distance = next_distance;\n\t\t\t}\n\t\
    \t}\n\t\t\n\t\tclosest_numbers.push(current_distance);\n\t\tclosest_distances.push(current_distance);\n\
    \t}\n\t\n\tfor(var i = 0; i < numbers.length; i++){\n\t\tvar current_distance\
    \ = numbers[i];\n\t\t\n\t\tfor(var j = 0; j < closest_numbers.length; j++){\n\t\
    \t\tvar next_distance = closest_numbers[j];\n\t\t\t\n\t\t\tif(next_distance <\
    \ current_distance){\n\t\t\t\tcurrent_distance = next_distance;\n\t\t\t}\n\t\t\
    }\n\t\t\n\t\tclosest_numbers.push(current_distance);\n\t}\n\t\n\treturn [closest_numbers,\
    \ closest_distances];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n\
    \    2,\n    2.2,\n    2.2,\n    2.2,\n    2.2,\n    1,\n    1,\n    1,\n    1,\n\
    \    1,\n    1\n  ],\n  [\n    1,\n    2,\n    2.2,\n    2.2,\n    2.2,\n    2.2\n\
    \  ]\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp_fo25bpg.js:43:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_fo25bpg.js:50:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [\n\
    \        1, 2, 2.2, 2.2, 2.2,\n      2.2, 1,   1,   1,   1,\n        1, 1\n  \
    \  ],\n    [ 1, 2, 2.2, 2.2, 2.2, 2.2 ]\n  ],\n  expected: [ 3.9, 4 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0,\
    \ 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpcsv0xfpn.js:82\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current = Math.max(numbers[i], numbers[i-1]);\n\
    \        var next = Math.min(numbers[i], numbers[i-1]);\n        if(current ==\
    \ smallest && next == largest){\n            continue;\n        }\n        if(current\
    \ < smallest && next > largest){\n            smallest = current;\n        }\n\
    \        else if(current > largest && next < smallest){\n            largest =\
    \ current;\n        }\n        result.push(current);\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3.9,\n  4,\n  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n\
    \    at test (/tmp/tmplugpw5za.js:29:10)\n    at Object.<anonymous> (/tmp/tmplugpw5za.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3.9,\
    \ 4, 5, 5 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0], numbers[1]);\n\
    \tvar result = [smallest, largest];\n\tfor(var i = 2; i < numbers.length; i++){\n\
    \t\tvar new_smallest = Math.min(numbers[i], numbers[i-1]);\n\t\tvar new_largest\
    \ = Math.max(numbers[i], numbers[i-1]);\n\t\tif(new_smallest < smallest && new_largest\
    \ > largest){\n\t\t\tsmallest = new_smallest;\n\t\t\tlargest = new_largest;\n\t\
    \t\tresult = [smallest, largest];\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp7bnzaz20.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7bnzaz20.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tvar closest_index = 0;\n\tvar closest_distance\
    \ = 0;\n\t\n\tfor(var i = 1; i < numbers.length; i++){\n\t\t\n\t\tvar current_distance\
    \ = numbers[i] - numbers[i - 1];\n\t\t\n\t\tif(current_distance < closest_distance){\n\
    \t\t\tclosest_distance = current_distance;\n\t\t\tclosest_index = i;\n\t\t}\n\t\
    \t\n\t}\n\t\n\tclosest_numbers.push(numbers[closest_index]);\n\tclosest_numbers.push(numbers[closest_index\
    \ - 1]);\n\t\n\treturn closest_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp7o17r8fp.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7o17r8fp.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpx6zdbyuq.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx6zdbyuq.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current = Math.max(numbers[i], numbers[i-1]);\n\
    \        var next = Math.min(numbers[i], numbers[i-1]);\n        var diff = Math.abs(current\
    \ - next);\n        if(diff < result[1]){\n            result[0] = current;\n\
    \            result[1] = diff;\n        }\n    }\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  0.10000000000000009\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpk6xozw2z.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk6xozw2z.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 0.10000000000000009\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min.apply(null, numbers);\n    var largest = Math.max.apply(null, numbers);\n\
    \    var results = [];\n    for(var i=0;i<numbers.length;i++){\n        if(numbers[i]\
    \ == smallest || numbers[i] == largest){\n            results.push(numbers[i]);\n\
    \        }\n    }\n    return results;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpdb_14svq.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdb_14svq.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var closest_distance = Number.MAX_VALUE;\n    var closest_index =\
    \ 0;\n    var i;\n    for(i = 0; i < numbers.length; i++){\n        var distance\
    \ = distance_between(numbers[i], numbers[closest_index]);\n        if(distance\
    \ < closest_distance){\n            closest_distance = distance;\n           \
    \ closest_index = i;\n        }\n    }\n    closest_elements.push(numbers[closest_index]);\n\
    \    closest_elements.push(numbers[closest_index]);\n    return closest_elements;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph0t3lyqx.js:9\n        var distance = distance_between(numbers[i],\
    \ numbers[closest_index]);\n                       ^\n\nReferenceError: distance_between\
    \ is not defined\n    at find_closest_elements (/tmp/tmph0t3lyqx.js:9:24)\n  \
    \  at test (/tmp/tmph0t3lyqx.js:25:20)\n    at Object.<anonymous> (/tmp/tmph0t3lyqx.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var new_smallest = Math.min(numbers[i], numbers[i-1]);\n\
    \        var new_largest = Math.max(numbers[i], numbers[i-1]);\n        if(new_smallest\
    \ < smallest && new_largest > largest){\n            smallest = new_smallest;\n\
    \            largest = new_largest;\n            result = [smallest, largest];\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp7il8657c.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7il8657c.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0], numbers[1]);\n\
    \tvar result = [];\n\tfor(var i = smallest; i <= largest; i++){\n\t\tif(numbers.indexOf(i)\
    \ > -1){\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp9_1j9hbr.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9_1j9hbr.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpsyy4vzhd.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsyy4vzhd.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpxlfywlqi.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxlfywlqi.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min.apply(Math, numbers);\n    var largest = Math.max.apply(Math, numbers);\n\
    \    var result = [];\n    for(var i = smallest; i <= largest; i++){\n       \
    \ result.push(i);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at\
    \ test (/tmp/tmpzslttfiq.js:18:10)\n    at Object.<anonymous> (/tmp/tmpzslttfiq.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp0lzfrrnk.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0lzfrrnk.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_elements\
    \ = [];\n\tvar closest_distances = [];\n\tvar smallest_distance = Number.MAX_VALUE;\n\
    \tvar closest_number = null;\n\tvar closest_index = null;\n\t\n\tfor(var i = 1;\
    \ i < numbers.length; i++){\n\t\tvar current_distance = numbers[i] - numbers[i\
    \ - 1];\n\t\t\n\t\tif(current_distance < smallest_distance){\n\t\t\tsmallest_distance\
    \ = current_distance;\n\t\t\tclosest_number = numbers[i];\n\t\t\tclosest_index\
    \ = i;\n\t\t}\n\t}\n\t\n\tclosest_elements.push(closest_number);\n\tclosest_elements.push(closest_number);\n\
    \t\n\treturn closest_elements;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  2.2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpiwov76jp.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiwov76jp.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 2.2\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_numbers_index = 0;\n\tvar closest_number = numbers[0];\n\
    \tvar closest_number_distance = numbers[1];\n\tvar closest_number_distance_difference\
    \ = numbers[1];\n\tvar closest_number_distance_difference_index = 0;\n\t\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tvar current_number = numbers[i];\n\t\t\
    var current_number_distance = numbers[i] - closest_number;\n\t\tvar current_number_distance_difference\
    \ = current_number_distance - closest_number_distance;\n\t\t\n\t\tif(current_number_distance_difference\
    \ < closest_number_distance_difference){\n\t\t\tclosest_number = current_number;\n\
    \t\t\tclosest_number_distance = current_number_distance;\n\t\t\tclosest_number_distance_difference\
    \ = current_number_distance_difference;\n\t\t\tclosest_number_distance_difference_index\
    \ = i;\n\t\t}\n\t}\n\t\n\tclosest_numbers.push(closest_number);\n\tclosest_numbers.push(closest_numbers[closest_number_distance_difference_index]);\n\
    \t\n\treturn closest_numbers;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp0fh_vkbk.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0fh_vkbk.js:42:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, undefined\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0], numbers[1]);\n\
    \tvar result = [];\n\tfor(var i = smallest; i <= largest; i++){\n\t\tfor(var j\
    \ = smallest; j <= largest; j++){\n\t\t\tif(Math.abs(i - j) < Math.abs(smallest\
    \ - largest)){\n\t\t\t\tresult.push([i, j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n\
    \    1\n  ],\n  [\n    2,\n    2\n  ]\n]\n\nshould loosely deep-equal\n\n[\n \
    \ 3.9,\n  4\n]\n    at test (/tmp/tmprd8wrban.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprd8wrban.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 1, 1 ],\
    \ [ 2, 2 ] ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpkqxunp67.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkqxunp67.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        var current_distance = numbers[i];\n        for(var j = 0; j\
    \ < numbers.length; j++){\n            if(j != i){\n                var next_distance\
    \ = numbers[j];\n                if(next_distance < current_distance){\n     \
    \               current_distance = next_distance;\n                }\n       \
    \     }\n        }\n        closest_numbers.push(current_distance);\n        closest_distances.push(current_distance);\n\
    \    }\n    closest_numbers.sort(function(a, b){return a - b});\n    closest_distances.sort(function(a,\
    \ b){return a - b});\n    return closest_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n\
    \    at test (/tmp/tmpcq8i8g9_.js:29:10)\n    at Object.<anonymous> (/tmp/tmpcq8i8g9_.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1,\
    \ 1, 1, 1 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0], numbers[1]);\n\
    \tvar result = [smallest, largest];\n\tfor(var i = 2; i < numbers.length; i++){\n\
    \t\tvar current_smallest = Math.min(numbers[0], numbers[i]);\n\t\tvar current_largest\
    \ = Math.max(numbers[0], numbers[i]);\n\t\tif(current_smallest < smallest){\n\t\
    \t\tsmallest = current_smallest;\n\t\t}\n\t\tif(current_largest > largest){\n\t\
    \t\tlargest = current_largest;\n\t\t}\n\t\tresult.push(current_smallest, current_largest);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  1,\n  3.9,\n  1,\n  4,\n  1,\n  5,\n  1,\n  2.2\n]\n\nshould loosely deep-equal\n\
    \n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpo9dz15_v.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo9dz15_v.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 2, 1, 3.9,   1,\n    4, 1, 5,   1, 2.2\n  ],\n  expected: [ 3.9, 4 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var closest_distances = [];\n    var closest_index = 0;\n    var\
    \ closest_distance = Number.MAX_VALUE;\n    var i;\n    for(i = 0; i < numbers.length;\
    \ i++){\n        var distance = numbers[i] - numbers[closest_index];\n       \
    \ if(distance < closest_distance){\n            closest_distance = distance;\n\
    \            closest_index = i;\n        }\n    }\n    closest_elements.push(numbers[closest_index]);\n\
    \    closest_elements.push(numbers[closest_index + 1]);\n    return closest_elements;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpezhi51er.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpezhi51er.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_pair\
    \ = numbers[0];\n    var closest_distance = numbers[1];\n    var closest_number\
    \ = numbers[0];\n    var closest_index = 0;\n    var closest_pair_index = 0;\n\
    \    for(var i = 1; i < numbers.length; i++){\n        var current_distance =\
    \ numbers[i] - closest_number;\n        if(current_distance < closest_distance){\n\
    \            closest_pair = closest_number;\n            closest_distance = current_distance;\n\
    \            closest_number = numbers[i];\n            closest_index = i;\n  \
    \          closest_pair_index = closest_index;\n        }\n    }\n    return [closest_pair,\
    \ closest_number, closest_index, closest_pair_index];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  2.2,\n\
    \  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp_jkfyz1z.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_jkfyz1z.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 2.2,\
    \ 5, 5 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var smallest_number = numbers[0];\n\
    \    var largest_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        var current_number = numbers[i];\n        var current_distance\
    \ = current_number - smallest_number;\n        var current_distance2 = current_distance\
    \ * current_distance;\n        smallest_number = current_number;\n        closest_numbers.push(smallest_number);\n\
    \        closest_distances.push(current_distance);\n        largest_number = current_number;\n\
    \        for(var j = 0; j < closest_numbers.length; j++){\n            var current_distance3\
    \ = current_distance2 + closest_distances[j];\n            if(current_distance3\
    \ < current_distance){\n                closest_numbers[j] = current_number;\n\
    \                closest_distances[j] = current_distance3;\n            }\n  \
    \      }\n    }\n    return closest_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3.9,\n\
    \  4,\n  5,\n  2.2\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at\
    \ test (/tmp/tmp4h12wb54.js:32:10)\n    at Object.<anonymous> (/tmp/tmp4h12wb54.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3.9,\
    \ 4, 5, 2.2 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        else if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp5gfgtz5b.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5gfgtz5b.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var closest_index = 0;\n    var\
    \ closest_distance = 0;\n    var i;\n    for(i = 0; i < numbers.length; i++){\n\
    \        closest_distance = numbers[i];\n        closest_numbers.push(closest_distance);\n\
    \        closest_distances.push(closest_distance);\n    }\n    for(i = 1; i <\
    \ numbers.length; i++){\n        closest_distance = numbers[i];\n        closest_index\
    \ = i;\n        closest_distances.push(closest_distance);\n    }\n    for(i =\
    \ numbers.length - 1; i >= 0; i--){\n        closest_distance = numbers[i];\n\
    \        closest_index = i;\n        closest_distances.push(closest_distance);\n\
    \    }\n    return closest_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3.9,\n  4,\n  5,\n  2.2\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n\
    ]\n    at test (/tmp/tmpf0q9tt29.js:32:10)\n    at Object.<anonymous> (/tmp/tmpf0q9tt29.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3.9,\
    \ 4, 5, 2.2 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_pair\
    \ = numbers[0];\n    var closest_distance = Number.MAX_VALUE;\n    for(var i =\
    \ 1; i < numbers.length; i++){\n        var distance = numbers[i] - closest_pair;\n\
    \        if(distance < closest_distance){\n            closest_pair = numbers[i];\n\
    \            closest_distance = distance;\n        }\n    }\n    return [closest_pair,\
    \ closest_distance];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  0.20000000000000018\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpzwlhkobt.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzwlhkobt.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 0.20000000000000018\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.abs(numbers[0]);\n    var largest = Math.abs(numbers[1]);\n    var smallest_index\
    \ = 0;\n    var largest_index = 1;\n    \n    while(smallest_index < numbers.length\
    \ && largest<numbers[smallest_index]){\n        smallest = numbers[smallest_index];\n\
    \        smallest_index++;\n    }\n    \n    while(largest_index>0 && smallest>numbers[largest_index]){\n\
    \        largest = numbers[largest_index];\n        largest_index--;\n    }\n\
    \    \n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp__v6qbll.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp__v6qbll.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n  var smallest_number\
    \ = numbers[0];\n  var second_smallest_number = numbers[0];\n  var second_number\
    \ = numbers[1];\n  var smallest_difference = 0;\n  var second_difference = 0;\n\
    \  var smallest_index = -1;\n  var second_index = -1;\n  for(var i = 1; i < numbers.length;\
    \ i++){\n    var current_number = numbers[i];\n    var current_difference = Math.abs(current_number\
    \ - second_number);\n    if(current_difference < smallest_difference){\n     \
    \ smallest_difference = current_difference;\n      smallest_index = i;\n    }\n\
    \    if(current_difference < second_difference){\n      second_difference = current_difference;\n\
    \      second_index = i;\n    }\n  }\n  return [smallest_index, second_index];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpp42pqkcf.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp42pqkcf.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -1 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0], numbers[1]);\n\
    \tvar result = [smallest, largest];\n\tfor(var i = 2; i < numbers.length; i++){\n\
    \t\tvar current_smallest = Math.min(numbers[0], numbers[i]);\n\t\tvar current_largest\
    \ = Math.max(numbers[0], numbers[i]);\n\t\tif(current_smallest == smallest &&\
    \ current_largest == largest){\n\t\t\tresult.push(current_smallest);\n\t\t\tresult.push(current_largest);\n\
    \t\t\tbreak;\n\t\t}\n\t\telse if(current_smallest == smallest && current_largest\
    \ != largest){\n\t\t\tresult.push(current_smallest);\n\t\t\tresult.push(current_largest);\n\
    \t\t\tbreak;\n\t\t}\n\t\telse if(current_smallest != smallest && current_largest\
    \ == largest){\n\t\t\tresult.push(current_smallest);\n\t\t\tresult.push(current_largest);\n\
    \t\t\tbreak;\n\t\t}\n\t\telse if(current_smallest != smallest && current_largest\
    \ != largest){\n\t\t\tresult.push(current_smallest);\n\t\t\tresult.push(current_largest);\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  1,\n  3.9\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test\
    \ (/tmp/tmp2o6l7a2s.js:39:10)\n    at Object.<anonymous> (/tmp/tmp2o6l7a2s.js:46:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 1,\
    \ 3.9 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\t\n\tfor(var i = 0; i < numbers.length;\
    \ i++){\n\t\tvar current_number = numbers[i];\n\t\tvar current_distance = Math.abs(current_number);\n\
    \t\t\n\t\tfor(var j = 0; j < numbers.length; j++){\n\t\t\tvar other_number = numbers[j];\n\
    \t\t\tvar other_distance = Math.abs(other_number);\n\t\t\t\n\t\t\tif(current_distance\
    \ < other_distance){\n\t\t\t\tcurrent_number = other_number;\n\t\t\t\tcurrent_distance\
    \ = other_distance;\n\t\t\t}\n\t\t}\n\t\t\n\t\tclosest_numbers.push(current_number);\n\
    \t\tclosest_distances.push(current_distance);\n\t}\n\t\n\treturn [closest_numbers,\
    \ closest_distances];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    5,\n\
    \    5,\n    5,\n    5,\n    5,\n    5\n  ],\n  [\n    5,\n    5,\n    5,\n  \
    \  5,\n    5,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n\
    ]\n    at test (/tmp/tmpt96ic1te.js:33:10)\n    at Object.<anonymous> (/tmp/tmpt96ic1te.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 5, 5,\
    \ 5, 5, 5, 5 ], [ 5, 5, 5, 5, 5, 5 ] ],\n  expected: [ 3.9, 4 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var result\
    \ = [];\n    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        else if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    result.push(smallest);\n\
    \    result.push(largest);\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpbfautt43.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbfautt43.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpcswnpcmp.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcswnpcmp.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var closest_index = 0;\n    var\
    \ closest_distance = 0;\n    var current_index = 0;\n    var current_distance\
    \ = 0;\n    var current_number = numbers[0];\n    var current_number = numbers[1];\n\
    \    \n    while(current_index < numbers.length){\n        closest_distance =\
    \ Math.abs(current_number - numbers[current_index]);\n        closest_index =\
    \ current_index;\n        closest_distance = closest_distance;\n        \n   \
    \     while(current_index < numbers.length && closest_distance > current_distance){\n\
    \            current_index++;\n            current_number = numbers[current_index];\n\
    \            current_distance = closest_distance;\n        }\n        \n     \
    \   closest_numbers.push(current_number);\n        closest_distances.push(closest_distance);\n\
    \    }\n    \n    return closest_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = 0;\n    var largest_index = 0;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        else if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, largest_number];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpigrr10iw.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigrr10iw.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_elements\
    \ = [];\n\tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\
    \t\t\tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\
    \t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\tclosest_elements.push(smallest_number);\n\
    \tclosest_elements.push(largest_number);\n\treturn closest_elements;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpnh53_gaz.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnh53_gaz.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = 0;\n    var largest_index = 0;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, largest_number];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp9r_z7jcb.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9r_z7jcb.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0], numbers[1]);\n\
    \tvar result = [];\n\t\n\tfor(var i = smallest; i <= largest; i++){\n\t\tvar found\
    \ = false;\n\t\tfor(var j = 0; j < result.length; j++){\n\t\t\tif(result[j].number\
    \ == i){\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found){\n\
    \t\t\tresult.push({number: i, distance: Math.abs(i - smallest)});\n\t\t}\n\t}\n\
    \t\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  {\n    distance:\
    \ 0,\n    number: 1\n  },\n  {\n    distance: 1,\n    number: 2\n  }\n]\n\nshould\
    \ loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpke23u422.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpke23u422.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ { number:\
    \ 1, distance: 0 }, { number: 2, distance: 1 } ],\n  expected: [ 3.9, 4 ],\n \
    \ operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n  var closest_elements\
    \ = [];\n  var closest_distances = [];\n  var smallest_number = numbers[0];\n\
    \  var largest_number = numbers[0];\n  for(var i = 1; i < numbers.length; i++){\n\
    \    var current_number = numbers[i];\n    var current_distance = current_number\
    \ - smallest_number;\n    var current_distance_square = current_distance * current_distance;\n\
    \    var closest_distance = current_distance_square;\n    var closest_element\
    \ = current_number;\n    for(var j = 0; j < closest_elements.length; j++){\n \
    \     var current_element = closest_elements[j];\n      var current_distance_square\
    \ = current_element * current_element;\n      var current_distance = current_distance_square\
    \ + current_distance;\n      if(current_distance < closest_distance){\n      \
    \  closest_distance = current_distance;\n        closest_element = current_element;\n\
    \      }\n    }\n    closest_elements.push(closest_element);\n    closest_distances.push(closest_distance);\n\
    \    if(smallest_number > current_number){\n      smallest_number = current_number;\n\
    \    }\n    if(largest_number < current_number){\n      largest_number = current_number;\n\
    \    }\n  }\n  return [smallest_number, largest_number];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpgp76tzxq.js:40:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgp76tzxq.js:47:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpp65s48rc.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp65s48rc.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp47ltklgc.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp47ltklgc.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current_smallest = Math.min(numbers[i], numbers[i-1]);\n\
    \        var current_largest = Math.max(numbers[i], numbers[i-1]);\n        if(current_smallest\
    \ < smallest){\n            smallest = current_smallest;\n        }\n        if(current_largest\
    \ > largest){\n            largest = current_largest;\n        }\n        result.push(smallest);\n\
    \        result.push(largest);\n    }\n    return result;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  1,\n  3.9,\n  1,\n  4,\n  1,\n  5,\n  1,\n  5\n]\n\nshould loosely deep-equal\n\
    \n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpaqulz_lw.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaqulz_lw.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 2, 1, 3.9, 1,\n    4, 1, 5,   1, 5\n  ],\n  expected: [ 3.9, 4 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = numbers[0];\n\tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\
    \t\tif(numbers[i] > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpoufjywv4.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpoufjywv4.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var closest_index = 0;\n    var\
    \ closest_distance = 0;\n    var i;\n    for(i = 0; i < numbers.length; i++){\n\
    \        closest_distance = Math.abs(numbers[i] - numbers[closest_index]);\n \
    \       closest_numbers.push(numbers[i]);\n        closest_distances.push(closest_distance);\n\
    \        if(closest_distance < closest_distances[closest_index]){\n          \
    \  closest_index = i;\n            closest_distance = closest_distance;\n    \
    \    }\n    }\n    closest_numbers.reverse();\n    closest_distances.reverse();\n\
    \    return closest_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  5,\n\
    \  4,\n  3.9,\n  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n\
    \    at test (/tmp/tmpu_tu6lit.js:28:10)\n    at Object.<anonymous> (/tmp/tmpu_tu6lit.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 5,\
    \ 4, 3.9, 2, 1 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [];\n    for(var i = 2; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest || numbers[i] > largest){\n            result.push(smallest);\n\
    \            smallest = numbers[i];\n        }else{\n            result.push(largest);\n\
    \            largest = numbers[i];\n        }\n    }\n    result.push(smallest);\n\
    \    result.push(largest);\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3.9,\n\
    \  4,\n  5,\n  2.2,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n\
    \    at test (/tmp/tmplbsu07p0.js:26:10)\n    at Object.<anonymous> (/tmp/tmplbsu07p0.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 3.9,\
    \ 4, 5, 2.2, 2 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var smallest_number = numbers[0];\n\
    \    var largest_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        var current_number = numbers[i];\n        var current_distance\
    \ = current_number - smallest_number;\n        var current_distance_square = current_distance\
    \ * current_distance;\n        smallest_number = current_number;\n        for(var\
    \ j = 0; j < closest_numbers.length; j++){\n            var other_number = closest_numbers[j];\n\
    \            var other_distance = other_number - current_number;\n           \
    \ var other_distance_square = other_distance * other_distance;\n            if(other_distance_square\
    \ < current_distance_square){\n                closest_numbers[j] = current_number;\n\
    \                closest_distances[j] = current_distance;\n            }\n   \
    \     }\n        largest_number = current_number;\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  2.2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpc5qe9w47.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpc5qe9w47.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 2.2\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpjyp48tnn.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjyp48tnn.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n  var smallest_number\
    \ = numbers[0];\n  var largest_number = numbers[0];\n  for(var i = 1; i < numbers.length;\
    \ i++){\n    if(numbers[i] < smallest_number){\n      smallest_number = numbers[i];\n\
    \    }\n    if(numbers[i] > largest_number){\n      largest_number = numbers[i];\n\
    \    }\n  }\n  return [smallest_number, largest_number];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp3pac75hc.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3pac75hc.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n  var results\
    \ = [];\n  var smallest = numbers[0];\n  var largest = numbers[0];\n  for(var\
    \ i = 1; i < numbers.length; i++){\n    if(numbers[i] < smallest){\n      smallest\
    \ = numbers[i];\n    }\n    if(numbers[i] > largest){\n      largest = numbers[i];\n\
    \    }\n  }\n  results.push([smallest, largest]);\n  return results;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n\
    \    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test\
    \ (/tmp/tmpzsd6o1hu.js:24:10)\n    at Object.<anonymous> (/tmp/tmpzsd6o1hu.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 1, 5 ]\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = Math.abs(numbers[0]);\n\tvar largest = Math.abs(numbers[1]);\n\tvar smallest_index\
    \ = -1;\n\tvar largest_index = -1;\n\tfor(var i=0;i<numbers.length;i++){\n\t\t\
    if(Math.abs(numbers[i]) < smallest){\n\t\t\tsmallest = Math.abs(numbers[i]);\n\
    \t\t\tsmallest_index = i;\n\t\t}\n\t\tif(Math.abs(numbers[i]) > largest){\n\t\t\
    \tlargest = Math.abs(numbers[i]);\n\t\t\tlargest_index = i;\n\t\t}\n\t}\n\treturn\
    \ [numbers[smallest_index],numbers[largest_index]];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpaasec8kx.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaasec8kx.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ 5 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = -1;\n    var largest_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_index, largest_index];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpbw80rqa5.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbw80rqa5.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, 4 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\t\n\tfor(var i = 0; i < numbers.length;\
    \ i++){\n\t\tvar current_distance = numbers[i];\n\t\tvar current_number = numbers[i];\n\
    \t\t\n\t\tfor(var j = i + 1; j < numbers.length; j++){\n\t\t\tvar next_distance\
    \ = numbers[j];\n\t\t\tvar next_number = numbers[j];\n\t\t\t\n\t\t\tif(current_distance\
    \ < next_distance){\n\t\t\t\tcurrent_distance = next_distance;\n\t\t\t\tcurrent_number\
    \ = next_number;\n\t\t\t}\n\t\t}\n\t\t\n\t\tclosest_numbers.push(current_number);\n\
    \t\tclosest_distances.push(current_distance);\n\t}\n\t\n\treturn [closest_numbers,\
    \ closest_distances];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    5,\n\
    \    5,\n    5,\n    5,\n    5,\n    2.2\n  ],\n  [\n    5,\n    5,\n    5,\n\
    \    5,\n    5,\n    2.2\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n \
    \ 4\n]\n    at test (/tmp/tmp53rep5uz.js:33:10)\n    at Object.<anonymous> (/tmp/tmp53rep5uz.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 5, 5,\
    \ 5, 5, 5, 2.2 ], [ 5, 5, 5, 5, 5, 2.2 ] ],\n  expected: [ 3.9, 4 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\
    \t\t}\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest_number, largest_number];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpevk8xj0x.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpevk8xj0x.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = numbers[0];\n\tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\
    \t\tif(numbers[i] > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpocbsbaxi.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpocbsbaxi.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\
    \t\t}\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest_number, largest_number];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp51jbp4e7.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp51jbp4e7.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp396rzwb8.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp396rzwb8.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tvar closest_index = 0;\n\tvar closest_distance\
    \ = 0;\n\t\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tvar current_distance\
    \ = numbers[i] - numbers[i - 1];\n\t\tif(current_distance < closest_distance){\n\
    \t\t\tclosest_index = i;\n\t\t\tclosest_distance = current_distance;\n\t\t}\n\t\
    }\n\t\n\tclosest_numbers.push(numbers[closest_index]);\n\tclosest_numbers.push(numbers[closest_index\
    \ - 1]);\n\t\n\treturn closest_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp6cdytqtp.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6cdytqtp.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_elements\
    \ = [];\n\tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\
    \t\t\tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\
    \t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\tclosest_elements.push(smallest_number);\n\
    \tclosest_elements.push(largest_number);\n\treturn closest_elements;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpdxcmio0r.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdxcmio0r.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmplxber619.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmplxber619.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current = Math.max(numbers[i], numbers[i-1]);\n\
    \        var next = Math.min(numbers[i], numbers[i-1]);\n        if(current <\
    \ smallest || smallest == next){\n            smallest = current;\n        }\n\
    \        if(current > largest || largest == next){\n            largest = current;\n\
    \        }\n        result.push(current);\n    }\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3.9,\n  4,\n  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n\
    \    at test (/tmp/tmp_pbn1jtm.js:26:10)\n    at Object.<anonymous> (/tmp/tmp_pbn1jtm.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3.9,\
    \ 4, 5, 5 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var closest_distances = [];\n    var closest_distances_index = [];\n\
    \    var closest_distances_index2 = [];\n    var closest_distances_index3 = [];\n\
    \    var closest_distances_index4 = [];\n    var closest_distances_index5 = [];\n\
    \    var closest_distances_index6 = [];\n    var closest_distances_index7 = [];\n\
    \    var closest_distances_index8 = [];\n    var closest_distances_index9 = [];\n\
    \    var closest_distances_index10 = [];\n    var closest_distances_index11 =\
    \ [];\n    var closest_distances_index12 = [];\n    var closest_distances_index13\
    \ = [];\n    var closest_distances_index14 = [];\n    var closest_distances_index15\
    \ = [];\n    var closest_distances_index16 = [];\n    var closest_distances_index17\
    \ = [];\n    var closest_distances_index18 = [];\n    var closest_distances_index19\
    \ = [];\n    var closest_distances_index20 = [];\n    var closest_distances_index21\
    \ = [];\n    var closest_distances_index22 = [];\n    var closest_distances_index23\
    \ = [];\n    var closest_distances_index24 = [];\n    var closest_distances_index25\
    \ = [];\n    var closest_distances_index26 = [];\n    var closest_distances_index27\
    \ = [];\n    var closest_distances_index28 = [];\n    var closest_distances_index29\
    \ = [];\n    var closest_distances_index30 = [];\n    var closest_distances_index31\
    \ = [];\n    var closest_distances_index32 = [];\n    var closest_distances_index33\
    \ = [];\n    var closest_distances_index34 = [];\n    var closest_distances_index35\
    \ = [];\n    var closest_distances_index36 = [];\n    var closest_distances_index37\
    \ = [];\n    var closest_distances_index38 = [];\n    var closest_distances_index39\
    \ = [];\n    var closest_distances_index40 = [];\n    var closest_distances_index41\
    \ = [];\n    var closest_distances_index42 = [];\n    var closest_distances_index43\
    \ = [];\n    var closest_distances_index44 = [];\n    var closest_distances_index45\
    \ = [];\n    var closest_distances_index46 = [];\n    var closest_distances_index47\
    \ = [];\n    var closest_distances_index48 = [];\n    var closest_distances_index49\
    \ = [];\n    var closest_distances_index50 = [];\n    var closest_distances_index51\
    \ = [];\n    var closest_distances_index52 = [];\n    var closest_distances_index53\
    \ = [];\n    var closest_distances_index54 = [];\n    var closest_distances_index55\
    \ = [];\n    var closest_distances_index56 = [];\n    var closest_distances_index57\
    \ = [];\n    var closest_distances_index58 = [];\n    var closest_distances_index59\
    \ = [];\n    var closest_distances_index60 = [];\n    var closest_distances_index61\
    \ = [];\n    var closest_distances_\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpj_2920g2.js:80\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = -1;\n    var largest_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_index, largest_index];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp5o8w_qsk.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5o8w_qsk.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, 4 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpoq5sxiaw.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpoq5sxiaw.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min.apply(Math, numbers);\n    var largest = Math.max.apply(Math, numbers);\n\
    \    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i]\
    \ == smallest || numbers[i] == largest){\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmppezoekyp.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmppezoekyp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n  var smallest\
    \ = numbers[0];\n  var largest = numbers[0];\n  for(var i = 1; i < numbers.length;\
    \ i++){\n    if(numbers[i] < smallest){\n      smallest = numbers[i];\n    }\n\
    \    if(numbers[i] > largest){\n      largest = numbers[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpil33e3yk.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpil33e3yk.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var closest_index = 0;\n    var\
    \ closest_distance = 0;\n    var i;\n    var j;\n    for(i = 0; i < numbers.length;\
    \ i++){\n        for(j = 0; j < numbers.length; j++){\n            if(i != j){\n\
    \                var distance = numbers[i] - numbers[j];\n                if(closest_distance\
    \ > distance){\n                    closest_distance = distance;\n           \
    \         closest_index = i;\n                    closest_numbers = [numbers[i],\
    \ numbers[j]];\n                }\n            }\n        }\n    }\n    return\
    \ [closest_index, closest_numbers];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  [\n\
    \    1,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n   \
    \ at test (/tmp/tmp2ksrvcof.js:30:10)\n    at Object.<anonymous> (/tmp/tmp2ksrvcof.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, [ 1,\
    \ 5 ] ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tvar smallest_number = numbers[0];\n\t\
    var largest_number = numbers[0];\n\t\n\tfor(var i = 1; i < numbers.length; i++){\n\
    \t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\t\
    \t}\n\t\t\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\
    \t\t}\n\t\t\n\t\tclosest_numbers.push(smallest_number);\n\t\tclosest_numbers.push(largest_number);\n\
    \t\t\n\t\tvar distance = smallest_number - largest_number;\n\t\tclosest_distances.push(distance);\n\
    \t\tclosest_distances.push(distance);\n\t}\n\t\n\treturn [closest_numbers, closest_distances];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n\
    \    2,\n    1,\n    3.9,\n    1,\n    4,\n    1,\n    5,\n    1,\n    5\n  ],\n\
    \  [\n    -1,\n    -1,\n    -2.9,\n    -2.9,\n    -3,\n    -3,\n    -4,\n    -4,\n\
    \    -4,\n    -4\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n \
    \   at test (/tmp/tmp52msbyqe.js:34:10)\n    at Object.<anonymous> (/tmp/tmp52msbyqe.js:41:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [\n\
    \      1, 2, 1, 3.9, 1,\n      4, 1, 5,   1, 5\n    ],\n    [\n      -1, -1, -2.9,\
    \ -2.9,\n      -3, -3,   -4,   -4,\n      -4, -4\n    ]\n  ],\n  expected: [ 3.9,\
    \ 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\t\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tvar current_distance = numbers[i] - numbers[i - 1];\n\t\tvar current_index\
    \ = 0;\n\t\t\n\t\twhile(current_distance > closest_distances[current_index]){\n\
    \t\t\tcurrent_index++;\n\t\t}\n\t\t\n\t\tclosest_numbers.push(numbers[i - 1]);\n\
    \t\tclosest_numbers.push(numbers[current_index]);\n\t\tclosest_distances.push(current_distance);\n\
    \t}\n\t\n\treturn closest_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  2,\n  2,\n  3.9,\n  1,\n  4,\n  1,\n  5,\n  1\n]\n\nshould loosely deep-equal\n\
    \n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpl17o899b.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl17o899b.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 1, 2, 2, 3.9,\n    1, 4, 1, 5,   1\n  ],\n  expected: [ 3.9, 4 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_pair\
    \ = numbers[0];\n\tvar closest_distance = numbers[1];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tvar current_distance = numbers[i] - closest_pair;\n\t\tif(current_distance\
    \ < closest_distance){\n\t\t\tclosest_pair = numbers[i];\n\t\t\tclosest_distance\
    \ = current_distance;\n\t\t}\n\t}\n\treturn [closest_pair, closest_distance];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  0.20000000000000018\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpnzreqklh.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnzreqklh.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 0.20000000000000018\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0], numbers[1]);\n\
    \tvar result = [smallest, largest];\n\tfor(var i = 2; i < numbers.length; i++){\n\
    \t\tvar current_smallest = Math.min(numbers[0], numbers[i]);\n\t\tvar current_largest\
    \ = Math.max(numbers[0], numbers[i]);\n\t\tif(current_smallest < smallest){\n\t\
    \t\tsmallest = current_smallest;\n\t\t}\n\t\tif(current_largest > largest){\n\t\
    \t\tlargest = current_largest;\n\t\t}\n\t\tresult.push(current_smallest);\n\t\t\
    result.push(current_largest);\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  1,\n  3.9,\n  1,\n  4,\n  1,\n  5,\n  1,\n  2.2\n]\n\nshould loosely deep-equal\n\
    \n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpyc26jb6a.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyc26jb6a.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 2, 1, 3.9,   1,\n    4, 1, 5,   1, 2.2\n  ],\n  expected: [ 3.9, 4 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp82q68mpq.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp82q68mpq.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var biggest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > biggest_number){\n\
    \            biggest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ biggest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpj57rii70.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj57rii70.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current_smallest = Math.min(numbers[0], numbers[i]);\n\
    \        var current_largest = Math.max(numbers[0], numbers[i]);\n        if(current_smallest\
    \ == smallest && current_largest == largest){\n            continue;\n       \
    \ }\n        if(current_smallest < smallest && current_largest > largest){\n \
    \           smallest = current_smallest;\n            largest = current_largest;\n\
    \            result[0] = smallest;\n            result[1] = largest;\n       \
    \ }\n        else if(current_smallest > smallest && current_largest < largest){\n\
    \            smallest = current_smallest;\n            largest = current_largest;\n\
    \            result[0] = smallest;\n            result[1] = largest;\n       \
    \ }\n        else if(current_smallest < smallest && current_largest > largest){\n\
    \            smallest = current_smallest;\n            largest = current_largest;\n\
    \            result[0] = smallest;\n            result[1] = largest;\n       \
    \ }\n        else if(current_smallest > smallest && current_largest < largest){\n\
    \            smallest = current_smallest;\n            largest = current_largest;\n\
    \            result[0] = smallest;\n            result[1] = largest;\n       \
    \ }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnaprsjz3.js:40\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpaqq4k7tf.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaqq4k7tf.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = numbers[0];\n\tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\
    \t\tif(numbers[i] > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp3qso9xte.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3qso9xte.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n  var smallest\
    \ = numbers[0];\n  var largest = numbers[0];\n  for(var i = 1; i < numbers.length;\
    \ i++){\n    if(numbers[i] < smallest){\n      smallest = numbers[i];\n    }\n\
    \    if(numbers[i] > largest){\n      largest = numbers[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmplt34zay3.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmplt34zay3.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        else if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpf1rbqpme.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf1rbqpme.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = -1;\n    var largest_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, largest_number];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp85ystxfe.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp85ystxfe.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = numbers[0];\n\tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\
    \t\tif(numbers[i] > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp4qk1do_a.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4qk1do_a.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var closest_distance = Number.MAX_VALUE;\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        var distance = numbers[i] - numbers[closest_elements.length];\n\
    \        if(distance < closest_distance){\n            closest_elements = [numbers[i]];\n\
    \            closest_distance = distance;\n        }\n        else if(distance\
    \ == closest_distance){\n            closest_elements.push(numbers[i]);\n    \
    \    }\n    }\n    return closest_elements;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3.9,\n  4,\n  5,\n  2.2\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n\
    ]\n    at test (/tmp/tmp7x6k20ig.js:24:10)\n    at Object.<anonymous> (/tmp/tmp7x6k20ig.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3.9,\
    \ 4, 5, 2.2 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var results\
    \ = [];\n    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    results.push([smallest,\
    \ largest]);\n    return results;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n\
    \    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test\
    \ (/tmp/tmphjrb_c7m.js:24:10)\n    at Object.<anonymous> (/tmp/tmphjrb_c7m.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 1, 5 ]\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_pair\
    \ = numbers[0];\n    var closest_distance = Number.MAX_VALUE;\n    var closest_index\
    \ = 0;\n    for(var i = 1; i < numbers.length; i++){\n        var distance = numbers[i]\
    \ - closest_pair;\n        if(distance < closest_distance){\n            closest_pair\
    \ = numbers[i];\n            closest_distance = distance;\n            closest_index\
    \ = i;\n        }\n    }\n    return [closest_pair, numbers[closest_index]];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  2.2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpzaavi3sl.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzaavi3sl.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 2.2\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\
    \t\t}\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest_number, largest_number];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpwg0n54ug.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwg0n54ug.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tfor(var i = 0; i < numbers.length; i++){\n\
    \t\tvar current_distance = numbers[i];\n\t\tfor(var j = i + 1; j < numbers.length;\
    \ j++){\n\t\t\tvar next_distance = numbers[j];\n\t\t\tif(next_distance < current_distance){\n\
    \t\t\t\tcurrent_distance = next_distance;\n\t\t\t}\n\t\t}\n\t\tclosest_numbers.push(current_distance);\n\
    \t\tclosest_distances.push(current_distance);\n\t}\n\tclosest_numbers.sort(function(a,\
    \ b){return b - a});\n\tclosest_distances.sort(function(a, b){return b - a});\n\
    \treturn [closest_numbers[0], closest_numbers[closest_numbers.length - 1]];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmptl87rfbg.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmptl87rfbg.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 1 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        if(numbers[i] >\
    \ largest_number){\n            largest_number = numbers[i];\n        }\n    }\n\
    \    closest_elements.push(smallest_number);\n    closest_elements.push(largest_number);\n\
    \    return closest_elements;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp0jr71qld.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0jr71qld.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp05k64zvt.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp05k64zvt.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = -1;\n    var largest_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, largest_number];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpnout52fx.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnout52fx.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current = Math.max(numbers[i], numbers[i-1]);\n\
    \        var next = Math.min(numbers[i], numbers[i-1]);\n        if(current <\
    \ smallest){\n            smallest = current;\n            result[0] = current;\n\
    \        }\n        if(next > largest){\n            largest = next;\n       \
    \     result[1] = next;\n        }\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp9kdp9g8y.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9kdp9g8y.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 4 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var result\
    \ = [];\n    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    result.push(smallest);\n\
    \    result.push(largest);\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp23mej18m.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp23mej18m.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmposaqzndc.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmposaqzndc.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar largest_number = numbers[0];\n\tvar smallest_index = -1;\n\
    \tvar largest_index = -1;\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\t\t\tsmallest_index\
    \ = i;\n\t\t}\n\t\telse if(numbers[i] > largest_number){\n\t\t\tlargest_number\
    \ = numbers[i];\n\t\t\tlargest_index = i;\n\t\t}\n\t}\n\treturn [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpr9o5lkyx.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr9o5lkyx.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_pair\
    \ = numbers[0];\n    var closest_distance = numbers[1];\n    var closest_index\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        var current_distance\
    \ = numbers[i];\n        if(current_distance < closest_distance){\n          \
    \  closest_pair = numbers[i];\n            closest_distance = current_distance;\n\
    \            closest_index = i;\n        }\n    }\n    return [closest_pair, closest_index];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmplc13k72g.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmplc13k72g.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar largest_number = numbers[0];\n\tvar smallest_index = 0;\n\
    \tvar largest_index = 0;\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\t\t\tsmallest_index\
    \ = i;\n\t\t}\n\t\telse if(numbers[i] > largest_number){\n\t\t\tlargest_number\
    \ = numbers[i];\n\t\t\tlargest_index = i;\n\t\t}\n\t}\n\treturn [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp07isiui_.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp07isiui_.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var second_smallest_number = numbers[0];\n    var smallest_index\
    \ = 0;\n    var second_smallest_index = 0;\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest_number){\n            smallest_number\
    \ = numbers[i];\n            smallest_index = i;\n        }\n        else if(numbers[i]\
    \ > second_smallest_number){\n            second_smallest_number = numbers[i];\n\
    \            second_smallest_index = i;\n        }\n    }\n    return [smallest_number,\
    \ second_smallest_number];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpt0l50eip.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt0l50eip.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\
    \t\t}\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest_number, largest_number];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpf_vua6xb.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf_vua6xb.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min.apply(null, numbers);\n    var largest = Math.max.apply(null, numbers);\n\
    \    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i]\
    \ == smallest){\n            result.push(smallest);\n        }\n        else if(numbers[i]\
    \ == largest){\n            result.push(largest);\n        }\n        else{\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3.9,\n  4,\n  5,\n  2.2\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n\
    ]\n    at test (/tmp/tmpehvxsbzx.js:26:10)\n    at Object.<anonymous> (/tmp/tmpehvxsbzx.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3.9,\
    \ 4, 5, 2.2 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\t\n\tfor(var i = 0; i < numbers.length;\
    \ i++){\n\t\tvar current_distance = numbers[i];\n\t\tvar current_number = numbers[i];\n\
    \t\t\n\t\tfor(var j = i + 1; j < numbers.length; j++){\n\t\t\tvar next_distance\
    \ = numbers[j];\n\t\t\tvar next_number = numbers[j];\n\t\t\t\n\t\t\tif(next_distance\
    \ < current_distance){\n\t\t\t\tcurrent_distance = next_distance;\n\t\t\t\tcurrent_number\
    \ = next_number;\n\t\t\t}\n\t\t}\n\t\t\n\t\tclosest_numbers.push(current_number);\n\
    \t\tclosest_distances.push(current_distance);\n\t}\n\t\n\treturn [closest_numbers,\
    \ closest_distances];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n\
    \    2,\n    2.2,\n    2.2,\n    2.2,\n    2.2\n  ],\n  [\n    1,\n    2,\n  \
    \  2.2,\n    2.2,\n    2.2,\n    2.2\n  ]\n]\n\nshould loosely deep-equal\n\n\
    [\n  3.9,\n  4\n]\n    at test (/tmp/tmp6__hg5cq.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6__hg5cq.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 1, 2,\
    \ 2.2, 2.2, 2.2, 2.2 ], [ 1, 2, 2.2, 2.2, 2.2, 2.2 ] ],\n  expected: [ 3.9, 4\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmptq_qlhy9.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmptq_qlhy9.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar largest_number = numbers[0];\n\tvar smallest_index = 0;\n\
    \tvar largest_index = 0;\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\t\t\tsmallest_index\
    \ = i;\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\
    \t\t\tlargest_index = i;\n\t\t}\n\t}\n\treturn [smallest_number, largest_number];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpm5qkbw23.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm5qkbw23.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpjznvoqk0.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjznvoqk0.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [numbers[0]];\n\tvar closest_distances = [numbers[0]];\n\tfor(var i = 1; i\
    \ < numbers.length; i++){\n\t\tvar current_distance = numbers[i] - numbers[i -\
    \ 1];\n\t\tif(current_distance < closest_distances[0]){\n\t\t\tclosest_numbers\
    \ = [numbers[i]];\n\t\t\tclosest_distances = [current_distance];\n\t\t}else{\n\
    \t\t\tclosest_numbers.push(numbers[i]);\n\t\t\tclosest_distances.push(current_distance);\n\
    \t\t}\n\t}\n\treturn [closest_numbers, closest_distances];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2.2\n\
    \  ],\n  [\n    -2.8\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n\
    ]\n    at test (/tmp/tmp4mflrz8v.js:24:10)\n    at Object.<anonymous> (/tmp/tmp4mflrz8v.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2.2 ],\
    \ [ -2.8 ] ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_pairs\
    \ = [];\n    var closest_pair;\n    var closest_number;\n    var closest_distance;\n\
    \    var i;\n    for(i = 0; i < numbers.length; i++){\n        closest_number\
    \ = numbers[i];\n        closest_distance = Number.MAX_VALUE;\n        for(j =\
    \ 0; j < numbers.length; j++){\n            if(j != i){\n                var distance\
    \ = abs(closest_number - numbers[j]);\n                if(distance < closest_distance){\n\
    \                    closest_number = numbers[j];\n                    closest_distance\
    \ = distance;\n                }\n            }\n        }\n        closest_pair\
    \ = [closest_number, i];\n        closest_pairs.push(closest_pair);\n    }\n \
    \   return closest_pairs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3o789wju.js:14\n                var distance = abs(closest_number\
    \ - numbers[j]);\n                               ^\n\nReferenceError: abs is not\
    \ defined\n    at find_closest_elements (/tmp/tmp3o789wju.js:14:32)\n    at test\
    \ (/tmp/tmp3o789wju.js:32:20)\n    at Object.<anonymous> (/tmp/tmp3o789wju.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0], numbers[1]);\n\
    \tvar result = [];\n\tfor(var i = 0; i <= largest; i++){\n\t\tif(numbers[0] ==\
    \ i){\n\t\t\tresult.push(smallest);\n\t\t}\n\t\telse if(numbers[1] == i){\n\t\t\
    \tresult.push(largest);\n\t\t}\n\t\telse{\n\t\t\tvar diff = Math.abs(numbers[0]\
    \ - i);\n\t\t\tif(diff < smallest){\n\t\t\t\tresult.push(smallest);\n\t\t\t\t\
    smallest = diff;\n\t\t\t}\n\t\t\telse if(diff > largest){\n\t\t\t\tresult.push(largest);\n\
    \t\t\t\tlargest = diff;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpfyq19vzf.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfyq19vzf.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpa6ctmq32.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa6ctmq32.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpktmtaknl.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpktmtaknl.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp2klborgt.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2klborgt.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        var distance = find_closest_distance(numbers[i], numbers);\n\
    \        closest_numbers.push(numbers[i]);\n        closest_distances.push(distance);\n\
    \    }\n    closest_numbers.sort(function(a, b){\n        return a - b;\n    });\n\
    \    closest_distances.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return closest_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0fxwm9t5.js:7\n        var distance = find_closest_distance(numbers[i],\
    \ numbers);\n                       ^\n\nReferenceError: find_closest_distance\
    \ is not defined\n    at find_closest_elements (/tmp/tmp0fxwm9t5.js:7:24)\n  \
    \  at test (/tmp/tmp0fxwm9t5.js:25:20)\n    at Object.<anonymous> (/tmp/tmp0fxwm9t5.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = numbers[0];\n\tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\
    \t\tif(numbers[i] > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpnseuljxu.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnseuljxu.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\
    \t\t}\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest_number, largest_number];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpmzy__4gb.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmzy__4gb.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min.apply(Math, numbers);\n    var largest = Math.max.apply(Math, numbers);\n\
    \    var result = [];\n    for(var i=0;i<numbers.length;i++){\n        if(numbers[i]\
    \ == smallest){\n            result.push(smallest);\n        }\n        else if(numbers[i]\
    \ == largest){\n            result.push(largest);\n        }\n        else{\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpcrshljit.js:20\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = numbers[0];\n\tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\
    \t\tif(numbers[i] > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp9eykn0jl.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9eykn0jl.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpfmfjx2td.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfmfjx2td.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_elements\
    \ = [];\n\tvar closest_distances = [];\n\tvar closest_index = 0;\n\tvar closest_distance\
    \ = 0;\n\tvar closest_number = numbers[0];\n\tvar closest_distance_to_closest_number\
    \ = numbers[1];\n\tvar closest_number_to_closest_distance = numbers[2];\n\t\n\t\
    for(var i = 1; i < numbers.length; i++){\n\t\tvar current_number = numbers[i];\n\
    \t\tvar current_distance = Math.abs(current_number - closest_number);\n\t\t\n\t\
    \tif(current_distance < closest_distance){\n\t\t\tclosest_number = current_number;\n\
    \t\t\tclosest_distance = current_distance;\n\t\t\tclosest_index = i;\n\t\t}\n\t\
    \t\n\t\tvar current_distance_to_closest_number = Math.abs(current_number - closest_number_to_closest_number);\n\
    \t\t\n\t\tif(current_distance_to_closest_number < closest_distance_to_closest_number){\n\
    \t\t\tclosest_number_to_closest_number = current_number;\n\t\t\tclosest_distance_to_closest_number\
    \ = current_distance_to_closest_number;\n\t\t\tclosest_index = i;\n\t\t}\n\t}\n\
    \t\n\tclosest_elements.push(closest_number);\n\tclosest_elements.push(closest_number_to_closest_number);\n\
    \tclosest_elements.push(closest_distance);\n\tclosest_elements.push(closest_distance_to_closest_number);\n\
    \t\n\treturn closest_elements;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjgm8816z.js:22\n\t\tvar current_distance_to_closest_number = Math.abs(current_number\
    \ - closest_number_to_closest_number);\n\t\t                                 \
    \                                  ^\n\nReferenceError: closest_number_to_closest_number\
    \ is not defined\n    at find_closest_elements (/tmp/tmpjgm8816z.js:22:70)\n \
    \   at test (/tmp/tmpjgm8816z.js:44:20)\n    at Object.<anonymous> (/tmp/tmpjgm8816z.js:51:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_elements\
    \ = [];\n\tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\
    \t\t\tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\
    \t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\tclosest_elements.push(smallest_number);\n\
    \tclosest_elements.push(largest_number);\n\treturn closest_elements;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp99v14mpx.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99v14mpx.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var biggest_number = numbers[0];\n    var smallest_index\
    \ = -1;\n    var biggest_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        else if(numbers[i] > biggest_number){\n\
    \            biggest_number = numbers[i];\n            biggest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, biggest_number];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmprbsmxnud.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmprbsmxnud.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = -1;\n    var largest_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, largest_number];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp83uq7owv.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp83uq7owv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_numbers_index = 0;\n\tvar closest_numbers_distance = 0;\n\
    \tvar current_number = 0;\n\tvar current_distance = 0;\n\tvar current_index =\
    \ 0;\n\t\n\tfor(var i = 0; i < numbers.length; i++){\n\t\tcurrent_number = numbers[i];\n\
    \t\tcurrent_distance = current_number;\n\t\tcurrent_index = 0;\n\t\t\n\t\twhile(current_distance\
    \ > closest_numbers_distance){\n\t\t\tcurrent_index++;\n\t\t\tcurrent_distance\
    \ = current_numbers[current_index];\n\t\t}\n\t\t\n\t\tclosest_numbers.push(current_index);\n\
    \t\tclosest_numbers_distance = current_distance;\n\t}\n\t\n\treturn closest_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9l_5668v.js:18\n\t\t\tcurrent_distance = current_numbers[current_index];\n\
    \t\t\t^\n\nReferenceError: current_numbers is not defined\n    at find_closest_elements\
    \ (/tmp/tmp9l_5668v.js:18:4)\n    at test (/tmp/tmp9l_5668v.js:33:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp9l_5668v.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var new_smallest = Math.min(numbers[0], numbers[i]);\n\
    \        var new_largest = Math.max(numbers[0], numbers[i]);\n        if(new_smallest\
    \ < smallest){\n            smallest = new_smallest;\n            result[0] =\
    \ smallest;\n        }\n        if(new_largest > largest){\n            largest\
    \ = new_largest;\n            result[1] = largest;\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp8oe3_3wv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8oe3_3wv.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current = Math.max(numbers[i], numbers[i-1]);\n\
    \        var next = Math.min(numbers[i], numbers[i-1]);\n        if(current <\
    \ smallest){\n            smallest = current;\n            result[0] = current;\n\
    \        }\n        else if(current > largest){\n            largest = current;\n\
    \            result[1] = current;\n        }\n        else if(next < smallest){\n\
    \            smallest = next;\n            result[0] = current;\n        }\n \
    \       else if(next > largest){\n            largest = next;\n            result[1]\
    \ = current;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpdq5o1j35.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdq5o1j35.js:42:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current = Math.max(numbers[i], numbers[i-1]);\n\
    \        var next = Math.min(numbers[i], numbers[i-1]);\n        if(current ==\
    \ next){\n            continue;\n        }\n        if(current < smallest){\n\
    \            smallest = current;\n        }\n        if(current > largest){\n\
    \            largest = current;\n        }\n        result.push(current);\n  \
    \  }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3.9,\n  4,\n  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n\
    \    at test (/tmp/tmpl2lj3rnt.js:29:10)\n    at Object.<anonymous> (/tmp/tmpl2lj3rnt.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3.9,\
    \ 4, 5, 5 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min.apply(Math, numbers);\n    var largest = Math.max.apply(Math, numbers);\n\
    \    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i]\
    \ === smallest || numbers[i] === largest){\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpby527dpt.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpby527dpt.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current = Math.max(numbers[i], numbers[i-1]);\n\
    \        var next = Math.min(numbers[i], numbers[i-1]);\n        if(current <\
    \ smallest){\n            smallest = current;\n            result[0] = current;\n\
    \        }\n        if(next > largest){\n            largest = next;\n       \
    \     result[1] = next;\n        }\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpkq5y5wpx.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkq5y5wpx.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 4 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpmtit6xlt.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmtit6xlt.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var results\
    \ = [];\n    numbers.forEach(function(number){\n        var smallest = numbers[0];\n\
    \        var largest = numbers[0];\n        numbers.forEach(function(number){\n\
    \            if(number < smallest || number > largest){\n                smallest\
    \ = number;\n                largest = number;\n            }\n        });\n \
    \       results.push({\n            number: smallest,\n            distance: largest\
    \ - smallest\n        });\n    });\n    results.sort(function(a, b){\n       \
    \ return a.distance - b.distance;\n    });\n    return results;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  {\n    distance:\
    \ 0,\n    number: 2.2\n  },\n  {\n    distance: 0,\n    number: 2.2\n  },\n  {\n\
    \    distance: 0,\n    number: 2.2\n  },\n  {\n    distance: 0,\n    number: 2.2\n\
    \  },\n  {\n    distance: 0,\n    number: 2.2\n  },\n  {\n    distance: 0,\n \
    \   number: 2.2\n  }\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n  \
    \  at test (/tmp/tmp7crip6pk.js:30:10)\n    at Object.<anonymous> (/tmp/tmp7crip6pk.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    { number:\
    \ 2.2, distance: 0 },\n    { number: 2.2, distance: 0 },\n    { number: 2.2, distance:\
    \ 0 },\n    { number: 2.2, distance: 0 },\n    { number: 2.2, distance: 0 },\n\
    \    { number: 2.2, distance: 0 }\n  ],\n  expected: [ 3.9, 4 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp1nnj1inj.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1nnj1inj.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current_smallest = Math.min(numbers[0], numbers[i]);\n\
    \        var current_largest = Math.max(numbers[0], numbers[i]);\n        if(current_smallest\
    \ == smallest && current_largest == largest){\n            result.push(current_smallest);\n\
    \            result.push(current_largest);\n        }else if(current_smallest\
    \ == smallest && current_largest != largest){\n            result.push(current_smallest);\n\
    \            largest = current_largest;\n        }else if(current_smallest !=\
    \ smallest && current_largest == largest){\n            smallest = current_smallest;\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  1,\n  1,\n  1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n\
    \    at test (/tmp/tmp7cr5gej7.js:28:10)\n    at Object.<anonymous> (/tmp/tmp7cr5gej7.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 1,\
    \ 1, 1, 1 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpsugmxrwx.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsugmxrwx.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0], numbers[1]);\n\
    \tvar result = [smallest, largest];\n\tfor(var i = 2; i < numbers.length; i++){\n\
    \t\tvar current = Math.max(numbers[i], numbers[i-1]);\n\t\tvar next = Math.min(numbers[i],\
    \ numbers[i-1]);\n\t\tif(current < smallest){\n\t\t\tsmallest = current;\n\t\t\
    }\n\t\tif(next > largest){\n\t\t\tlargest = next;\n\t\t}\n\t\tresult.push(current);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3.9,\n  4,\n  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n\
    \    at test (/tmp/tmplb4n3d2f.js:26:10)\n    at Object.<anonymous> (/tmp/tmplb4n3d2f.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3.9,\
    \ 4, 5, 5 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n  var result\
    \ = [];\n  var smallest = numbers[0];\n  var largest = numbers[0];\n  for(var\
    \ i = 1; i < numbers.length; i++){\n    if(numbers[i] < smallest){\n      smallest\
    \ = numbers[i];\n    }\n    if(numbers[i] > largest){\n      largest = numbers[i];\n\
    \    }\n  }\n  result.push(smallest);\n  result.push(largest);\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpn_2mu6p2.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn_2mu6p2.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest || numbers[i] > largest){\n            continue;\n\
    \        }\n        result.push(numbers[i]);\n    }\n    return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpdt8po783.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdt8po783.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_elements\
    \ = [];\n\tvar closest_distance = Number.MAX_VALUE;\n\tvar closest_index = 0;\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tvar distance = numbers[i] - numbers[closest_index];\n\
    \t\tif(distance < closest_distance){\n\t\t\tclosest_distance = distance;\n\t\t\
    \tclosest_index = i;\n\t\t}\n\t}\n\tclosest_elements.push(numbers[closest_index]);\n\
    \tclosest_elements.push(numbers[closest_index - 1]);\n\treturn closest_elements;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpb5pgxjen.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb5pgxjen.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar biggest_number = numbers[0];\n\tvar smallest_index = -1;\n\
    \tvar biggest_index = -1;\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\t\t\tsmallest_index\
    \ = i;\n\t\t}\n\t\tif(numbers[i] > biggest_number){\n\t\t\tbiggest_number = numbers[i];\n\
    \t\t\tbiggest_index = i;\n\t\t}\n\t}\n\treturn [smallest_number, biggest_number];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp3ic1n05_.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3ic1n05_.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest_number\
    \ = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\
    \t\t}\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\
    \t\t}\n\t}\n\treturn [smallest_number, largest_number];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpti_bpgt_.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpti_bpgt_.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tvar closest_index = 0;\n\tvar closest_distance\
    \ = 0;\n\tvar closest_number = numbers[0];\n\tvar closest_distance = numbers[1];\n\
    \tvar closest_index = numbers[0];\n\tfor(var i = 1; i < numbers.length; i++){\n\
    \t\tvar current_distance = numbers[i] - closest_number;\n\t\tif(current_distance\
    \ < closest_distance){\n\t\t\tclosest_number = numbers[i];\n\t\t\tclosest_distance\
    \ = current_distance;\n\t\t\tclosest_index = i;\n\t\t}\n\t}\n\tclosest_numbers.push(closest_number);\n\
    \tclosest_distances.push(closest_distance);\n\treturn [closest_numbers, closest_distances];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2.2\n\
    \  ],\n  [\n    0.20000000000000018\n  ]\n]\n\nshould loosely deep-equal\n\n[\n\
    \  3.9,\n  4\n]\n    at test (/tmp/tmp_cbucf27.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_cbucf27.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2.2 ],\
    \ [ 0.20000000000000018 ] ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var biggest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > biggest_number){\n\
    \            biggest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ biggest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmptmkmxrpb.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmptmkmxrpb.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\t\n\tfor(var i = 0; i < numbers.length;\
    \ i++){\n\t\tfor(var j = 0; j < numbers.length; j++){\n\t\t\tif(i != j){\n\t\t\
    \t\tvar distance = numbers[i] - numbers[j];\n\t\t\t\tif(closest_distances.length\
    \ < 2){\n\t\t\t\t\tclosest_distances.push(distance);\n\t\t\t\t\tclosest_numbers.push(numbers[i]);\n\
    \t\t\t\t\tclosest_numbers.push(numbers[j]);\n\t\t\t\t}\n\t\t\t\telse if(closest_distances[0]\
    \ > distance){\n\t\t\t\t\tclosest_distances[0] = distance;\n\t\t\t\t\tclosest_numbers[0]\
    \ = numbers[i];\n\t\t\t\t\tclosest_numbers[1] = numbers[j];\n\t\t\t\t}\n\t\t\t\
    \telse if(closest_distances[1] < distance){\n\t\t\t\t\tclosest_distances[1] =\
    \ distance;\n\t\t\t\t\tclosest_numbers[1] = numbers[i];\n\t\t\t\t\tclosest_numbers[0]\
    \ = numbers[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn closest_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  1,\n  3.9\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test\
    \ (/tmp/tmpemuf5jvl.js:38:10)\n    at Object.<anonymous> (/tmp/tmpemuf5jvl.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5, 1,\
    \ 3.9 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpkcqxl6q4.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkcqxl6q4.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tfor(var i = 0; i < numbers.length; i++){\n\
    \t\tclosest_numbers.push(numbers[i]);\n\t\tclosest_distances.push(0);\n\t}\n\t\
    for(var i = 0; i < numbers.length; i++){\n\t\tfor(var j = 0; j < numbers.length;\
    \ j++){\n\t\t\tif(i != j){\n\t\t\t\tvar distance = numbers[i] - numbers[j];\n\t\
    \t\t\tif(closest_distances[j] < distance){\n\t\t\t\t\tclosest_numbers[j] = numbers[j];\n\
    \t\t\t\t\tclosest_distances[j] = distance;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\
    return [closest_numbers[0], closest_numbers[closest_numbers.length - 1]];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2.2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpp6siir6y.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp6siir6y.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2.2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpjg15ihhz.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjg15ihhz.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_pair\
    \ = numbers[0];\n\tvar closest_distance = numbers[1];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tvar distance = numbers[i] - closest_pair;\n\t\tif(distance < closest_distance){\n\
    \t\t\tclosest_pair = numbers[i];\n\t\t\tclosest_distance = distance;\n\t\t}\n\t\
    }\n\treturn [closest_pair, closest_distance];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  0.20000000000000018\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpy4tyok4t.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy4tyok4t.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 0.20000000000000018\
    \ ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpsk8k2g5u.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsk8k2g5u.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        if(numbers[i] >\
    \ largest_number){\n            largest_number = numbers[i];\n        }\n    }\n\
    \    closest_elements.push(smallest_number);\n    closest_elements.push(largest_number);\n\
    \    return closest_elements;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp0lun6xi4.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0lun6xi4.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tvar closest_index = 0;\n\tvar closest_distance\
    \ = 0;\n\tvar closest_number = numbers[0];\n\tvar closest_distance = numbers[1];\n\
    \tvar closest_index = 0;\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tvar\
    \ current_distance = numbers[i] - closest_number;\n\t\tif(current_distance < closest_distance){\n\
    \t\t\tclosest_number = numbers[i];\n\t\t\tclosest_distance = current_distance;\n\
    \t\t\tclosest_index = i;\n\t\t}\n\t}\n\tclosest_numbers.push(closest_number);\n\
    \tclosest_distances.push(closest_distance);\n\treturn [closest_numbers, closest_distances];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2.2\n\
    \  ],\n  [\n    0.20000000000000018\n  ]\n]\n\nshould loosely deep-equal\n\n[\n\
    \  3.9,\n  4\n]\n    at test (/tmp/tmpw6stvkgq.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw6stvkgq.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2.2 ],\
    \ [ 0.20000000000000018 ] ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        else if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmphge9f9e6.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmphge9f9e6.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        if(numbers[i] >\
    \ largest_number){\n            largest_number = numbers[i];\n        }\n    }\n\
    \    closest_elements.push(smallest_number);\n    closest_elements.push(largest_number);\n\
    \    return closest_elements;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpk_szrmu1.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk_szrmu1.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var biggest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > biggest_number){\n\
    \            biggest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ biggest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpsj_fhxcz.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsj_fhxcz.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = 0;\n    var largest_index = 0;\n    for(var i = 0; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, largest_number];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp7kr47r6e.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7kr47r6e.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpz_i6aq5u.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz_i6aq5u.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp236rtsbk.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp236rtsbk.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n\tvar smallest\
    \ = numbers[0];\n\tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\
    \t\telse if(numbers[i] > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\t\
    return [smallest, largest];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp3hde2nuy.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3hde2nuy.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var result\
    \ = [];\n    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    result.push(smallest);\n\
    \    result.push(largest);\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpnyl9a4nr.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnyl9a4nr.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_pair\
    \ = numbers[0];\n    var closest_distance = numbers[1];\n    var closest_element\
    \ = numbers[2];\n\n    for(var i = 1; i < numbers.length; i++){\n        var current_distance\
    \ = numbers[i] - closest_pair;\n        if(current_distance < closest_distance){\n\
    \            closest_pair = numbers[i];\n            closest_distance = current_distance;\n\
    \            closest_element = numbers[i];\n        }\n    }\n\n    return [closest_pair,\
    \ closest_distance, closest_element];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2.2,\n  0.20000000000000018,\n\
    \  2.2\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpyt5liljh.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyt5liljh.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2.2, 0.20000000000000018,\
    \ 2.2 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var smallest\
    \ = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var new_smallest = Math.min(numbers[i], numbers[i-1]);\n\
    \        var new_largest = Math.max(numbers[i], numbers[i-1]);\n        if(new_smallest\
    \ < smallest){\n            smallest = new_smallest;\n        }\n        if(new_largest\
    \ > largest){\n            largest = new_largest;\n        }\n        result.push(new_smallest,\
    \ new_largest);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  2,\n  3.9,\n  3.9,\n  4,\n  4,\n  5,\n  2.2,\n  5\n]\n\nshould loosely deep-equal\n\
    \n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp5y9pu_u4.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5y9pu_u4.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 2, 2, 3.9, 3.9,\n    4, 4, 5, 2.2,   5\n  ],\n  expected: [ 3.9, 4 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\nfunction find_closest_elements(numbers){\n    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var closest_index = 0;\n    var\
    \ closest_distance = 0;\n    var closest_number = numbers[0];\n    var closest_distance\
    \ = numbers[1];\n    var i;\n    for(i = 2; i < numbers.length; i++){\n      \
    \  var current_distance = numbers[i] - closest_number;\n        if(current_distance\
    \ < closest_distance){\n            closest_number = numbers[i];\n           \
    \ closest_distance = current_distance;\n            closest_index = i;\n     \
    \   }\n    }\n    closest_numbers.push(closest_number);\n    closest_distances.push(closest_distance);\n\
    \    return { numbers: closest_numbers, distances: closest_distances };\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  distances:\
    \ [\n    1.2000000000000002\n  ],\n  numbers: [\n    2.2\n  ]\n}\n\nshould loosely\
    \ deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpl_is4e5s.js:29:10)\n \
    \   at Object.<anonymous> (/tmp/tmpl_is4e5s.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { numbers:\
    \ [ 2.2 ], distances: [ 1.2000000000000002 ] },\n  expected: [ 3.9, 4 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

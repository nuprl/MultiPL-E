name: HumanEval_10_make_palindrome
language: js
prompt: "//Find the shortest palindrome that begins with a supplied string.\n// Algorithm\
  \ idea is simple:\n// - Find the longest postfix of supplied string that is a palindrome.\n\
  // - Append to the end of the string reverse of a string prefix that comes before\
  \ the palindromic suffix.\nfunction make_palindrome(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = make_palindrome;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
  x\"),\"x\");\n  assert.deepEqual(candidate(\"xyz\"),\"xyzyx\");\n  assert.deepEqual(candidate(\"\
  xyx\"),\"xyx\");\n  assert.deepEqual(candidate(\"jerry\"),\"jerryrrej\");\n}\n\n\
  test();"
completions: ["    var postfix = string.substr(0, string.length-1);\n    var palindrome\
    \ = string.substr(0, string.length-1);\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === postfix[postfix.length-1]){\n            palindrome\
    \ += string[i];\n        }\n    }\n    return palindrome;\n}\n", "    var palindrome\
    \ = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n        prefix_string\
    \ = \"\";\n\n    for(var i = 0; i < string.length; i++){\n        prefix_length\
    \ += string[i];\n        prefix_string += string[i];\n    }\n\n    for(var i =\
    \ 0; i < string.length; i++){\n        suffix_length += string[i];\n    }\n\n\
    \    for(var i = 0; i < suffix_length; i++){\n        if(string[suffix_length\
    \ - i - 1] == string[suffix_length - i + 1]){\n            palindrome += string[suffix_length\
    \ - i - 1];\n        }\n    }\n\n    for(var i = 0; i < prefix_length; i++){\n\
    \        if(string[prefix_length - i - 1] == string[prefix_length - i + 1]){\n\
    \            palindrome += string[prefix_length - i - 1];\n        }\n    }\n\n\
    \    return palindrome;\n}\n", "    var palindrome = \"\";\n    var palindrome_length\
    \ = string.length;\n    var prefix_length = string.length - palindrome_length;\n\
    \    var prefix_reverse = \"\";\n    for(var i = 0; i < prefix_length; i++){\n\
    \        prefix_reverse += string[i];\n    }\n    for(var i = 0; i < palindrome_length;\
    \ i++){\n        palindrome += string[i];\n    }\n    palindrome += prefix_reverse;\n\
    \    return palindrome;\n}\n", "    var palindrome = string.substr(0,string.length-1);\n\
    \    var reversed_palindrome = string.reverse().substr(0,string.length-1);\n \
    \   var palindrome_with_suffix = palindrome + reversed_palindrome;\n    return\
    \ palindrome_with_suffix;\n}\n", "    var palindrome = string.split('').reverse().join('');\n\
    \    return string + palindrome;\n}\n", "    var postfix = string.substr(0, string.length\
    \ - 1);\n    var reverse = postfix.split('').reverse().join('');\n    return string\
    \ + reverse + postfix;\n}\n", "    var palindrome = \"\",\n        prefix_length\
    \ = 0,\n        suffix_length = 0,\n        prefix_reversed = \"\",\n        suffix_reversed\
    \ = \"\";\n\n    prefix_length = string.length - (string.length % 2);\n    suffix_length\
    \ = string.length - prefix_length;\n\n    prefix_reversed = string.reverse().slice(0,prefix_length);\n\
    \    suffix_reversed = string.reverse().slice(prefix_length,string.length);\n\n\
    \    palindrome = prefix_reversed + string + suffix_reversed;\n\n    return palindrome;\n\
    }\n", "  var reversed_string = string\n  var palindrome = string\n  var prefix_length\
    \ = 0\n  var suffix_length = 0\n  var palindrome_length = 0\n  var postfix_length\
    \ = 0\n  var postfix_string = \"\"\n  var postfix_reversed_string = \"\"\n  var\
    \ postfix_reversed_length = 0\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_reversed_string = \"\"\n  var postfix_reversed_string\
    \ = \"\"\n  var postfix_", "    var palindrome = string.split('').reverse().join('');\n\
    \    var prefix_length = string.length - palindrome.length;\n    var prefix_string\
    \ = string.substr(0, prefix_length);\n    var postfix_string = string.substr(prefix_length);\n\
    \    return prefix_string + palindrome + postfix_string;\n}\n", "    var palindrome\
    \ = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n        prefix_postfix\
    \ = \"\",\n        suffix_postfix = \"\";\n    \n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === string[string.length -1 -i]){\n            suffix_length++;\n\
    \        }\n        else{\n            suffix_length = 0;\n        }\n       \
    \ if(string[i] === string[string.length -1 -i]){\n            prefix_length++;\n\
    \        }\n        else{\n            prefix_length = 0;\n        }\n       \
    \ if(suffix_length >= prefix_length){\n            prefix_postfix = string.substr(0,\
    \ i);\n            suffix_postfix = string.substr(string.length - suffix_length);\n\
    \            palindrome = prefix_postfix + string[string.length -1 -i] + suffix_postfix;\n\
    \        }\n    }\n    return palindrome;\n}\n", "    var palindrome = \"\",\n\
    \        prefix_length = 0,\n        suffix_length = 0,\n        prefix_postfix\
    \ = \"\",\n        suffix_postfix = \"\";\n    \n    prefix_length = string.length\
    \ - 1;\n    suffix_length = string.length - 1;\n    \n    prefix_postfix = string.substr(0,\
    \ prefix_length);\n    suffix_postfix = string.substr(prefix_length, string.length\
    \ - suffix_length);\n    \n    while(suffix_length >= 0){\n        if(suffix_length\
    \ == 0){\n            palindrome = prefix_postfix + palindrome;\n            suffix_length\
    \ = string.length - 1;\n            prefix_length = string.length - 1;\n     \
    \       prefix_postfix = \"\";\n            suffix_postfix = \"\";\n        }\n\
    \        \n        if(string.substr(suffix_length, string.length - suffix_length)\
    \ == string.substr(0, suffix_length)){\n            suffix_length = suffix_length\
    \ - 1;\n        }\n        else{\n            suffix_length = suffix_length -\
    \ 1;\n            suffix_postfix = suffix_postfix + string.substr(suffix_length,\
    \ string.length - suffix_length);\n        }\n    }\n    \n    return palindrome;\n\
    }\n", "    var palindrome = string.substr(0, string.length - 1);\n    var reversed_string\
    \ = string.substr(string.length - 1);\n    \n    var palindrome_length = palindrome.length;\n\
    \    var reversed_string_length = reversed_string.length;\n    \n    var palindrome_postfix_length\
    \ = palindrome_length - 1;\n    var reversed_string_prefix_length = reversed_string_length\
    \ - palindrome_postfix_length;\n    \n    var palindrome_postfix = palindrome.substr(0,\
    \ palindrome_postfix_length);\n    var reversed_string_prefix = reversed_string.substr(0,\
    \ reversed_string_prefix_length);\n    \n    var palindrome_postfix_reversed =\
    \ reversed_string_prefix + palindrome_postfix;\n    \n    return palindrome_postfix_reversed;\n\
    }\n", "    var palindrome = string.substr(0, string.length - 1);\n    var prefix_reversed\
    \ = string.substr(string.length - 1, string.length);\n    string = string + prefix_reversed\
    \ + palindrome;\n    return string;\n}\n", "    var postfix = string.substring(0,string.length-1);\n\
    \    var reverse = postfix.split(\"\").reverse().join(\"\");\n    return string+reverse;\n\
    }\n", "    var postfix = string.substr(0, string.length - 1);\n    var reversed_postfix\
    \ = reverse(postfix);\n    var palindrome = string.substr(0, string.length - 1)\
    \ + reversed_postfix;\n    return palindrome;\n}\n", "    var postfix = string.substring(0,string.length-1);\n\
    \    var reverse = postfix.split('').reverse().join('');\n    return string+reverse;\n\
    }\n", "    var palindrome = \"\",\n        postfix = \"\",\n        prefix_length\
    \ = string.length,\n        suffix_length = string.length - prefix_length;\n \
    \   for(var i = 0; i < prefix_length; i++){\n        postfix = string.substr(i,\
    \ prefix_length);\n        palindrome += postfix;\n        palindrome += string.reverse(postfix);\n\
    \    }\n    return palindrome;\n}\n", "    var palindrome = \"\",\n        postfix\
    \ = \"\";\n    \n    for(var i = 0; i < string.length; i++){\n        postfix\
    \ += string[i];\n    }\n    \n    postfix = postfix.split(\"\").reverse().join(\"\
    \");\n    \n    for(var i = 0; i < string.length; i++){\n        if(string[i]\
    \ === postfix){\n            palindrome += string[i];\n        }\n    }\n    \n\
    \    return palindrome;\n}\n", "    var palindrome = string.split('').reverse().join('');\n\
    \    string += palindrome;\n    return string;\n}\n", "    var palindrome = string;\n\
    \    var reversed_string = \"\";\n    var prefix_length = 0;\n    for(var i =\
    \ 0; i < string.length; i++){\n        var char = string.charAt(i);\n        if(char\
    \ === \" \"){\n            reversed_string += char;\n        }\n        else{\n\
    \            reversed_string += char;\n            if(char === palindrome.charAt(prefix_length)){\n\
    \                prefix_length++;\n            }\n        }\n    }\n    palindrome\
    \ += reversed_string;\n    return palindrome;\n}\n", "    var palindrome = string.substr(0,string.length-1);\n\
    \    var reverse = string.substr(string.length-1,string.length);\n    return palindrome\
    \ + reverse;\n}\n", "    var palindrome = \"\";\n    var prefix_length = 0;\n\
    \    var suffix_length = 0;\n    var palindrome_length = 0;\n    var palindrome_suffix\
    \ = \"\";\n    var palindrome_prefix = \"\";\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_suffix\
    \ = \"\";\n    var palindrome_prefix_suffix_length = 0;\n    var palindrome_prefix_suffix_suffix\
    \ = \"\";\n    var palindrome_prefix_suffix_suffix_length = 0;\n    var palindrome_prefix_suffix_suffix_suffix\
    \ = \"\";\n    var palindrome_prefix_suffix_suffix_suffix_length = 0;\n    var\
    \ palindrome_prefix_suffix_suffix_suffix_suffix = \"\";\n    var palindrome_prefix_suffix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix = \"\";\n\
    \    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_length = 0;\n  \
    \  var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix = \"\";\n \
    \   var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_length = 0;\n   \
    \ var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_length = 0;\n\
    \    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_length =\
    \ 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_", "    var reversed_string\
    \ = string\n    var palindrome = string\n    var prefix_length = 0\n    var postfix_length\
    \ = 0\n    var palindrome_length = 0\n    var palindrome_prefix_length = 0\n \
    \   var palindrome_postfix_length = 0\n    var palindrome_prefix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_length = 0\n    var palindrome_prefix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_length = 0\n\
    \    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_length = 0\n\
    \    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_length = 0\n\
    \    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_",
  "    var palindrome = \"\",\n        postfix = \"\";\n    \n    for(var i = 0; i\
    \ < string.length; i++){\n        postfix = string.substr(0, i) + string.substr(i,\
    \ string.length);\n        \n        if(postfix.toLowerCase() === postfix.toLowerCase().split(\"\
    \").reverse().join(\"\")){\n            palindrome = postfix.toLowerCase();\n\
    \            break;\n        }\n    }\n    \n    return palindrome;\n}\n", " \
    \   var palindrome = string.split(\"\").reverse().join(\"\");\n    string = string.split(\"\
    \").reverse().join(\"\") + palindrome;\n    return string;\n}\n", "    var palindrome\
    \ = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n        prefix_string\
    \ = \"\";\n\n    prefix_string = string.substr(0,prefix_length);\n    suffix_string\
    \ = string.substr(prefix_length);\n\n    prefix_length = prefix_string.length;\n\
    \    suffix_length = suffix_string.length;\n\n    for(var i = 0; i < suffix_length;\
    \ i++){\n        if(suffix_string[i] != prefix_string[prefix_length-i-1]){\n \
    \           palindrome += suffix_string[i];\n        }\n    }\n\n    return palindrome;\n\
    }\n", "    var palindrome = string.substr(0,string.length-1);\n    var reverse\
    \ = string.substr(string.length-1,string.length);\n    var new_string = string\
    \ + reverse + palindrome;\n    return new_string;\n}\n", "    var palindrome =\
    \ \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n        prefix_reversed\
    \ = \"\",\n        suffix_reversed = \"\";\n    \n    prefix_length = string.length;\n\
    \    suffix_length = string.length - prefix_length;\n    \n    prefix_reversed\
    \ = string.reverse();\n    suffix_reversed = string.substring(prefix_length).reverse();\n\
    \    \n    for(var i = 0; i < suffix_length; i++){\n        if(suffix_reversed[i]\
    \ !== prefix_reversed[i]){\n            palindrome += string.substring(prefix_length,\
    \ suffix_length + 1);\n            break;\n        }\n    }\n    \n    return\
    \ palindrome;\n}\n", "    var palindrome = string;\n    var prefix_length = 0;\n\
    \    var suffix_length = 0;\n    var reversed_string = \"\";\n    var palindrome_pattern_found\
    \ = false;\n    var palindrome_pattern = \"\";\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_string\
    \ = \"\";\n    var palindrome_suffix_string = \"\";\n    var palindrome_prefix_reversed_string\
    \ = \"\";\n    var palindrome_suffix_reversed_string = \"\";\n    var palindrome_prefix_reversed_string_length\
    \ = 0;\n    var palindrome_suffix_reversed_string_length = 0;\n    var palindrome_prefix_reversed_string_length\
    \ = 0;\n    var palindrome_prefix_reversed_string = \"\";\n    var palindrome_suffix_reversed_string\
    \ = \"\";\n    var palindrome_prefix_reversed_string_length = 0;\n    var palindrome_suffix_reversed_string_length\
    \ = 0;\n    var palindrome_prefix_reversed_string = \"\";\n    var palindrome_suffix_reversed_string\
    \ = \"\";\n    var palindrome_prefix_reversed_string_length = 0;\n    var palindrome_suffix_reversed_string_length\
    \ = 0;\n    var palindrome_prefix_reversed_string = \"\";\n    var palindrome_suffix_reversed_string\
    \ = \"\";\n    var palindrome_prefix_reversed_string_length = 0;\n    var palindrome_suffix_reversed_string_length\
    \ = 0;\n    var palindrome_prefix_reversed_string = \"\";\n    var palindrome_suffix_reversed_string\
    \ = \"\";\n    var palindrome_prefix_reversed_string_length = 0;\n    var palindrome_suffix_reversed_string_length\
    \ = 0;\n    var palindrome_prefix_reversed_string = \"\";\n    var palindrome_suffix_reversed_string\
    \ = \"\";\n    var palindrome_prefix_reversed_string_length = 0;\n    var palindrome_suffix_reversed_string_length\
    \ = 0;\n    var palindrome_prefix_reversed_string = \"\";\n    var palindrome_suffix_reversed_string\
    \ = \"\";\n    var palindrome_prefix_reversed_string_length = 0;\n    var palindrome_suffix_reversed_string_length\
    \ = 0;\n    var palindrome_prefix_reversed_string = \"\";\n    var palindrome_suffix_reversed_string\
    \ = \"\";\n    var palindrome_prefix_reversed_string_length = 0;\n    var palindrome_suffix_reversed_string_length\
    \ = 0;\n    var palindrome_prefix_reversed_string = \"\";\n    var palindrome_suffix_reversed_string\
    \ = \"\";\n    var palindrome_prefix_reversed_string_length = 0;\n", "    var\
    \ palindrome = string;\n    var postfix = \"\";\n    var reverse = \"\";\n   \
    \ var palindromeLength = 0;\n    var prefixLength = 0;\n    var suffixLength =\
    \ 0;\n    var palindromePostfix = \"\";\n    var palindromeReverse = \"\";\n \
    \   var palindromePostfixLength = 0;\n    var palindromeReverseLength = 0;\n \
    \   var palindromePostfixReverse = \"\";\n    var palindromePostfixReverseLength\
    \ = 0;\n    var palindromePostfixReverseString = \"\";\n    var palindromePostfixReverseStringLength\
    \ = 0;\n    var palindromePostfixReverseStringReverse = \"\";\n    var palindromePostfixReverseStringReverseLength\
    \ = 0;\n    var palindromePostfixReverseStringReverseString = \"\";\n    var palindromePostfixReverseStringReverseStringLength\
    \ = 0;\n    var palindromePostfixReverseStringReverseStringReverse = \"\";\n \
    \   var palindromePostfixReverseStringReverseStringReverseLength = 0;\n    var\
    \ palindromePostfixReverseStringReverseStringReverseString = \"\";\n    var palindromePostfixReverseStringReverseStringReverseStringLength\
    \ = 0;\n    var palindromePostfixReverseStringReverseStringReverseStringReverse\
    \ = \"\";\n    var palindromePostfixReverseStringReverseStringReverseStringReverseLength\
    \ = 0;\n    var palindromePostfixReverseStringReverseStringReverseStringReverseString\
    \ = \"\";\n    var palindromePostfixReverseStringReverseStringReverseStringReverseStringLength\
    \ = 0;\n    var palindromePostfixReverseStringReverseStringReverseStringReverseStringReverse\
    \ = \"\";\n    var palindromePostfixReverseStringReverseStringReverseStringReverseStringReverseLength\
    \ = 0;\n    var palindromePostfixReverseStringReverseStringReverseStringReverseString\
    \ = \"\";\n    var palindromePostfixReverseStringReverseStringReverseStringReverseStringLength\
    \ = 0;\n    var palindromePostfixReverseStringReverseStringReverseStringReverseStringReverse\
    \ = \"\";\n    var palindromePostfixReverseStringReverseStringReverseStringReverseStringReverseLength\
    \ = 0;\n    var palindromePostfixReverseStringReverseStringReverseStringReverseStringReverseString\
    \ = \"\";\n    var palindromePostfixReverseStringReverseStringReverseStringReverseStringReverseStringLength\
    \ = 0;\n    var palindromePostfixReverseStringReverseStringReverseStringReverseStringReverseString\
    \ = \"\";\n    var palindromePostfixReverseStringReverseStringReverseStringReverseStringReverseStringLength\
    \ = 0;\n    var palindromePostfixReverseStringReverseStringReverseStringReverseStringReverseString\
    \ = \"\";\n    var palindromePostfixReverseString", "    var palindrome = \"\"\
    ,\n        prefix_length = 0,\n        suffix_length = 0,\n        prefix_postfix\
    \ = \"\",\n        suffix_postfix = \"\";\n\n    prefix_length = string.length;\n\
    \    suffix_length = string.length - prefix_length;\n    prefix_postfix = string.substr(0,\
    \ prefix_length);\n    suffix_postfix = string.substr(prefix_length, string.length\
    \ - suffix_length);\n\n    while(suffix_length >= 0){\n        if(suffix_length\
    \ >= prefix_length){\n            palindrome += string.substr(prefix_length, suffix_length);\n\
    \            suffix_length -= prefix_length;\n        }\n        else{\n     \
    \       palindrome += string.substr(0, suffix_length);\n            suffix_length\
    \ -= suffix_length;\n        }\n    }\n    return palindrome;\n}\n", "    var\
    \ palindrome = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n\
    \        prefix_postfix = \"\";\n    \n    for(var i = 0; i < string.length; i++){\n\
    \        if(string[i] === string[string.length - 1 - i]){\n            prefix_length++;\n\
    \            prefix_postfix += string[i];\n        }\n        else{\n        \
    \    suffix_length++;\n        }\n    }\n    \n    for(var i = 0; i < prefix_length;\
    \ i++){\n        palindrome += string[i];\n    }\n    \n    palindrome += string[string.length\
    \ - suffix_length];\n    \n    for(var i = 0; i < suffix_length; i++){\n     \
    \   palindrome += string[string.length - 1 - i];\n    }\n    \n    return palindrome;\n\
    }\n", "    var palindrome = \"\",\n        prefix_length = 0,\n        suffix_length\
    \ = 0,\n        suffix_index = 0,\n        prefix_index = 0,\n        suffix_char,\n\
    \        prefix_char,\n        suffix_reversed,\n        prefix_reversed;\n\n\
    \    prefix_length = string.length;\n    suffix_length = string.length - prefix_length;\n\
    \n    prefix_reversed = string[prefix_length-1];\n    prefix_char = string[prefix_length-1];\n\
    \n    suffix_reversed = string[suffix_length-1];\n    suffix_char = string[suffix_length-1];\n\
    \n    while(suffix_index != suffix_length){\n        suffix_char = string[suffix_index];\n\
    \        suffix_reversed = suffix_char + suffix_reversed;\n        suffix_index++;\n\
    \    }\n\n    while(prefix_index != prefix_length){\n        prefix_char = string[prefix_index];\n\
    \        prefix_reversed = prefix_char + prefix_reversed;\n        prefix_index++;\n\
    \    }\n\n    while(suffix_index != suffix_length){\n        suffix_char = string[suffix_index];\n\
    \        suffix_reversed = suffix_char + suffix_reversed;\n        suffix_index++;\n\
    \    }\n\n    while(prefix_index != prefix_length){\n        prefix_char = string[prefix_index];\n\
    \        prefix_reversed = prefix_char + prefix_reversed;\n        prefix_index++;\n\
    \    }\n\n    while(suffix_index != suffix_length){\n        suffix_char = string[suffix_index];\n\
    \        suffix_reversed = suffix_char + suffix_reversed;\n        suffix_index++;\n\
    \    }\n\n    while(prefix_index != prefix_length){\n        prefix_char = string[prefix_index];\n\
    \        prefix_reversed = prefix_char + prefix_reversed;\n        prefix_index++;\n\
    \    }\n\n    while(suffix_index != suffix_length){\n        suffix_char = string[suffix_index];\n\
    \        suffix_reversed = suffix_char + suffix_reversed;\n        suffix_index++;\n\
    \    }\n\n    while(prefix_index != prefix_length){\n        prefix_char = string[prefix_index];\n\
    \        prefix_reversed = prefix_char + prefix_reversed;\n        prefix_index++;\n\
    \    }\n\n    while(suffix_index != suffix_length){\n        suffix_char = string[suffix_index];\n\
    \        suffix_reversed = suffix_char + suffix_reversed;\n        suffix_index++;\n\
    \    }\n\n    while(prefix_index != prefix_length){\n        prefix_char = string[prefix_index];\n\
    \        prefix_reversed = prefix_char + prefix_reversed;\n        prefix_index++;\n\
    \    }", "    var palindrome = \"\",\n        prefix_length = 0,\n        suffix_length\
    \ = 0,\n        postfix_length = 0,\n        postfix_array = [],\n        postfix_array_length\
    \ = 0;\n\n    for(var i = 0; i < string.length; i++){\n        postfix_array.push(string[i]);\n\
    \    }\n\n    for(var i = 0; i < postfix_array.length; i++){\n        postfix_array_length++;\n\
    \        if(postfix_array_length == 2){\n            postfix_length++;\n     \
    \   }\n        if(postfix_array_length == 3){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 4){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 5){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 6){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 7){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 8){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 9){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 10){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 11){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 12){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 13){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 14){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 15){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 16){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 17){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 18){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 19){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 20){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 21){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 22){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 23){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 24){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 25){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 26){\n            postfix_length++;\n\
    \        }\n        if(postfix_array_length == 27){\n            postfix_length++;\n\
    \        }\n        if(postfix_", "    var palindrome = \"\",\n        postfix\
    \ = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n        i,\n\
    \        j,\n        prefix_length,\n        suffix_length,\n        postfix_length,\n\
    \        postfix_char,\n        postfix_char_length,\n        postfix_char_array,\n\
    \        postfix_char_array_length,\n        postfix_char_array_reversed,\n  \
    \      postfix_char_array_reversed_length,\n        postfix_char_array_reversed_reversed,\n\
    \        postfix_char_array_reversed_reversed_length,\n        postfix_char_array_reversed_reversed_reversed_length;\n\
    \n    for(i = 0; i < string.length; i++){\n        postfix = string.substr(i,\
    \ 1);\n        postfix_length = postfix.length;\n        postfix_char = postfix.charAt(0);\n\
    \        postfix_char_length = postfix_char.length;\n        postfix_char_array\
    \ = postfix_char.split(\"\");\n        postfix_char_array_length = postfix_char_array.length;\n\
    \        postfix_char_array_reversed = postfix_char_array.reverse();\n       \
    \ postfix_char_array_reversed_length = postfix_char_array_reversed.length;\n \
    \       postfix_char_array_reversed_reversed = postfix_char_array_reversed.reverse();\n\
    \        postfix_char_array_reversed_reversed_length = postfix_char_array_reversed_reversed.length;\n\
    \        prefix_length = postfix_char_array_reversed_length - postfix_char_length;\n\
    \        suffix_length = postfix_char_length - postfix_char_array_reversed_length;\n\
    \        if(prefix_length < suffix_length){\n            palindrome += postfix.substr(0,\
    \ postfix_length);\n        }else{\n            palindrome += postfix.substr(0,\
    \ postfix_length);\n            palindrome += postfix.substr(postfix_char_array_reversed_length\
    \ - postfix_char_array_length, postfix_char_length);\n        }\n    }\n    return\
    \ palindrome;\n}\n", "    var palindrome = \"\",\n        prefix_length = 0,\n\
    \        suffix_length = 0,\n        postfix_length = 0,\n        postfix_array\
    \ = [],\n        postfix_array_length = 0;\n    \n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === string[string.length - 1]){\n            postfix_array[postfix_array_length]\
    \ = string[i];\n            postfix_array_length++;\n        }\n        else{\n\
    \            postfix_array[postfix_array_length] = string[i];\n            postfix_array_length++;\n\
    \            postfix_length = postfix_array_length;\n        }\n    }\n    \n\
    \    for(var i = 0; i < postfix_array_length; i++){\n        postfix_array[i]\
    \ = postfix_array[i].toUpperCase();\n    }\n    \n    for(var i = 0; i < postfix_length;\
    \ i++){\n        postfix_array[i] = postfix_array[i].toLowerCase();\n    }\n \
    \   \n    for(var i = 0; i < postfix_length; i++){\n        postfix_array[i] =\
    \ postfix_array[i].split(\"\").reverse().join(\"\");\n    }\n    \n    for(var\
    \ i = 0; i < postfix_length; i++){\n        postfix_array[i] = postfix_array[i].replace(\"\
    \ \", \"\");\n    }\n    \n    for(var i = 0; i < postfix_length; i++){\n    \
    \    postfix_array[i] = postfix_array[i].replace(\" \", \"\");\n    }\n    \n\
    \    for(var i = 0; i < postfix_length; i++){\n        postfix_array[i] = postfix_array[i].replace(\"\
    \ \", \"\");\n    }\n    \n    for(var i = 0; i < postfix_length; i++){\n    \
    \    postfix_array[i] = postfix_array[i].replace(\" \", \"\");\n    }\n    \n\
    \    for(var i = 0; i < postfix_length; i++){\n        postfix_array[i] = postfix_array[i].replace(\"\
    \ \", \"\");\n    }\n    \n    for(var i = 0; i < postfix_length; i++){\n    \
    \    postfix_array[i] = postfix_array[i].replace(\" \", \"\");\n    }\n    \n\
    \    for(var i = 0; i < postfix_length; i++){\n        postfix_array[i] = postfix_array[i].replace(\"\
    \ \", \"\");\n    }\n    \n    for(var i = 0; i < postfix_length; i++){\n    \
    \    postfix_array[i] = postfix_array[i].replace(\" \", \"\");\n    }\n    \n\
    \    for(var i = 0; i < postfix_length; i++){\n        postfix_array[i] = postfix_array[i].replace(\"\
    \ \", \"\");\n    }\n    \n    for(var i = 0; i < postfix_length; i++){\n    \
    \    postfix_array[i] = postfix_array[i].replace(\" \", \"\");\n    }\n    \n\
    \    for(var i = 0; i < postfix_length; i++){\n        postfix_array[i] = postfix_array[i].replace(\"\
    \ \", \"\");\n    }\n    \n    for(var i = 0; i < postfix_length; i++){\n    \
    \    postfix_array[i] = postfix_array[i].replace(\" \", \"\");\n    }\n    \n\
    \    ", "    var postfix = string.split('').reverse().join('');\n    var palindrome\
    \ = string.slice(0, string.length - postfix.length) + postfix;\n    return palindrome;\n\
    }\n", "    var palindrome = string.split(\"\").reverse().join(\"\");\n    var\
    \ prefix_length = string.length - palindrome.length;\n    var postfix_length =\
    \ string.length - prefix_length;\n    var palindrome_prefix = string.substr(0,\
    \ prefix_length);\n    var palindrome_suffix = string.substr(postfix_length);\n\
    \    return palindrome_prefix + palindrome_suffix;\n}\n", "    var palindrome\
    \ = \"\";\n    var palindrome_length = string.length;\n    var palindrome_suffix\
    \ = \"\";\n    var palindrome_prefix = \"\";\n    var palindrome_prefix_length\
    \ = string.length;\n    var palindrome_prefix_reverse = \"\";\n    var palindrome_prefix_reverse_length\
    \ = string.length;\n    var palindrome_prefix_reverse_index = 0;\n    var palindrome_prefix_reverse_char\
    \ = \"\";\n    var palindrome_prefix_reverse_char_length = string.length;\n  \
    \  var palindrome_prefix_reverse_char_index = 0;\n    var palindrome_prefix_reverse_char_reverse\
    \ = \"\";\n    var palindrome_prefix_reverse_char_reverse_length = string.length;\n\
    \    var palindrome_prefix_reverse_char_reverse_index = 0;\n    var palindrome_prefix_reverse_char_reverse_char\
    \ = \"\";\n    var palindrome_prefix_reverse_char_reverse_char_length = string.length;\n\
    \    var palindrome_prefix_reverse_char_reverse_char_index = 0;\n    var palindrome_prefix_reverse_char_reverse_char_reverse\
    \ = \"\";\n    var palindrome_prefix_reverse_char_reverse_char_reverse_length\
    \ = string.length;\n    var palindrome_prefix_reverse_char_reverse_char_reverse_index\
    \ = 0;\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char = \"\"\
    ;\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char_length = string.length;\n\
    \    var palindrome_prefix_reverse_char_reverse_char_reverse_char_index = 0;\n\
    \    var palindrome_prefix_reverse_char_reverse_char_reverse_char_reverse = \"\
    \";\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char_reverse_length\
    \ = string.length;\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char_reverse_index\
    \ = 0;\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char_reverse_char\
    \ = \"\";\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char_reverse_char_length\
    \ = string.length;\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char_reverse_char_index\
    \ = 0;\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char_reverse_char_reverse\
    \ = \"\";\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char_reverse_char_reverse_length\
    \ = string.length;\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char_reverse_char_reverse_index\
    \ = 0;\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char_reverse_char_reverse_char\
    \ = \"\";\n    var palindrome_prefix_reverse_char_reverse_char_reverse_char_reverse_char_reverse_char_length\
    \ = string", "    var palindrome = string.split('').reverse().join('');\n    string\
    \ += palindrome;\n    return string;\n}\n", "    var postfix = string.split('').reverse().join('');\n\
    \    var palindrome = string.slice(0, string.length - postfix.length) + postfix;\n\
    \    return palindrome;\n}\n", "    var palindrome = \"\",\n        prefix_length\
    \ = 0,\n        suffix_length = 0,\n        suffix_char,\n        prefix_char,\n\
    \        suffix_index,\n        prefix_index,\n        suffix_start,\n       \
    \ prefix_start,\n        suffix_end,\n        prefix_end;\n\n    prefix_length\
    \ = string.length;\n    suffix_length = string.length;\n\n    suffix_char = string.charAt(suffix_length);\n\
    \    prefix_char = string.charAt(prefix_length);\n\n    suffix_index = suffix_length;\n\
    \    prefix_index = prefix_length;\n\n    suffix_start = suffix_length;\n    prefix_start\
    \ = prefix_length;\n\n    suffix_end = suffix_length;\n    prefix_end = prefix_length;\n\
    \n    while(suffix_index > -1 && prefix_index > -1){\n        suffix_char = string.charAt(suffix_index);\n\
    \        prefix_char = string.charAt(prefix_index);\n\n        if(suffix_char\
    \ === prefix_char){\n            suffix_index--;\n            prefix_index--;\n\
    \        }\n        else{\n            if(suffix_char === string.charAt(suffix_index\
    \ - 1)){\n                suffix_index--;\n            }\n            else{\n\
    \                suffix_start = suffix_index;\n                prefix_start =\
    \ prefix_index;\n            }\n        }\n    }\n\n    while(suffix_index > -1){\n\
    \        suffix_char = string.charAt(suffix_index);\n        suffix_end = suffix_index;\n\
    \n        while(suffix_end > -1 && string.charAt(suffix_end - 1) === suffix_char){\n\
    \            suffix_end--;\n        }\n\n        palindrome += string.substring(suffix_start,\
    \ suffix_end);\n        suffix_index--;\n    }\n\n    while(prefix_index > -1){\n\
    \        prefix_char = string.charAt(prefix_index);\n        prefix_end = prefix_index;\n\
    \n        while(prefix_end > -1 && string.charAt(prefix_end - 1) === prefix_char){\n\
    \            prefix_end--;\n        }\n\n        palindrome += string.substring(prefix_start,\
    \ prefix_end);\n        prefix_index--;\n    }\n\n    return palindrome;\n}\n",
  "  var palindrome = string.split('').reverse().join('');\n  var prefix_length =\
    \ string.split('').reverse().join('').indexOf(palindrome);\n  var postfix_length\
    \ = string.length - prefix_length;\n  return string.slice(0, prefix_length) +\
    \ palindrome + string.slice(postfix_length);\n}\n", "    var palindrome = string.substr(0,\
    \ string.length - 1);\n    var reversed_string = string.substr(string.length -\
    \ 1);\n    var reversed_palindrome = reversed_string.substr(0, reversed_string.length\
    \ - 1);\n    return palindrome + reversed_palindrome;\n}\n", "    var palindrome\
    \ = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n        postfix_length\
    \ = 0,\n        postfix_string = \"\";\n\n    for(var i = 0, len = string.length;\
    \ i < len; i++){\n        if(string[i] === string[len - 1]){\n            postfix_string\
    \ += string[i];\n        }\n        else{\n            postfix_string += string[i]\
    \ + string[len - 1];\n        }\n    }\n\n    postfix_length = postfix_string.length;\n\
    \n    for(var i = 0, len = string.length; i < len; i++){\n        if(string[i]\
    \ === string[len - 1]){\n            suffix_length++;\n        }\n        else{\n\
    \            suffix_length--;\n        }\n    }\n\n    suffix_length = suffix_length\
    \ * 2;\n\n    prefix_length = postfix_length - suffix_length;\n\n    for(var i\
    \ = 0, len = string.length; i < len; i++){\n        if(string[i] === string[len\
    \ - 1]){\n            prefix_length++;\n        }\n        else{\n           \
    \ prefix_length--;\n        }\n    }\n\n    prefix_length = prefix_length * 2;\n\
    \n    for(var i = 0, len = string.length; i < len; i++){\n        if(string[i]\
    \ === string[len - 1]){\n            postfix_length++;\n        }\n        else{\n\
    \            postfix_length--;\n        }\n    }\n\n    for(var i = 0, len = string.length;\
    \ i < len; i++){\n        if(string[i] === string[len - 1]){\n            palindrome\
    \ += string[i];\n        }\n        else{\n            palindrome += string[i]\
    \ + string[len - 1];\n        }\n    }\n\n    palindrome = palindrome.replace(/^\\\
    W+|\\W+$/g,\"\");\n\n    palindrome = palindrome.replace(/^\\W/g,\"\");\n\n  \
    \  palindrome = palindrome.replace(/\\W$/g,\"\");\n\n    palindrome = palindrome.replace(/\\\
    W/g,\"\");\n\n    palindrome = palindrome.replace(/\\W+$/g,\"\");\n\n    palindrome\
    \ = palindrome.replace(/\\W+/g,\"\");\n\n    palindrome = palindrome.replace(/^\\\
    W/g,\"\");\n\n    palindrome = palindrome.replace(/\\W$/g,\"\");\n\n    palindrome\
    \ = palindrome.replace(/\\W/g,\"\");\n\n    palindrome = palindrome.replace(/\\\
    W+$/g,\"\");\n\n    palindrome = palindrome.replace(/\\W+/g,\"\");\n\n    palindrome\
    \ = palindrome.replace(/^\\W/g,\"\");\n\n    palindrome = palindrome.replace(/\\\
    W$/g,\"\");\n\n    palindrome", "  var palindrome = string.split(\"\").reverse().join(\"\
    \");\n  string = string + palindrome;\n  return string;\n}\n", "    var reversed_string\
    \ = \"\";\n    var longest_postfix_string = \"\";\n    var longest_postfix_string_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix = \"\";\n    var longest_postfix_string_length_without_prefix\
    \ = \"\";\n    var longest_postfix_string_length_with_prefix_length = 0;\n   \
    \ var longest_postfix_string_length_without_prefix_length = 0;\n    var longest_postfix_string_length_with_prefix_length_with_prefix\
    \ = \"\";\n    var longest_postfix_string_length_without_prefix_length_with_prefix\
    \ = \"\";\n    var longest_postfix_string_length_with_prefix_length_without_prefix\
    \ = \"\";\n    var longest_postfix_string_length_without_prefix_length_without_prefix\
    \ = \"\";\n    var longest_postfix_string_length_with_prefix_length_with_prefix_length\
    \ = 0;\n    var longest_postfix_string_length_without_prefix_length_with_prefix_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix_length_without_prefix_length\
    \ = 0;\n    var longest_postfix_string_length_without_prefix_length_without_prefix_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix_length_with_prefix_length_length\
    \ = 0;\n    var longest_postfix_string_length_without_prefix_length_with_prefix_length_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix_length_without_prefix_length_length\
    \ = 0;\n    var longest_postfix_string_length_without_prefix_length_without_prefix_length_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix_length_with_prefix_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_without_prefix_length_with_prefix_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix_length_without_prefix_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_without_prefix_length_without_prefix_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix_length_with_prefix_length_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_without_prefix_length_with_prefix_length_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix_length_without_prefix_length_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_without_prefix_length_without_prefix_length_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix_length_with_prefix_length_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_without_prefix_length_with_prefix_length_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix_length_without_prefix_length_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_without_prefix_length_without_prefix_length_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix_length_with_prefix_length_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_without_prefix_length_with_prefix_length_length_length_length\
    \ = 0;\n    var longest_postfix_string_length_with_prefix_length_without_prefix_length_length_length_",
  "    var palindrome = \"\",\n        prefix_length = 0,\n        suffix_length =\
    \ 0,\n        suffix_postfix = \"\";\n    \n    for(var i = 0; i < string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(char === \" \"){\n \
    \           suffix_length++;\n            suffix_postfix += char;\n        }\n\
    \        else{\n            prefix_length++;\n            palindrome += char;\n\
    \        }\n    }\n    \n    if(prefix_length < suffix_length){\n        suffix_length\
    \ = prefix_length;\n        suffix_postfix = string.substr(0, prefix_length);\n\
    \    }\n    \n    var reversed_string = string.replace(suffix_postfix, \"\");\n\
    \    \n    return palindrome + reversed_string;\n}\n", "    var palindrome = \"\
    \";\n    var palindrome_length = 0;\n    var prefix_length = 0;\n    var suffix_length\
    \ = 0;\n    var prefix_string = \"\";\n    var suffix_string = \"\";\n    var\
    \ prefix_palindrome = \"\";\n    var suffix_palindrome = \"\";\n    var palindrome_prefix\
    \ = \"\";\n    var palindrome_suffix = \"\";\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_string\
    \ = \"\";\n    var palindrome_suffix_string = \"\";\n    var palindrome_prefix_palindrome\
    \ = \"\";\n    var palindrome_suffix_palindrome = \"\";\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_string\
    \ = \"\";\n    var palindrome_suffix_string = \"\";\n    var palindrome_prefix_palindrome\
    \ = \"\";\n    var palindrome_suffix_palindrome = \"\";\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_string\
    \ = \"\";\n    var palindrome_suffix_string = \"\";\n    var palindrome_prefix_palindrome\
    \ = \"\";\n    var palindrome_suffix_palindrome = \"\";\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_string\
    \ = \"\";\n    var palindrome_suffix_string = \"\";\n    var palindrome_prefix_palindrome\
    \ = \"\";\n    var palindrome_suffix_palindrome = \"\";\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_string\
    \ = \"\";\n    var palindrome_suffix_string = \"\";\n    var palindrome_prefix_palindrome\
    \ = \"\";\n    var palindrome_suffix_palindrome = \"\";\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_string\
    \ = \"\";\n    var palindrome_suffix_string = \"\";\n    var palindrome_prefix_palindrome\
    \ = \"\";\n    var palindrome_suffix_palindrome = \"\";\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_string\
    \ = \"\";\n    var palindrome_suffix_string = \"\";\n    var palindrome_prefix_palindrome\
    \ = \"\";\n    var palindrome_suffix_palindrome = \"\";\n    var ", "    var palindrome\
    \ = string.split('').reverse().join('');\n    return palindrome + string.substr(0,\
    \ string.lastIndexOf(palindrome));\n}\n", "    var palindrome = \"\";\n    var\
    \ suffix;\n    var prefix_length;\n    var suffix_length;\n    var prefix_reverse;\n\
    \    var suffix_reverse;\n    var prefix_string;\n    var suffix_string;\n   \
    \ var prefix_reversed;\n    var suffix_reversed;\n    var prefix_string;\n   \
    \ var suffix_string;\n    var prefix_reversed;\n    var suffix_reversed;\n   \
    \ var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n    var\
    \ suffix_reversed;\n    var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n\
    \    var suffix_reversed;\n    var prefix_string;\n    var suffix_string;\n  \
    \  var prefix_reversed;\n    var suffix_reversed;\n    var prefix_string;\n  \
    \  var suffix_string;\n    var prefix_reversed;\n    var suffix_reversed;\n  \
    \  var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n    var\
    \ suffix_reversed;\n    var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n\
    \    var suffix_reversed;\n    var prefix_string;\n    var suffix_string;\n  \
    \  var prefix_reversed;\n    var suffix_reversed;\n    var prefix_string;\n  \
    \  var suffix_string;\n    var prefix_reversed;\n    var suffix_reversed;\n  \
    \  var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n    var\
    \ suffix_reversed;\n    var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n\
    \    var suffix_reversed;\n    var prefix_string;\n    var suffix_string;\n  \
    \  var prefix_reversed;\n    var suffix_reversed;\n    var prefix_string;\n  \
    \  var suffix_string;\n    var prefix_reversed;\n    var suffix_reversed;\n  \
    \  var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n    var\
    \ suffix_reversed;\n    var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n\
    \    var suffix_reversed;\n    var prefix_string;\n    var suffix_string;\n  \
    \  var prefix_reversed;\n    var suffix_reversed;\n    var prefix_string;\n  \
    \  var suffix_string;\n    var prefix_reversed;\n    var suffix_reversed;\n  \
    \  var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n    var\
    \ suffix_reversed;\n    var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n\
    \    var suffix_reversed;\n    var prefix_string;\n    var suffix_string;\n  \
    \  var prefix_reversed;\n    var suffix_reversed;\n    var prefix_string;\n  \
    \  var suffix_string;\n    var prefix_reversed;\n    var suffix_reversed;\n  \
    \  var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n    var\
    \ suffix_reversed;\n    var prefix_string;\n    var suffix_string;\n    var prefix_reversed;\n\
    \    var suffix_reversed;\n    var ", "    var palindrome = string;\n    var prefix_length\
    \ = 0;\n    var suffix_length = 0;\n    var postfix_length = 0;\n    var postfix_array\
    \ = [];\n    var postfix_array_length = 0;\n    var postfix_array_index = 0;\n\
    \    var postfix_array_value = \"\";\n    var postfix_array_value_length = 0;\n\
    \    var postfix_array_value_char = \"\";\n    var postfix_array_value_char_length\
    \ = 0;\n    var postfix_array_value_char_index = 0;\n    var postfix_array_value_char_value\
    \ = \"\";\n    var postfix_array_value_char_value_length = 0;\n    var postfix_array_value_char_value_index\
    \ = 0;\n    var postfix_array_value_char_value_value = \"\";\n    var postfix_array_value_char_value_value_length\
    \ = 0;\n    var postfix_array_value_char_value_value_index = 0;\n    var postfix_array_value_char_value_value_value\
    \ = \"\";\n    var postfix_array_value_char_value_value_value_length = 0;\n  \
    \  var postfix_array_value_char_value_value_value_index = 0;\n    var postfix_array_value_char_value_value_value_value\
    \ = \"\";\n    var postfix_array_value_char_value_value_value_value_length = 0;\n\
    \    var postfix_array_value_char_value_value_value_index = 0;\n    var postfix_array_value_char_value_value_value_value\
    \ = \"\";\n    var postfix_array_value_char_value_value_value_value_length = 0;\n\
    \    var postfix_array_value_char_value_value_value_index = 0;\n    var postfix_array_value_char_value_value_value_value_value\
    \ = \"\";\n    var postfix_array_value_char_value_value_value_value_length = 0;\n\
    \    var postfix_array_value_char_value_value_value_index = 0;\n    var postfix_array_value_char_value_value_value_value_value\
    \ = \"\";\n    var postfix_array_value_char_value_value_value_value_length = 0;\n\
    \    var postfix_array_value_char_value_value_value_index = 0;\n    var postfix_array_value_char_value_value_value_value_value\
    \ = \"\";\n    var postfix_array_value_char_value_value_value_value_length = 0;\n\
    \    var postfix_array_value_char_value_value_value_index = 0;\n    var postfix_array_value_char_value_value_value_value_value\
    \ = \"\";\n    var postfix_array_value_char_value_value_value_value_length = 0;\n\
    \    var postfix_array_value_char_value_value_value_index = 0;\n    var postfix_array_value_char_value_value_value_value_value\
    \ = \"\";\n    var postfix_array_value_char_value_value_value_value_length = 0;\n\
    \    var postfix_array_value_char_value_value_value_index = 0;\n    var postfix_array_value_char_value_value_value_value_value\
    \ = \"\";\n    var postfix_array_value_char_value_value_value_value_length = 0;\n\
    \    var postfix_array_value_char_value_value_value_index = 0;\n    var postfix_array_value_char_value_value_value_value_value\
    \ = \"\";\n    var postfix_array_value_char_value_value_value_value_length = 0;\n\
    \    var post", "    var palindrome = \"\",\n        postfix = \"\";\n    \n \
    \   for(var i = 0, len = string.length; i < len; i++){\n        postfix += string[i];\n\
    \    }\n    \n    for(var i = 0, len = string.length; i < len; i++){\n       \
    \ if(string[i] === postfix[postfix.length - i]){\n            palindrome += string[i];\n\
    \        }\n    }\n    \n    return palindrome;\n}\n", "    var palindrome = string.split('').reverse().join('');\n\
    \    return string + palindrome;\n}\n", "    var palindrome = string.split(\"\"\
    ).reverse().join(\"\");\n    var prefix_length = string.length - palindrome.length;\n\
    \    var postfix_length = string.length - prefix_length;\n    var palindrome_prefix\
    \ = string.substr(0, prefix_length);\n    var palindrome_suffix = string.substr(postfix_length);\n\
    \    return palindrome_prefix + palindrome_suffix;\n}\n", "    var palindrome\
    \ = \"\",\n        postfix = \"\";\n    \n    for(var i = 0; i < string.length;\
    \ i++){\n        postfix += string[i];\n        \n        if(string[i] === string[string.length\
    \ - 1 - i]){\n            palindrome += postfix;\n            postfix = \"\";\n\
    \        }\n    }\n    \n    return palindrome;\n}\n", "    var palindrome = \"\
    \",\n        prefix_length = 0,\n        suffix_length = 0,\n        prefix_postfix\
    \ = \"\",\n        suffix_postfix = \"\";\n    \n    prefix_length = string.length\
    \ - 1;\n    suffix_length = string.length - 1;\n    \n    prefix_postfix = string.substr(0,\
    \ prefix_length);\n    suffix_postfix = string.substr(suffix_length, string.length);\n\
    \    \n    while(suffix_length >= 0){\n        if(suffix_length >= prefix_length){\n\
    \            palindrome += string.substr(prefix_length, suffix_length);\n    \
    \        suffix_length -= prefix_length;\n            prefix_length -= suffix_length;\n\
    \        }\n        else{\n            palindrome += string.substr(prefix_length,\
    \ suffix_length);\n            suffix_length -= prefix_length;\n        }\n  \
    \  }\n    \n    palindrome += string.substr(0, prefix_length);\n    \n    return\
    \ palindrome;\n}\n", "    var reversed_string = string\n    var longest_postfix_palindrome\
    \ = string.substr(0, string.length-1)\n    var longest_postfix_palindrome_length\
    \ = longest_postfix_palindrome.length\n    var longest_postfix_palindrome_start\
    \ = string.lastIndexOf(longest_postfix_palindrome)\n    var longest_postfix_palindrome_end\
    \ = longest_postfix_palindrome_start + longest_postfix_palindrome_length\n   \
    \ var longest_postfix_palindrome_suffix = string.substr(longest_postfix_palindrome_start,\
    \ longest_postfix_palindrome_length)\n    var longest_postfix_palindrome_suffix_reversed\
    \ = longest_postfix_palindrome_suffix.split(\"\").reverse().join(\"\")\n    var\
    \ longest_postfix_palindrome_suffix_reversed_length = longest_postfix_palindrome_suffix_reversed.length\n\
    \    var longest_postfix_palindrome_suffix_reversed_start = string.lastIndexOf(longest_postfix_palindrome_suffix_reversed)\n\
    \    var longest_postfix_palindrome_suffix_reversed_end = longest_postfix_palindrome_suffix_reversed_start\
    \ + longest_postfix_palindrome_suffix_reversed_length\n    var longest_postfix_palindrome_suffix_reversed_suffix\
    \ = string.substr(longest_postfix_palindrome_suffix_reversed_start, longest_postfix_palindrome_suffix_reversed_length)\n\
    \    var longest_postfix_palindrome_suffix_reversed_suffix_reversed = longest_postfix_palindrome_suffix_reversed_suffix.split(\"\
    \").reverse().join(\"\")\n    var longest_postfix_palindrome_suffix_reversed_suffix_reversed_length\
    \ = longest_postfix_palindrome_suffix_reversed_suffix_reversed.length\n    var\
    \ longest_postfix_palindrome_suffix_reversed_suffix_reversed_start = string.lastIndexOf(longest_postfix_palindrome_suffix_reversed_suffix_reversed)\n\
    \    var longest_postfix_palindrome_suffix_reversed_suffix_reversed_end = longest_postfix_palindrome_suffix_reversed_suffix_reversed_start\
    \ + longest_postfix_palindrome_suffix_reversed_suffix_reversed_length\n    var\
    \ longest_postfix_palindrome_suffix_reversed_suffix_reversed_suffix = string.substr(longest_postfix_palindrome_suffix_reversed_suffix_reversed_start,\
    \ longest_postfix_palindrome_suffix_", "    var palindrome = \"\",\n        postfix\
    \ = \"\";\n    \n    for(var i = 0; i < string.length; i++){\n        postfix\
    \ = string.substr(0, i) + string.reverse(string.substr(0, i));\n        palindrome\
    \ += postfix;\n    }\n    \n    return palindrome;\n}\n", "    var postfix = string.split(\"\
    \").reverse().join(\"\");\n    var palindrome = string.split(\"\").reverse().join(\"\
    \") + postfix;\n    return palindrome;\n}\n", "    var palindrome = \"\",\n  \
    \      postfix = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n\
    \        postfix_length = 0,\n        postfix_reversed = \"\",\n        prefix_reversed\
    \ = \"\";\n    \n    string = string.toLowerCase();\n    \n    // Find the longest\
    \ postfix of supplied string that is a palindrome.\n    postfix = string.substring(string.length\
    \ - 1);\n    postfix_length = postfix.length;\n    \n    // Append to the end\
    \ of the string reverse of a string prefix that comes before the palindromic suffix.\n\
    \    prefix_reversed = string.substring(0, string.length - 1);\n    prefix_length\
    \ = prefix_reversed.length;\n    \n    // Reverse the postfix string and append\
    \ it to the palindrome string.\n    postfix_reversed = postfix.split(\"\").reverse().join(\"\
    \");\n    palindrome = palindrome + postfix_reversed;\n    \n    // Reverse the\
    \ prefix string and append it to the palindrome string.\n    prefix_reversed =\
    \ prefix_reversed.split(\"\").reverse().join(\"\");\n    palindrome = palindrome\
    \ + prefix_reversed;\n    \n    return palindrome;\n}\n", "    var palindrome\
    \ = string.substr(0,string.length-1);\n    var reversed_string = string.substr(string.length-1,string.length);\n\
    \    var reversed_palindrome = reversed_string.substr(0,reversed_string.length-1);\n\
    \    var palindrome_with_suffix = palindrome + reversed_palindrome;\n    return\
    \ palindrome_with_suffix;\n}\n", "    var palindrome = \"\",\n        postfix\
    \ = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n        postfix_length\
    \ = 0,\n        postfix_reversed = \"\";\n\n    string = string.toLowerCase();\n\
    \    postfix = string.substr(0, string.length - 1);\n    postfix_length = postfix.length;\n\
    \    postfix_reversed = postfix.split(\"\").reverse().join(\"\");\n\n    prefix_length\
    \ = postfix.length;\n    suffix_length = postfix_length - postfix_reversed.length;\n\
    \n    while(postfix_length >= suffix_length){\n        postfix_length = postfix_length\
    \ - suffix_length;\n        postfix_reversed = postfix_reversed + postfix.substr(0,\
    \ postfix_length);\n        postfix = postfix.substr(postfix_length);\n    }\n\
    \n    palindrome = postfix + postfix_reversed;\n    return palindrome;\n}\n",
  "    var palindrome = string.substr(0,string.length-1);\n    var reverse = string.substr(string.length-1,string.length);\n\
    \    return palindrome + reverse;\n}\n", "    var palindrome = \"\",\n       \
    \ postfix = \"\";\n    for(var i = 0; i < string.length; i++){\n        postfix\
    \ = string.substr(0, i) + string.substr(i, string.length);\n        if(is_palindrome(postfix)){\n\
    \            palindrome = postfix + palindrome;\n        }\n    }\n    return\
    \ palindrome;\n}\n", "    var palindrome = \"\",\n        postfix = \"\",\n  \
    \      prefix_length = string.length,\n        suffix_length = 0,\n        suffix_start\
    \ = prefix_length;\n    while(suffix_length < prefix_length){\n        postfix\
    \ = string.substr(suffix_start, prefix_length);\n        suffix_length = postfix.length;\n\
    \        suffix_start = prefix_length - suffix_length;\n        if(postfix.toLowerCase()\
    \ === postfix.toLowerCase().split(\"\").reverse().join(\"\")){\n            palindrome\
    \ += postfix;\n            break;\n        }\n    }\n    return palindrome;\n\
    }\n", "    var postfix = string.split('').reverse().join('');\n    var palindrome\
    \ = string.slice(0, string.length - postfix.length) + postfix;\n    return palindrome;\n\
    }\n", "  var palindrome = \"\";\n  var prefix_length = 0;\n  var suffix_length\
    \ = 0;\n  var postfix_length = 0;\n  var postfix_array = [];\n  var postfix_array_length\
    \ = 0;\n  var postfix_array_reverse = [];\n  var postfix_array_reverse_length\
    \ = 0;\n  var postfix_array_reverse_index = 0;\n  var postfix_array_reverse_string\
    \ = \"\";\n  var postfix_array_reverse_string_length = 0;\n  var postfix_array_reverse_string_index\
    \ = 0;\n  var postfix_array_reverse_string_array = [];\n  var postfix_array_reverse_string_array_length\
    \ = 0;\n  var postfix_array_reverse_string_array_index = 0;\n  var postfix_array_reverse_string_array_string\
    \ = \"\";\n  var postfix_array_reverse_string_array_string_length = 0;\n  var\
    \ postfix_array_reverse_string_array_string_index = 0;\n  var postfix_array_reverse_string_array_string_array\
    \ = [];\n  var postfix_array_reverse_string_array_string_array_length = 0;\n \
    \ var postfix_array_reverse_string_array_string_array_index = 0;\n  var postfix_array_reverse_string_array_string_array_string\
    \ = \"\";\n  var postfix_array_reverse_string_array_string_array_string_length\
    \ = 0;\n  var postfix_array_reverse_string_array_string_array_string_index = 0;\n\
    \  var postfix_array_reverse_string_array_string_array_string_array = [];\n  var\
    \ postfix_array_reverse_string_array_string_array_string_array_length = 0;\n \
    \ var postfix_array_reverse_string_array_string_array_string_array_index = 0;\n\
    \  var postfix_array_reverse_string_array_string_array_string_array_string = \"\
    \";\n  var postfix_array_reverse_string_array_string_array_string_array_string_length\
    \ = 0;\n  var postfix_array_reverse_string_array_string_array_string_array_string_index\
    \ = 0;\n  var postfix_array_reverse_string_array_string_array_string_array_string_array\
    \ = [];\n  var postfix_array_reverse_string_array_string_array_string_array_string_array_length\
    \ = 0;\n  var postfix_array_reverse_string_array_string_array_string_array_string_array_index\
    \ = 0;\n  var postfix_array_reverse_string_array_string_array_string_array_string_array_string\
    \ = \"\";\n  var postfix_array_reverse_string_array_string_array_string_array_string_array_string_length\
    \ = 0;\n  var postfix_array_reverse_string_array_string_array_string_array_string_array_string_index\
    \ = 0;\n  var postfix_array_reverse_string_array_string_array_string_array_string_array_string_array\
    \ = [];\n  var postfix_array_reverse_string_array_string_array_string_array_string_array_string_array_length\
    \ = 0;\n  var postfix_array_reverse_string_array_string_array_string_array_string_array_string_array_index\
    \ = 0;\n  var postfix_array_reverse_string_array_string_array_string_array_string_array_string_array_string\
    \ = \"\";\n  var postfix_array_reverse_string_array_string_array_string_array_string_array_string_array_string_length\
    \ = 0;\n  var postfix_array_reverse_string_array_string_array_string_array_string_array_string_array_string_index\
    \ = 0;\n  var ", "    var palindrome = \"\",\n        postfix = \"\",\n      \
    \  prefix_length = string.length,\n        suffix_length = string.length,\n  \
    \      suffix_index = 0,\n        prefix_index = 0;\n\n    while(suffix_index\
    \ < suffix_length){\n        postfix = string.substr(suffix_index, 1);\n     \
    \   suffix_index = suffix_index + 1;\n        while(prefix_index < prefix_length){\n\
    \            postfix = postfix.concat(string[prefix_index]);\n            prefix_index\
    \ = prefix_index + 1;\n        }\n        palindrome = postfix.concat(palindrome);\n\
    \    }\n    return palindrome;\n}\n", "    var palindrome = \"\",\n        postfix\
    \ = \"\";\n    for(var i = 0; i < string.length; i++){\n        postfix = string.substr(0,\
    \ i);\n        palindrome += postfix;\n        palindrome += string[i];\n    }\n\
    \    return palindrome;\n}\n", "    var palindrome = \"\",\n        prefix_length\
    \ = 0,\n        suffix_length = 0,\n        prefix_reversed = \"\",\n        suffix_reversed\
    \ = \"\";\n    \n    for(var i = 0; i < string.length; i++){\n        if(string[i]\
    \ === \"-\"){\n            suffix_length++;\n        }\n        else{\n      \
    \      prefix_length++;\n        }\n    }\n    \n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === \"-\"){\n            suffix_reversed = suffix_reversed\
    \ + string[i];\n        }\n        else{\n            prefix_reversed = prefix_reversed\
    \ + string[i];\n        }\n    }\n    \n    for(var i = 0; i < suffix_length;\
    \ i++){\n        palindrome = palindrome + suffix_reversed;\n    }\n    \n   \
    \ for(var i = 0; i < prefix_length; i++){\n        palindrome = palindrome + prefix_reversed;\n\
    \    }\n    \n    return palindrome;\n}\n", "    var palindrome = \"\",\n    \
    \    prefix_length = 0,\n        suffix_length = 0,\n        prefix_reversed =\
    \ \"\",\n        suffix_reversed = \"\";\n\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === \"-\"){\n            suffix_length++;\n    \
    \        suffix_reversed += string[i];\n        }\n        else{\n           \
    \ prefix_length++;\n            prefix_reversed += string[i];\n        }\n   \
    \ }\n\n    prefix_reversed = prefix_reversed.split(\"\").reverse().join(\"\");\n\
    \    suffix_reversed = suffix_reversed.split(\"\").reverse().join(\"\");\n\n \
    \   for(var i = 0; i < suffix_length; i++){\n        palindrome += prefix_reversed\
    \ + suffix_reversed;\n    }\n\n    return palindrome;\n}\n", "    var palindrome\
    \ = \"\",\n        postfix = \"\",\n        prefix_length = 0,\n        suffix_length\
    \ = 0,\n        prefix_postfix = \"\";\n    \n    for(var i = 0; i <= string.length;\
    \ i++){\n        postfix = string.substr(i, 1);\n        prefix_length = string.length\
    \ - i;\n        suffix_length = prefix_length - postfix.length;\n        prefix_postfix\
    \ = string.substr(0, i);\n        \n        if(prefix_postfix.match(string.palindrome_regexp)){\n\
    \            palindrome += prefix_postfix + postfix;\n        }\n    }\n    \n\
    \    return palindrome;\n}\n", "    var palindrome = \"\",\n        postfix =\
    \ \"\";\n    \n    for(var i = 0; i < string.length; i++){\n        postfix =\
    \ string.substr(0, i) + string.substr(i, string.length);\n        \n        if(isPalindrome(postfix)){\n\
    \            palindrome = postfix + palindrome;\n        }\n    }\n    \n    return\
    \ palindrome;\n}\n", "    var palindrome = string.split(\"\").reverse().join(\"\
    \");\n    var postfix = string.split(\"\").reverse().join(\"\");\n    var prefix\
    \ = string.split(\"\").reverse().join(\"\");\n    var palindrome_padded = prefix\
    \ + palindrome + postfix;\n    return palindrome_padded;\n}\n", "    var postfix\
    \ = string.substr(0, string.length-1);\n    var reverse = postfix.split('').reverse().join('');\n\
    \    return string + reverse;\n}\n", "    var palindrome = \"\",\n        postfix\
    \ = \"\";\n    \n    for(var i = 0; i < string.length; i++){\n        postfix\
    \ += string[i];\n    }\n    \n    postfix = postfix.split(\"\").reverse().join(\"\
    \");\n    \n    for(var i = 0; i < string.length; i++){\n        palindrome +=\
    \ string[i];\n    }\n    \n    palindrome += postfix;\n    \n    return palindrome;\n\
    }\n", "    var palindrome = \"\",\n        prefix_length = 0,\n        suffix_length\
    \ = 0,\n        postfix_length = 0,\n        postfix_array = [],\n        postfix_array_length\
    \ = 0;\n\n    for(var i = 0, len = string.length; i < len; i++){\n        if(string[i]\
    \ === \"-\"){\n            postfix_array_length++;\n        }\n        postfix_array.push(string[i]);\n\
    \    }\n\n    while(postfix_array_length > 0){\n        postfix_length++;\n  \
    \      postfix_array_length--;\n    }\n\n    while(postfix_length > 0){\n    \
    \    postfix_length--;\n        postfix_array.push(string[postfix_length]);\n\
    \    }\n\n    for(var i = 0, len = postfix_array.length; i < len; i++){\n    \
    \    if(postfix_array[i] === postfix_array[postfix_length - 1]){\n           \
    \ postfix_length--;\n        }\n    }\n\n    prefix_length = postfix_length -\
    \ 1;\n\n    while(prefix_length > 0){\n        postfix_array.unshift(postfix_array[prefix_length]);\n\
    \        prefix_length--;\n    }\n\n    for(var i = 0, len = postfix_array.length;\
    \ i < len; i++){\n        palindrome += postfix_array[i];\n    }\n\n    return\
    \ palindrome;\n}\n", "    var palindrome = \"\";\n    var prefix_length = 0;\n\
    \    var suffix_length = 0;\n    var palindrome_length = 0;\n    var palindrome_postfix\
    \ = \"\";\n    var palindrome_prefix_length = 0;\n    var palindrome_suffix_length\
    \ = 0;\n    var palindrome_postfix_length = 0;\n    var palindrome_postfix_reverse\
    \ = \"\";\n    var palindrome_prefix_reverse = \"\";\n    var palindrome_suffix_reverse\
    \ = \"\";\n    var palindrome_postfix_reverse_length = 0;\n    var palindrome_prefix_reverse_length\
    \ = 0;\n    var palindrome_suffix_reverse_length = 0;\n    var palindrome_postfix_reverse_postfix\
    \ = \"\";\n    var palindrome_prefix_reverse_postfix = \"\";\n    var palindrome_suffix_reverse_postfix\
    \ = \"\";\n    var palindrome_postfix_reverse_postfix_length = 0;\n    var palindrome_prefix_reverse_postfix_length\
    \ = 0;\n    var palindrome_suffix_reverse_postfix_length = 0;\n    var palindrome_postfix_reverse_postfix_reverse\
    \ = \"\";\n    var palindrome_prefix_reverse_postfix_reverse = \"\";\n    var\
    \ palindrome_suffix_reverse_postfix_reverse = \"\";\n    var palindrome_postfix_reverse_postfix_reverse_length\
    \ = 0;\n    var palindrome_prefix_reverse_postfix_reverse_length = 0;\n    var\
    \ palindrome_suffix_reverse_postfix_reverse_length = 0;\n    var palindrome_postfix_reverse_postfix_reverse_postfix\
    \ = \"\";\n    var palindrome_prefix_reverse_postfix_reverse_postfix = \"\";\n\
    \    var palindrome_suffix_reverse_postfix_reverse_postfix = \"\";\n    var palindrome_postfix_reverse_postfix_reverse_postfix_length\
    \ = 0;\n    var palindrome_prefix_reverse_postfix_reverse_postfix_length = 0;\n\
    \    var palindrome_suffix_reverse_postfix_reverse_postfix_length = 0;\n    var\
    \ palindrome_postfix_reverse_postfix_reverse_postfix_reverse = \"\";\n    var\
    \ palindrome_prefix_reverse_postfix_reverse_postfix_reverse = \"\";\n    var palindrome_suffix_reverse_postfix_reverse_postfix_reverse\
    \ = \"\";\n    var palindrome_postfix_reverse_postfix_reverse_postfix_reverse_length\
    \ = 0;\n    var palindrome_prefix_reverse_postfix_reverse_postfix_reverse_length\
    \ = 0;\n    var palindrome_suffix_reverse_postfix_reverse_postfix_reverse_length\
    \ = 0;\n    var palindrome_postfix_reverse_postfix_reverse_postfix_reverse_postfix\
    \ = \"\";\n    var palindrome_prefix_reverse_postfix_reverse_postfix_reverse_postfix\
    \ = \"\";\n    var palin", "    var postfix = string.substr(0, string.length-1);\n\
    \    var reverse = postfix.split('').reverse().join('');\n    return string +\
    \ reverse + postfix;\n}\n", "    var palindrome = \"\",\n        postfix = \"\"\
    ;\n    \n    for(var i = 0; i < string.length; i++){\n        postfix = string.substr(0,\
    \ i);\n        postfix = postfix.split(\"\").reverse().join(\"\");\n        \n\
    \        if(postfix.split(\"\").join(\"\") === string){\n            palindrome\
    \ += postfix;\n        }\n    }\n    \n    return palindrome;\n}\n", "    var\
    \ palindrome = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n\
    \        postfix_length = 0,\n        postfix = \"\";\n\n    for(var i = 0; i\
    \ < string.length; i++){\n        if(string[i] === \"A\"){\n            postfix_length\
    \ = i;\n            break;\n        }\n    }\n\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === \"A\"){\n            suffix_length = i;\n  \
    \          break;\n        }\n    }\n\n    for(var i = 0; i < string.length; i++){\n\
    \        if(string[i] === \"A\"){\n            prefix_length = i;\n          \
    \  break;\n        }\n    }\n\n    for(var i = 0; i < string.length; i++){\n \
    \       if(string[i] === \"A\"){\n            postfix = string.substring(postfix_length,\
    \ postfix_length + suffix_length);\n            break;\n        }\n    }\n\n \
    \   for(var i = 0; i < string.length; i++){\n        if(string[i] === \"A\"){\n\
    \            palindrome = string.substring(0, prefix_length) + postfix + string.substring(postfix_length,\
    \ postfix_length + suffix_length);\n            break;\n        }\n    }\n\n \
    \   return palindrome;\n}\n", "    var palindrome = string.substr(0,string.length-1);\n\
    \    var reversed_string = string.substr(string.length-1,string.length);\n   \
    \ return palindrome + reversed_string;\n}\n", "    var palindrome = \"\",\n  \
    \      postfix = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n\
    \        prefix_reversed = \"\",\n        suffix_reversed = \"\";\n    \n    for(var\
    \ i = 0; i < string.length; i++){\n        postfix += string[i];\n        \n \
    \       if(string[i] === string[string.length -1]){\n            suffix_length\
    \ = i;\n            suffix_reversed = string.reverse();\n        }\n        \n\
    \        if(string[i] === string[0]){\n            prefix_length = i;\n      \
    \      prefix_reversed = string.reverse();\n        }\n    }\n    \n    for(var\
    \ i = 0; i < suffix_length; i++){\n        palindrome += string[suffix_length\
    \ - i];\n    }\n    \n    palindrome += string[suffix_length - suffix_length];\n\
    \    \n    for(var i = 0; i < prefix_length; i++){\n        palindrome += string[prefix_length\
    \ - i];\n    }\n    \n    palindrome += string[prefix_length - prefix_length];\n\
    \    \n    palindrome = palindrome.reverse();\n    \n    for(var i = 0; i < suffix_length;\
    \ i++){\n        palindrome += string[suffix_length - i];\n    }\n    \n    palindrome\
    \ += string[suffix_length - suffix_length];\n    \n    for(var i = 0; i < prefix_length;\
    \ i++){\n        palindrome += string[prefix_length - i];\n    }\n    \n    palindrome\
    \ += string[prefix_length - prefix_length];\n    \n    return palindrome;\n}\n",
  "    var palindrome = \"\",\n        postfix = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        postfix += string[i];\n    }\n    postfix = postfix.split(\"\"\
    ).reverse().join(\"\");\n    for(var i = 0; i < string.length; i++){\n       \
    \ palindrome += string[i];\n    }\n    palindrome += postfix;\n    return palindrome;\n\
    }\n", "    var palindrome = string;\n    var prefix_length = 0;\n    var suffix_length\
    \ = 0;\n    var reversed_string = \"\";\n    var prefix_string = \"\";\n    var\
    \ suffix_string = \"\";\n    var palindrome_length = 0;\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_string\
    \ = \"\";\n    var palindrome_suffix_string = \"\";\n    var palindrome_prefix_reversed_string\
    \ = \"\";\n    var palindrome_suffix_reversed_string = \"\";\n    var palindrome_prefix_reversed_string_index\
    \ = 0;\n    var palindrome_suffix_reversed_string_index = 0;\n    var palindrome_prefix_reversed_string_index2\
    \ = 0;\n    var palindrome_suffix_reversed_string_index2 = 0;\n    var palindrome_prefix_reversed_string_index3\
    \ = 0;\n    var palindrome_suffix_reversed_string_index3 = 0;\n    var palindrome_prefix_reversed_string_index4\
    \ = 0;\n    var palindrome_suffix_reversed_string_index4 = 0;\n    var palindrome_prefix_reversed_string_index5\
    \ = 0;\n    var palindrome_suffix_reversed_string_index5 = 0;\n    var palindrome_prefix_reversed_string_index6\
    \ = 0;\n    var palindrome_suffix_reversed_string_index6 = 0;\n    var palindrome_prefix_reversed_string_index7\
    \ = 0;\n    var palindrome_suffix_reversed_string_index7 = 0;\n    var palindrome_prefix_reversed_string_index8\
    \ = 0;\n    var palindrome_suffix_reversed_string_index8 = 0;\n    var palindrome_prefix_reversed_string_index9\
    \ = 0;\n    var palindrome_suffix_reversed_string_index9 = 0;\n    var palindrome_prefix_reversed_string_index10\
    \ = 0;\n    var palindrome_suffix_reversed_string_index10 = 0;\n    var palindrome_prefix_reversed_string_index11\
    \ = 0;\n    var palindrome_suffix_reversed_string_index11 = 0;\n    var palindrome_prefix_reversed_string_index12\
    \ = 0;\n    var palindrome_suffix_reversed_string_index12 = 0;\n    var palindrome_prefix_reversed_string_index13\
    \ = 0;\n    var palindrome_suffix_reversed_string_index13 = 0;\n    var palindrome_prefix_reversed_string_index14\
    \ = 0;\n    var palindrome_suffix_reversed_string_index14 = 0;\n    var palindrome_prefix_reversed_string_index15\
    \ = 0;\n    var palindrome_suffix_reversed_string_index15 = 0;\n    var palindrome_prefix_reversed_string_index16\
    \ = 0;", "    var palindrome = string.substr(0, string.length - 1);\n    var reversed_string\
    \ = string.substr(string.length - 1);\n    var reversed_palindrome = reversed_string.substr(0,\
    \ reversed_string.length - 1);\n    \n    var palindrome_length = palindrome.length;\n\
    \    var reversed_palindrome_length = reversed_palindrome.length;\n    \n    var\
    \ palindrome_postfix = \"\";\n    var reversed_palindrome_postfix = \"\";\n  \
    \  \n    var palindrome_postfix_length = palindrome_length - 1;\n    var reversed_palindrome_postfix_length\
    \ = reversed_palindrome_length - 1;\n    \n    var palindrome_postfix_char = \"\
    \";\n    var reversed_palindrome_postfix_char = \"\";\n    \n    var palindrome_postfix_char_length\
    \ = palindrome_postfix_char.length;\n    var reversed_palindrome_postfix_char_length\
    \ = reversed_palindrome_postfix_char.length;\n    \n    var palindrome_postfix_char_counter\
    \ = 0;\n    var reversed_palindrome_postfix_char_counter = 0;\n    \n    var palindrome_postfix_char_counter_reverse\
    \ = 0;\n    var reversed_palindrome_postfix_char_counter_reverse = 0;\n    \n\
    \    var palindrome_postfix_char_counter_reverse_add = 0;\n    var reversed_palindrome_postfix_char_counter_reverse_add\
    \ = 0;\n    \n    var palindrome_postfix_char_counter_reverse_add_reverse = 0;\n\
    \    var reversed_palindrome_postfix_char_counter_reverse_add_reverse = 0;\n \
    \   \n    var palindrome_postfix_char_counter_reverse_add_reverse_add = 0;\n \
    \   var reversed_palindrome_postfix_char_counter_reverse_add_reverse_add = 0;\n\
    \    \n    var palindrome_postfix_char_counter_reverse_add_reverse_add_reverse\
    \ = 0;\n    var reversed_palindrome_postfix_char_counter_reverse_add_reverse_add_reverse\
    \ = 0;\n    \n    var palindrome_postfix_char_counter_reverse_add_reverse_add_reverse_add\
    \ = 0;\n    var reversed_palindrome_postfix_char_counter_reverse_add_reverse_add_reverse\
    \ = 0;\n    \n    var palindrome_postfix_char_counter_reverse_add_reverse_add_reverse_add_reverse\
    \ = 0;\n    var reversed_palindrome_postfix_char_counter_reverse_add_reverse_add_reverse\
    \ = 0;\n    \n    var palindrome_postfix_char_counter_reverse_add_reverse_add_reverse_add_reverse\
    \ = 0;\n    var reversed_palindrome_postfix_char_counter_reverse_add_reverse_add_reverse\
    \ = 0;", "    var palindrome = string;\n    var prefix_length = 0;\n    var suffix_length\
    \ = 0;\n    var postfix_length = 0;\n    var reversed_postfix = \"\";\n    var\
    \ reversed_prefix = \"\";\n    var reversed_suffix = \"\";\n    var palindrome_length\
    \ = 0;\n    var palindrome_postfix = \"\";\n    var palindrome_prefix = \"\";\n\
    \    var palindrome_suffix = \"\";\n    var palindrome_postfix_length = 0;\n \
    \   var palindrome_prefix_length = 0;\n    var palindrome_suffix_length = 0;\n\
    \    var palindrome_postfix_reverse = \"\";\n    var palindrome_prefix_reverse\
    \ = \"\";\n    var palindrome_suffix_reverse = \"\";\n    var palindrome_postfix_reverse_length\
    \ = 0;\n    var palindrome_prefix_reverse_length = 0;\n    var palindrome_suffix_reverse_length\
    \ = 0;\n    var palindrome_postfix_reversed_string = \"\";\n    var palindrome_prefix_reversed_string\
    \ = \"\";\n    var palindrome_suffix_reversed_string = \"\";\n    var palindrome_postfix_reversed_string_length\
    \ = 0;\n    var palindrome_prefix_reversed_string_length = 0;\n    var palindrome_suffix_reversed_string_length\
    \ = 0;\n    var palindrome_postfix_reversed_string_postfix = \"\";\n    var palindrome_prefix_reversed_string_postfix\
    \ = \"\";\n    var palindrome_suffix_reversed_string_postfix = \"\";\n    var\
    \ palindrome_postfix_reversed_string_prefix_length = 0;\n    var palindrome_prefix_reversed_string_prefix_length\
    \ = 0;\n    var palindrome_suffix_reversed_string_prefix_length = 0;\n    var\
    \ palindrome_postfix_reversed_string_prefix_postfix = \"\";\n    var palindrome_prefix_reversed_string_prefix_postfix\
    \ = \"\";\n    var palindrome_suffix_reversed_string_prefix_postfix = \"\";\n\
    \    var palindrome_postfix_reversed_string_prefix_postfix_length = 0;\n    var\
    \ palindrome_prefix_reversed_string_prefix_postfix_length = 0;\n    var palindrome_suffix_reversed_string_prefix_postfix_length\
    \ = 0;\n    var palindrome_postfix_reversed_string_prefix_postfix_postfix = \"\
    \";\n    var palindrome_prefix_reversed_string_prefix_postfix_postfix = \"\";\n\
    \    var palindrome_suffix_reversed_string_prefix_postfix_postfix = \"\";\n  \
    \  var palindrome_postfix_reversed_string_prefix_postfix_postfix_length = 0;\n\
    \    var palindrome_prefix_reversed_string_prefix_postfix_postfix_length = 0;\n\
    \    var palin", "    var palindrome = string.substr(0, string.length - 1);\n\
    \    var prefix_reversed = string.substr(string.length - 1, string.length);\n\
    \    var postfix_reversed = string.substr(0, string.length - 1);\n    var palindrome_postfix\
    \ = prefix_reversed + palindrome + postfix_reversed;\n    return palindrome_postfix;\n\
    }\n", "    var palindrome = \"\",\n        postfix = \"\",\n        prefix_length\
    \ = string.length,\n        suffix_length = string.length - prefix_length;\n\n\
    \    for(var i = 0; i < prefix_length; i++){\n        postfix = string.substr(i,\
    \ prefix_length);\n        palindrome = palindrome + postfix;\n    }\n\n    for(var\
    \ i = 0; i < suffix_length; i++){\n        postfix = string.substr(prefix_length,\
    \ suffix_length);\n        palindrome = palindrome + postfix;\n    }\n\n    return\
    \ palindrome;\n}\n", "    var palindrome = \"\",\n        postfix = \"\";\n  \
    \  \n    for(var i = string.length - 1; i >= 0; i--){\n        postfix = string.substr(0,\
    \ i) + string[i];\n        \n        if(postfix.match(/[a-z]/) && postfix.match(/[A-Z]/)){\n\
    \            palindrome = palindrome + postfix;\n        }\n    }\n    \n    return\
    \ palindrome;\n}\n", "    var palindrome = \"\",\n        postfix = \"\";\n  \
    \  \n    for(var i = 0; i < string.length; i++){\n        postfix = string.substr(0,\
    \ i) + string[i];\n        \n        if(isPalindrome(postfix)){\n            palindrome\
    \ = postfix + palindrome;\n        }\n    }\n    \n    return palindrome;\n}\n",
  "    var palindrome = \"\",\n        prefix_length = 0,\n        suffix_length =\
    \ 0,\n        postfix_length = 0,\n        postfix_array = [],\n        postfix_array_length\
    \ = 0;\n\n    for(var i = 0; i < string.length; i++){\n        if(string[i] ===\
    \ string[string.length - 1 - i]){\n            postfix_array.push(string[i]);\n\
    \            postfix_array_length++;\n        }\n    }\n\n    for(var i = 0; i\
    \ < postfix_array_length; i++){\n        postfix_length += postfix_array[i].length;\n\
    \    }\n\n    for(var i = 0; i < string.length; i++){\n        if(string[i] ===\
    \ string[string.length - 1 - i]){\n            postfix_length -= postfix_array[i].length;\n\
    \        }\n    }\n\n    for(var i = 0; i < postfix_length; i++){\n        palindrome\
    \ += string[i];\n    }\n\n    for(var i = 0; i < postfix_length; i++){\n     \
    \   palindrome += string[string.length - 1 - i];\n    }\n\n    return palindrome;\n\
    }\n", "    var palindrome = \"\",\n        prefix_length = 0,\n        suffix_length\
    \ = 0,\n        prefix_postfix = \"\",\n        suffix_postfix = \"\";\n    \n\
    \    prefix_length = string.length - 1;\n    suffix_length = string.length - 1;\n\
    \    \n    prefix_postfix = string.substr(prefix_length, string.length - prefix_length);\n\
    \    suffix_postfix = string.substr(0, suffix_length);\n    \n    while(suffix_length\
    \ >= 0){\n        if(suffix_length == 0){\n            palindrome += prefix_postfix.split(\"\
    \").reverse().join(\"\");\n            break;\n        }\n        \n        suffix_postfix\
    \ = string.substr(0, suffix_length);\n        \n        if(suffix_postfix.split(\"\
    \").reverse().join(\"\") == suffix_postfix){\n            palindrome += prefix_postfix.split(\"\
    \").reverse().join(\"\");\n            break;\n        }\n        \n        suffix_length--;\n\
    \    }\n    \n    return palindrome;\n}\n", "    var palindrome = \"\";\n    var\
    \ prefix_length = 0;\n    var suffix_length = 0;\n    var prefix_postfix = \"\"\
    ;\n    var suffix_postfix = \"\";\n    var postfix_length = 0;\n    var postfix_postfix\
    \ = \"\";\n    var postfix_postfix_length = 0;\n    var postfix_postfix_postfix\
    \ = \"\";\n    var postfix_postfix_postfix_length = 0;\n    var postfix_postfix_postfix_postfix\
    \ = \"\";\n    var postfix_postfix_postfix_postfix_length = 0;\n    var postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var postfix_postfix_postfix_postfix_postfix_length = 0;\n    var\
    \ postfix_postfix_postfix_postfix_postfix_postfix = \"\";\n    var postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix = \"\"\
    ;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_length = 0;\n\
    \    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix = \"\"\
    ;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_",
  "    var palindrome = string.substr(0, string.length-1);\n    var prefix_length\
    \ = string.length - palindrome.length;\n    var prefix_reverse = string.substr(prefix_length,\
    \ string.length);\n    \n    return palindrome + prefix_reverse;\n}\n", "    var\
    \ palindrome = \"\";\n    var prefix_length = 0;\n    var suffix_length = 0;\n\
    \    var prefix_string = \"\";\n    var suffix_string = \"\";\n    var palindrome_string\
    \ = \"\";\n    var palindrome_length = 0;\n    var palindrome_prefix_length =\
    \ 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_string\
    \ = \"\";\n    var palindrome_suffix_string = \"\";\n    var palindrome_prefix_string_reverse\
    \ = \"\";\n    var palindrome_suffix_string_reverse = \"\";\n    var palindrome_prefix_string_reverse_length\
    \ = 0;\n    var palindrome_suffix_string_reverse_length = 0;\n    var palindrome_prefix_string_reverse_string\
    \ = \"\";\n    var palindrome_suffix_string_reverse_string = \"\";\n    var palindrome_prefix_string_reverse_string_reverse\
    \ = \"\";\n    var palindrome_suffix_string_reverse_string_reverse = \"\";\n \
    \   var palindrome_prefix_string_reverse_string_reverse_length = 0;\n    var palindrome_suffix_string_reverse_string_reverse_length\
    \ = 0;\n    var palindrome_prefix_string_reverse_string_reverse_string = \"\"\
    ;\n    var palindrome_suffix_string_reverse_string_reverse_string = \"\";\n  \
    \  var palindrome_prefix_string_reverse_string_reverse_string_reverse = \"\";\n\
    \    var palindrome_suffix_string_reverse_string_reverse_string_reverse = \"\"\
    ;\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse_length\
    \ = 0;\n    var palindrome_suffix_string_reverse_string_reverse_string_reverse_length\
    \ = 0;\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse_string\
    \ = \"\";\n    var palindrome_suffix_string_reverse_string_reverse_string_reverse_string\
    \ = \"\";\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse_string_reverse\
    \ = \"\";\n    var palindrome_suffix_string_reverse_string_reverse_string_reverse_string_reverse\
    \ = \"\";\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse_string_reverse_length\
    \ = 0;\n    var palindrome_suffix_string_reverse_string_reverse_string_reverse_string_reverse_length\
    \ = 0;\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse_string_reverse_string\
    \ = \"\";\n    var palindrome_suffix_string_reverse_string_reverse_string_reverse_string_reverse_string\
    \ = \"\";\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse\
    \ = \"\";\n    var palindrome_suffi", "    var palindrome = string.substr(0,string.length-1);\n\
    \    var reverse = string.substr(string.length-1,string.length);\n    string =\
    \ string + reverse + palindrome;\n    return string;\n}\n", "    var palindrome\
    \ = string.substr(0,string.length-1);\n    var reverse = string.substr(string.length-1,string.length);\n\
    \    string += reverse;\n    return string;\n}\n", "    var palindrome = \"\"\
    ,\n        prefix_length = 0,\n        suffix_length = 0,\n        postfix_length\
    \ = 0,\n        postfix = \"\",\n        postfix_reversed = \"\",\n        postfix_reversed_length\
    \ = 0;\n\n    for(var i = 0, len = string.length; i < len; i++){\n        if(string[i]\
    \ === string[len - 1]){\n            postfix_length++;\n        }\n        else{\n\
    \            postfix_length = 0;\n        }\n        if(postfix_length >= suffix_length){\n\
    \            postfix_length = 0;\n            postfix_reversed_length++;\n   \
    \     }\n        if(postfix_length >= prefix_length){\n            postfix_length\
    \ = 0;\n            postfix_reversed_length++;\n        }\n        if(postfix_length\
    \ >= suffix_length){\n            postfix_length = 0;\n            postfix_reversed_length++;\n\
    \        }\n        if(postfix_length >= prefix_length){\n            postfix_length\
    \ = 0;\n            postfix_reversed_length++;\n        }\n        if(postfix_length\
    \ >= suffix_length){\n            postfix_length = 0;\n            postfix_reversed_length++;\n\
    \        }\n        if(postfix_length >= prefix_length){\n            postfix_length\
    \ = 0;\n            postfix_reversed_length++;\n        }\n        if(postfix_length\
    \ >= suffix_length){\n            postfix_length = 0;\n            postfix_reversed_length++;\n\
    \        }\n        if(postfix_length >= prefix_length){\n            postfix_length\
    \ = 0;\n            postfix_reversed_length++;\n        }\n        if(postfix_length\
    \ >= suffix_length){\n            postfix_length = 0;\n            postfix_reversed_length++;\n\
    \        }\n        if(postfix_length >= prefix_length){\n            postfix_length\
    \ = 0;\n            postfix_reversed_length++;\n        }\n        if(postfix_length\
    \ >= suffix_length){\n            postfix_length = 0;\n            postfix_reversed_length++;\n\
    \        }\n        if(postfix_length >= prefix_length){\n            postfix_length\
    \ = 0;\n            postfix_reversed_length++;\n        }\n        if(postfix_length\
    \ >= suffix_length){\n            postfix_length = 0;\n            postfix_reversed_length++;\n\
    \        }\n        if(postfix_length >= prefix_length){\n            postfix_length\
    \ = 0;\n            postfix_reversed_length++;\n        }\n        if(postfix_length\
    \ >= suffix_length){\n            postfix_length = 0;\n            postfix_reversed_length++;\n\
    \        }\n        if(postfix_length >= prefix_length){\n            postfix_length\
    \ = 0;\n            postfix_reversed_length++;\n        }\n        if(postfix_length\
    \ >= suffix_length){\n            postfix_length = 0;\n            post", "  \
    \  var reversed_string = string.replace(/^.*/,\"\").split(\"\").reverse().join(\"\
    \");\n    var postfix_length = string.length - reversed_string.length;\n    var\
    \ palindrome = string.substr(0,postfix_length) + reversed_string;\n    return\
    \ palindrome;\n}\n", "    var palindrome = string.split('').reverse().join('');\n\
    \    var palindrome_padded = palindrome + palindrome;\n    var palindrome_length\
    \ = palindrome_padded.length;\n    var palindrome_prefix = string.substr(0, palindrome_length);\n\
    \    var palindrome_suffix = string.substr(palindrome_length);\n    return palindrome_prefix\
    \ + palindrome_suffix;\n}\n", "    var postfix = string.substr(0, string.length\
    \ - 1);\n    var reverse = postfix.split('').reverse().join('');\n    return string\
    \ + reverse + postfix;\n}\n", "    var palindrome = string.substr(0, string.length\
    \ - 1);\n    var prefix_length = string.length - 1;\n    var reversed_string =\
    \ string.substr(prefix_length, string.length);\n    var reversed_palindrome =\
    \ reversed_string.substr(0, reversed_string.length - 1);\n    return palindrome\
    \ + reversed_palindrome;\n}\n", "    var palindrome = \"\",\n        prefix_length\
    \ = 0,\n        suffix_length = 0,\n        suffix_postfix = \"\";\n    \n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === \"-\"){\n\
    \            suffix_length++;\n            suffix_postfix += string[i];\n    \
    \    }\n        else{\n            prefix_length++;\n            palindrome +=\
    \ string[i];\n        }\n    }\n    \n    for(var i = 0; i < suffix_length; i++){\n\
    \        palindrome += string[prefix_length + i];\n    }\n    \n    for(var i\
    \ = 0; i < suffix_postfix.length; i++){\n        palindrome += string[prefix_length\
    \ + suffix_length - suffix_postfix.length + i];\n    }\n    \n    return palindrome;\n\
    }\n", "    var palindrome = string;\n    var prefix_length = string.length;\n\
    \    var suffix_length = string.length - 1;\n    var palindrome_length = string.length\
    \ + string.length - 1;\n    var palindrome_suffix = \"\";\n    var palindrome_prefix\
    \ = \"\";\n    var palindrome_prefix_length = string.length - 1;\n    var palindrome_suffix_length\
    \ = string.length - 1;\n    var palindrome_prefix_suffix = \"\";\n    var palindrome_prefix_suffix_length\
    \ = string.length - 1;\n    var palindrome_prefix_suffix_suffix = \"\";\n    var\
    \ palindrome_prefix_suffix_suffix_length = string.length - 1;\n    var palindrome_prefix_suffix_suffix_suffix\
    \ = \"\";\n    var palindrome_prefix_suffix_suffix_suffix_length = string.length\
    \ - 1;\n    var palindrome_prefix_suffix_suffix_suffix_suffix = \"\";\n    var\
    \ palindrome_prefix_suffix_suffix_suffix_suffix_length = string.length - 1;\n\
    \    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix = \"\";\n    var\
    \ palindrome_prefix_suffix_suffix_suffix_suffix_suffix_length = string.length\
    \ - 1;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix =\
    \ \"\";\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = string.length - 1;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix\
    \ = \"\";\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = string.length - 1;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix\
    \ = \"\";\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = string.length - 1;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix\
    \ = \"\";\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = string.length - 1;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix\
    \ = \"\";\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = string.length - 1;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_",
  "    var palindrome = string.substr(0,string.length-1);\n    var reverse = string.substr(string.length-1,string.length);\n\
    \    var new_string = string + reverse + palindrome;\n    return new_string;\n\
    }\n", "    var palindrome = string.split('').reverse().join('');\n    var palindrome_length\
    \ = palindrome.length;\n    var palindrome_prefix = string.slice(0, palindrome_length);\n\
    \    var palindrome_suffix = string.slice(palindrome_length);\n    var palindrome_prefix_reversed\
    \ = palindrome_prefix.split('').reverse().join('');\n    var palindrome_suffix_reversed\
    \ = palindrome_suffix.split('').reverse().join('');\n    var palindrome_prefix_reversed_length\
    \ = palindrome_prefix_reversed.length;\n    var palindrome_suffix_reversed_length\
    \ = palindrome_suffix_reversed.length;\n    var palindrome_prefix_reversed_suffix\
    \ = palindrome_prefix_reversed.slice(0, palindrome_prefix_reversed_length);\n\
    \    var palindrome_suffix_reversed_suffix = palindrome_suffix_reversed.slice(palindrome_suffix_reversed_length);\n\
    \    var palindrome_prefix_reversed_suffix_length = palindrome_prefix_reversed_suffix.length;\n\
    \    var palindrome_suffix_reversed_suffix_length = palindrome_suffix_reversed_suffix.length;\n\
    \    var palindrome_prefix_reversed_suffix_suffix = palindrome_prefix_reversed.slice(palindrome_prefix_reversed_suffix_length);\n\
    \    var palindrome_suffix_reversed_suffix_suffix = palindrome_suffix_reversed.slice(palindrome_suffix_reversed_suffix_length);\n\
    \    var palindrome_prefix_reversed_suffix_suffix_length = palindrome_prefix_reversed_suffix_suffix.length;\n\
    \    var palindrome_suffix_reversed_suffix_suffix_length = palindrome_suffix_reversed_suffix_suffix.length;\n\
    \    var palindrome_prefix_reversed_suffix_suffix_suffix = palindrome_prefix_reversed.slice(palindrome_prefix_reversed_suffix_suffix_length);\n\
    \    var palindrome_suffix_reversed_suffix_suffix_suffix = palindrome_suffix_reversed.slice(palindrome_suffix_reversed_suffix_suffix_length);\n\
    \    var palindrome_prefix_reversed_suffix_suffix_suffix_length = palindrome_prefix_reversed_suffix_suffix_suffix.length;\n\
    \    var palindrome_suffix_reversed_suffix_suffix_suffix_length = palindrome_suffix_reversed_suffix_suffix_suffix.length;\n\
    \    var palindrome_prefix_reversed_suffix_suffix_suffix_suffix = palindrome_prefix_reversed.slice(palindrome_",
  "    var reversed_string = \"\";\n    var postfix_length = string.length;\n    var\
    \ prefix_length = string.length - postfix_length;\n    var prefix_postfix = string.substr(0,\
    \ prefix_length);\n    var postfix_postfix = string.substr(prefix_length, postfix_length);\n\
    \    var palindrome = prefix_postfix.concat(postfix_postfix).concat(reversed_string);\n\
    \    return palindrome;\n}\n", "    var palindrome = string.substr(0,string.length-1);\n\
    \    var reversed_string = string.substr(string.length-1,string.length);\n   \
    \ var reversed_palindrome = reversed_string.substr(0,reversed_string.length-1);\n\
    \    var palindrome_with_suffix = palindrome + reversed_palindrome;\n    return\
    \ palindrome_with_suffix;\n}\n", "    var palindrome = \"\",\n        postfix\
    \ = \"\";\n    \n    for(var i = 0; i < string.length; i++){\n        postfix\
    \ += string[i];\n    }\n    \n    postfix = postfix.split(\"\").reverse().join(\"\
    \");\n    \n    for(var i = 0; i < string.length; i++){\n        if(string[i]\
    \ === postfix){\n            palindrome += string[i];\n        }\n    }\n    \n\
    \    return palindrome;\n}\n", "    var palindrome = \"\";\n    var postfix =\
    \ \"\";\n    var suffix;\n    var reverse;\n    var i;\n    var j;\n    var k;\n\
    \    var len;\n    var max;\n    var min;\n    var found;\n    var found2;\n \
    \   var found3;\n    var found4;\n    var found5;\n    var found6;\n    var found7;\n\
    \    var found8;\n    var found9;\n    var found10;\n    var found11;\n    var\
    \ found12;\n    var found13;\n    var found14;\n    var found15;\n    var found16;\n\
    \    var found17;\n    var found18;\n    var found19;\n    var found20;\n    var\
    \ found21;\n    var found22;\n    var found23;\n    var found24;\n    var found25;\n\
    \    var found26;\n    var found27;\n    var found28;\n    var found29;\n    var\
    \ found30;\n    var found31;\n    var found32;\n    var found33;\n    var found34;\n\
    \    var found35;\n    var found36;\n    var found37;\n    var found38;\n    var\
    \ found39;\n    var found40;\n    var found41;\n    var found42;\n    var found43;\n\
    \    var found44;\n    var found45;\n    var found46;\n    var found47;\n    var\
    \ found48;\n    var found49;\n    var found50;\n    var found51;\n    var found52;\n\
    \    var found53;\n    var found54;\n    var found55;\n    var found56;\n    var\
    \ found57;\n    var found58;\n    var found59;\n    var found60;\n    var found61;\n\
    \    var found62;\n    var found63;\n    var found64;\n    var found65;\n    var\
    \ found66;\n    var found67;\n    var found68;\n    var found69;\n    var found70;\n\
    \    var found71;\n    var found72;\n    var found73;\n    var found74;\n    var\
    \ found75;\n    var found76;\n    var found77;\n    var found78;\n    var found79;\n\
    \    var found80;\n    var found81;\n    var found82;\n    var found83;\n    var\
    \ found84;\n    var found85;\n    var found86;\n    var found87;\n    var found88;\n\
    \    var found89;\n    var found90;\n    var found91;\n    var found92;\n    var\
    \ found93;\n    var found94;\n    var found95;\n    var found96;\n    var found97;\n\
    \    var found98;\n", "    var palindrome = string.substr(0, string.length - 1);\n\
    \    var prefix_length = string.length - palindrome.length;\n    var postfix_length\
    \ = string.length - prefix_length;\n    var reversed_string = string.substr(prefix_length,\
    \ postfix_length);\n    return palindrome + reversed_string;\n}\n", "    var palindrome\
    \ = string.split(\"\").reverse().join(\"\");\n    var prefix_length = string.length\
    \ - palindrome.length;\n    var prefix_string = string.substr(0, prefix_length);\n\
    \    return prefix_string + palindrome;\n}\n", "    var palindrome = \"\",\n \
    \       postfix = \"\";\n    \n    for(var i = 0; i < string.length; i++){\n \
    \       postfix += string[i];\n    }\n    \n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === postfix[postfix.length - i]){\n            palindrome\
    \ += string[i];\n        }\n    }\n    \n    return palindrome;\n}\n", "  var\
    \ palindrome = string;\n  var palindromeLength = 0;\n  var palindromePostfix;\n\
    \  var palindromePrefix;\n  var palindromeReverse;\n  var palindromeReverseLength;\n\
    \  var palindromeReversePostfix;\n  var palindromeReversePrefix;\n  var palindromeReverseReverse;\n\
    \  var palindromeReverseReverseLength;\n  var palindromeReverseReversePostfix;\n\
    \  var palindromeReverseReversePrefix;\n  var palindromeReverseReverseReverse;\n\
    \  var palindromeReverseReverseReverseLength;\n  var palindromeReverseReverseReversePostfix;\n\
    \  var palindromeReverseReverseReversePrefix;\n  var palindromeReverseReverseReverseReverse;\n\
    \  var palindromeReverseReverseReverseLength;\n  var palindromeReverseReverseReversePostfix;\n\
    \  var palindromeReverseReverseReversePrefix;\n  var palindromeReverseReverseReverseReverseReverse;\n\
    \  var palindromeReverseReverseReverseLength;\n  var palindromeReverseReverseReversePostfix;\n\
    \  var palindromeReverseReverseReversePrefix;\n  var palindromeReverseReverseReverseReverse;\n\
    \  var palindromeReverseReverseReverseLength;\n  var palindromeReverseReverseReversePostfix;\n\
    \  var palindromeReverseReverseReversePrefix;\n  var palindromeReverseReverseReverseReverse;\n\
    \  var palindromeReverseReverseReverseLength;\n  var palindromeReverseReverseReversePostfix;\n\
    \  var palindromeReverseReverseReversePrefix;\n  var palindromeReverseReverseReverseReverse;\n\
    \  var palindromeReverseReverseReverseLength;\n  var palindromeReverseReverseReversePostfix;\n\
    \  var palindromeReverseReverseReversePrefix;\n  var palindromeReverseReverseReverseReverse;\n\
    \  var palindromeReverseReverseReverseLength;\n  var palindromeReverseReverseReversePostfix;\n\
    \  var palindromeReverseReverseReversePrefix;\n  var palindromeReverseReverseReverseReverse;\n\
    \  var palindromeReverseReverseReverseLength;\n  var palindromeReverseReverseReversePostfix;\n\
    \  var palindromeReverseReverseReversePrefix;\n  var palindromeReverseReverseReverseReverse;\n\
    \  var palindromeReverseReverseReverseLength;\n  var palindromeReverseReverseReversePostfix;\n\
    \  var palindromeReverseReverseReversePrefix", "    var palindrome = \"\",\n \
    \       postfix = \"\";\n    for(var i = 0; i < string.length; i++){\n       \
    \ postfix = string.substr(0, i) + string[i];\n        if(postfix.match(/[a-z]/)\
    \ && postfix.match(/[A-Z]/)){\n            palindrome = postfix + palindrome;\n\
    \        }\n    }\n    return palindrome;\n}\n", "    var palindrome = string.substr(0,\
    \ string.length - 1);\n    var prefix_reversed = string.substr(string.length -\
    \ 1);\n    var postfix_reversed = string.substr(0, string.length - 1);\n    var\
    \ palindrome_postfix = prefix_reversed + palindrome + postfix_reversed;\n    return\
    \ palindrome_postfix;\n}\n", "    var postfix = string.split('').reverse().join('');\n\
    \    var palindrome = string.substr(0, string.length - postfix.length) + postfix;\n\
    \    return palindrome;\n}\n", "    var reversed_string = \"\";\n    var palindrome\
    \ = \"\";\n    var postfix = \"\";\n    var prefix_length = 0;\n    var postfix_length\
    \ = 0;\n    var postfix_string = \"\";\n    var palindrome_length = 0;\n    var\
    \ palindrome_string = \"\";\n    var palindrome_postfix = \"\";\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_postfix_length = 0;\n    var palindrome_postfix_string\
    \ = \"\";\n    var palindrome_prefix_string = \"\";\n    var palindrome_postfix_string_reverse\
    \ = \"\";\n    var palindrome_prefix_string_reverse = \"\";\n    var palindrome_postfix_string_reverse_length\
    \ = \"\";\n    var palindrome_prefix_string_reverse_length = \"\";\n    var palindrome_postfix_string_reverse_string\
    \ = \"\";\n    var palindrome_prefix_string_reverse_string = \"\";\n    var palindrome_postfix_string_reverse_string_reverse\
    \ = \"\";\n    var palindrome_prefix_string_reverse_string_reverse = \"\";\n \
    \   var palindrome_postfix_string_reverse_string_reverse_length = \"\";\n    var\
    \ palindrome_prefix_string_reverse_string_reverse_length = \"\";\n    var palindrome_postfix_string_reverse_string_reverse_string\
    \ = \"\";\n    var palindrome_prefix_string_reverse_string_reverse_string = \"\
    \";\n    var palindrome_postfix_string_reverse_string_reverse_string_reverse =\
    \ \"\";\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse\
    \ = \"\";\n    var palindrome_postfix_string_reverse_string_reverse_string_reverse_length\
    \ = \"\";\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse_length\
    \ = \"\";\n    var palindrome_postfix_string_reverse_string_reverse_string_reverse_string\
    \ = \"\";\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse_string\
    \ = \"\";\n    var palindrome_postfix_string_reverse_string_reverse_string_reverse_string_reverse\
    \ = \"\";\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse_string_reverse\
    \ = \"\";\n    var palindrome_postfix_string_reverse_string_reverse_string_reverse_string_reverse_length\
    \ = \"\";\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse_string_reverse_length\
    \ = \"\";\n    var palindrome_postfix_string_reverse_string_reverse_string_reverse_string_reverse_string\
    \ = \"\";\n    var palindrome_prefix_string_reverse_string_reverse_string_reverse_string_reverse_string\
    \ = \"\";\n    var palindrome_postfix_string_reverse_string_re", "    var palindrome\
    \ = string.substr(0, string.length-1);\n    var prefix_length = string.length\
    \ - palindrome.length;\n    var prefix_reversed = string.substr(prefix_length,\
    \ string.length);\n    return palindrome + prefix_reversed;\n}\n", "    var palindrome\
    \ = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n        prefix_postfix\
    \ = \"\",\n        suffix_postfix = \"\";\n    \n    prefix_length = string.length\
    \ - 1;\n    suffix_length = string.length - 1;\n    \n    prefix_postfix = string.substr(prefix_length);\n\
    \    suffix_postfix = string.substr(0, suffix_length);\n    \n    while(suffix_length\
    \ >= 0){\n        if(suffix_length == 0){\n            palindrome += prefix_postfix.split(\"\
    \").reverse().join(\"\");\n            break;\n        }\n        \n        if(suffix_length\
    \ < prefix_length){\n            suffix_length = prefix_length;\n            suffix_postfix\
    \ = string.substr(0, suffix_length);\n        }\n        \n        suffix_postfix\
    \ = string.substr(0, suffix_length);\n        prefix_postfix = string.substr(prefix_length);\n\
    \        \n        suffix_postfix = suffix_postfix.split(\"\").reverse().join(\"\
    \");\n        prefix_postfix = prefix_postfix.split(\"\").reverse().join(\"\"\
    );\n        \n        palindrome += prefix_postfix + suffix_postfix;\n       \
    \ \n        prefix_length = suffix_length;\n        suffix_length = suffix_length\
    \ - 1;\n        \n        prefix_postfix = string.substr(prefix_length);\n   \
    \     suffix_postfix = string.substr(0, suffix_length);\n    }\n    \n    return\
    \ palindrome;\n}\n", "    var palindrome = string;\n    var prefix_length = 0;\n\
    \    var suffix_length = 0;\n    var reverse_string = \"\";\n    var palindrome_length\
    \ = 0;\n    var palindrome_postfix = \"\";\n    var palindrome_postfix_reverse\
    \ = \"\";\n    var palindrome_postfix_reverse_index = 0;\n    var palindrome_postfix_reverse_index2\
    \ = 0;\n    var palindrome_postfix_reverse_index3 = 0;\n    var palindrome_postfix_reverse_index4\
    \ = 0;\n    var palindrome_postfix_reverse_index5 = 0;\n    var palindrome_postfix_reverse_index6\
    \ = 0;\n    var palindrome_postfix_reverse_index7 = 0;\n    var palindrome_postfix_reverse_index8\
    \ = 0;\n    var palindrome_postfix_reverse_index9 = 0;\n    var palindrome_postfix_reverse_index10\
    \ = 0;\n    var palindrome_postfix_reverse_index11 = 0;\n    var palindrome_postfix_reverse_index12\
    \ = 0;\n    var palindrome_postfix_reverse_index13 = 0;\n    var palindrome_postfix_reverse_index14\
    \ = 0;\n    var palindrome_postfix_reverse_index15 = 0;\n    var palindrome_postfix_reverse_index16\
    \ = 0;\n    var palindrome_postfix_reverse_index17 = 0;\n    var palindrome_postfix_reverse_index18\
    \ = 0;\n    var palindrome_postfix_reverse_index19 = 0;\n    var palindrome_postfix_reverse_index20\
    \ = 0;\n    var palindrome_postfix_reverse_index21 = 0;\n    var palindrome_postfix_reverse_index22\
    \ = 0;\n    var palindrome_postfix_reverse_index23 = 0;\n    var palindrome_postfix_reverse_index24\
    \ = 0;\n    var palindrome_postfix_reverse_index25 = 0;\n    var palindrome_postfix_reverse_index26\
    \ = 0;\n    var palindrome_postfix_reverse_index27 = 0;\n    var palindrome_postfix_reverse_index28\
    \ = 0;\n    var palindrome_postfix_reverse_index29 = 0;\n    var palindrome_postfix_reverse_index30\
    \ = 0;\n    var palindrome_postfix_reverse_index31 = 0;\n    var palindrome_postfix_reverse_index32\
    \ = 0;\n    var palindrome_postfix_reverse_index33 = 0;\n    var palindrome_postfix_reverse_index34\
    \ = 0;\n    var palindrome_postfix_reverse_index35 = 0;\n    var palindrome_postfix_reverse_index36\
    \ = 0;\n    var palindrome_postfix_reverse_index37 = 0;\n    var palindrome_postfix_reverse_index38\
    \ = 0;\n    var palindrome_postfix_reverse_index", "    var palindrome = \"\"\
    ,\n        postfix = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    postfix += string[i];\n        if(string[i] == string[string.length - 1 -\
    \ i]){\n            palindrome += string[i];\n        }\n    }\n    postfix =\
    \ postfix.split(\"\").reverse().join(\"\");\n    return palindrome + postfix;\n\
    }\n", "    var palindrome = string.substr(0, string.length-1);\n    var reverse\
    \ = string.substr(string.length-1, string.length);\n    return palindrome + reverse;\n\
    }\n", "    var palindrome = \"\",\n        postfix = \"\";\n    \n    for(var\
    \ i = 0; i < string.length; i++){\n        postfix = string.substr(0, i) + string.substr(i,\
    \ string.length);\n        palindrome += postfix;\n    }\n    \n    return palindrome;\n\
    }\n", "    var palindrome = \"\",\n        postfix = \"\";\n    \n    for(var\
    \ i = 0; i < string.length; i++){\n        postfix = string.substr(0, i) + string.substr(i,\
    \ string.length);\n        \n        if(postfix.match(/\\W/g)){\n            palindrome\
    \ += postfix.match(/\\W/g).reverse().join(\"\");\n        }\n    }\n    \n   \
    \ return palindrome;\n}\n", "    var palindrome = string;\n    var prefix_length\
    \ = string.length;\n    var suffix_length = string.length - prefix_length;\n \
    \   var reverse_string = string.reverse ();\n    var reverse_prefix_length = reverse_string.length;\n\
    \    var reverse_suffix_length = reverse_string.length - reverse_prefix_length;\n\
    \    var palindrome_postfix = \"\";\n    var palindrome_prefix_length = 0;\n \
    \   var palindrome_suffix_length = 0;\n    var palindrome_prefix_postfix = \"\"\
    ;\n    var palindrome_suffix_postfix = \"\";\n    var palindrome_prefix_postfix_reverse\
    \ = \"\";\n    var palindrome_suffix_postfix_reverse = \"\";\n    var palindrome_prefix_postfix_reverse_length\
    \ = palindrome_prefix_postfix.length;\n    var palindrome_suffix_postfix_reverse_length\
    \ = palindrome_suffix_postfix.length;\n    var palindrome_prefix_postfix_reverse_postfix\
    \ = \"\";\n    var palindrome_suffix_postfix_reverse_postfix = \"\";\n    var\
    \ palindrome_prefix_postfix_reverse_postfix_length = palindrome_prefix_postfix_reverse.length;\n\
    \    var palindrome_suffix_postfix_reverse_postfix_length = palindrome_suffix_postfix_reverse.length;\n\
    \    var palindrome_prefix_postfix_reverse_postfix_postfix = \"\";\n    var palindrome_suffix_postfix_reverse_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_postfix_length =\
    \ palindrome_prefix_postfix_reverse_postfix.length;\n    var palindrome_suffix_postfix_reverse_postfix_postfix_length\
    \ = palindrome_suffix_postfix_reverse_postfix.length;\n    var palindrome_prefix_postfix_reverse_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_suffix_postfix_reverse_postfix_postfix = \"\";\n\
    \    var palindrome_prefix_postfix_reverse_postfix_postfix_postfix_length = palindrome_prefix_postfix_reverse_postfix_postfix.length;\n\
    \    var palindrome_suffix_postfix_reverse_postfix_postfix_postfix = \"\";\n \
    \   var palindrome_prefix_postfix_reverse_postfix_postfix_postfix_postfix_length\
    \ = palindrome_prefix_postfix_reverse_postfix_postfix_postfix.length;\n    var\
    \ palindrome_suffix_postfix_reverse_postfix_postfix_postfix = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_postfix_postfix_postfix_length\
    \ = palindrome_prefix_postfix_reverse_postfix_postfix_postfix.length;\n    var\
    \ palindrome_suffi", "    var palindrome = \"\",\n        postfix = \"\",\n  \
    \      prefix_length = 0,\n        suffix_length = 0,\n        postfix_length\
    \ = 0,\n        postfix_reversed = \"\";\n\n    for(var i = 0; i < string.length;\
    \ i++){\n        postfix += string[i];\n        postfix_length++;\n    }\n\n \
    \   for(var i = 0; i < string.length; i++){\n        postfix_reversed += string[string.length\
    \ - i - 1];\n    }\n\n    for(var i = 0; i < string.length; i++){\n        postfix_length--;\n\
    \        postfix_reversed += string[string.length - i - 1];\n    }\n\n    for(var\
    \ i = 0; i < postfix_length; i++){\n        postfix += postfix_reversed;\n   \
    \ }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += string[i];\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += postfix_reversed;\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += string[i];\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += postfix_reversed;\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += string[i];\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += postfix_reversed;\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += string[i];\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += postfix_reversed;\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += string[i];\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += postfix_reversed;\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += string[i];\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += postfix_reversed;\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += string[i];\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += postfix_reversed;\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += string[i];\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += postfix_reversed;\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += string[i];\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += postfix_reversed;\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += string[i];\n\
    \    }\n\n    for(var i = 0; i < postfix_length; i++){\n        postfix += postfix_reversed;\n\
    \    }", "    var palindrome = \"\",\n        postfix = \"\",\n        prefix_length\
    \ = 0,\n        suffix_length = 0;\n\n    for(var i = 0; i < string.length; i++){\n\
    \        postfix = string.substr(i, 1);\n        prefix_length = string.substr(0,\
    \ i).length;\n        suffix_length = postfix.length;\n        if(postfix.toLowerCase()\
    \ === postfix.toUpperCase()){\n            postfix = postfix.toLowerCase();\n\
    \        }\n        if(postfix.substr(0, prefix_length) === postfix.substr(prefix_length\
    \ - suffix_length, suffix_length)){\n            palindrome += postfix.substr(0,\
    \ prefix_length) + postfix.substr(prefix_length - suffix_length, suffix_length);\n\
    \        }\n    }\n    return palindrome;\n}\n", "    var palindrome = string.split(\"\
    \").reverse().join(\"\");\n    var prefix_length = string.length - palindrome.length;\n\
    \    var postfix_length = string.length - prefix_length;\n    var prefix = string.substr(0,\
    \ prefix_length);\n    var postfix = string.substr(postfix_length);\n    return\
    \ prefix + palindrome + postfix;\n}\n", "    var palindrome = string.substr(0,string.length-1);\n\
    \    var reverse = string.substr(string.length-1,string.length);\n    var postfix\
    \ = string.substr(0,string.length-1);\n    var reversePostfix = reverse.substr(0,reverse.length-1);\n\
    \    var palindromePostfix = postfix.substr(0,postfix.length-1);\n    var palindromeReversePostfix\
    \ = reversePostfix.substr(0,reversePostfix.length-1);\n    var palindromePalindromePostfix\
    \ = palindromePostfix.substr(0,palindromePostfix.length-1);\n    var palindromePalindromeReversePostfix\
    \ = palindromeReversePostfix.substr(0,palindromeReversePostfix.length-1);\n  \
    \  var palindromePalindromeReversePalindromePostfix = palindromePalindromeReversePostfix.substr(0,palindromePalindromeReversePostfix.length-1);\n\
    \    var palindromePalindromeReversePalindromePalindromePostfix = palindromePalindromeReversePalindromePostfix.substr(0,palindromePalindromeReversePalindromePostfix.length-1);\n\
    \    var palindromePalindromeReversePalindromePalindromePalindromePostfix = palindromePalindromeReversePalindromePalindromePostfix.substr(0,palindromePalindromeReversePalindromePalindromePostfix.length-1);\n\
    \    var palindromePalindromeReversePalindromePalindromePalindromePalindromePostfix\
    \ = palindromePalindromeReversePalindromePalindromePalindromePostfix.substr(0,palindromePalindromeReversePalindromePalindromePalindromePalindromePostfix.length-1);\n\
    \    var palindromePalindromeReversePalindromePalindromePalindromePalindromePalindromePostfix\
    \ = palindromePalindromeReversePalindromePalindromePalindromePalindromePalindromePostfix.substr(0,palindromePalindromeReversePalindromePalindromePalindromePalindromePalindromePalindromePostfix.length-1);\n",
  "    var palindrome = \"\",\n        postfix = \"\",\n        prefix_length = string.length,\n\
    \        suffix_length = string.length,\n        suffix_index = string.length-1,\n\
    \        suffix_char = string[suffix_index];\n\n    while(suffix_index > 0){\n\
    \        postfix = string.substr(0,suffix_index) + string[suffix_index].toUpperCase()\
    \ + string.substr(suffix_index+1);\n        suffix_index--;\n        suffix_char\
    \ = string[suffix_index];\n        if(postfix.toLowerCase() === postfix.toUpperCase()\
    \ && suffix_char === suffix_char){\n            palindrome = postfix.toLowerCase();\n\
    \            break;\n        }\n    }\n    return palindrome;\n}\n", "    var\
    \ reversed_string = \"\";\n    var longest_postfix_length = 0;\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var longest_postfix_index\
    \ = 0;\n    var longest_postfix_string = \"\";\n    var lon", "    var reversed_string\
    \ = \"\";\n    var longest_postfix_length = 0;\n    var longest_postfix_index\
    \ = 0;\n    for(var i = 0; i <= string.length; i++){\n        var postfix_length\
    \ = string.length - i;\n        if(postfix_length > longest_postfix_length){\n\
    \            longest_postfix_length = postfix_length;\n            longest_postfix_index\
    \ = i;\n        }\n    }\n    reversed_string += string.substr(0, longest_postfix_index);\n\
    \    for(var i = longest_postfix_index + 1; i <= string.length; i++){\n      \
    \  reversed_string += string[i - longest_postfix_index];\n    }\n    return reversed_string;\n\
    }\n", "  var palindrome = \"\",\n      prefix_length = 0,\n      suffix_length\
    \ = 0,\n      prefix_postfix = \"\",\n      suffix_postfix = \"\";\n\n  for(var\
    \ i = 0, len = string.length; i < len; i++){\n    if(string[i] === \"#\"){\n \
    \     suffix_length++;\n      suffix_postfix += string[i];\n    }\n    else{\n\
    \      prefix_length++;\n      prefix_postfix += string[i];\n    }\n  }\n\n  if(prefix_length\
    \ >= suffix_length){\n    prefix_length = suffix_length;\n    prefix_postfix =\
    \ string.substr(0, prefix_length);\n  }\n\n  for(var i = 0, len = string.length;\
    \ i < len; i++){\n    if(string[i] === \"#\"){\n      suffix_length--;\n     \
    \ suffix_postfix += string[i];\n    }\n    else{\n      prefix_length--;\n   \
    \   prefix_postfix += string[i];\n    }\n  }\n\n  if(prefix_length >= suffix_length){\n\
    \    prefix_length = suffix_length;\n    prefix_postfix = string.substr(0, prefix_length);\n\
    \  }\n\n  for(var i = 0, len = string.length; i < len; i++){\n    if(string[i]\
    \ === \"#\"){\n      suffix_length--;\n      suffix_postfix += string[i];\n  \
    \  }\n    else{\n      prefix_length--;\n      prefix_postfix += string[i];\n\
    \    }\n  }\n\n  if(prefix_length >= suffix_length){\n    prefix_length = suffix_length;\n\
    \    prefix_postfix = string.substr(0, prefix_length);\n  }\n\n  for(var i = 0,\
    \ len = string.length; i < len; i++){\n    if(string[i] === \"#\"){\n      suffix_length++;\n\
    \      suffix_postfix += string[i];\n    }\n    else{\n      prefix_length++;\n\
    \      prefix_postfix += string[i];\n    }\n  }\n\n  if(prefix_length >= suffix_length){\n\
    \    prefix_length = suffix_length;\n    prefix_postfix = string.substr(0, prefix_length);\n\
    \  }\n\n  for(var i = 0, len = string.length; i < len; i++){\n    if(string[i]\
    \ === \"#\"){\n      suffix_length++;\n      suffix_postfix += string[i];\n  \
    \  }\n    else{\n      prefix_length++;\n      prefix_postfix += string[i];\n\
    \    }\n  }\n\n  if(prefix_length >= suffix_length){\n    prefix_length = suffix_length;\n\
    \    prefix_postfix = string.substr(0, prefix_length);\n  }\n\n  for(var i = 0,\
    \ len = string.length; i < len; i++){\n    if(string[i] === \"#\"){\n      suffix_length++;\n\
    \      suffix_postfix += string[i];\n    }\n    else{\n      prefix_length++;\n\
    \      prefix_postfix += string[i];\n    }\n", "    var palindrome = \"\",\n \
    \       prefix_length = 0,\n        suffix_length = 0,\n        prefix_postfix\
    \ = \"\",\n        suffix_postfix = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === \"-\"){\n            suffix_length++;\n    \
    \        suffix_postfix += string[i];\n        }else{\n            prefix_length++;\n\
    \            prefix_postfix += string[i];\n        }\n    }\n    prefix_length\
    \ = prefix_length - suffix_length;\n    suffix_length = suffix_length - prefix_length;\n\
    \    prefix_postfix = prefix_postfix.split(\"\").reverse().join(\"\");\n    suffix_postfix\
    \ = suffix_postfix.split(\"\").reverse().join(\"\");\n    for(var i = 0; i < prefix_length;\
    \ i++){\n        palindrome += prefix_postfix;\n    }\n    for(var i = 0; i <\
    \ suffix_length; i++){\n        palindrome += suffix_postfix;\n    }\n    return\
    \ palindrome;\n}\n", "    var palindrome = \"\";\n    var prefix_length = 0;\n\
    \    var suffix_length = 0;\n    var prefix_string = \"\";\n    var suffix_string\
    \ = \"\";\n    var prefix_reverse = \"\";\n    var suffix_reverse = \"\";\n  \
    \  var palindrome_string = \"\";\n    var palindrome_length = 0;\n    var palindrome_prefix_length\
    \ = 0;\n    var palindrome_suffix_length = 0;\n    var palindrome_prefix_string\
    \ = \"\";\n    var palindrome_suffix_string = \"\";\n    var palindrome_prefix_reverse\
    \ = \"\";\n    var palindrome_suffix_reverse = \"\";\n    var palindrome_prefix_string_reverse\
    \ = \"\";\n    var palindrome_suffix_string_reverse = \"\";\n    var palindrome_prefix_reverse_reverse\
    \ = \"\";\n    var palindrome_suffix_reverse_reverse = \"\";\n    var palindrome_prefix_string_reverse_reverse\
    \ = \"\";\n    var palindrome_suffix_string_reverse_reverse = \"\";\n    var palindrome_prefix_reverse_reverse_reverse\
    \ = \"\";\n    var palindrome_suffix_reverse_reverse_reverse = \"\";\n    var\
    \ palindrome_prefix_string_reverse_reverse_reverse = \"\";\n    var palindrome_suffix_string_reverse_reverse_reverse\
    \ = \"\";\n    var palindrome_prefix_reverse_reverse_reverse_reverse = \"\";\n\
    \    var palindrome_suffix_reverse_reverse_reverse_reverse = \"\";\n    var palindrome_prefix_string_reverse_reverse_reverse_reverse\
    \ = \"\";\n    var palindrome_suffix_string_reverse_reverse_reverse_reverse =\
    \ \"\";\n    var palindrome_prefix_reverse_reverse_reverse_reverse_reverse = \"\
    \";\n    var palindrome_suffix_reverse_reverse_reverse_reverse_reverse = \"\"\
    ;\n    var palindrome_prefix_string_reverse_reverse_reverse_reverse = \"\";\n\
    \    var palindrome_suffix_string_reverse_reverse_reverse_reverse = \"\";\n  \
    \  var palindrome_prefix_reverse_reverse_reverse_reverse_reverse = \"\";\n   \
    \ var palindrome_suffix_reverse_reverse_reverse_reverse_reverse = \"\";\n    var\
    \ palindrome_prefix_string_reverse_reverse_reverse_reverse_reverse = \"\";\n \
    \   var palindrome_suffix_string_reverse_reverse_reverse_reverse_reverse = \"\"\
    ;\n    var palindrome_prefix_reverse_reverse_reverse_reverse_reverse_reverse =\
    \ \"\";\n    var palindrome_suffix_reverse_reverse_reverse_reverse_reverse = \"\
    \";\n    var palindrome_prefix_string_reverse_reverse_reverse_reverse_reverse\
    \ = \"\";\n    var p", "    var palindrome = string.substr(0,string.length-1);\n\
    \    var reverse = string.substr(string.length-1,string.length);\n    string +=\
    \ reverse;\n    return string;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>",
  "    var palindrome = string.split('').reverse().join('');\n    string += palindrome;\n\
    \    return string;\n}\n", "    var postfix = string.substr(0, string.length -\
    \ 1);\n    var reversed_postfix = postfix.split(\"\").reverse().join(\"\");\n\
    \    return string + reversed_postfix;\n}\n", "    var reversed_string = \"\"\
    ;\n    var longest_postfix_length = 0;\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var longest_postfix_index = 0;\n \
    \   var longest_postfix_string = \"\";\n    var lon", "    var palindrome = \"\
    \",\n        postfix = \"\";\n    for(var i = 0; i < string.length; i++){\n  \
    \      postfix = string.substr(0, i);\n        palindrome += postfix;\n      \
    \  palindrome += string[i];\n    }\n    return palindrome;\n}\n", "    var palindrome\
    \ = \"\",\n        postfix = \"\";\n    for(var i = 0; i < string.length; i++){\n\
    \        postfix += string[i];\n    }\n    postfix = postfix.split(\"\").reverse().join(\"\
    \");\n    for(var i = 0; i < string.length; i++){\n        palindrome += string[i];\n\
    \    }\n    palindrome += postfix;\n    return palindrome;\n}\n", "    var palindrome\
    \ = string.substr(0,string.length-1);\n    var reverse = string.substr(string.length-1,string.length);\n\
    \    var palindrome_reverse = reverse+palindrome;\n    return palindrome_reverse;\n\
    }\n", "    var palindrome = \"\";\n    var prefix_length = 0;\n    var suffix_length\
    \ = 0;\n    var postfix_length = 0;\n    var postfix_array = [];\n    var postfix_array_length\
    \ = 0;\n    var postfix_array_reverse = [];\n    var postfix_array_reverse_length\
    \ = 0;\n    var postfix_array_reverse_string = \"\";\n    var postfix_array_reverse_string_reverse\
    \ = \"\";\n    var postfix_array_reverse_string_length = 0;\n    var postfix_array_reverse_string_reverse_length\
    \ = 0;\n    var postfix_array_reverse_string_reverse_string = \"\";\n    var postfix_array_reverse_string_reverse_string_reverse\
    \ = \"\";\n    var postfix_array_reverse_string_reverse_string_length = 0;\n \
    \   var postfix_array_reverse_string_reverse_string_reverse_length = 0;\n    var\
    \ postfix_array_reverse_string_reverse_string_reverse_string = \"\";\n    var\
    \ postfix_array_reverse_string_reverse_string_reverse_string_reverse = \"\";\n\
    \    var postfix_array_reverse_string_reverse_string_reverse_string_length = 0;\n\
    \    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_length\
    \ = 0;\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string\
    \ = \"\";\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse\
    \ = \"\";\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_length\
    \ = 0;\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse_length\
    \ = 0;\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string\
    \ = \"\";\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse\
    \ = \"\";\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_length\
    \ = 0;\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_length\
    \ = 0;\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string\
    \ = \"\";\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_length\
    \ = 0;\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_\
    \ = \"\";\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_length\
    \ = 0;\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_\
    \ = \"\";\n    var postfix_array_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_string_reverse_length\
    \ = 0;", "    var palindrome = \"\",\n        prefix_length = 0,\n        suffix_length\
    \ = 0,\n        prefix_reversed = \"\",\n        suffix_reversed = \"\";\n   \
    \ \n    for(var i = 0; i < string.length; i++){\n        if(string[i] === \"-\"\
    ){\n            suffix_length++;\n            suffix_reversed += string[i];\n\
    \        }\n        else{\n            prefix_length++;\n            prefix_reversed\
    \ += string[i];\n        }\n    }\n    \n    prefix_reversed = prefix_reversed.split(\"\
    \").reverse().join(\"\");\n    suffix_reversed = suffix_reversed.split(\"\").reverse().join(\"\
    \");\n    \n    if(prefix_length < suffix_length){\n        palindrome += prefix_reversed;\n\
    \        palindrome += suffix_reversed;\n    }\n    else{\n        palindrome\
    \ += prefix_reversed;\n        palindrome += suffix_reversed;\n        palindrome\
    \ += \"-\";\n    }\n    \n    return palindrome;\n}\n", "    var palindrome =\
    \ \"\",\n        postfix = \"\",\n        suffix;\n    \n    for(var i = 0; i\
    \ < string.length; i++){\n        postfix = string.substr(0, i);\n        suffix\
    \ = string.substr(i, string.length);\n        \n        if(isPalindrome(postfix)\
    \ && isPalindrome(suffix)){\n            palindrome += postfix + suffix;\n   \
    \     }\n    }\n    \n    return palindrome;\n}\n", "    var palindrome = \"\"\
    ,\n        prefix_length = 0,\n        suffix_length = 0,\n        postfix_length\
    \ = 0;\n    \n    for(var i = 0; i < string.length; i++){\n        if(string[i]\
    \ === \"#\"){\n            postfix_length++;\n        }\n        \n        if(string[i]\
    \ === \" \"){\n            suffix_length++;\n        }\n        \n        if(string[i]\
    \ === \"#\"){\n            prefix_length++;\n        }\n    }\n    \n    var palindrome_length\
    \ = postfix_length + suffix_length;\n    \n    for(var i = 0; i < palindrome_length;\
    \ i++){\n        palindrome += string[i];\n    }\n    \n    for(var i = 0; i <\
    \ prefix_length; i++){\n        palindrome += string[string.length - postfix_length\
    \ - i];\n    }\n    \n    return palindrome;\n}\n", "    var palindrome = \"\"\
    ,\n        postfix = \"\";\n    \n    for(var i = 0; i < string.length; i++){\n\
    \        postfix = string.substr(0, i);\n        \n        if(postfix.match(make_palindrome_regexp)){\n\
    \            palindrome += postfix;\n            palindrome += string[i];\n  \
    \      }\n    }\n    \n    return palindrome;\n}\n", "    var palindrome = string;\n\
    \    var palindrome_length = string.length;\n    var palindrome_postfix = \"\"\
    ;\n    var palindrome_prefix_length = 0;\n    var palindrome_prefix_postfix =\
    \ \"\";\n    var palindrome_prefix_postfix_length = 0;\n    var palindrome_prefix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_length = 0;\n    var palindrome_prefix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_length = 0;\n   \
    \ var palindrome_prefix_postfix_postfix_postfix_postfix = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix = \"\
    \";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0;\n    var palindrome_prefix_", "    var postfix = string.substr(0, string.length-1);\n\
    \    var reverse = postfix.split('').reverse().join('');\n    return string +\
    \ reverse;\n}\n", "    var palindrome = \"\",\n        prefix_length = 0,\n  \
    \      suffix_length = 0,\n        prefix_string = \"\";\n    \n    for(var i\
    \ = 0; i < string.length; i++){\n        if(string[i] === \"#\"){\n          \
    \  prefix_length++;\n            prefix_string += string[i];\n        }\n    \
    \    else{\n            suffix_length++;\n        }\n    }\n    \n    for(var\
    \ i = 0; i < suffix_length; i++){\n        palindrome += string[prefix_length\
    \ + i];\n    }\n    \n    for(var i = 0; i < prefix_length; i++){\n        palindrome\
    \ += string[i];\n    }\n    \n    return palindrome;\n}\n", "    var palindrome\
    \ = \"\",\n        prefix_length = 0,\n        suffix_length = 0,\n        prefix_postfix\
    \ = \"\",\n        suffix_postfix = \"\";\n\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === string[string.length - 1 - i]){\n          \
    \  palindrome += string[i];\n        }\n    }\n\n    prefix_length = string.length\
    \ - palindrome.length;\n    suffix_length = palindrome.length;\n\n    for(var\
    \ i = 0; i < prefix_length; i++){\n        prefix_postfix += string[i];\n    }\n\
    \n    for(var i = 0; i < suffix_length; i++){\n        suffix_postfix += string[string.length\
    \ - 1 - i];\n    }\n\n    return prefix_postfix + suffix_postfix + palindrome;\n\
    }\n", "    var palindrome = string.substr(0,string.length-1);\n    var reversed_palindrome\
    \ = reverse(palindrome);\n    var new_string = string + reversed_palindrome;\n\
    \    return new_string;\n}\n", "    var palindrome = string.split('').reverse().join('');\n\
    \    var prefix_length = string.indexOf(palindrome);\n    var postfix_length =\
    \ string.length - palindrome.length;\n    var palindrome_prefix = string.substr(0,\
    \ prefix_length);\n    var palindrome_suffix = string.substr(postfix_length);\n\
    \    return palindrome_prefix + palindrome_suffix;\n}\n", "  var palindrome =\
    \ string;\n  var postfix = \"\";\n  var reverse = \"\";\n  var palindromeLength\
    \ = 0;\n  var prefixLength = 0;\n  var suffixLength = 0;\n  \n  while(postfix.length\
    \ < string.length){\n    postfix = string.substr(0, string.length - postfix.length);\n\
    \    postfix = postfix.split(\"\").reverse().join(\"\");\n    postfix = postfix\
    \ + postfix;\n    \n    if(postfix.length < string.length){\n      postfix = string.substr(0,\
    \ string.length - postfix.length);\n    }\n    \n    if(postfix.split(\"\").reverse().join(\"\
    \") === string){\n      palindrome = string.substr(0, string.length - postfix.length);\n\
    \      palindromeLength = palindrome.length;\n      prefixLength = postfix.length;\n\
    \      suffixLength = string.length - palindromeLength - prefixLength;\n     \
    \ break;\n    }\n  }\n  \n  if(postfix.length < string.length){\n    postfix =\
    \ string.substr(0, string.length - postfix.length);\n  }\n  \n  reverse = string.substr(0,\
    \ string.length - postfix.length);\n  reverse = reverse.split(\"\").reverse().join(\"\
    \");\n  reverse = reverse + reverse;\n  \n  if(reverse === string){\n    palindrome\
    \ = string.substr(0, string.length - postfix.length);\n    palindromeLength =\
    \ palindrome.length;\n    prefixLength = postfix.length;\n    suffixLength = string.length\
    \ - palindromeLength - prefixLength;\n  }\n  \n  return {\n    palindrome: palindrome,\n\
    \    palindromeLength: palindromeLength,\n    prefixLength: prefixLength,\n  \
    \  suffixLength: suffixLength\n  };\n}\n", "    var palindrome = \"\";\n    var\
    \ postfix = \"\";\n    var prefix_length = 0;\n    var suffix_length = 0;\n  \
    \  var palindrome_length = 0;\n    var palindrome_start = 0;\n    var palindrome_end\
    \ = 0;\n    var palindrome_suffix = 0;\n    var palindrome_prefix_length = 0;\n\
    \    var palindrome_suffix_length = 0;\n    var palindrome_prefix_start = 0;\n\
    \    var palindrome_suffix_start = 0;\n    var palindrome_prefix_end = 0;\n  \
    \  var palindrome_suffix_end = 0;\n    var palindrome_prefix_suffix = 0;\n   \
    \ var palindrome_suffix_suffix = 0;\n    var palindrome_prefix_suffix_length =\
    \ 0;\n    var palindrome_suffix_suffix_length = 0;\n    var palindrome_prefix_suffix_start\
    \ = 0;\n    var palindrome_suffix_suffix_start = 0;\n    var palindrome_prefix_suffix_end\
    \ = 0;\n    var palindrome_suffix_suffix_end = 0;\n    var palindrome_prefix_suffix_suffix\
    \ = 0;\n    var palindrome_suffix_suffix_suffix = 0;\n    var palindrome_prefix_suffix_suffix_length\
    \ = 0;\n    var palindrome_suffix_suffix_suffix_length = 0;\n    var palindrome_prefix_suffix_suffix_start\
    \ = 0;\n    var palindrome_suffix_suffix_suffix_start = 0;\n    var palindrome_prefix_suffix_suffix_end\
    \ = 0;\n    var palindrome_suffix_suffix_suffix_end = 0;\n    var palindrome_prefix_suffix_suffix_suffix\
    \ = 0;\n    var palindrome_suffix_suffix_suffix_suffix = 0;\n    var palindrome_prefix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_suffix_suffix_suffix_suffix_length = 0;\n    var palindrome_prefix_suffix_suffix_suffix_start\
    \ = 0;\n    var palindrome_suffix_suffix_suffix_suffix_start = 0;\n    var palindrome_prefix_suffix_suffix_suffix_end\
    \ = 0;\n    var palindrome_suffix_suffix_suffix_suffix_end = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix\
    \ = 0;\n    var palindrome_suffix_suffix_suffix_suffix_suffix = 0;\n    var palindrome_prefix_suffix_suffix_suffix_suffix_length\
    \ = 0;\n    var palindrome_suffix_suffix_suffix_suffix_suffix_length = 0;\n  \
    \  var palindrome_prefix_suffix_suffix_suffix_suffix_start = 0;\n    var palindro",
  "    var palindrome = \"\",\n        prefix_length = 0,\n        suffix_length =\
    \ 0,\n        postfix_length = 0,\n        postfix_array = [],\n        postfix_string\
    \ = \"\";\n\n    for(var i = 0, len = string.length; i < len; i++){\n        if(string[i]\
    \ === \"-\"){\n            postfix_array.push(string[i]);\n        }\n       \
    \ else{\n            postfix_array.push(string[i]);\n        }\n    }\n\n    while(postfix_array.length\
    \ > 0){\n        postfix_string = postfix_array.slice(0,postfix_array.length).join(\"\
    \");\n        postfix_length = postfix_array.length;\n        postfix_array.splice(0,\
    \ postfix_length);\n\n        if(postfix_array.join(\"\") === postfix_string){\n\
    \            palindrome += postfix_string;\n        }\n    }\n\n    return palindrome;\n\
    }\n", "    var palindrome = \"\";\n    var palindrome_length = 0;\n    var palindrome_prefix\
    \ = \"\";\n    var palindrome_suffix = \"\";\n    var palindrome_postfix = \"\"\
    ;\n    var palindrome_prefix_length = 0;\n    var palindrome_suffix_length = 0;\n\
    \    var palindrome_postfix_length = 0;\n    var palindrome_postfix_reverse =\
    \ \"\";\n    var palindrome_prefix_reverse = \"\";\n    var palindrome_suffix_reverse\
    \ = \"\";\n    var palindrome_prefix_reverse_index = 0;\n    var palindrome_suffix_reverse_index\
    \ = 0;\n    var palindrome_prefix_reverse_index2 = 0;\n    var palindrome_suffix_reverse_index2\
    \ = 0;\n    var palindrome_prefix_reverse_index3 = 0;\n    var palindrome_suffix_reverse_index3\
    \ = 0;\n    var palindrome_prefix_reverse_index4 = 0;\n    var palindrome_suffix_reverse_index4\
    \ = 0;\n    var palindrome_prefix_reverse_index5 = 0;\n    var palindrome_suffix_reverse_index5\
    \ = 0;\n    var palindrome_prefix_reverse_index6 = 0;\n    var palindrome_suffix_reverse_index6\
    \ = 0;\n    var palindrome_prefix_reverse_index7 = 0;\n    var palindrome_suffix_reverse_index7\
    \ = 0;\n    var palindrome_prefix_reverse_index8 = 0;\n    var palindrome_suffix_reverse_index8\
    \ = 0;\n    var palindrome_prefix_reverse_index9 = 0;\n    var palindrome_suffix_reverse_index9\
    \ = 0;\n    var palindrome_prefix_reverse_index10 = 0;\n    var palindrome_suffix_reverse_index10\
    \ = 0;\n    var palindrome_prefix_reverse_index11 = 0;\n    var palindrome_suffix_reverse_index11\
    \ = 0;\n    var palindrome_prefix_reverse_index12 = 0;\n    var palindrome_suffix_reverse_index12\
    \ = 0;\n    var palindrome_prefix_reverse_index13 = 0;\n    var palindrome_suffix_reverse_index13\
    \ = 0;\n    var palindrome_prefix_reverse_index14 = 0;\n    var palindrome_suffix_reverse_index14\
    \ = 0;\n    var palindrome_prefix_reverse_index15 = 0;\n    var palindrome_suffix_reverse_index15\
    \ = 0;\n    var palindrome_prefix_reverse_index16 = 0;\n    var palindrome_suffix_reverse_index16\
    \ = 0;\n    var palindrome_prefix_reverse_index17 = 0;\n    var palindrome_suffix_reverse_index17\
    \ = 0;\n    var palindrome_prefix_reverse_index18 = 0;\n    var palindrome_suffix_reverse_index18\
    \ = 0;\n    var palindrome_prefix_reverse_index19", "    var palindrome = \"\"\
    ,\n        postfix = \"\",\n        prefix_length = string.length,\n        suffix_length\
    \ = string.length - 1,\n        i;\n\n    for (i = 0; i < prefix_length; i++){\n\
    \        postfix = string.substr(i, 1);\n        palindrome += postfix;\n    }\n\
    \n    for (i = prefix_length; i >= 0; i--){\n        postfix = string.substr(i,\
    \ 1);\n        palindrome += postfix;\n    }\n\n    return palindrome;\n}\n",
  "    var palindrome = \"\",\n        postfix = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        postfix = string.substr(0, i) + string.substr(i, string.length);\n\
    \        if(isPalindrome(postfix)){\n            palindrome += postfix + \" \"\
    ;\n        }\n    }\n    return palindrome;\n}\n", "    var palindrome = string.split('').reverse().join('');\n\
    \    var prefix_length = string.length - palindrome.length;\n    var postfix_length\
    \ = string.length - prefix_length;\n    return string.slice(0, prefix_length)\
    \ + palindrome + string.slice(postfix_length);\n}\n", "  var palindrome = string.split('').reverse().join('');\n\
    \  string = string + palindrome;\n  return string;\n}\n", "    var palindrome\
    \ = \"\",\n        postfix = \"\";\n    for(var i = 0; i < string.length; i++){\n\
    \        postfix = string.substr(0, i);\n        palindrome += postfix;\n    \
    \    palindrome += string.reverse(postfix);\n    }\n    return palindrome;\n}\n",
  "    var palindrome = \"\",\n        postfix = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        postfix = string.substr(0, i) + string.reverse().substr(0, i);\n\
    \        if(postfix.indexOf(string) === 0){\n            palindrome += postfix;\n\
    \        }\n    }\n    return palindrome;\n}\n", "    var palindrome = \"\";\n\
    \    var palindrome_length = string.length;\n    var palindrome_postfix = \"\"\
    ;\n    var palindrome_prefix_length = string.length;\n    var palindrome_prefix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_length = string.length;\n    var\
    \ palindrome_prefix_postfix_postfix = \"\";\n    var palindrome_prefix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix = \"\";\n\
    \    var palindrome_prefix_postfix_postfix_postfix_length = string.length;\n \
    \   var palindrome_prefix_postfix_postfix_postfix_postfix = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string", "    var palindrome = \"\";\n    var prefix_length = 0;\n    var\
    \ suffix_length = 0;\n    var reverse_string = \"\";\n    var postfix_length =\
    \ 0;\n    var postfix_array = [];\n    var postfix_array_length = 0;\n    var\
    \ postfix_array_index = 0;\n    var postfix_array_element = \"\";\n    var postfix_array_element_length\
    \ = 0;\n    var postfix_array_element_index = 0;\n    var postfix_array_element_value\
    \ = \"\";\n    var postfix_array_element_value_length = 0;\n    var postfix_array_element_value_index\
    \ = 0;\n    var postfix_array_element_value_element = \"\";\n    var postfix_array_element_value_element_length\
    \ = 0;\n    var postfix_array_element_value_element_index = 0;\n    var postfix_array_element_value_element_value\
    \ = \"\";\n    var postfix_array_element_value_element_value_length = 0;\n   \
    \ var postfix_array_element_value_element_value_index = 0;\n    var postfix_array_element_value_element_value_element\
    \ = \"\";\n    var postfix_array_element_value_element_value_element_length =\
    \ 0;\n    var postfix_array_element_value_element_value_index_element = 0;\n \
    \   var postfix_array_element_value_element_value_element_value = \"\";\n    var\
    \ postfix_array_element_value_element_value_element_value_length = 0;\n    var\
    \ postfix_array_element_value_element_value_index_element_value = \"\";\n    var\
    \ postfix_array_element_value_element_value_element_value_element = \"\";\n  \
    \  var postfix_array_element_value_element_value_element_value_element_length\
    \ = 0;\n    var postfix_array_element_value_element_value_index_element_value_element\
    \ = \"\";\n    var postfix_array_element_value_element_value_element_value_element_value\
    \ = \"\";\n    var postfix_array_element_value_element_value_element_value_element_value_length\
    \ = 0;\n    var postfix_array_element_value_element_value_index_element_value_element_value\
    \ = \"\";\n    var postfix_array_element_value_element_value_element_value_element_value_element_length\
    \ = 0;\n    var postfix_array_element_value_element_value_index_element_value_element_value_element\
    \ = \"\";\n    var postfix_array_element_value_element_value_element_value_element_value_element_length\
    \ = 0;\n    var postfix_array_element_value_element_value_index_element_value_element_value_element_value\
    \ = \"\";\n    var postfix_array_element_value_element_value_element_value_element_value_element_value_length\
    \ = 0;\n    var postfix_array_element_value_element_value_index_element_value_element_value_element_value_element\
    \ = \"\";\n    var postfix_array_element_value_element_value_element_value_element_value_element_value_element_length\
    \ = 0;\n    var postfix_array_element_value_element_value_index_element_value_element_value_element_value_element_value\
    \ = \"\";\n    var postfix_array_element_value_element_value_element_value_element_value_element_value_element_value_length\
    \ = 0;\n    var postfix_array_element_value_element_value_index_element_value_element_value_element_value_element_value_element\
    \ = \"\";\n    var postfix_array_element_value_element_value_element_value_element_value_element_value_element_value_element_length\
    \ = 0;", "    var palindrome = string;\n    var palindrome_length = string.length;\n\
    \    var reverse_string = \"\";\n    var reverse_string_length = 0;\n    for(var\
    \ i = 0; i < palindrome_length; i++){\n        reverse_string += string[reverse_string_length];\n\
    \        reverse_string_length++;\n    }\n    for(var i = 0; i < palindrome_length;\
    \ i++){\n        palindrome += reverse_string[i];\n    }\n    return palindrome;\n\
    }\n", "    var palindrome = \"\",\n        postfix = \"\";\n    \n    for(var\
    \ i = 0; i < string.length; i++){\n        postfix += string[i];\n    }\n    \n\
    \    postfix = postfix.split(\"\").reverse().join(\"\");\n    \n    for(var i\
    \ = 0; i < string.length; i++){\n        palindrome += string[i];\n    }\n   \
    \ \n    palindrome += postfix;\n    \n    return palindrome;\n}\n", "    var palindrome\
    \ = string;\n    var palindrome_length = string.length;\n    var palindrome_postfix\
    \ = \"\";\n    var palindrome_prefix_length = string.length;\n    var palindrome_prefix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse = \"\";\n    var palindrome_prefix_postfix_reverse_length\
    \ = string.length;\n    var palindrome_prefix_postfix_reverse_postfix = \"\";\n\
    \    var palindrome_prefix_postfix_reverse_postfix_reverse = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_length\
    \ = string.length;\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_length\
    \ = string.length;\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_length\
    \ = string.length;\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_length\
    \ = string.length;\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse\
    \ = \"\";\n    var palindrome_prefix_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_postfix_reverse_",
  "    var postfix = \"\";\n    var palindrome = \"\";\n    var reverse = \"\";\n\
    \    var length = string.length;\n    var i = 0;\n    var j = 0;\n    for(i =\
    \ 0; i < length; i++){\n        postfix = string.substr(i, 1);\n        reverse\
    \ = reverse.substr(0, reverse.length-1);\n        for(j = i; j >= 0; j--){\n \
    \           if(string.charAt(j) == postfix.charAt(0)){\n                postfix\
    \ = postfix.substr(0, postfix.length-1);\n                reverse = reverse +\
    \ postfix.charAt(0);\n                postfix = postfix.substr(0, postfix.length-1);\n\
    \            }\n        }\n        palindrome = palindrome + postfix + reverse;\n\
    \    }\n    return palindrome;\n}\n", "    var palindrome = \"\",\n        postfix\
    \ = \"\";\n    for(var i = 0; i < string.length; i++){\n        postfix += string[i];\n\
    \    }\n    postfix = postfix.split(\"\").reverse().join(\"\");\n    for(var i\
    \ = 0; i < string.length; i++){\n        palindrome += string[i];\n    }\n   \
    \ palindrome += postfix;\n    return palindrome;\n}\n", "    var palindrome =\
    \ \"\",\n        postfix = \"\",\n        prefix_length = 0,\n        suffix_length\
    \ = 0,\n        postfix_length = 0;\n    \n    while(postfix_length < string.length){\n\
    \        postfix = string.substr(postfix_length);\n        postfix_length = postfix_length\
    \ + postfix.length;\n        prefix_length = postfix_length - suffix_length;\n\
    \        \n        if(prefix_length < string.length){\n            postfix = postfix.substr(0,prefix_length);\n\
    \        }\n        \n        palindrome = palindrome + postfix.split(\"\").reverse().join(\"\
    \");\n    }\n    \n    return palindrome;\n}\n", "    var postfix = string.substring(0,string.length-1);\n\
    \    var reverse = string.substring(string.length-1,string.length);\n    var palindrome\
    \ = postfix.concat(reverse);\n    return palindrome;\n}\n", "    var palindrome\
    \ = \"\",\n        postfix = \"\";\n    \n    for(var i = 0; i < string.length;\
    \ i++){\n        postfix = string.substr(0, i) + string[i];\n        \n      \
    \  if(postfix.match(/[a-z]/) && postfix.match(/[A-Z]/)){\n            palindrome\
    \ = palindrome + postfix;\n        }\n    }\n    \n    return palindrome;\n}\n",
  "    var palindrome = \"\",\n        postfix = \"\",\n        prefix_length = 0,\n\
    \        suffix_length = 0,\n        postfix_length = 0;\n\n    string = string.toLowerCase();\n\
    \n    postfix = string.substr(0, string.length - 1);\n    postfix_length = postfix.length;\n\
    \n    prefix_length = string.length - postfix_length;\n\n    suffix_length = postfix.length;\n\
    \n    while(postfix_length > 0){\n        if(postfix_length == postfix.length){\n\
    \            palindrome += postfix.substr(0, postfix.length - 1);\n          \
    \  break;\n        }\n\n        postfix = postfix.substr(0, postfix.length - 1);\n\
    \        postfix_length = postfix.length;\n    }\n\n    while(suffix_length >\
    \ 0){\n        if(suffix_length == postfix.length){\n            palindrome +=\
    \ postfix.substr(0, postfix.length - 1);\n            break;\n        }\n\n  \
    \      postfix = postfix.substr(0, postfix.length - 1);\n        suffix_length\
    \ = postfix.length;\n    }\n\n    return palindrome;\n}\n", "    var palindrome\
    \ = string.substr(0,string.length-1);\n    var reversed_string = string.substr(string.length-1,string.length);\n\
    \    return palindrome + reversed_string;\n}\n", "    var palindrome = \"\",\n\
    \        prefix_length = 0,\n        suffix_length = 0,\n        postfix_length\
    \ = 0,\n        postfix_string = \"\";\n    \n    // Find the longest postfix\
    \ that is a palindrome.\n    for(var i = 0; i < string.length; i++){\n       \
    \ if(string[i] === string[string.length -1 -i]){\n            postfix_length++;\n\
    \        }\n    }\n    \n    // Find the longest postfix that is a palindrome.\n\
    \    for(var i = 0; i < string.length; i++){\n        if(string[i] === string[string.length\
    \ -1 -i]){\n            postfix_length++;\n        }\n    }\n    \n    // Find\
    \ the longest postfix that is a palindrome.\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === string[string.length -1 -i]){\n            postfix_length++;\n\
    \        }\n    }\n    \n    // Find the longest postfix that is a palindrome.\n\
    \    for(var i = 0; i < string.length; i++){\n        if(string[i] === string[string.length\
    \ -1 -i]){\n            postfix_length++;\n        }\n    }\n    \n    // Find\
    \ the longest postfix that is a palindrome.\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === string[string.length -1 -i]){\n            postfix_length++;\n\
    \        }\n    }\n    \n    // Find the longest postfix that is a palindrome.\n\
    \    for(var i = 0; i < string.length; i++){\n        if(string[i] === string[string.length\
    \ -1 -i]){\n            postfix_length++;\n        }\n    }\n    \n    // Find\
    \ the longest postfix that is a palindrome.\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === string[string.length -1 -i]){\n            postfix_length++;\n\
    \        }\n    }\n    \n    // Find the longest postfix that is a palindrome.\n\
    \    for(var i = 0; i < string.length; i++){\n        if(string[i] === string[string.length\
    \ -1 -i]){\n            postfix_length++;\n        }\n    }\n    \n    // Find\
    \ the longest postfix that is a palindrome.\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === string[string.length -1 -i]){\n            postfix_length++;\n\
    \        }\n    }\n    \n    // Find the longest postfix that is a palindrome.\n\
    \    for(var i = 0; i < string.length; i++){\n        if(string[i] === string[string.length\
    \ -1 -i]){\n            postfix_length++;\n        }\n    }\n    \n    // Find\
    \ the longest postfix that is a p", "    var palindrome = string.substr(0, string.length\
    \ - 1);\n    var reverse = string.substr(0, string.length - 1);\n    var index\
    \ = string.lastIndexOf(palindrome);\n    while(index >= 0){\n        reverse =\
    \ reverse + string.substr(index + 1, string.length - index - 1);\n        index\
    \ = string.lastIndexOf(palindrome, reverse);\n    }\n    return reverse;\n}\n",
  "    var palindrome = \"\",\n        prefix_length = 0,\n        suffix_length =\
    \ 0,\n        postfix_length = 0,\n        postfix_char,\n        suffix_char,\n\
    \        suffix_reversed_char,\n        suffix_reversed_length,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reversed_length,\n        prefix_char,\n        prefix_reversed_char,\n\
    \        prefix_reverse", "    var palindrome = string.substr(0, string.length\
    \ - 1);\n    var reversed_palindrome = reverse(palindrome);\n    return palindrome\
    \ + reversed_palindrome;\n}\n", "    var postfix = string.substr(0, string.length\
    \ - 1);\n    var reverse = postfix.split('').reverse().join('');\n    return string\
    \ + reverse;\n}\n", "    var palindrome = \"\",\n        postfix = \"\";\n   \
    \ \n    for(var i = 0; i<string.length; i++){\n        postfix = string.substr(0,i)\
    \ + string.substr(i,string.length);\n        palindrome = palindrome + postfix;\n\
    \    }\n    \n    return palindrome;\n}\n", "    var palindrome = string;\n  \
    \  var palindrome_length = string.length;\n    var palindrome_postfix = \"\";\n\
    \    var palindrome_prefix_length = string.length;\n    var palindrome_prefix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_length = string.length;\n    var\
    \ palindrome_prefix_postfix_postfix = \"\";\n    var palindrome_prefix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix = \"\";\n\
    \    var palindrome_prefix_postfix_postfix_postfix_length = string.length;\n \
    \   var palindrome_prefix_postfix_postfix_postfix_postfix = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\";\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = string.length;\n    var palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = ", "    var palindrome = \"\",\n        postfix = \"\";\n    \n    for(var\
    \ i = 0; i < string.length; i++){\n        postfix = string.substr(0, i) + string.substr(i,\
    \ string.length);\n        \n        if(postfix.match(/\\p{P}$/)){\n         \
    \   palindrome += postfix;\n        }\n    }\n    \n    return palindrome;\n}\n",
  "    var palindrome = \"\",\n        postfix = \"\",\n        prefix_length = string.length,\n\
    \        suffix_length = string.length,\n        i,\n        j,\n        prefix_postfix\
    \ = \"\";\n    for(i = prefix_length; i >= 0; i--){\n        postfix = string.substr(i,\
    \ 1);\n        for(j = suffix_length; j >= 0; j--){\n            prefix_postfix\
    \ = string.substr(0, i);\n            if((prefix_postfix + postfix) == string){\n\
    \                palindrome = prefix_postfix + postfix + palindrome;\n       \
    \         suffix_length--;\n                break;\n            }\n        }\n\
    \    }\n    return palindrome;\n}\n", "    var palindrome = string.substr(0,string.length-1);\n\
    \    var reversed_string = string.substr(string.length-1,string.length);\n   \
    \ return palindrome + reversed_string;\n}\n", "    var palindrome = \"\",\n  \
    \      prefix_length = 0,\n        suffix_length = 0,\n        prefix_reversed\
    \ = \"\";\n    \n    for(var i = 0; i < string.length; i++){\n        prefix_length++;\n\
    \        prefix_reversed += string.charAt(i);\n    }\n    \n    for(var i = 0;\
    \ i < string.length; i++){\n        suffix_length++;\n    }\n    \n    for(var\
    \ i = 0; i < suffix_length; i++){\n        palindrome += string.charAt(i);\n \
    \   }\n    \n    for(var i = 0; i < prefix_length; i++){\n        palindrome +=\
    \ string.charAt(i);\n    }\n    \n    palindrome += prefix_reversed;\n    \n \
    \   return palindrome;\n}\n", "    var palindrome = \"\",\n        postfix = \"\
    \";\n    for(var i = 0; i < string.length; i++){\n        postfix += string[i];\n\
    \    }\n    postfix = postfix.split(\"\").reverse().join(\"\");\n    for(var i\
    \ = 0; i < string.length; i++){\n        palindrome += string[i];\n    }\n   \
    \ palindrome = palindrome.split(\"\").reverse().join(\"\");\n    palindrome =\
    \ palindrome + postfix;\n    return palindrome;\n}\n", "    var palindrome = \"\
    \",\n        postfix = \"\";\n    for(var i = 0; i < string.length; i++){\n  \
    \      postfix = string.substr(0, i) + string.substr(i, string.length);\n    \
    \    if(postfix.toLowerCase() === postfix.toLowerCase().split('').reverse().join('')){\n\
    \            palindrome = postfix.toLowerCase();\n            break;\n       \
    \ }\n    }\n    return palindrome;\n}\n", "    var palindrome = string.substr(0,\
    \ string.length - 1);\n    var reversed_string = string.substr(string.length -\
    \ 1);\n    var reversed_palindrome = reversed_string.substr(0, reversed_string.length\
    \ - 1);\n    var palindrome_with_suffix = palindrome + reversed_palindrome;\n\
    \    return palindrome_with_suffix;\n}\n", "    var palindrome = \"\",\n     \
    \   prefix_length = 0,\n        suffix_length = 0,\n        prefix_postfix = \"\
    \",\n        suffix_postfix = \"\";\n    \n    prefix_length = string.length;\n\
    \    suffix_length = string.length;\n    \n    prefix_postfix = string.substr(0,\
    \ prefix_length);\n    suffix_postfix = string.substr(prefix_length);\n    \n\
    \    for(var i = 0; i < suffix_length; i++){\n        if(suffix_postfix.charAt(i)\
    \ == suffix_postfix.charAt(suffix_length - i - 1)){\n            suffix_length--;\n\
    \        }\n    }\n    \n    for(var i = 0; i < prefix_length; i++){\n       \
    \ if(prefix_postfix.charAt(i) == prefix_postfix.charAt(prefix_length - i - 1)){\n\
    \            prefix_length--;\n        }\n    }\n    \n    for(var i = 0; i <\
    \ suffix_length; i++){\n        palindrome += suffix_postfix.charAt(i);\n    }\n\
    \    \n    for(var i = 0; i < prefix_length; i++){\n        palindrome += prefix_postfix.charAt(i);\n\
    \    }\n    \n    return palindrome;\n}\n", "    var reversed_string = \"\";\n\
    \    var prefix_length = 0;\n    var postfix_length = 0;\n    \n    for(var i\
    \ = 0; i < string.length; i++){\n        if(string[i] === \"#\"){\n          \
    \  postfix_length++;\n        }\n        else{\n            reversed_string +=\
    \ string[i];\n            prefix_length++;\n        }\n    }\n    \n    var palindrome\
    \ = string.slice(0, prefix_length) + reversed_string + string.slice(postfix_length);\n\
    \    \n    return palindrome;\n}\n", "    var palindrome = string;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n    var postfix\
    \ = \"\";\n    var reverse = \"\";\n    var palindromeLength = 0;\n", "    var\
    \ palindrome = \"\",\n        postfix = \"\",\n        suffix;\n    \n    for(var\
    \ i = 0; i < string.length; i++){\n        postfix = string.substr(0, i);\n  \
    \      suffix = string.substr(i, string.length);\n        \n        if(postfix.match(/[a-z]/)\
    \ && suffix.match(/[a-z]/)){\n            palindrome += postfix + suffix;\n  \
    \      }\n    }\n    \n    return palindrome;\n}\n", "    var palindrome = \"\"\
    ,\n        postfix = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    postfix += string[i];\n    }\n    postfix = postfix.split(\"\").reverse().join(\"\
    \");\n    for(var i = 0; i < string.length; i++){\n        palindrome += string[i]\
    \ + postfix;\n    }\n    return palindrome;\n}\n", "    var reversed_string =\
    \ \"\";\n    var longest_postfix_length = 0;\n    var longest_postfix_string =\
    \ \"\";\n    var longest_postfix_string_length = 0;\n    var longest_postfix_string_chars\
    \ = [];\n    var longest_postfix_string_chars_length = 0;\n    var longest_postfix_string_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_length = 0;\n    var longest_postfix_string_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_length = 0;\n \
    \   var longest_postfix_string_chars_chars_chars_chars_chars_length = 0;\n   \
    \ var longest_postfix_string_chars_chars_chars_chars_chars_chars_length = 0;\n\
    \    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length\
    \ = 0;\n    var longest_postfix_string_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_",
  "    var palindrome = \"\",\n        prefix_length = 0,\n        suffix_length =\
    \ 0,\n        suffix_postfix = \"\";\n    \n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === \"-\"){\n            suffix_length++;\n    \
    \        suffix_postfix += string[i];\n        }\n        else{\n            prefix_length++;\n\
    \            palindrome += string[i];\n        }\n    }\n    \n    if(suffix_length\
    \ < prefix_length){\n        suffix_length += prefix_length;\n        suffix_postfix\
    \ += string[string.length - 1];\n    }\n    \n    palindrome += string[string.length\
    \ - suffix_length];\n    \n    for(var i = 0; i < suffix_length; i++){\n     \
    \   palindrome += string[string.length - prefix_length - suffix_length - i];\n\
    \    }\n    \n    return palindrome;\n}\n", "  var palindrome = string;\n  var\
    \ postfix = \"\";\n  var reverse = \"\";\n  var i = 0;\n  var j = 0;\n  var k\
    \ = 0;\n  var length = 0;\n  while(i < string.length){\n    length = string.length\
    \ - i;\n    postfix = string.substr(i, length);\n    reverse = reverse.substr(0,\
    \ reverse.length-length);\n    j = i;\n    while(j >= 0 && j < string.length){\n\
    \      if(string[j] != postfix){\n        break;\n      }\n      j++;\n    }\n\
    \    if(j == string.length){\n      palindrome = palindrome + reverse;\n     \
    \ i = j;\n    }\n  }\n  return palindrome;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

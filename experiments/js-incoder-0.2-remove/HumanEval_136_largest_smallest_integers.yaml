name: HumanEval_136_largest_smallest_integers
language: js
prompt: "//Create a function that returns a tuple (a, b), where 'a' is\n// the largest\
  \ of negative integers, and 'b' is the smallest\n// of positive integers in a list.\n\
  // If there is no negative or positive integers, return them as None.\n// Examples:\n\
  function largest_smallest_integers(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = largest_smallest_integers;\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7]),[undefined,\
  \ 1]);\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7, 0]),[undefined, 1]);\n \
  \ assert.deepEqual(candidate([1, 3, 2, 4, 5, 6, -2]),[-2, 1]);\n  assert.deepEqual(candidate([4,\
  \ 5, 3, 6, 2, 7, -7]),[-7, 2]);\n  assert.deepEqual(candidate([7, 3, 8, 4, 9, 2,\
  \ 5, -9]),[-9, 2]);\n  assert.deepEqual(candidate([]),[undefined, undefined]);\n\
  \  assert.deepEqual(candidate([0]),[undefined, undefined]);\n  assert.deepEqual(candidate([-1,\
  \ -3, -5, -6]),[-1, undefined]);\n  assert.deepEqual(candidate([-1, -3, -5, -6,\
  \ 0]),[-1, undefined]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, 1]),[-3,\
  \ 1]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, -100, 1]),[-3, 1]);\n}\n\n\
  test();"
completions: ["    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest\
    \ === undefined){\n                largest = lst[i];\n            }else{\n   \
    \             largest = Math.max(largest, lst[i]);\n            }\n        }else{\n\
    \            if(smallest === undefined){\n                smallest = lst[i];\n\
    \            }else{\n                smallest = Math.min(smallest, lst[i]);\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var largest = undefined;\n    var smallest = undefined;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n\
    \                largest = lst[i];\n            }else{\n                smallest\
    \ = lst[i];\n            }\n        }else if(lst[i] > 0){\n            if(smallest\
    \ === undefined){\n                smallest = lst[i];\n            }else{\n  \
    \              largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "  var max_negative = undefined;\n  var min_positive\
    \ = undefined;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i] < 0){\n    \
    \  if(max_negative === undefined){\n        max_negative = lst[i];\n      }\n\
    \      else{\n        if(max_negative > lst[i]){\n          max_negative = lst[i];\n\
    \        }\n      }\n    }\n    else{\n      if(min_positive === undefined){\n\
    \        min_positive = lst[i];\n      }\n      else{\n        if(min_positive\
    \ < lst[i]){\n          min_positive = lst[i];\n        }\n      }\n    }\n  }\n\
    \  return [max_negative, min_positive];\n}\n", "  let largest = Number.MIN_SAFE_INTEGER;\n\
    \  let smallest = Number.MAX_SAFE_INTEGER;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest\
    \ === undefined){\n                largest = lst[i];\n            }else{\n   \
    \             largest = Math.max(largest, lst[i]);\n            }\n        }else{\n\
    \            if(smallest === undefined){\n                smallest = lst[i];\n\
    \            }else{\n                smallest = Math.min(smallest, lst[i]);\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "  var\
    \ max_negative = Number.NEGATIVE_INFINITY;\n  var min_positive = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      if (max_negative\
    \ < lst[i]){\n        max_negative = lst[i];\n      }\n    }\n    else if (lst[i]\
    \ > 0){\n      if (min_positive > lst[i]){\n        min_positive = lst[i];\n \
    \     }\n    }\n  }\n  return [max_negative, min_positive];\n}\n", "    var max_num\
    \ = -Infinity;\n    var min_num = Infinity;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max_num){\n            max_num = lst[i];\n      \
    \  }\n        if(lst[i] < min_num){\n            min_num = lst[i];\n        }\n\
    \    }\n    return [max_num, min_num];\n}\n", "  var largest = undefined;\n  var\
    \ smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < 0){\n      if(largest === undefined){\n        largest = lst[i];\n      }\n\
    \      else{\n        if(largest < lst[i]){\n          largest = lst[i];\n   \
    \     }\n      }\n    }\n    else{\n      if(smallest === undefined){\n      \
    \  smallest = lst[i];\n      }\n      else{\n        if(smallest > lst[i]){\n\
    \          smallest = lst[i];\n        }\n      }\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(largest === undefined){\n\
    \            largest = lst[i];\n            smallest = lst[i];\n        }\n  \
    \      else if(largest < lst[i]){\n            largest = lst[i];\n        }\n\
    \        else if(largest > lst[i]){\n            smallest = lst[i];\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "  var largest = undefined;\n \
    \ var smallest = undefined;\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i]\
    \ < 0){\n      if (largest === undefined){\n        largest = lst[i];\n      }\n\
    \      else{\n        largest = Math.max(largest, lst[i]);\n      }\n    }\n \
    \   else if (lst[i] > 0){\n      if (smallest === undefined){\n        smallest\
    \ = lst[i];\n      }\n      else{\n        smallest = Math.min(smallest, lst[i]);\n\
    \      }\n    }\n  }\n  return [largest, smallest];\n}\n", "    var largest =\
    \ undefined;\n    var smallest = undefined;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n   \
    \             largest = lst[i];\n            }\n            else{\n          \
    \      largest = Math.max(largest, lst[i]);\n            }\n        }\n      \
    \  else if(lst[i] > 0){\n            if(smallest === undefined){\n           \
    \     smallest = lst[i];\n            }\n            else{\n                smallest\
    \ = Math.min(smallest, lst[i]);\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var largest = Number.MIN_VALUE;\n    var smallest = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n        if(lst[i] > largest){\n    \
    \        largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "  var max_negative = Number.MIN_VALUE;\n  var min_positive = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(max_negative\
    \ < lst[i]){\n        max_negative = lst[i];\n      }\n    }\n    else{\n    \
    \  if(min_positive > lst[i]){\n        min_positive = lst[i];\n      }\n    }\n\
    \  }\n  return max_negative < min_positive ? max_negative : min_positive;\n}\n",
  "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for (var\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var max_negative = Number.NEGATIVE_INFINITY;\n\
    \  var min_positive = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(max_negative < lst[i]){\n        max_negative\
    \ = lst[i];\n      }\n    }\n    else if(lst[i] > 0){\n      if(min_positive >\
    \ lst[i]){\n        min_positive = lst[i];\n      }\n    }\n  }\n  return max_negative\
    \ < min_positive ? max_negative : min_positive;\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n\
    \    var smallest = Number.POSITIVE_INFINITY;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \    }\n        if(lst[i] > largest){\n            largest = lst[i];\n       \
    \ }\n    }\n    return [largest, smallest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for(var i=0; i<lst.length; i++){\n       \
    \ if(lst[i] < 0){\n            if(largest === undefined){\n                largest\
    \ = lst[i];\n            }else{\n                smallest = lst[i];\n        \
    \    }\n        }else if(lst[i] > 0){\n            if(smallest === undefined){\n\
    \                smallest = lst[i];\n            }else{\n                largest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(lst[i]<0){\n            if(largest === undefined){\n\
    \                largest = lst[i];\n            }else{\n                smallest\
    \ = lst[i];\n            }\n        }else if(lst[i]>0){\n            if(smallest\
    \ === undefined){\n                smallest = lst[i];\n            }else{\n  \
    \              largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest,smallest];\n}", "    var largest = Number.MIN_VALUE;\n    var smallest\
    \ = Number.MAX_VALUE;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < smallest){\n            smallest = lst[i];\n        }\n        if(lst[i] >\
    \ largest){\n            largest = lst[i];\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "  var largest = Number.MIN_SAFE_INTEGER;\n  var smallest\
    \ = Number.MAX_SAFE_INTEGER;\n  for (var i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(largest === undefined){\n      largest = lst[i];\n\
    \      smallest = lst[i];\n    }\n    else if(largest < lst[i]){\n      largest\
    \ = lst[i];\n    }\n    else if(largest > lst[i]){\n      smallest = lst[i];\n\
    \    }\n  }\n  return [smallest, largest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(largest === undefined || largest < lst[i]){\n            largest = lst[i];\n\
    \        }\n        if(smallest === undefined || smallest > lst[i]){\n       \
    \     smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }\n      else if(largest < lst[i]){\n      \
    \  largest = lst[i];\n      }\n    }\n    else{\n      if(smallest === undefined){\n\
    \        smallest = lst[i];\n      }\n      else if(smallest > lst[i]){\n    \
    \    smallest = lst[i];\n      }\n    }\n  }\n  return largest === undefined ?\
    \ smallest : largest;\n}\n", "    let largest = undefined;\n    let smallest =\
    \ undefined;\n    for (let i = 0; i < lst.length; i++){\n        if (lst[i] <\
    \ 0){\n            if (largest === undefined){\n                largest = lst[i];\n\
    \            }\n            else{\n                largest = Math.max(largest,\
    \ lst[i]);\n            }\n        }\n        else{\n            if (smallest\
    \ === undefined){\n                smallest = lst[i];\n            }\n       \
    \     else{\n                smallest = Math.min(smallest, lst[i]);\n        \
    \    }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var largest\
    \ = undefined;\n    var smallest = undefined;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n   \
    \             largest = lst[i];\n            }\n            else{\n          \
    \      largest = Math.max(largest, lst[i]);\n            }\n        }\n      \
    \  else if(lst[i] > 0){\n            if(smallest === undefined){\n           \
    \     smallest = lst[i];\n            }\n            else{\n                smallest\
    \ = Math.min(smallest, lst[i]);\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var largest = Number.MIN_VALUE;\n    var smallest = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n        if(lst[i] > largest){\n    \
    \        largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest\
    \ === undefined){\n                largest = lst[i];\n            }else{\n   \
    \             smallest = lst[i];\n            }\n        }else if(lst[i] > 0){\n\
    \            if(smallest === undefined){\n                smallest = lst[i];\n\
    \            }else{\n                largest = lst[i];\n            }\n      \
    \  }\n    }\n    return [largest, smallest];\n}\n", "    let largest = Number.MIN_SAFE_INTEGER;\n\
    \    let smallest = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest && lst[i] > largest){\n            smallest\
    \ = lst[i];\n        }\n        if(lst[i] > smallest && lst[i] < largest){\n \
    \           largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "  var largest = Number.POSITIVE_INFINITY;\n  var smallest = Number.NEGATIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var\
    \ i in lst){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  \
    \  if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || largest\
    \ < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return largest\
    \ === undefined ? smallest : largest;\n}\n", "    let largest = undefined;\n \
    \   let smallest = undefined;\n    for(let i = 0; i < lst.length; i++){\n    \
    \    if(largest === undefined){\n            largest = lst[i];\n            smallest\
    \ = lst[i];\n        }\n        else if(largest < lst[i]){\n            largest\
    \ = lst[i];\n        }\n        else if(largest > lst[i]){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ largest = undefined;\n    var smallest = undefined;\n    for(var i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n\
    \                largest = lst[i];\n            }\n            else{\n       \
    \         largest = Math.max(largest, lst[i]);\n            }\n        }\n   \
    \     else if(lst[i] > 0){\n            if(smallest === undefined){\n        \
    \        smallest = lst[i];\n            }\n            else{\n              \
    \  smallest = Math.min(smallest, lst[i]);\n            }\n        }\n    }\n \
    \   return [largest, smallest];\n}\n", "    var largest = Number.MIN_VALUE;\n\
    \    var smallest = Number.MAX_VALUE;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n        }\n \
    \       if(lst[i] > largest){\n            largest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var largest = undefined;\n    var\
    \ smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(largest\
    \ === undefined){\n            largest = lst[i];\n            smallest = lst[i];\n\
    \        }\n        else if(largest < lst[i]){\n            largest = lst[i];\n\
    \        }\n        else if(largest > lst[i]){\n            smallest = lst[i];\n\
    \        }\n    }\n    return [largest, smallest];\n}\n", "    var max_negative\
    \ = Number.MIN_VALUE;\n    var min_positive = Number.MAX_VALUE;\n    for(var i\
    \ = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(max_negative\
    \ < lst[i]){\n                max_negative = lst[i];\n            }\n        }\n\
    \        else if(lst[i] > 0){\n            if(min_positive > lst[i]){\n      \
    \          min_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [max_negative, min_positive];\n}\n", "    var largest = undefined;\n    var\
    \ smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(largest === undefined){\n                largest = lst[i];\n\
    \            }\n            else{\n                largest = Math.max(largest,\
    \ lst[i]);\n            }\n        }\n        else if(lst[i] > 0){\n         \
    \   if(smallest === undefined){\n                smallest = lst[i];\n        \
    \    }\n            else{\n                smallest = Math.min(smallest, lst[i]);\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var largest = undefined;\n    var smallest = undefined;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n\
    \                largest = lst[i];\n            }\n            else{\n       \
    \         largest = Math.max(largest, lst[i]);\n            }\n        }\n   \
    \     else if(lst[i] > 0){\n            if(smallest === undefined){\n        \
    \        smallest = lst[i];\n            }\n            else{\n              \
    \  smallest = Math.min(smallest, lst[i]);\n            }\n        }\n    }\n \
    \   return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var\
    \ smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  \
    \  var largest = undefined;\n    var smallest = undefined;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(largest === undefined || largest < lst[i]){\n\
    \            largest = lst[i];\n        }\n        if(smallest === undefined ||\
    \ smallest > lst[i]){\n            smallest = lst[i];\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] <\
    \ 0){\n            if(!largest || lst[i] > largest){\n                largest\
    \ = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n        \
    \    if(!smallest || lst[i] < smallest){\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i]<0){\n      if(largest === undefined){\n        largest = lst[i];\n\
    \      }else{\n        if(largest < lst[i]){\n          largest = lst[i];\n  \
    \      }\n      }\n    }else{\n      if(smallest === undefined){\n        smallest\
    \ = lst[i];\n      }else{\n        if(smallest > lst[i]){\n          smallest\
    \ = lst[i];\n        }\n      }\n    }\n  }\n  return [largest,smallest];\n}\n",
  "  var largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(largest === undefined || lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if(smallest === undefined || lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "    var max_negative\
    \ = Number.NEGATIVE_INFINITY;\n    var min_positive = Number.POSITIVE_INFINITY;\n\
    \    var max_negative_index = 0;\n    var min_positive_index = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(max_negative\
    \ < lst[i]){\n                max_negative = lst[i];\n                max_negative_index\
    \ = i;\n            }\n        }\n        else if(lst[i] > 0){\n            if(min_positive\
    \ > lst[i]){\n                min_positive = lst[i];\n                min_positive_index\
    \ = i;\n            }\n        }\n    }\n    if(max_negative < min_positive){\n\
    \        return [max_negative, max_negative_index];\n    }\n    else{\n      \
    \  return [min_positive, min_positive_index];\n    }\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || lst[i] > largest){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest\
    \ = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined){\n\
    \      if(lst[i] < 0){\n        largest = lst[i];\n      }\n    }\n    else{\n\
    \      if(lst[i] > 0){\n        smallest = lst[i];\n      }\n    }\n  }\n  return\
    \ largest === undefined ? smallest : largest;\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [largest, smallest];\n}\n", "  var max_negative = Number.MIN_VALUE;\n\
    \  var min_positive = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < 0){\n      if(max_negative < lst[i]){\n        max_negative =\
    \ lst[i];\n      }\n    }\n    else{\n      if(min_positive > lst[i]){\n     \
    \   min_positive = lst[i];\n      }\n    }\n  }\n  return [max_negative, min_positive];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }\n      else if(largest < lst[i]){\n      \
    \  largest = lst[i];\n      }\n    }\n    else{\n      if(smallest === undefined){\n\
    \        smallest = lst[i];\n      }\n      else if(smallest > lst[i]){\n    \
    \    smallest = lst[i];\n      }\n    }\n  }\n  return largest === undefined ?\
    \ smallest : largest;\n}\n", "    var largest = undefined;\n    var smallest =\
    \ undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n\
    \            if(largest === undefined){\n                largest = lst[i];\n \
    \           }\n            else{\n                smallest = lst[i];\n       \
    \     }\n        }\n        else if(lst[i] > 0){\n            if(smallest ===\
    \ undefined){\n                smallest = lst[i];\n            }\n           \
    \ else{\n                largest = lst[i];\n            }\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(largest === undefined){\n\
    \            largest = lst[i];\n        }else if(smallest === undefined){\n  \
    \          smallest = lst[i];\n        }else if(lst[i] > largest && lst[i] < smallest){\n\
    \            largest = lst[i];\n        }else if(lst[i] < smallest && lst[i] >\
    \ largest){\n            smallest = lst[i];\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  \
    \  var largest = undefined;\n    var smallest = undefined;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n\
    \                largest = lst[i];\n            }\n            else{\n       \
    \         smallest = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(smallest === undefined){\n                smallest = lst[i];\n\
    \            }\n            else{\n                largest = lst[i];\n       \
    \     }\n        }\n    }\n    return [largest, smallest];\n}\n", "  var largest\
    \ = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var i in lst){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest\
    \ === undefined){\n                largest = lst[i];\n            }\n        \
    \    else{\n                largest = Math.max(largest, lst[i]);\n           \
    \ }\n        }\n        else if(lst[i] > 0){\n            if(smallest === undefined){\n\
    \                smallest = lst[i];\n            }\n            else{\n      \
    \          smallest = Math.min(smallest, lst[i]);\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < 0){\n            if(largest === undefined){\n              \
    \  largest = lst[i];\n            }\n            else{\n                largest\
    \ = Math.max(largest, lst[i]);\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(smallest === undefined){\n                smallest = lst[i];\n\
    \            }\n            else{\n                smallest = Math.min(smallest,\
    \ lst[i]);\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(largest === undefined || largest < lst[i]){\n\
    \      largest = lst[i];\n    }\n    if(smallest === undefined || smallest > lst[i]){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \   var largest = undefined;\n    var smallest = undefined;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n\
    \                largest = lst[i];\n            }else{\n                smallest\
    \ = lst[i];\n            }\n        }else if(lst[i] > 0){\n            if(smallest\
    \ === undefined){\n                smallest = lst[i];\n            }else{\n  \
    \              largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "  if(lst.includes(null)){\n    return [null,null];\n\
    \  }\n  if(lst.includes(undefined)){\n    return [undefined,undefined];\n  }\n\
    \  if(lst.includes(NaN)){\n    return [NaN,NaN];\n  }\n  if(lst.includes(Infinity)){\n\
    \    return [Infinity,Infinity];\n  }\n  if(lst.includes(-Infinity)){\n    return\
    \ [-Infinity,-Infinity];\n  }\n  if(lst.includes(0)){\n    return [0,0];\n  }\n\
    \  if(lst.includes(1)){\n    return [1,1];\n  }\n  if(lst.includes(2)){\n    return\
    \ [2,2];\n  }\n  if(lst.includes(3)){\n    return [3,3];\n  }\n  if(lst.includes(4)){\n\
    \    return [4,4];\n  }\n  if(lst.includes(5)){\n    return [5,5];\n  }\n  if(lst.includes(6)){\n\
    \    return [6,6];\n  }\n  if(lst.includes(7)){\n    return [7,7];\n  }\n  if(lst.includes(8)){\n\
    \    return [8,8];\n  }\n  if(lst.includes(9)){\n    return [9,9];\n  }\n  if(lst.includes(10)){\n\
    \    return [10,10];\n  }\n  if(lst.includes(11)){\n    return [11,11];\n  }\n\
    \  if(lst.includes(12)){\n    return [12,12];\n  }\n  if(lst.includes(13)){\n\
    \    return [13,13];\n  }\n  if(lst.includes(14)){\n    return [14,14];\n  }\n\
    \  if(lst.includes(15)){\n    return [15,15];\n  }\n  if(lst.includes(16)){\n\
    \    return [16,16];\n  }\n  if(lst.includes(17)){\n    return [17,17];\n  }\n\
    \  if(lst.includes(18)){\n    return [18,18];\n  }\n  if(lst.includes(19)){\n\
    \    return [19,19];\n  }\n  if(lst.includes(20)){\n    return [20,20];\n  }\n\
    \  if(lst.includes(21)){\n    return [21,21];\n  }\n  if(lst.includes(22)){\n\
    \    return [22,22];\n  }\n  if(lst.includes(23)){\n    return [23,23];\n  }\n\
    \  if(lst.includes(24)){\n    return [24,24];\n  }\n  if(lst.includes(25)){\n\
    \    return [25,25];\n  }\n  if(lst.includes(26)){\n    return [26,", "    var\
    \ largest = Number.MIN_SAFE_INTEGER;\n    var smallest = Number.MAX_SAFE_INTEGER;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n        if(lst[i] > largest){\n    \
    \        largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let max_negative = Number.MAX_SAFE_INTEGER;\n    let min_positive =\
    \ Number.MIN_SAFE_INTEGER;\n    for(let i = 0; i < lst.length; i++){\n       \
    \ if(lst[i] < 0){\n            if(max_negative < lst[i]){\n                max_negative\
    \ = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n        \
    \    if(min_positive > lst[i]){\n                min_positive = lst[i];\n    \
    \        }\n        }\n    }\n    return [max_negative, min_positive];\n}\n",
  "    var largest = Number.MAX_VALUE;\n    var smallest = Number.MIN_VALUE;\n   \
    \ for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n     \
    \       smallest = lst[i];\n        }\n        if(lst[i] > largest){\n       \
    \     largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n",
  "    var largest = Number.NEGATIVE_INFINITY;\n    var smallest = Number.POSITIVE_INFINITY;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n        if(lst[i] > largest){\n    \
    \        largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = Number.MIN_VALUE;\n    var smallest = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n        if(lst[i] > largest){\n    \
    \        largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }\n      else{\n        largest = Math.max(largest,\
    \ lst[i]);\n      }\n    }\n    else{\n      if(smallest === undefined){\n   \
    \     smallest = lst[i];\n      }\n      else{\n        smallest = Math.min(smallest,\
    \ lst[i]);\n      }\n    }\n  }\n  return [largest, smallest];\n}\n", "    var\
    \ largest = undefined;\n    var smallest = undefined;\n    for(var i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n\
    \                largest = lst[i];\n            }\n            else{\n       \
    \         largest = Math.max(largest, lst[i]);\n            }\n        }\n   \
    \     else if(lst[i] > 0){\n            if(smallest === undefined){\n        \
    \        smallest = lst[i];\n            }\n            else{\n              \
    \  smallest = Math.min(smallest, lst[i]);\n            }\n        }\n    }\n \
    \   return [largest, smallest];\n}\n", "  let largest = undefined;\n  let smallest\
    \ = undefined;\n  lst.forEach(function(num){\n    if(num < 0){\n      if(largest\
    \ === undefined){\n        largest = num;\n      }else{\n        largest = Math.max(largest,\
    \ num);\n      }\n    }else{\n      if(smallest === undefined){\n        smallest\
    \ = num;\n      }else{\n        smallest = Math.min(smallest, num);\n      }\n\
    \    }\n  });\n  return [largest, smallest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < 0){\n            if(largest === undefined){\n              \
    \  largest = lst[i];\n            }else{\n                largest = Math.max(largest,\
    \ lst[i]);\n            }\n        }else if(lst[i] > 0){\n            if(smallest\
    \ === undefined){\n                smallest = lst[i];\n            }else{\n  \
    \              smallest = Math.min(smallest, lst[i]);\n            }\n       \
    \ }\n    }\n    return [largest, smallest];\n}\n", "    var largest = Number.MIN_VALUE;\n\
    \    var smallest = Number.MAX_VALUE;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n        }\n \
    \       if(lst[i] > largest){\n            largest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n\
    \    var smallest = Number.POSITIVE_INFINITY;\n    for(var i in lst){\n      \
    \  if(lst[i] > largest){\n            largest = lst[i];\n        }\n        if(lst[i]\
    \ < smallest){\n            smallest = lst[i];\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    let largest = undefined;\n    let smallest = undefined;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > largest){\n   \
    \         largest = lst[i];\n        }\n        if(lst[i] < smallest){\n     \
    \       smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i in\
    \ lst){\n    if(lst[i] < 0){\n      if(largest === undefined){\n        largest\
    \ = lst[i];\n      }else{\n        largest = Math.max(largest, lst[i]);\n    \
    \  }\n    }else if(lst[i] > 0){\n      if(smallest === undefined){\n        smallest\
    \ = lst[i];\n      }else{\n        smallest = Math.min(smallest, lst[i]);\n  \
    \    }\n    }\n  }\n  return [largest, smallest];\n}\n", "    let largest = Number.MIN_SAFE_INTEGER;\n\
    \    let smallest = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \    }\n        if(lst[i] > largest){\n            largest = lst[i];\n       \
    \ }\n    }\n    return [largest, smallest];\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n\
    \    var smallest = Number.POSITIVE_INFINITY;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \    }\n        if(lst[i] > largest){\n            largest = lst[i];\n       \
    \ }\n    }\n    return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    let largest = Number.MIN_SAFE_INTEGER;\n    let smallest = Number.MAX_SAFE_INTEGER;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n        if(lst[i] > largest){\n    \
    \        largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }\n      else if(largest < lst[i]){\n      \
    \  largest = lst[i];\n      }\n    }\n    else if(lst[i] > 0){\n      if(smallest\
    \ === undefined){\n        smallest = lst[i];\n      }\n      else if(smallest\
    \ > lst[i]){\n        smallest = lst[i];\n      }\n    }\n  }\n  return largest\
    \ === undefined ? null : largest;\n}\n", "    let largest = undefined;\n    let\
    \ smallest = undefined;\n    for(let i = 0; i < lst.length; i++){\n        if(largest\
    \ === undefined){\n            largest = lst[i];\n        }\n        else if(largest\
    \ > lst[i]){\n            largest = lst[i];\n        }\n        else if(largest\
    \ < lst[i]){\n            smallest = lst[i];\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = undefined;\n  var\
    \ smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < 0){\n      if(largest === undefined){\n        largest = lst[i];\n      }\n\
    \      else if(largest < lst[i]){\n        largest = lst[i];\n      }\n    }\n\
    \    else{\n      if(smallest === undefined){\n        smallest = lst[i];\n  \
    \    }\n      else if(smallest > lst[i]){\n        smallest = lst[i];\n      }\n\
    \    }\n  }\n  return [largest, smallest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < 0){\n      if(largest === undefined){\n        largest = lst[i];\n      }else{\n\
    \        largest = Math.max(largest, lst[i]);\n      }\n    }else{\n      if(smallest\
    \ === undefined){\n        smallest = lst[i];\n      }else{\n        smallest\
    \ = Math.min(smallest, lst[i]);\n      }\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest\
    \ === undefined){\n                largest = lst[i];\n            }\n        \
    \    else{\n                largest = Math.max(largest, lst[i]);\n           \
    \ }\n        }\n        else if(lst[i] > 0){\n            if(smallest === undefined){\n\
    \                smallest = lst[i];\n            }\n            else{\n      \
    \          smallest = Math.min(smallest, lst[i]);\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "  var largest = undefined;\n \
    \ var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < 0){\n      if(largest === undefined){\n        largest = lst[i];\n      }\n\
    \      else{\n        largest = Math.max(largest, lst[i]);\n      }\n    }\n \
    \   else{\n      if(smallest === undefined){\n        smallest = lst[i];\n   \
    \   }\n      else{\n        smallest = Math.min(smallest, lst[i]);\n      }\n\
    \    }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }\n      else if(largest < lst[i]){\n      \
    \  largest = lst[i];\n      }\n    }\n    else if(lst[i] > 0){\n      if(smallest\
    \ === undefined){\n        smallest = lst[i];\n      }\n      else if(smallest\
    \ > lst[i]){\n        smallest = lst[i];\n      }\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i=0;i<lst.length;i++){\n    if(lst[i]<0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }\n      else{\n        smallest = lst[i];\n\
    \      }\n    }\n    else{\n      if(smallest === undefined){\n        smallest\
    \ = lst[i];\n      }\n      else{\n        if(largest < smallest){\n         \
    \ largest = smallest;\n        }\n        else{\n          smallest = lst[i];\n\
    \        }\n      }\n    }\n  }\n  return [largest,smallest];\n}\n", "    var\
    \ max_negative = Number.MIN_VALUE;\n    var min_positive = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n         \
    \   if(max_negative < lst[i]){\n                max_negative = lst[i];\n     \
    \       }\n        }\n        else if(lst[i] > 0){\n            if(min_positive\
    \ > lst[i]){\n                min_positive = lst[i];\n            }\n        }\n\
    \    }\n    return [max_negative, min_positive];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < 0){\n            if(largest === undefined){\n              \
    \  largest = lst[i];\n            }\n            else{\n                smallest\
    \ = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n        \
    \    if(smallest === undefined){\n                smallest = lst[i];\n       \
    \     }\n            else{\n                largest = lst[i];\n            }\n\
    \        }\n    }\n    if(largest === undefined){\n        return undefined;\n\
    \    }\n    else{\n        return [smallest, largest];\n    }\n}\n", "  var largest\
    \ = undefined;\n  var smallest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n        largest\
    \ = lst[i];\n      }else{\n        largest = Math.max(largest, lst[i]);\n    \
    \  }\n    }else if(lst[i] > 0){\n      if(smallest === undefined){\n        smallest\
    \ = lst[i];\n      }else{\n        smallest = Math.min(smallest, lst[i]);\n  \
    \    }\n    }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    let largest = undefined;\n    let smallest = undefined;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(largest === undefined || largest <\
    \ lst[i]){\n            largest = lst[i];\n        }\n        if(smallest ===\
    \ undefined || smallest > lst[i]){\n            smallest = lst[i];\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "  let largest = Number.MIN_SAFE_INTEGER;\n\
    \  let smallest = Number.MAX_SAFE_INTEGER;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }\n      else{\n        if(largest < lst[i]){\n\
    \          largest = lst[i];\n        }\n      }\n    }\n    else{\n      if(smallest\
    \ === undefined){\n        smallest = lst[i];\n      }\n      else{\n        if(smallest\
    \ > lst[i]){\n          smallest = lst[i];\n        }\n      }\n    }\n  }\n \
    \ return [largest, smallest];\n}\n", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] <\
    \ 0){\n            if(largest === undefined){\n                largest = lst[i];\n\
    \            }\n            else{\n                largest = Math.max(largest,\
    \ lst[i]);\n            }\n        }\n        else if(lst[i] > 0){\n         \
    \   if(smallest === undefined){\n                smallest = lst[i];\n        \
    \    }\n            else{\n                smallest = Math.min(smallest, lst[i]);\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var largest = undefined;\n    var smallest = undefined;\n    for(var i in lst){\n\
    \        if(lst[i] > largest){\n            largest = lst[i];\n        }\n   \
    \     if(lst[i] < smallest){\n            smallest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n\
    \    var smallest = Number.POSITIVE_INFINITY;\n    for(var i in lst){\n      \
    \  if(lst[i] < smallest){\n            smallest = lst[i];\n        }\n       \
    \ if(lst[i] > largest){\n            largest = lst[i];\n        }\n    }\n   \
    \ return [largest, smallest];\n}", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] <\
    \ 0){\n            if(largest === undefined){\n                largest = lst[i];\n\
    \            }else{\n                smallest = lst[i];\n            }\n     \
    \   }else if(lst[i] > 0){\n            if(smallest === undefined){\n         \
    \       smallest = lst[i];\n            }else{\n                largest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var largest = Number.MIN_VALUE;\n    var smallest = Number.MAX_VALUE;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n            smallest\
    \ = lst[i];\n        }\n        if(lst[i] > largest){\n            largest = lst[i];\n\
    \        }\n    }\n    return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i=0;\
    \ i<lst.length; i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }else{\n        if(largest < lst[i]){\n    \
    \      largest = lst[i];\n        }\n      }\n    }else{\n      if(smallest ===\
    \ undefined){\n        smallest = lst[i];\n      }else{\n        if(smallest >\
    \ lst[i]){\n          smallest = lst[i];\n        }\n      }\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var\
    \ smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest\
    \ === undefined){\n                largest = lst[i];\n            }\n        \
    \    else{\n                largest = Math.max(largest, lst[i]);\n           \
    \ }\n        }\n        else if(lst[i] > 0){\n            if(smallest === undefined){\n\
    \                smallest = lst[i];\n            }\n            else{\n      \
    \          smallest = Math.min(smallest, lst[i]);\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "  var largest = undefined;\n \
    \ var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < 0){\n      if(largest === undefined){\n        largest = lst[i];\n      }\n\
    \      else if(largest < lst[i]){\n        largest = lst[i];\n      }\n    }\n\
    \    else{\n      if(smallest === undefined){\n        smallest = lst[i];\n  \
    \    }\n      else if(smallest > lst[i]){\n        smallest = lst[i];\n      }\n\
    \    }\n  }\n  return [largest, smallest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < 0){\n            if(largest === undefined){\n              \
    \  largest = lst[i];\n            }else{\n                largest = Math.max(largest,\
    \ lst[i]);\n            }\n        }else{\n            if(smallest === undefined){\n\
    \                smallest = lst[i];\n            }else{\n                smallest\
    \ = Math.min(smallest, lst[i]);\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(largest === undefined ||\
    \ largest < lst[i]){\n            largest = lst[i];\n        }\n        if(smallest\
    \ === undefined || smallest > lst[i]){\n            smallest = lst[i];\n     \
    \   }\n    }\n    return [largest, smallest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < 0){\n      if(largest === undefined){\n        largest = lst[i];\n      }\n\
    \      else if(largest < lst[i]){\n        largest = lst[i];\n      }\n    }\n\
    \    else{\n      if(smallest === undefined){\n        smallest = lst[i];\n  \
    \    }\n      else if(smallest > lst[i]){\n        smallest = lst[i];\n      }\n\
    \    }\n  }\n  return largest === undefined ? smallest : largest;\n}\n", "  let\
    \ largest = undefined;\n  let smallest = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < 0){\n      if (largest === undefined){\n        largest\
    \ = lst[i];\n      }\n      else if (largest < lst[i]){\n        largest = lst[i];\n\
    \      }\n    }\n    else if (lst[i] > 0){\n      if (smallest === undefined){\n\
    \        smallest = lst[i];\n      }\n      else if (smallest > lst[i]){\n   \
    \     smallest = lst[i];\n      }\n    }\n  }\n  return largest === undefined\
    \ ? smallest : largest;\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n\
    \    var smallest = Number.POSITIVE_INFINITY;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \    }\n        if(lst[i] > largest){\n            largest = lst[i];\n       \
    \ }\n    }\n    return [largest, smallest];\n}\n", "    var max_negative = Number.MIN_VALUE;\n\
    \    var min_positive = Number.MAX_VALUE;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(max_negative < lst[i]){\n   \
    \             max_negative = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(min_positive > lst[i]){\n                min_positive\
    \ = lst[i];\n            }\n        }\n    }\n    return [max_negative, min_positive];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }\n      else if(largest < lst[i]){\n      \
    \  largest = lst[i];\n      }\n    }\n    else{\n      if(smallest === undefined){\n\
    \        smallest = lst[i];\n      }\n      else if(smallest > lst[i]){\n    \
    \    smallest = lst[i];\n      }\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }\n      else if(largest < lst[i]){\n      \
    \  largest = lst[i];\n      }\n    }\n    else if(lst[i] > 0){\n      if(smallest\
    \ === undefined){\n        smallest = lst[i];\n      }\n      else if(smallest\
    \ > lst[i]){\n        smallest = lst[i];\n      }\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "    var largest = Number.MIN_VALUE;\n    var smallest = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n        if(lst[i] > largest){\n    \
    \        largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let largest = undefined;\n    let smallest = undefined;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(largest === undefined || largest <\
    \ lst[i]){\n            largest = lst[i];\n        }\n        if(smallest ===\
    \ undefined || smallest > lst[i]){\n            smallest = lst[i];\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "  let largest = Number.MIN_SAFE_INTEGER;\n\
    \  let smallest = Number.MAX_SAFE_INTEGER;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest\
    \ === undefined){\n                largest = lst[i];\n            }\n        \
    \    else{\n                largest = Math.max(largest, lst[i]);\n           \
    \ }\n        }\n        else if(lst[i] > 0){\n            if(smallest === undefined){\n\
    \                smallest = lst[i];\n            }\n            else{\n      \
    \          smallest = Math.min(smallest, lst[i]);\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < 0){\n            if(largest === undefined){\n              \
    \  largest = lst[i];\n            }\n            else{\n                largest\
    \ = Math.max(largest, lst[i]);\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(smallest === undefined){\n                smallest = lst[i];\n\
    \            }\n            else{\n                smallest = Math.min(smallest,\
    \ lst[i]);\n            }\n        }\n        else{\n            if(largest ===\
    \ undefined){\n                largest = lst[i];\n            }\n            else{\n\
    \                largest = Math.max(largest, lst[i]);\n            }\n       \
    \     if(smallest === undefined){\n                smallest = lst[i];\n      \
    \      }\n            else{\n                smallest = Math.min(smallest, lst[i]);\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var largest = undefined;\n    var smallest = undefined;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n\
    \                largest = lst[i];\n            }\n            else{\n       \
    \         largest = Math.max(largest, lst[i]);\n            }\n        }\n   \
    \     else if(lst[i] > 0){\n            if(smallest === undefined){\n        \
    \        smallest = lst[i];\n            }\n            else{\n              \
    \  smallest = Math.min(smallest, lst[i]);\n            }\n        }\n    }\n \
    \   return [largest, smallest];\n}\n", "    let largest = undefined;\n    let\
    \ smallest = undefined;\n    for(let i = 0; i < lst.length; i++){\n        if(largest\
    \ === undefined || largest < lst[i]){\n            largest = lst[i];\n       \
    \ }\n        if(smallest === undefined || smallest > lst[i]){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "  var max_negative\
    \ = undefined;\n  var min_positive = undefined;\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(max_negative === undefined){\n        max_negative\
    \ = lst[i];\n      }\n      else{\n        if(max_negative < lst[i]){\n      \
    \    max_negative = lst[i];\n        }\n      }\n    }\n    else{\n      if(min_positive\
    \ === undefined){\n        min_positive = lst[i];\n      }\n      else{\n    \
    \    if(min_positive > lst[i]){\n          min_positive = lst[i];\n        }\n\
    \      }\n    }\n  }\n  return [max_negative, min_positive];\n}\n", "    var largest\
    \ = undefined;\n    var smallest = undefined;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n   \
    \             largest = lst[i];\n            }\n            else{\n          \
    \      largest = Math.max(largest, lst[i]);\n            }\n        }\n      \
    \  else if(lst[i] > 0){\n            if(smallest === undefined){\n           \
    \     smallest = lst[i];\n            }\n            else{\n                smallest\
    \ = Math.min(smallest, lst[i]);\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n         \
    \   if(largest === undefined){\n                largest = lst[i];\n          \
    \  }\n            else{\n                largest = Math.max(largest, lst[i]);\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(smallest\
    \ === undefined){\n                smallest = lst[i];\n            }\n       \
    \     else{\n                smallest = Math.min(smallest, lst[i]);\n        \
    \    }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var largest\
    \ = undefined;\n    var smallest = undefined;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n   \
    \             largest = lst[i];\n            }\n            else{\n          \
    \      largest = Math.max(largest, lst[i]);\n            }\n        }\n      \
    \  else if(lst[i] > 0){\n            if(smallest === undefined){\n           \
    \     smallest = lst[i];\n            }\n            else{\n                smallest\
    \ = Math.min(smallest, lst[i]);\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var max_negative = Number.MIN_VALUE;\n    var min_positive\
    \ = Number.MAX_VALUE;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(max_negative < lst[i]){\n                max_negative\
    \ = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n        \
    \    if(min_positive > lst[i]){\n                min_positive = lst[i];\n    \
    \        }\n        }\n    }\n    return [max_negative, min_positive];\n}\n",
  "    var max_negative = undefined;\n    var min_positive = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(max_negative\
    \ === undefined){\n                max_negative = lst[i];\n            }else{\n\
    \                if(lst[i] > max_negative){\n                    max_negative\
    \ = lst[i];\n                }\n            }\n        }else{\n            if(min_positive\
    \ === undefined){\n                min_positive = lst[i];\n            }else{\n\
    \                if(lst[i] < min_positive){\n                    min_positive\
    \ = lst[i];\n                }\n            }\n        }\n    }\n    return [max_negative,\
    \ min_positive];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      if (largest\
    \ === undefined){\n        largest = lst[i];\n      }\n      else if (largest\
    \ < lst[i]){\n        largest = lst[i];\n      }\n    }\n    else if (lst[i] >\
    \ 0){\n      if (smallest === undefined){\n        smallest = lst[i];\n      }\n\
    \      else if (smallest > lst[i]){\n        smallest = lst[i];\n      }\n   \
    \ }\n  }\n  return largest === undefined ? null : largest;\n}\n", "    var largest\
    \ = Number.MIN_VALUE;\n    var smallest = Number.MAX_VALUE;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < smallest){\n            smallest\
    \ = lst[i];\n        }\n        if(lst[i] > largest){\n            largest = lst[i];\n\
    \        }\n    }\n    return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  \
    \  let largest = undefined;\n    let smallest = undefined;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(largest === undefined || largest < lst[i]){\n\
    \            largest = lst[i];\n        }\n        if(smallest === undefined ||\
    \ smallest > lst[i]){\n            smallest = lst[i];\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] <\
    \ 0){\n            if(largest === undefined){\n                largest = lst[i];\n\
    \            }else{\n                smallest = lst[i];\n            }\n     \
    \   }else if(lst[i] > 0){\n            if(smallest === undefined){\n         \
    \       smallest = lst[i];\n            }else{\n                largest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n        largest\
    \ = lst[i];\n      }\n      else if(largest < lst[i]){\n        largest = lst[i];\n\
    \      }\n    }\n    else{\n      if(smallest === undefined){\n        smallest\
    \ = lst[i];\n      }\n      else if(smallest > lst[i]){\n        smallest = lst[i];\n\
    \      }\n    }\n  }\n  return [largest, smallest];\n}\n", "    var largest =\
    \ undefined;\n    var smallest = undefined;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(largest === undefined){\n   \
    \             largest = lst[i];\n            }\n            else{\n          \
    \      largest = Math.max(largest, lst[i]);\n            }\n        }\n      \
    \  else if(lst[i] > 0){\n            if(smallest === undefined){\n           \
    \     smallest = lst[i];\n            }\n            else{\n                smallest\
    \ = Math.min(smallest, lst[i]);\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      if (largest\
    \ === undefined){\n        largest = lst[i];\n      }\n      else{\n        largest\
    \ = Math.max(largest, lst[i]);\n      }\n    }\n    else{\n      if (smallest\
    \ === undefined){\n        smallest = lst[i];\n      }\n      else{\n        smallest\
    \ = Math.min(smallest, lst[i]);\n      }\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.POSITIVE_INFINITY;\n  var smallest = Number.NEGATIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = undefined;\n  var\
    \ smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < 0){\n      if(largest === undefined){\n        largest = lst[i];\n      }\n\
    \      else if(largest < lst[i]){\n        largest = lst[i];\n      }\n    }\n\
    \    else{\n      if(smallest === undefined){\n        smallest = lst[i];\n  \
    \    }\n      else if(smallest > lst[i]){\n        smallest = lst[i];\n      }\n\
    \    }\n  }\n  return largest === undefined ? smallest : largest;\n}\n", "  if(lst.includes(null)){\n\
    \    return null;\n  }\n  if(lst.includes(-Infinity)){\n    return -Infinity;\n\
    \  }\n  if(lst.includes(Infinity)){\n    return Infinity;\n  }\n  let largest\
    \ = Infinity;\n  let smallest = Infinity;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \   var largest = undefined;\n    var smallest = undefined;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] < 0){\n            if(!largest || lst[i] > largest){\n    \
    \            largest = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(!smallest || lst[i] < smallest){\n                smallest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(largest\
    \ === undefined){\n                largest = lst[i];\n            }\n        \
    \    else{\n                largest = Math.max(largest, lst[i]);\n           \
    \ }\n        }\n        else if(lst[i] > 0){\n            if(smallest === undefined){\n\
    \                smallest = lst[i];\n            }\n            else{\n      \
    \          smallest = Math.min(smallest, lst[i]);\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n         \
    \   if(largest === undefined){\n                largest = lst[i];\n          \
    \  }else{\n                largest = Math.max(largest, lst[i]);\n            }\n\
    \        }else{\n            if(smallest === undefined){\n                smallest\
    \ = lst[i];\n            }else{\n                smallest = Math.min(smallest,\
    \ lst[i]);\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let largest = undefined;\n    let smallest = undefined;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(largest === undefined || largest <\
    \ lst[i]){\n            largest = lst[i];\n        }\n        if(smallest ===\
    \ undefined || smallest > lst[i]){\n            smallest = lst[i];\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var largest = Number.POSITIVE_INFINITY;\n\
    \    var smallest = Number.NEGATIVE_INFINITY;\n    var i;\n    for(i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] > largest){\n            largest = lst[i];\n\
    \        }\n        if(lst[i] < smallest){\n            smallest = lst[i];\n \
    \       }\n    }\n    if(largest == Number.POSITIVE_INFINITY && smallest == Number.NEGATIVE_INFINITY){\n\
    \        return null;\n    }\n    return [largest, smallest];\n}\n", "  var largest\
    \ = undefined;\n  var smallest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n        largest\
    \ = lst[i];\n      }else{\n        if(largest < lst[i]){\n          largest =\
    \ lst[i];\n        }\n      }\n    }else{\n      if(smallest === undefined){\n\
    \        smallest = lst[i];\n      }else{\n        if(smallest > lst[i]){\n  \
    \        smallest = lst[i];\n        }\n      }\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n         \
    \   if(largest === undefined){\n                largest = lst[i];\n          \
    \  }else{\n                largest = Math.max(largest, lst[i]);\n            }\n\
    \        }else{\n            if(smallest === undefined){\n                smallest\
    \ = lst[i];\n            }else{\n                smallest = Math.min(smallest,\
    \ lst[i]);\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            smallest\
    \ = lst[i];\n        }\n        else if(largest === undefined){\n            largest\
    \ = lst[i];\n        }\n        else if(lst[i] > largest){\n            largest\
    \ = lst[i];\n        }\n        else if(lst[i] < smallest){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "  let largest\
    \ = Number.MAX_SAFE_INTEGER;\n  let smallest = Number.MIN_SAFE_INTEGER;\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "    var max_negative = Number.NEGATIVE_INFINITY;\n\
    \    var min_positive = Number.POSITIVE_INFINITY;\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(max_negative < lst[i]){\n   \
    \             max_negative = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(min_positive > lst[i]){\n                min_positive\
    \ = lst[i];\n            }\n        }\n    }\n    return [max_negative, min_positive];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }\n      else{\n        if(largest < lst[i]){\n\
    \          largest = lst[i];\n        }\n      }\n    }\n    else{\n      if(smallest\
    \ === undefined){\n        smallest = lst[i];\n      }\n      else{\n        if(smallest\
    \ > lst[i]){\n          smallest = lst[i];\n        }\n      }\n    }\n  }\n \
    \ return [largest, smallest];\n}\n", "  var largest = undefined;\n  var smallest\
    \ = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined){\n\
    \      largest = lst[i];\n      smallest = lst[i];\n    }\n    if(largest < lst[i]){\n\
    \      largest = lst[i];\n    }\n    if(smallest > lst[i]){\n      smallest =\
    \ lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "    let max = 0;\n\
    \    let min = 0;\n    for (let i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ > max){\n            max = lst[i];\n        } else if (lst[i] < min){\n    \
    \        min = lst[i];\n        }\n    }\n    if (max > min){\n        return\
    \ [max, min];\n    } else {\n        return [None, None];\n    }\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(largest === undefined){\n      largest = lst[i];\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n    var smallest\
    \ = Number.POSITIVE_INFINITY;\n    for(var i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] < smallest){\n            smallest = lst[i];\n        }\n     \
    \   if(lst[i] > largest){\n            largest = lst[i];\n        }\n    }\n \
    \   return [largest, smallest];\n}\n", "    var largest = undefined;\n    var\
    \ smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(!largest || lst[i] > largest){\n                largest\
    \ = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n        \
    \    if(!smallest || lst[i] < smallest){\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ let max_negative = Number.MIN_SAFE_INTEGER;\n    let min_positive = Number.MAX_SAFE_INTEGER;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n         \
    \   max_negative = Math.max(max_negative, lst[i]);\n        }\n        else if(lst[i]\
    \ > 0){\n            min_positive = Math.min(min_positive, lst[i]);\n        }\n\
    \    }\n    return [max_negative, min_positive];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(largest === undefined){\n            largest = lst[i];\n            smallest\
    \ = lst[i];\n        }\n        else if(largest < lst[i]){\n            largest\
    \ = lst[i];\n        }\n        else if(largest > lst[i]){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "  var largest\
    \ = Number.MIN_SAFE_INTEGER;\n  var smallest = Number.MAX_SAFE_INTEGER;\n  for(var\
    \ i=0; i<lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(largest\
    \ === undefined){\n        largest = lst[i];\n      }else{\n        largest =\
    \ Math.max(largest, lst[i]);\n      }\n    }else if(lst[i] > 0){\n      if(smallest\
    \ === undefined){\n        smallest = lst[i];\n      }else{\n        smallest\
    \ = Math.min(smallest, lst[i]);\n      }\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.MIN_SAFE_INTEGER;\n  var smallest = Number.MAX_SAFE_INTEGER;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "    var largest = Number.MIN_VALUE;\n\
    \    var smallest = Number.MAX_VALUE;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n        }\n \
    \       if(lst[i] > largest){\n            largest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var i\
    \ = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || largest\
    \ < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return largest\
    \ === undefined ? smallest : largest;\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i=0; i<lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(largest === undefined){\n         \
    \   largest = lst[i];\n            smallest = lst[i];\n        }\n        else\
    \ if(largest < lst[i]){\n            largest = lst[i];\n        }\n        else\
    \ if(largest > lst[i]){\n            smallest = lst[i];\n        }\n    }\n  \
    \  return [largest, smallest];\n}\n", "  if(lst.includes(null)){\n    return [null,\
    \ null];\n  }\n  var smallest = Number.MAX_SAFE_INTEGER;\n  var largest = Number.MIN_SAFE_INTEGER;\n\
    \  for(var i=0;i<lst.length;i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [smallest, largest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return largest == Number.POSITIVE_INFINITY\
    \ ? null : [largest, smallest];\n}\n", "    var largest = undefined;\n    var\
    \ smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(largest\
    \ === undefined || lst[i] > largest){\n            largest = lst[i];\n       \
    \ }\n        if(smallest === undefined || lst[i] < smallest){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "  var largest\
    \ = Number.POSITIVE_INFINITY;\n  var smallest = Number.NEGATIVE_INFINITY;\n  for\
    \ (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "    var largest = undefined;\n   \
    \ var smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n      \
    \  if(lst[i] < 0){\n            if(largest === undefined){\n                largest\
    \ = lst[i];\n            }\n            else{\n                largest = Math.max(largest,\
    \ lst[i]);\n            }\n        }\n        else if(lst[i] > 0){\n         \
    \   if(smallest === undefined){\n                smallest = lst[i];\n        \
    \    }\n            else{\n                smallest = Math.min(smallest, lst[i]);\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n        largest\
    \ = lst[i];\n      }\n      else{\n        if(largest < lst[i]){\n          largest\
    \ = lst[i];\n        }\n      }\n    }\n    else{\n      if(smallest === undefined){\n\
    \        smallest = lst[i];\n      }\n      else{\n        if(smallest > lst[i]){\n\
    \          smallest = lst[i];\n        }\n      }\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "    var max_negative = Number.NEGATIVE_INFINITY;\n    var\
    \ min_positive = Number.POSITIVE_INFINITY;\n    var max_negative_index = 0;\n\
    \    var min_positive_index = 0;\n    for(var i=0; i<lst.length; i++){\n     \
    \   if(lst[i] < 0){\n            if(max_negative < lst[i]){\n                max_negative\
    \ = lst[i];\n                max_negative_index = i;\n            }\n        }\n\
    \        else if(lst[i] > 0){\n            if(min_positive > lst[i]){\n      \
    \          min_positive = lst[i];\n                min_positive_index = i;\n \
    \           }\n        }\n    }\n    if(max_negative == Number.NEGATIVE_INFINITY\
    \ && min_positive == Number.POSITIVE_INFINITY){\n        return null;\n    }\n\
    \    return [max_negative_index, min_positive_index];\n}\n", "  var largest =\
    \ undefined;\n  var smallest = undefined;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] < 0){\n      if (largest === undefined){\n        largest = lst[i];\n\
    \      }\n      else {\n        largest = Math.max(largest, lst[i]);\n      }\n\
    \    }\n    else if (lst[i] > 0){\n      if (smallest === undefined){\n      \
    \  smallest = lst[i];\n      }\n      else {\n        smallest = Math.min(smallest,\
    \ lst[i]);\n      }\n    }\n  }\n  return [largest, smallest];\n}\n", "  var largest\
    \ = undefined;\n  var smallest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n        largest\
    \ = lst[i];\n      }\n      else if(largest < lst[i]){\n        largest = lst[i];\n\
    \      }\n    }\n    else{\n      if(smallest === undefined){\n        smallest\
    \ = lst[i];\n      }\n      else if(smallest > lst[i]){\n        smallest = lst[i];\n\
    \      }\n    }\n  }\n  return [largest, smallest];\n}\n", "    var largest =\
    \ Number.POSITIVE_INFINITY;\n    var smallest = Number.NEGATIVE_INFINITY;\n  \
    \  for(var i = 0; i < lst.length; i++){\n        if(lst[i] > largest){\n     \
    \       largest = lst[i];\n        }\n        if(lst[i] < smallest){\n       \
    \     smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "  var largest = Number.POSITIVE_INFINITY;\n  var smallest = Number.NEGATIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n\
    \    var smallest = Number.POSITIVE_INFINITY;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > largest){\n            largest = lst[i];\n      \
    \  }\n        if(lst[i] < smallest){\n            smallest = lst[i];\n       \
    \ }\n    }\n    return [largest, smallest];\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n\
    \    var smallest = Number.POSITIVE_INFINITY;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \    }\n        if(lst[i] > largest){\n            largest = lst[i];\n       \
    \ }\n    }\n    return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(!largest\
    \ || largest < lst[i]){\n                largest = lst[i];\n            }\n  \
    \      }\n        else if(lst[i] > 0){\n            if(!smallest || smallest >\
    \ lst[i]){\n                smallest = lst[i];\n            }\n        }\n   \
    \ }\n    return [largest, smallest];\n}\n", "  var largest = undefined;\n  var\
    \ smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < 0){\n      if(largest === undefined){\n        largest = lst[i];\n      }\n\
    \      else{\n        largest = Math.max(largest, lst[i]);\n      }\n    }\n \
    \   else{\n      if(smallest === undefined){\n        smallest = lst[i];\n   \
    \   }\n      else{\n        smallest = Math.min(smallest, lst[i]);\n      }\n\
    \    }\n  }\n  return [largest, smallest];\n}\n", "  var max_negative = Number.NEGATIVE_INFINITY;\n\
    \  var min_positive = Number.POSITIVE_INFINITY;\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(max_negative < lst[i]){\n        max_negative\
    \ = lst[i];\n      }\n    }\n    else{\n      if(min_positive > lst[i]){\n   \
    \     min_positive = lst[i];\n      }\n    }\n  }\n  return [max_negative, min_positive];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(largest === undefined){\n         \
    \   largest = lst[i];\n            smallest = lst[i];\n        }\n        else\
    \ if(largest < lst[i]){\n            largest = lst[i];\n        }\n        else\
    \ if(largest > lst[i]){\n            smallest = lst[i];\n        }\n    }\n  \
    \  return [largest, smallest];\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n\
    \    var smallest = Number.POSITIVE_INFINITY;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \    }\n        if(lst[i] > largest){\n            largest = lst[i];\n       \
    \ }\n    }\n    return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i] < 0){\n            if(largest ===\
    \ undefined){\n                largest = lst[i];\n            }\n            else{\n\
    \                largest = Math.max(largest, lst[i]);\n            }\n       \
    \ }\n        else if(lst[i] > 0){\n            if(smallest === undefined){\n \
    \               smallest = lst[i];\n            }\n            else{\n       \
    \         smallest = Math.min(smallest, lst[i]);\n            }\n        }\n \
    \   }\n    return [largest, smallest];\n}\n", "  let largest = Number.MIN_SAFE_INTEGER;\n\
    \  let smallest = Number.MAX_SAFE_INTEGER;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = Number.POSITIVE_INFINITY;\n    var smallest = Number.NEGATIVE_INFINITY;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > largest){\n   \
    \         largest = lst[i];\n        }\n        if(lst[i] < smallest){\n     \
    \       smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(largest === undefined){\n\
    \        largest = lst[i];\n      }\n      else{\n        if(largest < lst[i]){\n\
    \          largest = lst[i];\n        }\n      }\n    }\n    else{\n      if(smallest\
    \ === undefined){\n        smallest = lst[i];\n      }\n      else{\n        if(smallest\
    \ > lst[i]){\n          smallest = lst[i];\n        }\n      }\n    }\n  }\n \
    \ return [largest, smallest];\n}\n", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] <\
    \ 0){\n            largest = lst[i];\n        }\n        else if(lst[i] > 0){\n\
    \            smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let largest = undefined;\n    let smallest = undefined;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(largest === undefined || largest <\
    \ lst[i]){\n            largest = lst[i];\n        }\n        if(smallest ===\
    \ undefined || smallest > lst[i]){\n            smallest = lst[i];\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "  var largest = undefined;\n \
    \ var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < 0){\n      if(largest === undefined){\n        largest = lst[i];\n      }\n\
    \      else{\n        smallest = lst[i];\n      }\n    }\n    else if(lst[i] >\
    \ 0){\n      if(smallest === undefined){\n        smallest = lst[i];\n      }\n\
    \      else{\n        largest = lst[i];\n      }\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i] < 0){\n            if(largest\
    \ === undefined){\n                largest = lst[i];\n            }\n        \
    \    else{\n                smallest = lst[i];\n            }\n        }\n   \
    \     else if(lst[i] > 0){\n            if(smallest === undefined){\n        \
    \        smallest = lst[i];\n            }\n            else{\n              \
    \  largest = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(largest === undefined){\n         \
    \   largest = lst[i];\n        }\n        else if(largest < lst[i]){\n       \
    \     largest = lst[i];\n        }\n        else if(largest > lst[i]){\n     \
    \       smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = Number.MIN_VALUE;\n    var smallest = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n        if(lst[i] > largest){\n    \
    \        largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "  if(lst.includes(null)){\n    return [null,null];\n  }\n  let [smallest,largest]\
    \ = lst.reduce(([smallest,largest],x)=>{\n    if(x<smallest){\n      return [x,smallest];\n\
    \    }\n    if(x>largest){\n      return [largest,x];\n    }\n    return [x];\n\
    \  },[Infinity,0]);\n  return [smallest,largest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < 0){\n            if(largest === undefined){\n              \
    \  largest = lst[i];\n            }else{\n                largest = Math.max(largest,\
    \ lst[i]);\n            }\n        }else if(lst[i] > 0){\n            if(smallest\
    \ === undefined){\n                smallest = lst[i];\n            }else{\n  \
    \              smallest = Math.min(smallest, lst[i]);\n            }\n       \
    \ }else{\n            return undefined;\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var largest = Number.MIN_VALUE;\n    var smallest = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n        if(lst[i] > largest){\n    \
    \        largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

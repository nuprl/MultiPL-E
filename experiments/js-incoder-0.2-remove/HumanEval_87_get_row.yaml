name: HumanEval_87_get_row
language: js
prompt: "//You are given a 2 dimensional data, as a nested lists,\n// which is similar\
  \ to matrix, however, unlike matrices,\n// each row may contain a different number\
  \ of columns.\n// Given lst, and integer x, find integers x in the list,\n// and\
  \ return list of tuples, [(x1, y1), (x2, y2) ...] such that\n// each tuple is a\
  \ coordinate - (row, columns), starting with 0.\n// Sort coordinates initially by\
  \ rows in ascending order.\n// Also, sort coordinates of the row by columns in descending\
  \ order.\n// Examples:\nfunction get_row(lst, x){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = get_row;\n  assert.deepEqual(candidate([[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1,\
  \ 6], [1, 2, 3, 4, 5, 1]], 1),[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]);\n  assert.deepEqual(candidate([[1,\
  \ 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1,\
  \ 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]], 2),[[0, 1], [1, 1], [2, 1], [3, 1], [4, 1],\
  \ [5, 1]]);\n  assert.deepEqual(candidate([[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6],\
  \ [1, 1, 3, 4, 5, 6], [1, 2, 1, 4, 5, 6], [1, 2, 3, 1, 5, 6], [1, 2, 3, 4, 1, 6],\
  \ [1, 2, 3, 4, 5, 1]], 1),[[0, 0], [1, 0], [2, 1], [2, 0], [3, 2], [3, 0], [4, 3],\
  \ [4, 0], [5, 4], [5, 0], [6, 5], [6, 0]]);\n  assert.deepEqual(candidate([], 1),[]);\n\
  \  assert.deepEqual(candidate([[1]], 2),[]);\n  assert.deepEqual(candidate([[],\
  \ [1], [1, 2, 3]], 3),[[2, 2]]);\n}\n\ntest();"
completions: ["    var result = [];\n    for(var i=0; i<lst.length; i++){\n      \
    \  if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n   \
    \     }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push(lst[i]);\n\
    \        }\n    }\n    result.push(row);\n    for(var i = 0; i < row.length; i++){\n\
    \        var row = [];\n        for(var j = 0; j < row.length; j++){\n       \
    \     row.push(row[j][1]);\n        }\n        result.push(row);\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var res\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           res.push([i, lst[i][1]]);\n        }\n    }\n    res.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    res.sort(function(a, b){\n  \
    \      return b[1] - a[1];\n    });\n    return res;\n}\n", "    var result =\
    \ [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n   \
    \         result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "    let row\
    \ = []\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            row.push([lst[i][1], lst[i][2]])\n        }\n    }\n    row.sort((a,\
    \ b) => a[0] - b[0])\n    row.sort((a, b) => b[1] - a[1])\n    return row\n}\n",
  "    var result = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    var row = [];\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i][0] == x){\n            row.push(lst[i]);\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0; i < row.length; i++){\n        row[i].sort(function(a,\
    \ b){\n            return b[0] - a[0];\n        });\n        row[i].sort(function(a,\
    \ b){\n            return b[1] - a[1];\n        });\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0].length - b[0].length;\n    });\n    return result;\n\
    }\n", "    let row = []\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            row.push([lst[i][1], lst[i][2]])\n        }\n    }\n   \
    \ row.sort((a,b) => a[0] - b[0])\n    row.sort((a,b) => b[1] - a[1])\n    return\
    \ row\n}\n", "    var result = [];\n    for(var i=0; i<lst.length; i++){\n   \
    \     if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    return result;\n}\n", "    var res = [];\n    var row = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            row.push(lst[i]);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    row.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    for(var i=0; i<row.length; i++){\n        res.push([row[i][0], row[i][1]]);\n\
    \    }\n    return res;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "    let row = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push([i, lst[i][1]]);\n\
    \        }\n    }\n    row.sort((a,b) => a[0] - b[0]);\n    row.sort((a,b) =>\
    \ b[1] - a[1]);\n    return row;\n}\n", "    let row = []\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1],\
    \ lst[i][2]])\n        }\n    }\n    row.sort((a,b) => b[0] - a[0])\n    row.sort((a,b)\
    \ => b[1] - a[1])\n    return row\n}\n", "    var result = [];\n    for(var i\
    \ = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    let row = [];\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    row.sort((a,b) => b[0] - a[0]);\n    row.sort((a,b)\
    \ => b[1] - a[1]);\n    return row;\n}\n", "    var result = [];\n    var row\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            row.push(lst[i]);\n        }\n    }\n    result.push(row);\n    for(var\
    \ i = 0; i < row.length; i++){\n        var row = [];\n        for(var j = 0;\
    \ j < row.length; j++){\n            row.push(row[j]);\n        }\n        result.push(row);\n\
    \    }\n    result.sort(function(a, b){\n        if(a[0] > b[0]){\n          \
    \  return 1;\n        }\n        if(a[0] < b[0]){\n            return -1;\n  \
    \      }\n        return 0;\n    });\n    result.sort(function(a, b){\n      \
    \  if(a[1] > b[1]){\n            return 1;\n        }\n        if(a[1] < b[1]){\n\
    \            return -1;\n        }\n        return 0;\n    });\n    return result;\n\
    }\n", "    var result = [];\n    var row = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push(lst[i]);\n        }\n\
    \    }\n    result.push(row);\n    for(var i=0; i<row.length; i++){\n        row.sort(function(a,\
    \ b){\n            return b[1] - a[1];\n        });\n        row.sort(function(a,\
    \ b){\n            return a[0] - b[0];\n        });\n        result.push(row);\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = [];\n    var col\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           row.push(lst[i]);\n            col.push(lst[i][1]);\n        }\n \
    \   }\n    result.push(row);\n    result.push(col);\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    return result;\n}\n", "    let row\
    \ = [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    row.sort((a,\
    \ b) => b[0] - a[0]);\n    row.sort((a, b) => b[1] - a[1]);\n    return row;\n\
    }\n", "    var result = [];\n    var row = [];\n    var col = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n        else if(lst[i][1] < x){\n            row.push(lst[i]);\n\
    \        }\n        else{\n            col.push(lst[i]);\n        }\n    }\n \
    \   result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    row.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    col.sort(function(a, b){\n  \
    \      return b[0] - a[0];\n    });\n    for(var i=0; i<result.length; i++){\n\
    \        result.push([row[i][0], col[i][0]]);\n    }\n    return result;\n}\n",
  "  var result = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i][0] == x){\n\
    \      result.push([lst[i][0], lst[i][1]]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  return result;\n}\n", "  var result = [];\n  for(var\
    \ i=0; i<lst.length; i++){\n    if(lst[i][0] == x){\n      result.push([lst[i][1],\
    \ lst[i][2]]);\n    }\n  }\n  result.sort(function(a, b){\n    return a[0] - b[0];\n\
    \  });\n  result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  return\
    \ result;\n}\n", "    var result = [];\n    var row = [];\n    var column = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n     \
    \       result.push([lst[i][0], lst[i][1]]);\n        }\n        else if(lst[i][1]\
    \ == x){\n            result.push([lst[i][1], lst[i][0]]);\n        }\n      \
    \  else if(lst[i][0] > x){\n            row.push(lst[i][0]);\n            column.push(lst[i][1]);\n\
    \        }\n        else if(lst[i][1] > x){\n            row.push(lst[i][1]);\n\
    \            column.push(lst[i][0]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n     \
    \   return b[0] - a[0];\n    });\n    result.sort(function(a, b){\n        return\
    \ b[1] - a[1];\n    });\n    for(var i = 0; i < result.length; i++){\n       \
    \ result.push([row[i], column[i]]);\n    }\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] ==\
    \ x){\n            result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n  \
    \  result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] ==\
    \ x){\n            result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n  \
    \  result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    return result;\n}\n", "  var\
    \ result = [];\n  var row = [];\n  var row_index = 0;\n  var col_index = 0;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i] == x){\n      result.push([row_index,\
    \ col_index]);\n      row_index++;\n      col_index = 0;\n    }\n    else{\n \
    \     col_index++;\n    }\n  }\n  result.sort(function(a, b){\n    return b[0]\
    \ - a[0];\n  });\n  result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n\
    \  return result;\n}\n", "    var res = [];\n    for(var i=0; i<lst.length; i++){\n\
    \        if(lst[i][0] == x){\n            res.push([i, lst[i][1]]);\n        }\n\
    \    }\n    res.sort(function(a, b){\n        return b[1] - a[1];\n    });\n \
    \   res.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    return\
    \ res;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length; i++){\n  \
    \      if(lst[i][0] == x){\n            result.push([lst[i][1], lst[i][2]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return result;\n}\n", "    var row = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1], lst[i][2]]);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    row.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return row;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return result;\n}\n", "    let row = [];\n    let row_index = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] == x){\n            row.push([i,\
    \ lst[i]]);\n            row_index++;\n        }\n    }\n    row.sort((a,b) =>\
    \ b[1] - a[1]);\n    row.sort((a,b) => a[0] - b[0]);\n    return row;\n}\n", " \
    \   var result = [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n\
    \        if(lst[i][0] == x){\n            row.push(lst[i]);\n        }\n    }\n\
    \    result.push(row);\n    for(var i=0; i<row.length; i++){\n        var row\
    \ = [];\n        for(var j=0; j<row.length; j++){\n            row.push([row[j][1],\
    \ row[j][0]]);\n        }\n        result.push(row);\n    }\n    result.sort(function(a,\
    \ b){\n        var aRow = a;\n        var bRow = b;\n        if(aRow[0] < bRow[0]){\n\
    \            return -1;\n        }\n        if(aRow[0] > bRow[0]){\n         \
    \   return 1;\n        }\n        if(aRow[1] < bRow[1]){\n            return -1;\n\
    \        }\n        if(aRow[1] > bRow[1]){\n            return 1;\n        }\n\
    \        return 0;\n    });\n    result.sort(function(a, b){\n        var aRow\
    \ = a;\n        var bRow = b;\n        if(aRow[0] < bRow[0]){\n            return\
    \ -1;\n        }\n        if(aRow[0] > bRow[0]){\n            return 1;\n    \
    \    }\n        if(aRow[1] < bRow[1]){\n            return -1;\n        }\n  \
    \      if(aRow[1] > bRow[1]){\n            return 1;\n        }\n        return\
    \ 0;\n    });\n    return result;\n}\n", "  var result = [];\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i][0] == x){\n      result.push([i, lst[i][1]]);\n    }\n\
    \  }\n  result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  result.sort(function(a,\
    \ b){\n    return a[0] - b[0];\n  });\n  return result;\n}\n", "    let row =\
    \ [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    row.sort((a,b)\
    \ => b[0] - a[0]);\n    row.sort((a,b) => b[1] - a[1]);\n    return row;\n}\n",
  "    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] ==\
    \ x){\n            row.push([lst[i][0], lst[i][1]]);\n        }\n    }\n    return\
    \ row;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length; i++){\n  \
    \      if(lst[i][0] == x){\n            result.push([lst[i][1], lst[i][2]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            row.push(lst[i]);\n\
    \        }\n    }\n    result.push(row);\n    for(var i=0; i<row.length; i++){\n\
    \        row[i].sort(function(a, b){\n            return b[0] - a[0];\n      \
    \  });\n        row[i].sort(function(a, b){\n            return b[1] - a[1];\n\
    \        });\n    }\n    result.sort(function(a, b){\n        return b[0][0] -\
    \ a[0][0];\n    });\n    result.sort(function(a, b){\n        return b[0][1] -\
    \ a[0][1];\n    });\n    return result;\n}\n", "    var row = [];\n    var coords\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           row.push(lst[i]);\n            coords.push(lst[i]);\n        }\n \
    \   }\n    coords.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    coords.reverse();\n    coords.sort(function(a, b){\n        return a[0] -\
    \ b[0];\n    });\n    return row;\n}\n", "    var result = [];\n    for(var i\
    \ = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "    let row = []\n    for(let i\
    \ = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([i,\
    \ lst[i][1]])\n        }\n    }\n    row.sort((a,b) => a[0] - b[0])\n    row.sort((a,b)\
    \ => a[1] - b[1])\n    return row\n}\n", "    let row = [];\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i][0] === x){\n            row.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    row.sort((a, b) => b[0] - a[0]);\n    row.sort((a,\
    \ b) => b[1] - a[1]);\n    return row;\n}\n", "    var result = [];\n    var row\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           result.push(row);\n            row = [];\n        }\n        row.push(lst[i]);\n\
    \    }\n    result.push(row);\n    result.sort(function(a, b){\n        return\
    \ a[0] > b[0]\n    });\n    result.sort(function(a, b){\n        return a[1] <\
    \ b[1]\n    });\n    return result;\n}\n", "    let row = [];\n    for(let i =\
    \ 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    row.sort((a, b) => a[0] - b[0]);\n    row.sort((a,\
    \ b) => b[1] - a[1]);\n    return row;\n}\n", "    let row = [];\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    row.sort((a, b) => b[0] - a[0]);\n    row.sort((a,\
    \ b) => b[1] - a[1]);\n    return row;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    let row = []\n    for(let i\
    \ = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1],\
    \ lst[i][2]])\n        }\n    }\n    return row\n}\n", "    var result = [];\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n         \
    \   result.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var row\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    row.sort(function(a, b){\n  \
    \      return b[1] - a[1];\n    });\n    return row;\n}\n", "    let row = [];\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n     \
    \       row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    row.sort((a,\
    \ b) => a[0] - b[0]);\n    row.sort((a, b) => b[1] - a[1]);\n    return row;\n\
    }\n", "    let row = [];\n    let row_index = 0;\n    let col_index = 0;\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n        \
    \    row.push([i, lst[i][1]]);\n            row_index++;\n        }\n    }\n \
    \   row.sort((a, b) => b[1] - a[1]);\n    row.sort((a, b) => b[0] - a[0]);\n \
    \   for(let i = 0; i < row.length; i++){\n        for(let j = 0; j < row[i].length;\
    \ j++){\n            lst[row_index][col_index] = [i, row[i][j]];\n           \
    \ col_index++;\n        }\n    }\n    return lst;\n}\n", "    var result = [];\n\
    \    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            result.push(row);\n            row = [];\n        }\n  \
    \      row.push(lst[i]);\n    }\n    result.push(row);\n    result.sort(function(a,\
    \ b){\n        return a[0] > b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] < b[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    return result;\n}\n", "    var row\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    row.sort(function(a, b){\n  \
    \      return a[1] - b[1];\n    });\n    return row;\n}\n", "    var res = [];\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n         \
    \   res.push([i, lst[i][1]]);\n        }\n    }\n    res.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    res.sort(function(a, b){\n        return\
    \ a[1] - b[1];\n    });\n    return res;\n}\n", "    var row = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    row.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    row.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    return row;\n}\n", "    var row = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1], lst[i][2]]);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return b[0] - a[0];\n\
    \    });\n    row.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return row;\n}\n", "    let row = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1], lst[i][2]]);\n\
    \        }\n    }\n    row.sort((a,b) => b[0] - a[0]);\n    row.sort((a,b) =>\
    \ b[1] - a[1]);\n    return row;\n}\n", "    let row = [];\n    let coords = [];\n\
    \    let row_index = 0;\n    let col_index = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] == x){\n            coords.push([row_index, col_index]);\n\
    \            row_index++;\n            col_index = 0;\n        }\n        else{\n\
    \            col_index++;\n        }\n    }\n    coords = coords.sort((a,b) =>\
    \ b[1] - a[1]);\n    coords = coords.sort((a,b) => a[0] - b[0]);\n    coords =\
    \ coords.reverse();\n    for(let i = 0; i < coords.length; i++){\n        row.push([coords[i][0],\
    \ coords[i][1]]);\n    }\n    return row;\n}\n", "    var row = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    row.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    row.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    return row;\n}\n", "    var row = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1], lst[i][2]]);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    row.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return row;\n}\n", "    var row = [];\n    for(var i=0; i<lst.length; i++){\n\
    \        if(lst[i][0] == x){\n            row.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    row.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return row;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "    let row = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] === x){\n            row.push([lst[i][1], lst[i][2]]);\n\
    \        }\n    }\n    row.sort((a, b) => a[0] - b[0]);\n    row.sort((a, b) =>\
    \ a[1] - b[1]);\n    return row;\n}\n", "    var result = [];\n    var row = [];\n\
    \    var column = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            result.push([i, lst[i][1]]);\n        }\n        else if(lst[i][1]\
    \ == x){\n            row.push(i);\n        }\n        else if(lst[i][1] > x){\n\
    \            column.push(lst[i][1]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    row.sort(function(a, b){\n  \
    \      return b - a;\n    });\n    column.sort(function(a, b){\n        return\
    \ b - a;\n    });\n    for(var i=0; i<result.length; i++){\n        result.push([row[i],\
    \ column[i]]);\n    }\n    return result;\n}\n", "    var result = [];\n    var\
    \ row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            result.push(row);\n            row = [];\n        }\n        row.push(lst[i]);\n\
    \    }\n    result.push(row);\n    result.sort(function(a, b){\n        return\
    \ a[0] > b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ < b[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([i,\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([i,\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([i,\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "  var row = [];\n  var row_index\
    \ = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i][0] == x){\n      row.push([i,\
    \ lst[i][1]]);\n      row_index = i;\n    }\n  }\n  row.sort(function(a, b){\n\
    \    return a[1] - b[1];\n  });\n  row.sort(function(a, b){\n    return b[0] -\
    \ a[0];\n  });\n  return row;\n}\n", "  var result = [];\n  var row = [];\n  var\
    \ col = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i][0] == x){\n   \
    \   row.push(lst[i][1]);\n      col.push(lst[i][2]);\n    }\n  }\n  result.push([row,\
    \ col]);\n  row.sort(function(a, b){return b-a});\n  col.sort(function(a, b){return\
    \ b-a});\n  for(var i=0; i<row.length; i++){\n    result.push([row[i], col[i]]);\n\
    \  }\n  return result;\n}\n", "    let row = []\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1], lst[i][2]])\n\
    \        }\n    }\n    row.sort((a,b) => b[0] - a[0])\n    row.sort((a,b) => b[1]\
    \ - a[1])\n    return row\n}\n", "  var result = [];\n  var row = [];\n  for(var\
    \ i=0; i<lst.length; i++){\n    if(lst[i][0] == x){\n      row.push(lst[i]);\n\
    \    }\n  }\n  result.push(row);\n  for(var i=0; i<row.length; i++){\n    row.sort(function(a,\
    \ b){\n      return b[0] - a[0];\n    });\n    row.sort(function(a, b){\n    \
    \  return b[1] - a[1];\n    });\n    result.push(row);\n  }\n  return result;\n\
    }\n", "    let row = [];\n    let row_index = 0;\n    let col_index = 0;\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] == x){\n           \
    \ row.push([row_index, col_index]);\n            row_index++;\n            col_index\
    \ = 0;\n        }\n        else{\n            col_index++;\n        }\n    }\n\
    \    row.push([row_index, col_index]);\n    return row;\n}\n", "    let row =\
    \ [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    return row.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n}\n", "    var result = [];\n   \
    \ var row = [];\n    var row_sorted = [];\n    for(var i=0; i<lst.length; i++){\n\
    \        if(lst[i][0] == x){\n            row.push(lst[i]);\n        }\n    }\n\
    \    row.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    for(var\
    \ i=0; i<row.length; i++){\n        row_sorted.push([row[i][0], row[i][1]]);\n\
    \    }\n    row_sorted.sort(function(a, b){\n        return a[1] - b[1];\n   \
    \ });\n    for(var i=0; i<row_sorted.length; i++){\n        result.push(row_sorted[i]);\n\
    \    }\n    return result;\n}\n", "  var res = [];\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i][0] == x){\n      res.push([lst[i][1], lst[i][2]]);\n  \
    \  }\n  }\n  res.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  res.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  return res;\n}\n", "    var result =\
    \ [];\n    var row = [];\n    var rows = [];\n    var col = [];\n    var cols\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           result.push(lst[i]);\n            rows.push(row);\n            cols.push(col);\n\
    \            row = [];\n            col = [];\n        }\n        row.push(lst[i]);\n\
    \        col.push(lst[i][1]);\n    }\n    result.sort(function(a, b){\n      \
    \  return a[0] - b[0];\n    });\n    rows.sort(function(a, b){\n        return\
    \ a[0]-b[0];\n    });\n    cols.sort(function(a, b){\n        return a[1]-b[1];\n\
    \    });\n    for(var i=0; i<rows.length; i++){\n        result.push(rows[i]);\n\
    \        result.push(cols[i]);\n    }\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           result.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           result.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    let row\
    \ = [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    row.sort((a,\
    \ b) => a[0] - b[0]);\n    row.sort((a, b) => b[1] - a[1]);\n    return row;\n\
    }\n", "    var result = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] ==\
    \ x){\n            result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n  \
    \  result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    var row = [];\n    var row_sorted = [];\n    var col_sorted\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           result.push([lst[i][0], lst[i][1]]);\n            row.push(lst[i][1]);\n\
    \            col_sorted.push(lst[i][1]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    result.forEach(function(val, i){\n\
    \        row_sorted.push(val[1]);\n    });\n    col_sorted.sort(function(a, b){\n\
    \        return b - a;\n    });\n    col_sorted.forEach(function(val, i){\n  \
    \      result.push([i, val]);\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    var row = 0;\n    var column = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([row, column]);\n\
    \            column++;\n        }\n        else if(lst[i][1] > x){\n         \
    \   column++;\n        }\n        else if(lst[i][1] < x){\n            row++;\n\
    \            column = 0;\n        }\n    }\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n     \
    \   return a[0] - b[0];\n    });\n    return result;\n}\n", "    var result =\
    \ [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            row.push(lst[i]);\n        }\n        else{\n          \
    \  result.push(row);\n            row = [];\n        }\n    }\n    result.push(row);\n\
    \    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            result.push([lst[i][1], lst[i][2]]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    var row = [];\n    var column = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push(lst[i]);\n        \
    \    column.push(lst[i][1]);\n        }\n    }\n    result.push(row);\n    result.push(column);\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n    \
    \    if(lst[i][0] === x){\n            result.push(row);\n            row = [];\n\
    \        }\n        row.push(lst[i]);\n    }\n    result.push(row);\n    result.sort(function(a,\
    \ b){\n        return a[0] > b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] < b[1];\n    });\n    return result;\n}\n", "    let row\
    \ = []\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            row.push([lst[i][1], lst[i][2]])\n        }\n    }\n    row.sort((a,b)\
    \ => b[0] - a[0])\n    row.sort((a,b) => b[1] - a[1])\n    return row\n}\n", " \
    \   var row = [];\n    var row_index = 0;\n    var col_index = 0;\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([i,\
    \ lst[i][1]]);\n            row_index++;\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    row.sort(function(a, b){\n  \
    \      return a[0] - b[0];\n    });\n    return row;\n}\n", "    var res = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n     \
    \       res.push([i, lst[i][1]]);\n        }\n    }\n    res.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    res.sort(function(a, b){\n  \
    \      return a[0] - b[0];\n    });\n    return res;\n}\n", "    let row = [];\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n     \
    \       row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    row.sort((a,b)\
    \ => b[0] - a[0]);\n    row.sort((a,b) => b[1] - a[1]);\n    return row;\n}\n",
  "    var result = [];\n    var row = 0;\n    while(row < lst.length){\n        var\
    \ found = false;\n        for(var col = 0; col < lst[row].length; col++){\n  \
    \          if(lst[row][col] === x){\n                result.push([row, col]);\n\
    \                found = true;\n                break;\n            }\n      \
    \  }\n        if(!found){\n            row++;\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    var row_length = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push(lst[i]);\n        \
    \    row_length++;\n        }\n        else{\n            if(row_length != 0){\n\
    \                result.push([row, row_length]);\n                row = [];\n\
    \                row_length = 0;\n            }\n        }\n    }\n    if(row_length\
    \ != 0){\n        result.push([row, row_length]);\n    }\n    result.sort(function(a,\
    \ b){\n        var a_row = a[0][0];\n        var b_row = b[0][0];\n        if(a_row\
    \ < b_row){\n            return -1;\n        }\n        if(a_row > b_row){\n \
    \           return 1;\n        }\n        return 0;\n    });\n    result.sort(function(a,\
    \ b){\n        var a_col = a[0][1];\n        var b_col = b[0][1];\n        if(a_col\
    \ < b_col){\n            return -1;\n        }\n        if(a_col > b_col){\n \
    \           return 1;\n        }\n        return 0;\n    });\n    return result;\n\
    }\n", "    var result = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] ==\
    \ x){\n            result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n  \
    \  result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "  var\
    \ res = [];\n  var row = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i][0]\
    \ == x){\n      res.push(row);\n      row = [];\n    }\n    row.push(lst[i]);\n\
    \  }\n  res.push(row);\n  return res;\n}\n", "    let row = [];\n    for(let i\
    \ = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([i,\
    \ lst[i][1]]);\n        }\n    }\n    row.sort((a,b) => a[0] - b[0]);\n    row.sort((a,b)\
    \ => b[1] - a[1]);\n    return row;\n}\n", "    let row = []\n    for(let i =\
    \ 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([i,\
    \ lst[i][1]])\n        }\n    }\n    row.sort((a,b) => b[1] - a[1])\n    row.sort((a,b)\
    \ => b[0] - a[0])\n    return row\n}\n", "    var result = [];\n    for(var i=0;\
    \ i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    let row = []\n    for(let i\
    \ = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1],\
    \ lst[i][2]])\n        }\n    }\n    row.sort((a,b) => b[0] - a[0])\n    row.sort((a,b)\
    \ => b[1] - a[1])\n    return row\n}\n", "    var result = [];\n    for(var i=0;\
    \ i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ b[0] - a[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "    let row = [];\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    row.sort((a, b) => b[0] - a[0]);\n    row.sort((a,\
    \ b) => b[1] - a[1]);\n    return row;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    let row = [];\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    row.sort((a,b) => a[0] - b[0]);\n    row.sort((a,b)\
    \ => a[1] - b[1]);\n    return row;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "  var res = [];\n  for(var i=0;\
    \ i<lst.length; i++){\n    if(lst[i][0] == x){\n      res.push([lst[i][0], lst[i][1]]);\n\
    \    }\n  }\n  res.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  res.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  return res;\n}\n", "    let row = []\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n     \
    \       row.push([lst[i][1], lst[i][2]])\n        }\n    }\n    row.sort((a,b)\
    \ => b[0] - a[0])\n    row.sort((a,b) => b[1] - a[1])\n    return row\n}\n", " \
    \   var result = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    var row = [];\n    var row_index = 0;\n    var col_index =\
    \ 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == x){\n   \
    \         result.push([row, col_index]);\n            row_index++;\n         \
    \   col_index = 0;\n        }\n        else{\n            col_index++;\n     \
    \   }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n \
    \   });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push(row);\n\
    \            row = [];\n        }\n        row.push(lst[i]);\n    }\n    result.push(row);\n\
    \    result.sort(function(a, b){\n        return a[0] > b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] > b[1];\n    });\n    return result;\n}\n", "    let\
    \ row = []\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] ==\
    \ x){\n            row.push([lst[i][1], lst[i][2]])\n        }\n    }\n    row.sort((a,\
    \ b) => b[0] - a[0])\n    row.sort((a, b) => b[1] - a[1])\n    return row\n}\n",
  "    var result = [];\n    var row = [];\n    var col = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push(lst[i][1]);\n     \
    \       col.push(lst[i][2]);\n        }\n    }\n    result.push([row, col]);\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    var row = 0;\n    var column = 0;\n    while(row < lst.length){\n\
    \        if(lst[row][column] == x){\n            result.push([row, column]);\n\
    \            row++;\n        }\n        else if(lst[row][column] > x){\n     \
    \       column++;\n        }\n        else{\n            row++;\n            column\
    \ = 0;\n        }\n    }\n    result.sort(function(a, b){\n        return b[0]\
    \ - a[0];\n    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    return result;\n}\n", "    let row = [];\n    for(let i = 0; i <\
    \ lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([i, lst[i][1]]);\n\
    \        }\n    }\n    row.sort((a, b) => a[0] - b[0]);\n    row.sort((a, b) =>\
    \ b[1] - a[1]);\n    return row;\n}\n", "    var result = [];\n    var row = [];\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n         \
    \   result.push(row);\n            row = [];\n        }\n        row.push(lst[i]);\n\
    \    }\n    result.push(row);\n    result.sort(function(a, b){\n        return\
    \ a[0] > b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ > b[1];\n    });\n    return result;\n}\n", "    var res = [];\n    var row\
    \ = [];\n    var col = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            row.push(lst[i]);\n            col.push(lst[i][1]);\n  \
    \      }\n    }\n    row.sort(function(a, b){\n        return b[1] - a[1];\n \
    \   });\n    col.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    for(var i=0; i<row.length; i++){\n        res.push([row[i][0], col[i]]);\n\
    \    }\n    return res;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][1], lst[i][2]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return b[0] - a[0];\n\
    \    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "  var row = [];\n  for(var i=0; i<lst.length; i++){\n\
    \    if(lst[i][0] == x){\n      row.push([lst[i][1], lst[i][2]]);\n    }\n  }\n\
    \  row.sort(function(a, b){\n    return b[0] - a[0];\n  });\n  row.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  return row;\n}\n", "    let row = []\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n     \
    \       row.push([lst[i][1], lst[i][2]])\n        }\n    }\n    row.sort((a,b)\
    \ => b[0] - a[0])\n    row.sort((a,b) => b[1] - a[1])\n    return row\n}\n", " \
    \   var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            row.push([lst[i][0], lst[i][1]]);\n        }\n    }\n  \
    \  row.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    row.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    return row;\n}\n", "    let row\
    \ = []\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            row.push([lst[i][1], lst[i][2]])\n        }\n    }\n    row.sort((a,b)\
    \ => a[0] - b[0])\n    row.sort((a,b) => a[1] - b[1])\n    return row\n}\n", " \
    \   var result = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            result.push([i, lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    let row\
    \ = [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    row.sort((a,b)\
    \ => b[0] - a[0]);\n    row.sort((a,b) => b[1] - a[1]);\n    return row;\n}\n",
  "    let row = [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n  \
    \  row.sort((a,b) => a[0] - b[0]);\n    row.sort((a,b) => a[1] - b[1]);\n    return\
    \ row;\n}\n", "    let row = []\n    for(let i = 0; i < lst.length; i++){\n  \
    \      if(lst[i][0] == x){\n            row.push([lst[i][1], lst[i][2]])\n   \
    \     }\n    }\n    row.sort((a,b) => b[0] - a[0])\n    row.sort((a,b) => b[1]\
    \ - a[1])\n    return row\n}\n", "    var result = [];\n    var row = [];\n  \
    \  var row_len = 0;\n    var col_len = 0;\n    for(var i=0; i<lst.length; i++){\n\
    \        if(lst[i][0] == x){\n            result.push(row);\n            row =\
    \ [];\n            row_len = 0;\n            col_len = 0;\n        }\n       \
    \ row.push(lst[i]);\n        row_len++;\n    }\n    result.push(row);\n    result.sort(function(a,\
    \ b){\n        var a_len = a.length;\n        var b_len = b.length;\n        if(a_len\
    \ > b_len){\n            return 1;\n        }\n        if(a_len < b_len){\n  \
    \          return -1;\n        }\n        for(var i=0; i<a_len; i++){\n      \
    \      if(a[i] > b[i]){\n                return 1;\n            }\n          \
    \  if(a[i] < b[i]){\n                return -1;\n            }\n        }\n  \
    \      return 0;\n    });\n    result.sort(function(a, b){\n        var a_len\
    \ = a.length;\n        var b_len = b.length;\n        if(a_len > b_len){\n   \
    \         return 1;\n        }\n        if(a_len < b_len){\n            return\
    \ -1;\n        }\n        for(var i=0; i<a_len; i++){\n            if(a[i] > b[i]){\n\
    \                return 1;\n            }\n            if(a[i] < b[i]){\n    \
    \            return -1;\n            }\n        }\n        return 0;\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = 0;\n    var col\
    \ = 0;\n    while(row < lst.length){\n        var found = false;\n        while(col\
    \ < lst[row].length){\n            if(lst[row][col] == x){\n                result.push([row,\
    \ col]);\n                found = true;\n                break;\n            }\n\
    \            col++;\n        }\n        if(!found){\n            row++;\n    \
    \        col = 0;\n        }\n    }\n    result.sort(function(a, b){\n       \
    \ return b[0] - a[0];\n    });\n    result.sort(function(a, b){\n        return\
    \ b[1] - a[1];\n    });\n    return result;\n}\n", "    var result = [];\n   \
    \ for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ b[0] - a[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "    let row = [];\n    let row_index\
    \ = 0;\n    let row_length = 0;\n    for(let i = 0; i < lst.length; i++){\n  \
    \      if(lst[i][0] == x){\n            row.push([i, lst[i][1]]);\n          \
    \  row_length++;\n        }\n    }\n    row.sort((a,b) => b[1] - a[1]);\n    row.sort((a,b)\
    \ => a[1] - b[1]);\n    for(let i = 0; i < row.length; i++){\n        if(row[i][1]\
    \ != 0){\n            row.splice(row_index, 0, [row[i][0], 0]);\n            row_index++;\n\
    \        }\n    }\n    return row;\n}\n", "    var res = [];\n    var row = [];\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n         \
    \   row.push(lst[i]);\n        }\n    }\n    for(var i=0; i<row.length; i++){\n\
    \        for(var j=0; j<row[i].length; j++){\n            res.push([i, row[i][j]]);\n\
    \        }\n    }\n    res.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    res.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return res;\n}\n", "    var result = [];\n    var row = [];\n    var col\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           row.push(lst[i][1]);\n            col.push(lst[i][2]);\n        }\n\
    \    }\n    result.push([row, col]);\n    result.sort(function(a, b){\n      \
    \  return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return\
    \ a[1] - b[1];\n    });\n    return result;\n}\n", "  var res = [];\n  var row\
    \ = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i][0] == x){\n      res.push(row);\n\
    \      row = [];\n    }\n    row.push(lst[i]);\n  }\n  res.push(row);\n  return\
    \ res;\n}\n", "    let row = [];\n    let row_index = 0;\n    let row_length =\
    \ 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            row.push([lst[i][0], lst[i][1]]);\n            row_index++;\n   \
    \         row_length++;\n        }\n    }\n    row.sort((a, b) => {\n        if(a[0]\
    \ > b[0]){\n            return 1;\n        }\n        if(a[0] < b[0]){\n     \
    \       return -1;\n        }\n        return 0;\n    });\n    row.sort((a, b)\
    \ => {\n        if(a[1] > b[1]){\n            return 1;\n        }\n        if(a[1]\
    \ < b[1]){\n            return -1;\n        }\n        return 0;\n    });\n  \
    \  return row;\n}\n", "    let row = []\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i][0] == x){\n            row.push([lst[i][1], lst[i][2]])\n \
    \       }\n    }\n    row.sort((a,b) => b[0] - a[0])\n    row.sort((a,b) => b[1]\
    \ - a[1])\n    return row\n}\n", "    let row = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push([i, lst[i][1]]);\n\
    \        }\n    }\n    row.sort((a, b) => a[0] - b[0]);\n    row.sort((a, b) =>\
    \ b[1] - a[1]);\n    return row;\n}\n", "  var result = [];\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i][0] == x){\n      result.push([lst[i][0], lst[i][1]]);\n\
    \    }\n  }\n  result.sort(function(a, b){\n    return a[0] - b[0];\n  });\n \
    \ result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  return result;\n\
    }\n", "    let row = [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n  \
    \  row.sort((a,b) => b[0] - a[0]);\n    row.sort((a,b) => b[1] - a[1]);\n    return\
    \ row;\n}\n", "    var row = [];\n    var row_index = 0;\n    var row_length =\
    \ 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n    \
    \        row.push([i, lst[i][1]]);\n            row_length++;\n        }\n   \
    \     if(row_length == x){\n            row_index++;\n            row_length =\
    \ 0;\n        }\n    }\n    row.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    row.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    return row;\n}\n", "    let row = []\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1], lst[i][2]])\n\
    \        }\n    }\n    return row.sort(function(a, b){\n        return a[0] -\
    \ b[0]\n    })\n}\n", "    let result = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][1], lst[i][2]]);\n\
    \        }\n    }\n    result.sort((a, b) => b[0] - a[0]);\n    result.sort((a,\
    \ b) => b[1] - a[1]);\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    var res = [];\n    var row\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           row.push(lst[i]);\n        }\n        else{\n            res.push(row);\n\
    \            row = [];\n        }\n    }\n    res.push(row);\n    return res;\n\
    }\n", "    var result = [];\n    var row = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push(row);\n        \
    \    row = [];\n        }\n        row.push(lst[i]);\n    }\n    result.push(row);\n\
    \    result.sort(function(a, b){\n        return a[0] > b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] > b[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] ==\
    \ x){\n            result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n  \
    \  result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    return result;\n}\n", "    let\
    \ row = []\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] ==\
    \ x){\n            row.push([lst[i][1], lst[i][2]])\n        }\n    }\n    return\
    \ row.sort((a,b) => b[0] - a[0])\n}\n", "    let row = [];\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    row.sort((a,b) => a[0] - b[0]);\n    row.sort((a,b)\
    \ => a[1] - b[1]);\n    return row;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n    var row\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           result.push(row);\n            row = [];\n        }\n        row.push(lst[i]);\n\
    \    }\n    result.push(row);\n    result.sort(function(a, b){\n        return\
    \ b[1] - a[1];\n    });\n    result.sort(function(a, b){\n        return a[0]\
    \ - b[0];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([i,\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ b[1] - a[1];\n    });\n    result.sort(function(a, b){\n        return a[0]\
    \ - b[0];\n    });\n    return result;\n}\n", "    var result = [];\n    var row\
    \ = 0;\n    var column = 0;\n    while(row < lst.length){\n        if(lst[row][column]\
    \ == x){\n            result.push([row, column]);\n        }\n        else if(lst[row][column]\
    \ > x){\n            column++;\n        }\n        else{\n            row++;\n\
    \            column = 0;\n        }\n    }\n    result.sort(function(a, b){\n\
    \        return b[0] - a[0];\n    });\n    result.sort(function(a, b){\n     \
    \   return b[1] - a[1];\n    });\n    return result;\n}\n", "  var result = [];\n\
    \  var row = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i][0] == x){\n\
    \      row.push(lst[i]);\n    }\n  }\n  result.push(row);\n  for(var i=0; i<row.length;\
    \ i++){\n    row.sort(function(a, b){\n      return b[1] - a[1];\n    });\n  \
    \  row.sort(function(a, b){\n      return a[0] - b[0];\n    });\n    result.push(row);\n\
    \  }\n  return result;\n}\n", "    var result = [];\n    var row = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push(row);\n\
    \            row = [];\n        }\n        row.push(lst[i]);\n    }\n    result.push(row);\n\
    \    result.sort(function(a, b){\n        return a[0] > b[0]\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] < b[1]\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            result.push([i, lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var row\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           row.push([i, lst[i][1]]);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    row.sort(function(a, b){\n  \
    \      return a[0] - b[0];\n    });\n    return row;\n}\n", "    var result =\
    \ [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            result.push([i, lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           result.push([lst[i][0], lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var row\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           row.push([lst[i][1], lst[i][2]]);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    row.sort(function(a, b){\n  \
    \      return a[1] - b[1];\n    });\n    return row;\n}\n", "    var result =\
    \ [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n   \
    \         result.push([i, lst[i][1]]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    return result;\n}\n", "    var res\
    \ = [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            row.push(lst[i]);\n        }\n        else{\n          \
    \  if(row.length != 0){\n                res.push(row);\n                row =\
    \ [];\n            }\n        }\n    }\n    if(row.length != 0){\n        res.push(row);\n\
    \    }\n    return res;\n}\n", "    let row = [];\n    let row_sorted = [];\n\
    \    let row_sorted_reverse = [];\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i][0] === x){\n            row.push(lst[i]);\n        }\n    }\n\
    \    row.sort((a,b) => a[0] - b[0]);\n    row.sort((a,b) => b[1] - a[1]);\n  \
    \  for(let i = 0; i < row.length; i++){\n        row_sorted.push([row[i][0], row[i][1]]);\n\
    \        row_sorted_reverse.push([row[i][1], row[i][0]]);\n    }\n    return [row_sorted,\
    \ row_sorted_reverse];\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    return result;\n}\n", "    let row = []\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1], lst[i][2]])\n\
    \        }\n    }\n    row.sort((a,b) => b[0] - a[0])\n    row.sort((a,b) => b[1]\
    \ - a[1])\n    return row\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0], lst[i][1]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return result;\n}\n", "    var res = [];\n    var row = 0;\n    var col =\
    \ 0;\n    while(row < lst.length){\n        if(lst[row][col] == x){\n        \
    \    res.push([row, col]);\n        }\n        col++;\n        if(col == lst[row].length){\n\
    \            row++;\n            col = 0;\n        }\n    }\n    res.sort((a,\
    \ b) => a[0] - b[0]);\n    res.sort((a, b) => b[1] - a[1]);\n    return res;\n\
    }\n", "    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            row.push([lst[i][0], lst[i][1]]);\n        }\n    }\n  \
    \  row.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    row.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return row;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            result.push([lst[i][0], lst[i][1]]);\n        }\n      \
    \  else{\n            row.push(lst[i]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    row.sort(function(a, b){\n  \
    \      return a[1] - b[1];\n    });\n    result.push(row);\n    return result;\n\
    }\n", "    var result = [];\n    var row = [];\n    var columns = [];\n    var\
    \ row_index = 0;\n    var column_index = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([row_index, column_index]);\n\
    \            row_index++;\n            column_index = 0;\n        }\n        else{\n\
    \            columns[column_index] = lst[i][1];\n            column_index++;\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    return result;\n}\n", "    let row = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1], lst[i][2]]);\n\
    \        }\n    }\n    row.sort((a, b) => b[0] - a[0]);\n    row.sort((a, b) =>\
    \ b[1] - a[1]);\n    return row;\n}\n", "    var result = [];\n    for(var i=0;\
    \ i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    let row = []\n    for(let i\
    \ = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([lst[i][1],\
    \ lst[i][2]])\n        }\n    }\n    row.sort((a,b) => b[0] - a[0])\n    row.sort((a,b)\
    \ => b[1] - a[1])\n    return row\n}\n", "    var result = [];\n    for(var i=0;\
    \ i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "    var result = [];\n    var row\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i][0] == x){\n\
    \            row.push(lst[i]);\n        }\n    }\n    result.push(row);\n    for(var\
    \ i = row.length - 1; i >= 0; i--){\n        row[i].sort(function(a, b){\n   \
    \         return b[1] - a[1];\n        });\n        row[i].sort(function(a, b){\n\
    \            return a[0] - b[0];\n        });\n        result.push(row[i]);\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    var row = 0;\n  \
    \  var col = 0;\n    while(row < lst.length){\n        if(lst[row][col] == x){\n\
    \            result.push([row, col]);\n        }\n        else if(lst[row][col]\
    \ > x){\n            col++;\n        }\n        else{\n            row++;\n  \
    \          col = 0;\n        }\n    }\n    result.sort(function(a, b){\n     \
    \   return b[0] - a[0];\n    });\n    result.sort(function(a, b){\n        return\
    \ b[1] - a[1];\n    });\n    return result;\n}\n", "    var result = [];\n   \
    \ for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    var res = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            res.push([lst[i][1],\
    \ lst[i][2]]);\n        }\n    }\n    res.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    res.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    return res;\n}\n", "    var result = [];\n    for(var i = 0; i <\
    \ lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "  var res = [];\n  for(var i=0;\
    \ i<lst.length; i++){\n    if(lst[i][0] == x){\n      res.push([lst[i][1], lst[i][2]]);\n\
    \    }\n  }\n  res.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  res.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  return res;\n}\n", "    var res = [];\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n         \
    \   res.push([i, lst[i][1]]);\n        }\n    }\n    res.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    res.sort(function(a, b){\n        return\
    \ b[1] - a[1];\n    });\n    return res;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([lst[i][0],\
    \ lst[i][1]]);\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

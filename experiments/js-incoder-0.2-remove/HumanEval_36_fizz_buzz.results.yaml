name: HumanEval_36_fizz_buzz
language: js
results:
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ return -1;\n  }\n  if(n%11==0 || n%13==0){\n    return 1;\n  }\n  else{\n  \
    \  return fizz_buzz(n/11) + fizz_buzz(n/13);\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 1; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp52f6awib.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp52f6awib.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n % 11 == 0\
    \ && n % 13 == 0){\n    return 1;\n  }\n  if(n % 11 != 0 && n % 13 != 0){\n  \
    \  return 2;\n  }\n  if(n % 11 == 0 && n % 13 != 0){\n    return 3;\n  }\n  if(n\
    \ % 11 != 0 && n % 13 == 0){\n    return 4;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbtlkbslz.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbtlkbslz.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    while(n > 0){\n        if(n % 11 == 0){\n            count++;\n    \
    \    }\n        if(n % 13 == 0){\n            count++;\n        }\n        n =\
    \ Math.floor(n/10);\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpipyqjbbz.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpipyqjbbz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0 &&\
    \ i%13 != 0) || (i%11 != 0 && i%13 == 0)){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7m447gx1.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7m447gx1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpf2vkbb05.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf2vkbb05.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpn8hv5ve6.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn8hv5ve6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n42\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmprvk1ljw4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprvk1ljw4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 42,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpxc5vj731.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxc5vj731.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n43\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpjwot6d7v.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjwot6d7v.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ console.log(\"Please enter a positive integer\");\n  }\n  if(n%11==0 || n%13==0){\n\
    \    console.log(\"FizzBuzz\");\n  }\n  if(n%11!==0 && n%13!==0){\n    console.log(\"\
    Fizz\");\n  }\n  if(n%11==0 && n%13!==0){\n    console.log(\"Buzz\");\n  }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: "Fizz\n"
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpf83rfa9f.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpf83rfa9f.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpw3ig8fg_.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw3ig8fg_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11)==0 || (i%13)==0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpatgdclvr.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpatgdclvr.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpf6l1n2a0.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf6l1n2a0.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n < 0){\n \
    \   throw 'n must be positive';\n  }\n  if(n === 0){\n    return 0;\n  }\n  if(n\
    \ === 1){\n    return 1;\n  }\n  if(n === 2){\n    return 2;\n  }\n  if(n % 11\
    \ === 0 && n % 13 === 0){\n    return 3;\n  }\n  if(n % 11 === 0 && n % 13 ===\
    \ 1){\n    return 4;\n  }\n  if(n % 11 === 1 && n % 13 === 0){\n    return 5;\n\
    \  }\n  if(n % 11 === 1 && n % 13 === 1){\n    return 6;\n  }\n  if(n % 11 ===\
    \ 2 && n % 13 === 0){\n    return 7;\n  }\n  if(n % 11 === 2 && n % 13 === 1){\n\
    \    return 8;\n  }\n  if(n % 11 === 3 && n % 13 === 0){\n    return 9;\n  }\n\
    \  if(n % 11 === 3 && n % 13 === 1){\n    return 10;\n  }\n  if(n % 11 === 4 &&\
    \ n % 13 === 0){\n    return 11;\n  }\n  if(n % 11 === 4 && n % 13 === 1){\n \
    \   return 12;\n  }\n  if(n % 11 === 5 && n % 13 === 0){\n    return 13;\n  }\n\
    \  if(n % 11 === 5 && n % 13 === 1){\n    return 14;\n  }\n  if(n % 11 === 6 &&\
    \ n % 13 === 0){\n    return 15;\n  }\n  if(n % 11 === 6 && n % 13 === 1){\n \
    \   return 16;\n  }\n  if(n % 11 === 7 && n % 13 === 0){\n    return 17;\n  }\n\
    \  if(n % 11 === 7 && n % 13 === 1){\n    return 18;\n  }\n  if(n % 11 === 8 &&\
    \ n % 13 === 0){\n    return 19;\n  }\n  if(n % 11 === 8 && n % 13 === 1){\n \
    \   return 20;\n  }\n  if(n % 11 === 9 && n % 13 === 0){\n    return 21;\n  }\n\
    \  if(n % 11 === 9 && n % 13 === 1){\n    return 22;\n  }\n  if(n % 11 === 10\
    \ && n % 13 === 0){\n    return 23;\n  }\n  if(n % 11 === 10 && n % 13 === 1){\n\
    \    return 24;\n  }\n  if(n % 11 === 11 && n % 13 === 0){\n    return 25;\n \
    \ }\n  if(n % 11 === 11 && n % 13 === 1){\n    return 26;\n  }\n  if(n % 11 ===\
    \ 12 && n % 13 === 0){\n    return 27;\n  }\n  if(n % 11 === 12 && n % 13 ===\
    \ \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpedy0q6s0.js:91\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpjzpb4p4z.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjzpb4p4z.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n<100) return fizz_buzz(n/10) + \"FizzBuzz\";\n  if(n<1000) return\
    \ fizz_buzz(n/100) + \"Fizz\";\n  if(n<10000) return fizz_buzz(n/1000) + \"Buzz\"\
    ;\n  if(n<100000) return n;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'5FizzBuzz'\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpywrd1ndi.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpywrd1ndi.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '5FizzBuzz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n42\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmps_x9_4ly.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps_x9_4ly.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 42,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n43\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpl5kknv9y.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl5kknv9y.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 1; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n   \
    \   count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgpzrqdtn.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgpzrqdtn.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n   \
    \   count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3y8rhcr1.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3y8rhcr1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n43\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpegke3_ao.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpegke3_ao.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpirtf9_z3.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpirtf9_z3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ return -1;\n  }\n  if(n==0){\n    return 0;\n  }\n  if(n%11==0){\n    return\
    \ 1;\n  }\n  if(n%13==0){\n    return 2;\n  }\n  if(n%7==0){\n    return 3;\n\
    \  }\n  if(n%5==0){\n    return 4;\n  }\n  if(n%3==0){\n    return 5;\n  }\n \
    \ if(n%2==0){\n    return 6;\n  }\n  if(n==1){\n    return 7;\n  }\n  if(n==2){\n\
    \    return 8;\n  }\n  if(n==3){\n    return 9;\n  }\n  if(n==4){\n    return\
    \ 10;\n  }\n  if(n==5){\n    return 11;\n  }\n  if(n==6){\n    return 12;\n  }\n\
    \  if(n==7){\n    return 13;\n  }\n  if(n==8){\n    return 14;\n  }\n  if(n==9){\n\
    \    return 15;\n  }\n  if(n==10){\n    return 16;\n  }\n  if(n==11){\n    return\
    \ 17;\n  }\n  if(n==12){\n    return 18;\n  }\n  if(n==13){\n    return 19;\n\
    \  }\n  if(n==14){\n    return 20;\n  }\n  if(n==15){\n    return 21;\n  }\n \
    \ if(n==16){\n    return 22;\n  }\n  if(n==17){\n    return 23;\n  }\n  if(n==18){\n\
    \    return 24;\n  }\n  if(n==19){\n    return 25;\n  }\n  if(n==20){\n    return\
    \ 26;\n  }\n  if(n==21){\n    return 27;\n  }\n  if(n==22){\n    return 28;\n\
    \  }\n  if(n==23){\n    return 29;\n  }\n  if(n==24){\n    return 30;\n  }\n \
    \ if(n==25){\n    return 31;\n  }\n  if(n==26){\n    return 32;\n  }\n  if(n==27){\n\
    \    return 33;\n  }\n  if(n==28){\n    return 34;\n  }\n  if(n==29){\n    return\
    \ 35;\n  }\n  if(n==30){\n    return 36;\n  }\n  if(n==31){\n    return 37;\n\
    \  }\n  if(n==32){\n    return 38;\n  }\n  \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppkk99ei5.js:139\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n < 0){\n \
    \   return -1;\n  }\n  if(n % 11 == 0){\n    return 1;\n  }\n  if(n % 13 == 0){\n\
    \    return 2;\n  }\n  if(n % 7 == 0){\n    return 3;\n  }\n  if(n % 5 == 0){\n\
    \    return 4;\n  }\n  if(n % 3 == 0){\n    return 5;\n  }\n  if(n % 2 == 0){\n\
    \    return 6;\n  }\n  if(n % 1 == 0){\n    return 7;\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3atbtlof.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3atbtlof.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp6vgkkgzz.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6vgkkgzz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i%11 == 0 && i%13 == 0) ||\
    \ (i%11 == 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp9keo3uy7.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9keo3uy7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n%11==0 &&\
    \ n%13==0){\n    return 1;\n  }\n  if(n%11==0){\n    return 2;\n  }\n  if(n%13==0){\n\
    \    return 3;\n  }\n  if(n%11==0 && n%13!=0){\n    return 4;\n  }\n  if(n%11!=0\
    \ && n%13!=0){\n    return 5;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpe0qj27df.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe0qj27df.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp9d24o3g8.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9d24o3g8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n%11==0 && n%13==0) return 'FizzBuzz';\n  if(n%11==0) return 'Fizz';\n\
    \  if(n%13==0) return 'Buzz';\n  return n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpk4039jdd.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk4039jdd.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmplkuoly6l.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplkuoly6l.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ return -1;\n  }\n  if(n==0){\n    return 0;\n  }\n  if(n==1){\n    return 1;\n\
    \  }\n  if(n%11==0){\n    return fizz_buzz(n/11);\n  }\n  if(n%13==0){\n    return\
    \ fizz_buzz(n/13);\n  }\n  return fizz_buzz(n%11)+fizz_buzz(n%13);\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpx9q67p0l.js:3\n  if(n<0){\n  ^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at fizz_buzz (/tmp/tmpx9q67p0l.js:3:3)\n    at fizz_buzz\
    \ (/tmp/tmpx9q67p0l.js:18:10)\n    at fizz_buzz (/tmp/tmpx9q67p0l.js:18:10)\n\
    \    at fizz_buzz (/tmp/tmpx9q67p0l.js:18:10)\n    at fizz_buzz (/tmp/tmpx9q67p0l.js:18:10)\n\
    \    at fizz_buzz (/tmp/tmpx9q67p0l.js:18:10)\n    at fizz_buzz (/tmp/tmpx9q67p0l.js:18:10)\n\
    \    at fizz_buzz (/tmp/tmpx9q67p0l.js:18:10)\n    at fizz_buzz (/tmp/tmpx9q67p0l.js:18:10)\n\
    \    at fizz_buzz (/tmp/tmpx9q67p0l.js:18:10)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i<n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp9s9ejo4w.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9s9ejo4w.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i<=n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpeonc9ioa.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeonc9ioa.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpq98_qs3w.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq98_qs3w.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmphityhjcu.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphityhjcu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpds4wd_wv.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpds4wd_wv.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpfvki65mu.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfvki65mu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 1; i <= n; i++){\n    if((i % 11 === 0 || i % 13 === 0) && i %\
    \ 11 != 0 && i % 13 != 0){\n      count++;\n    }\n  }\n  return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpuy40ao2m.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuy40ao2m.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpya_251m7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpya_251m7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0\
    \ && i%13 != 0) || (i%11 != 0 && i%13 == 0)){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpwlsaifkn.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwlsaifkn.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n\n  if(n%11==0 && n%13==0) return n\n  if(n%11==0) return 11\n  if(n%13==0)\
    \ return 13\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp4xjehu7c.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp4xjehu7c.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n<100) return fizz_buzz(n/10)+(n%10==7?'':n%10==3?'Fizz':'Buzz');\n\
    \  if(n<1000) return fizz_buzz(n/100)+(n%100==7?'':n%100==3?'Fizz':'Buzz');\n\
    \  if(n<10000) return fizz_buzz(n/1000)+(n%1000==7?'':n%1000==3?'Fizz':'Buzz');\n\
    \  if(n<100000) return fizz_buzz(n/10000)+(n%10000==7?'':n%10000==3?'Fizz':'Buzz');\n\
    \  if(n<1000000) return fizz_buzz(n/100000)+(n%100000==7?'':n%100000==3?'Fizz':'Buzz');\n\
    \  if(n<10000000) return fizz_buzz(n/1000000)+(n%1000000==7?'':n%1000000==3?'Fizz':'Buzz');\n\
    \  if(n<100000000) return fizz_buzz(n/10000000)+(n%10000000==7?'':n%10000000==3?'Fizz':'Buzz');\n\
    \  if(n<1000000000) return fizz_buzz(n/100000000)+(n%100000000==7?'':n%100000000==3?'Fizz':'Buzz');\n\
    \  if(n<1000000000) return fizz_buzz(n/1000000000)+(n%1000000000==7?'':n%1000000000==3?'Fizz':'Buzz');\n\
    \  if(n<10000000000) return fizz_buzz(n/10000000000)+(n%10000000000==7?'':n%10000000000==3?'Fizz':'Buzz');\n\
    \  if(n<100000000000) return fizz_buzz(n/100000000000)+(n%100000000000==7?'':n%100000000000==3?'Fizz':'Buzz');\n\
    \  if(n<1000000000000) return fizz_buzz(n/1000000000000)+(n%1000000000000==7?'':n%1000000000000==3?'Fizz':'Buzz');\n\
    \  if(n<10000000000000) return fizz_buzz(n/10000000000000)+(n%100\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2xcqg0bf.js:17\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for\
    \ your answer! I understand that my code was very inefficient and that there are\
    \ much better ways to do it, but I wanted to understand why my code didn't work.\
    \ I'm still a beginner at programming and I appreciate your help :)\n<|/ c |>\n\
    <| c |>\nNo problem! I added some comments to my answer that might help you understand\
    \ why your code didn't work. Let me know if you have any questions!\n<|/ c |>\n\
    <| a dscore=0 |>\nThe reason your code doesn't work is because you never actually\
    \ call the function fizz_buzz.\n<code>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphpkyrurj.js:11\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<=1){\n  \
    \  return n;\n  }\n  if(n%11==0 || n%13==0){\n    return n;\n  }\n  else{\n  \
    \  return fizz_buzz(n/11)+fizz_buzz(n/13);\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4083818279622475\n\
    \nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpakxviu3t.js:18:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpakxviu3t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4083818279622475,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n42\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp2h61cdb2.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2h61cdb2.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 42,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n   \
    \   count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpp467kv26.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp467kv26.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n < 0){\n \
    \   console.log(\"Invalid input\");\n    return;\n  }\n  if(n % 11 == 0){\n  \
    \  console.log(\"Fizz\");\n  }\n  if(n % 13 == 0){\n    console.log(\"Buzz\");\n\
    \  }\n  if(n % n % 11 == 0){\n    console.log(\"FizzBuzz\");\n  }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: "FizzBuzz\n"
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp5muo1l6h.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5muo1l6h.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ return -1;\n  }\n  if(n%11==0){\n    return 1;\n  }\n  if(n%13==0){\n    return\
    \ 2;\n  }\n  if(n%7==0){\n    return 3;\n  }\n  if(n%5==0){\n    return 4;\n \
    \ }\n  if(n%3==0){\n    return 5;\n  }\n  if(n%2==0){\n    return 6;\n  }\n  if(n==0){\n\
    \    return 7;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1vcdcs_z.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1vcdcs_z.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i%11 == 0 && i%13 == 0) ||\
    \ (i%11 == 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpuqlyqivy.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuqlyqivy.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpp_oghm2u.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp_oghm2u.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp2j05dofv.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2j05dofv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0) return\
    \ \"Invalid input\";\n  if(n==0) return \"0\";\n  if(n==1) return \"1\";\n  if(n==2)\
    \ return \"2\";\n  if(n==3) return \"Fizz\";\n  if(n%11==0) return \"FizzBuzz\"\
    ;\n  if(n%13==0) return \"FizzBuzz\";\n  if(n%11==0 && n%13==0) return \"FizzBuzz\"\
    ;\n  if(n%11==0 && n%13!=0) return \"Fizz\";\n  if(n%13==0 && n%11!=0) return\
    \ \"Buzz\";\n  if(n%11!=0 && n%13!=0) return \"Buzz\";\n  if(n%11!=0 && n%13==0)\
    \ return \"Buzz\";\n  if(n%11!=0 && n%13!=0) return \"Fizz\";\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Buzz'\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpgukw0oxd.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgukw0oxd.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Buzz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i%11 == 0 && i%13 == 0) ||\
    \ (i%11 != 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpuwp8mvky.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuwp8mvky.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<=0){\n  \
    \  return 0;\n  }\n  if(n%11==0){\n    return 1;\n  }\n  if(n%13==0){\n    return\
    \ 2;\n  }\n  if(n%11==0 && n%13==0){\n    return 3;\n  }\n  if(n%11==0 && n%13!=0){\n\
    \    return 4;\n  }\n  if(n%11!=0 && n%13==0){\n    return 5;\n  }\n  if(n%11!=0\
    \ && n%13!=0){\n    return 6;\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgke0pqgp.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgke0pqgp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7x2vtonh.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7x2vtonh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n\n  if(n<100) return n\n  if(n<1000) return n\n  if(n<10000) return n\n  if(n<100000)\
    \ return n\n  if(n<1000000) return n\n  if(n<10000000) return n\n  if(n<100000000)\
    \ return n\n  if(n<1000000000) return n\n  if(n<10000000000) return n\n  if(n<100000000000)\
    \ return n\n  if(n<1000000000000) return n\n  if(n<10000000000000) return n\n\
    \  if(n<100000000000000) return n\n  if(n<1000000000000000) return n\n  if(n<10000000000000000)\
    \ return n\n  if(n<100000000000000000) return n\n  if(n<1000000000000000000) return\
    \ n\n  if(n<10000000000000000000) return n\n  if(n<100000000000000000000) return\
    \ n\n  if(n<1000000000000000000000) return n\n  if(n<10000000000000000000000)\
    \ return n\n  if(n<100000000000000000000000) return n\n  if(n<1000000000000000000000000)\
    \ return n\n  if(n<10000000000000000000000000) return n\n  if(n<100000000000000000000000000)\
    \ return n\n  if(n<1000000000000000000000000000) return n\n  if(n<10000000000000000000000000000)\
    \ return n\n  if(n<100000000000000000000000000000) return n\n  if(n<1000000000000000000000000000000)\
    \ return n\n  if(n<10000000000000000000000000000000) return n\n  if(n<100000000000000000000000000000000)\
    \ return n\n  if(n<1000000000000000000000000000000000) return n\n  if(n<10000000000000000000000000000000000)\
    \ return n\n  if(n<100000000000000000000000000000000000) return n\n  if(n<1000000000000000000000000000000000000)\
    \ return n\n  if(n<10000000000000000000000000000000000000) return n\n  if(n<100000000000000000000000000000000000000)\
    \ return n\n  if(n<1000000000000000000000000000000000000000) return n\n  if(n<10000000000000000000000000000000000000000)\
    \ return n\n  if(n<100000000000000000000000000000000000000000) return n\n  if(n<1000000000000000000000000000000000000000000)\
    \ return n\n  if(n<10000000000000000000000000000000000000000000) return n\n  if(n<100000000000000000000000000000000000000000000)\
    \ return n\n  if(n<1000000000000000000000000000000000000000000000) return n\n\
    \  if(n<10000000000000000000000000000000000000000000000) return n\n  if(n<100000000000000000000000000000000000000000000000)\
    \ return n\n  if(n<1000000000000000000000000000000000000000000000000) return n\n\
    \  \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpks8koak5.js:67\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpksk2krhu.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpksk2krhu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i % 11 == 0) || (i % 13 ==\
    \ 0)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpmlxmdzp4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmlxmdzp4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmppwua7q1q.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppwua7q1q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<=0){\n  \
    \  return 0;\n  }\n  if(n%11==0){\n    return 1;\n  }\n  if(n%13==0){\n    return\
    \ 2;\n  }\n  if(n%7==0){\n    return 3;\n  }\n  if(n%5==0){\n    return 4;\n \
    \ }\n  if(n%3==0){\n    return 5;\n  }\n  if(n%2==0){\n    return 6;\n  }\n  if(n==0){\n\
    \    return 7;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3tv1og9z.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3tv1og9z.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ return -1;\n  }\n  if(n==0){\n    return 0;\n  }\n  if(n==1){\n    return 1;\n\
    \  }\n  if(n%11==0){\n    return fizz_buzz(n/11);\n  }\n  if(n%13==0){\n    return\
    \ fizz_buzz(n/13);\n  }\n  return fizz_buzz(n/11)+fizz_buzz(n/13);\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5m6wbja1.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5m6wbja1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10){\n  \
    \  return n\n  }\n  if(n%11==0){\n    return n\n  }\n  if(n%13==0){\n    return\
    \ n\n  }\n  if(n%11==0 && n%13==0){\n    return n\n  }\n  if(n%11==0 && n%13!=0){\n\
    \    return n\n  }\n  if(n%11!=0 && n%13==0){\n    return n\n  }\n  if(n%11!=0\
    \ && n%13!=0){\n    return n\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp0uy47pwm.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0uy47pwm.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<=0){\n  \
    \  return 0;\n  }\n  if(n%11==0||n%13==0){\n    return 1;\n  }\n  else{\n    return\
    \ fizz_buzz(n/11)+fizz_buzz(n/13);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i<=n; i++){\n        if((i%11 == 0 && i%13 == 0) || (i%11\
    \ == 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpxz4wli12.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxz4wli12.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n\n  if(n%11==0 && n%13==0) return n\n  if(n%11!=0 && n%13!=0) return n\n  if(n%11==0\
    \ && n%13!=0) return n\n  if(n%11!=0 && n%13==0) return n\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5gxzugzu.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5gxzugzu.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<=0){\n  \
    \  return 0;\n  }\n  if(n%11==0){\n    return 1;\n  }\n  if(n%13==0){\n    return\
    \ 2;\n  }\n  if(n%7==0){\n    return 3;\n  }\n  if(n%5==0){\n    return 4;\n \
    \ }\n  if(n%3==0){\n    return 5;\n  }\n  if(n%2==0){\n    return 6;\n  }\n  if(n==0){\n\
    \    return 7;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8spj05pu.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8spj05pu.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n%11==0 && n%13==0) return 'FizzBuzz';\n  if(n%11==0) return 'Fizz';\n\
    \  if(n%13==0) return 'Buzz';\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp63wf1nle.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp63wf1nle.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp0imb7cb3.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0imb7cb3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpwzyzmdnh.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwzyzmdnh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n<100) return fizz_buzz(n/10) + \"FizzBuzz\";\n  if(n<1000) return\
    \ fizz_buzz(n/10) + \"Fizz\";\n  if(n<10000) return fizz_buzz(n/10) + \"Buzz\"\
    ;\n  return n;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'5FizzBuzz'\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp0ye2m3wl.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp0ye2m3wl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '5FizzBuzz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n<100) return fizz_buzz(n/10) + \"FizzBuzz\";\n  if(n<1000) return\
    \ fizz_buzz(n/10) + \"Fizz\";\n  if(n<10000) return fizz_buzz(n/10) + \"Buzz\"\
    ;\n  if(n<100000) return fizz_buzz(n/10) + \"BuzzBuzz\";\n  if(n<1000000) return\
    \ fizz_buzz(n/10) + \"BuzzBuzzBuzz\";\n  if(n<100000000) return fizz_buzz(n/10)\
    \ + \"BuzzBuzzBuzzBuzz\";\n  if(n<1000000000) return fizz_buzz(n/10) + \"BuzzBuzzBuzzBuzzBuzz\"\
    ;\n  if(n<10000000000) return fizz_buzz(n/10) + \"BuzzBuzzBuzzBuzzBuzzBuzz\";\n\
    \  if(n<100000000000) return fizz_buzz(n/10) + \"BuzzBuzzBuzzBuzzBuzzBuzzBuzz\"\
    ;\n  if(n<1000000000000) return fizz_buzz(n/10) + \"BuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\"\
    ;\n  if(n<10000000000000) return fizz_buzz(n/10) + \"BuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\"\
    ;\n  if(n<100000000000000) return fizz_buzz(n/10) + \"BuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\"\
    ;\n  if(n<10000000000000000) return fizz_buzz(n/10) + \"BuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\"\
    ;\n  if(n<100000000000000000) return fizz_buzz(n/10) + \"BuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\"\
    ;\n  if(n<1000000000000000000) return fizz_buzz(n/10) + \"BuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\"\
    ;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'5FizzBuzz'\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp99_hw7l6.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp99_hw7l6.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '5FizzBuzz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpky7iaptf.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpky7iaptf.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i%11 == 0 && i%13 == 0) ||\
    \ (i%11 != 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,fizzbuzz |>\n<code>\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7_3nbf4a.js:11\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 1; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n43\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpw8b_wwz2.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw8b_wwz2.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n < 0){\n \
    \   return -1;\n  }\n  if(n === 0){\n    return 0;\n  }\n  if(n === 1){\n    return\
    \ 1;\n  }\n  if(n === 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n\
    \  }\n  if(n === 4){\n    return 4;\n  }\n  if(n === 5){\n    return 5;\n  }\n\
    \  if(n === 6){\n    return 6;\n  }\n  if(n === 7){\n    return 7;\n  }\n  if(n\
    \ === 8){\n    return 8;\n  }\n  if(n === 9){\n    return 9;\n  }\n  if(n ===\
    \ 10){\n    return 10;\n  }\n  if(n === 11){\n    return 11;\n  }\n  if(n ===\
    \ 12){\n    return 12;\n  }\n  if(n === 13){\n    return 13;\n  }\n  if(n ===\
    \ 14){\n    return 14;\n  }\n  if(n === 15){\n    return 15;\n  }\n  if(n ===\
    \ 16){\n    return 16;\n  }\n  if(n === 17){\n    return 17;\n  }\n  if(n ===\
    \ 18){\n    return 18;\n  }\n  if(n === 19){\n    return 19;\n  }\n  if(n ===\
    \ 20){\n    return 20;\n  }\n  if(n === 21){\n    return 21;\n  }\n  if(n ===\
    \ 22){\n    return 22;\n  }\n  if(n === 23){\n    return 23;\n  }\n  if(n ===\
    \ 24){\n    return 24;\n  }\n  if(n === 25){\n    return 25;\n  }\n  if(n ===\
    \ 26){\n    return 26;\n  }\n  if(n === 27){\n    return 27;\n  }\n  if(n ===\
    \ 28){\n    return 28;\n  }\n  if(n === 29){\n    return 29;\n  }\n  if(n ===\
    \ 30){\n    return 30;\n  }\n  if(n === 31){\n    return 31;\n  }\n  if(n ===\
    \ 32){\n    return 32;\n  }\n  if(n === 33){\n    return 33;\n  }\n  if(n ===\
    \ 34){\n    return 34;\n  }\n  if(n === 35){\n    return 35;\n  }\n  if(n ===\
    \ 36){\n    return 36;\n  }\n  if(n === 37){\n    return 37;\n  }\n  if(n ===\
    \ 38){\n    return 38;\n  }\n  if(n === 39){\n    return 39;\n  }\n  if(n ===\
    \ 40){\n    return 40;\n  }\n  if(n === 41){\n    return 41;\n  }\n  if(n ===\
    \ 42){\n    return 42;\n  }\n  if(n === 4\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdoftwi_j.js:136\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n%11==0 && n%13==0) return 'FizzBuzz';\n  if(n%11==0) return 'Fizz';\n\
    \  if(n%13==0) return 'Buzz';\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmps09d2oh8.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmps09d2oh8.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n < 0){\n \
    \   return -1;\n  }\n  if(n === 0){\n    return 0;\n  }\n  if(n === 1){\n    return\
    \ 1;\n  }\n  if(n % 11 === 0 || n % 13 === 0){\n    return 1;\n  }\n  if(n % 11\
    \ > 0 || n % 13 > 0){\n    return 2;\n  }\n  if(n % 11 < 0 || n % 13 < 0){\n \
    \   return 3;\n  }\n  if(n % 11 < 0 && n % 13 > 0){\n    return 4;\n  }\n  if(n\
    \ % 11 > 0 && n % 13 < 0){\n    return 5;\n  }\n  if(n % 11 > 0 && n % 13 > 0){\n\
    \    return 6;\n  }\n  if(n % 11 < 0 && n % 13 < 0){\n    return 7;\n  }\n  if(n\
    \ % 11 < 0 && n % 13 > 0){\n    return 8;\n  }\n  if(n % 11 > 0 && n % 13 < 0){\n\
    \    return 9;\n  }\n  if(n % 11 > 0 && n % 13 > 0){\n    return 10;\n  }\n  if(n\
    \ % 11 < 0 && n % 13 < 0){\n    return 11;\n  }\n  if(n % 11 < 0 && n % 13 > 0){\n\
    \    return 12;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa_vjjb73.js:55:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa_vjjb73.js:65:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1w6vnubc.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1w6vnubc.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n%11==0 && n%13==0) return \"FizzBuzz\";\n  if(n%11!=0 && n%13!=0)\
    \ return \"Fizz\";\n  if(n%11==0 && n%13!=0) return \"Buzz\";\n  if(n%11!=0 &&\
    \ n%13==0) return \"Buzz\";\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Fizz'\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjgzkf7qx.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjgzkf7qx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Fizz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n43\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp16c2sezv.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp16c2sezv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i<n; i++){\n        if((i%11 == 0 && i%13 == 0) || (i%11\
    \ != 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=javascript,fizzbuzz |>\n<| c |>\nThanks for your answer.\
    \ I was looking for a solution that would not require a for loop and was hoping\
    \ for a solution that would not require a for loop. I am looking for a solution\
    \ that would not require a for loop and was hoping for a solution that would not\
    \ require a for loop.\n<|/ c |>\n<| c |>\nI added a solution that does not require\
    \ a for loop. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. I was\
    \ looking for a solution that would not require a for loop and was hoping for\
    \ a solution that would not require a for loop. I am looking for a solution that\
    \ would not require a for loop and was hoping for a solution that would not require\
    \ a for loop. I am looking for a solution that would not require a for loop and\
    \ was hoping for a solution that would not require a for loop.\n<|/ c |>\n<| c\
    \ |>\nI added a solution that does not require a for loop. Hope it helps.\n<|/\
    \ c |>\n<| c |>\nThanks for your answer. I was looking for a solution that would\
    \ not require a for loop and was hoping for a solution that would not require\
    \ a for loop. I am looking for a solution that would not require a for loop and\
    \ was hoping for a solution that would not require a for loop. I am looking for\
    \ a solution that would not require a for loop and was hoping for a solution that\
    \ would not require a for loop.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppie4ee_y.js:11\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10){\n  \
    \  return n\n  }\n  if(n<100){\n    return n\n  }\n  if(n<1000){\n    return n\n\
    \  }\n  if(n<10000){\n    return n\n  }\n  if(n<100000){\n    return n\n  }\n\
    \  if(n<1000000){\n    return n\n  }\n  if(n<10000000){\n    return n\n  }\n \
    \ if(n<100000000){\n    return n\n  }\n  if(n<1000000000){\n    return n\n  }\n\
    \  if(n<10000000000){\n    return n\n  }\n  if(n<100000000000){\n    return n\n\
    \  }\n  if(n<1000000000000){\n    return n\n  }\n  if(n<10000000000000){\n   \
    \ return n\n  }\n  if(n<100000000000000){\n    return n\n  }\n  if(n<1000000000000000){\n\
    \    return n\n  }\n  if(n<10000000000000000){\n    return n\n  }\n  if(n<100000000000000000){\n\
    \    return n\n  }\n  if(n<1000000000000000000){\n    return n\n  }\n  if(n<10000000000000000000){\n\
    \    return n\n  }\n  if(n<100000000000000000000){\n    return n\n  }\n  if(n<1000000000000000000000){\n\
    \    return n\n  }\n  if(n<10000000000000000000000){\n    return n\n  }\n  if(n<100000000000000000000000){\n\
    \    return n\n  }\n  if(n<1000000000000000000000000){\n    return n\n  }\n  if(n<10000000000000000000000000){\n\
    \    return n\n  }\n  if(n<100000000000000000000000000){\n    return n\n  }\n\
    \  if(n<1000000000000000000000000000){\n    return n\n  }\n  if(n<10000000000000000000000000000){\n\
    \    return n\n  }\n  if(n<100000000000000000000000000000){\n    return n\n  }\n\
    \  if(n<1000000000000000000000000000000){\n    return n\n  }\n  if(n<10000000000000000000000000000000){\n\
    \    return n\n  }\n  if(n<100000000000000000000000000000000){\n    return n\n\
    \  }\n  if(n<1000000000000000000000000000000000){\n    return n\n  }\n  if(n<10000000000000000000000000000000000){\n\
    \    return n\n  }\n  if(n<100000000000000000000000000000000000){\n    return\
    \ n\n  }\n  if(n<1000000000000000000000000000000000000){\n    return n\n  }\n\
    \  if\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplk7riyu_.js:112\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n%11==0 && n%13==0) return 'FizzBuzz';\n  if(n%11==0) return 'Fizz';\n\
    \  if(n%13==0) return 'Buzz';\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp445wtig6.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp445wtig6.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n   \
    \   count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpd_8dwvf5.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd_8dwvf5.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i <= n; i++){\n    if((i%11 === 0 && i%13 === 0) || (i%11 ===\
    \ 0 && i%13 === 1)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpcl8p8mxq.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcl8p8mxq.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 1; i < n; i++){\n        if((i%11 == 0 && i%13 == 0) ||\
    \ (i%11 != 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n42\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3amh8anb.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3amh8anb.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 42,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmphujuguef.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphujuguef.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i%11 == 0 && i%13 == 0) ||\
    \ (i%11 != 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3ki9omyf.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3ki9omyf.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpo39d3yv2.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo39d3yv2.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11)==0 || (i%13)==0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp9fy4lqtk.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9fy4lqtk.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp3q5ps7ny.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3q5ps7ny.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0) return\
    \ \"Invalid Input\";\n  if(n==0) return \"0\";\n  if(n==1) return \"1\";\n  if(n==2)\
    \ return \"2\";\n  if(n==3) return \"Fizz\";\n  if(n%11==0 || n%13==0) return\
    \ \"Buzz\";\n  if(n%3==0) return \"Fizz\";\n  if(n%5==0) return \"Buzz\";\n  if(n%7==0)\
    \ return \"FizzBuzz\";\n  if(n%11==0 && n%13==0) return \"FizzBuzz\";\n  if(n%3==0\
    \ && n%5==0 && n%7==0) return \"FizzBuzz\";\n  if(n%3==0 && n%5==0) return \"\
    Fizz\";\n  if(n%5==0 && n%7==0) return \"Buzz\";\n  if(n%7==0) return \"7\";\n\
    \  if(n%11==0) return \"11\";\n  if(n%3==0) return \"3\";\n  if(n%5==0) return\
    \ \"5\";\n  if(n%7==0) return \"7\";\n  if(n%11==0 && n%3==0 && n%5==0 && n%7==0)\
    \ return \"FizzBuzz\";\n  if(n%3==0 && n%5==0) return \"3\";\n  if(n%5==0 && n%7==0)\
    \ return \"5\";\n  if(n%7==0) return \"7\";\n  if(n%11==0 && n%3==0 && n%5==0)\
    \ return \"Fizz\";\n  if(n%3==0 && n%5==0) return \"3\";\n  if(n%5==0) return\
    \ \"5\";\n  if(n%7==0) return \"7\";\n  if(n%11==0 && n%3==0) return \"Fizz\"\
    ;\n  if(n%3==0) return \"3\";\n  if(n%5==0) return \"5\";\n  if(n%7==0) return\
    \ \"7\";\n  if(n%11==0) return \"11\";\n  if(n%3==0) return \"3\";\n  if(n%5==0)\
    \ return \"5\";\n  if(n%7==0) return \"7\";\n  if(n%11==0 && n%3==0) return \"\
    Fizz\";\n  if(n%3==0) return \"3\";\n  \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpg_ky1dxh.js:55\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i % 11 == 0 && i % 13 == 0)\
    \ || (i % 11 == 0 && i % 13 != 0)){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp2031ntns.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2031ntns.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgcyltay_.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgcyltay_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpwutu8by9.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwutu8by9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n<100) return fizz_buzz(n/10)+(n%10==7?'':n);\n  if(n<1000) return\
    \ fizz_buzz(n/100)+(n%100==7?'':n)+fizz_buzz(n%100);\n  if(n<10000) return fizz_buzz(n/1000)+(n%1000==7?'':n)+fizz_buzz(n%1000)+fizz_buzz(n%10000);\n\
    \  if(n<100000) return fizz_buzz(n/10000)+(n%10000==7?'':n)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000);\n\
    \  if(n<1000000) return fizz_buzz(n/100000)+(n%100000==7?'':n)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000);\n\
    \  if(n<100000000) return fizz_buzz(n/1000000)+(n%100000==7?'':n)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000);\n\
    \  if(n<1000000000) return fizz_buzz(n/10000000)+(n%100000==7?'':n)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000);\n\
    \  if(n<1000000000000) return fizz_buzz(n/1000000000)+(n%100000==7?'':n)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000)+fizz_buzz(n%10000\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkb5spms7.js:11\n  if(n<1000000000000) return fizz_buzz(n/1000000000)+(n%100000==7?'':n)+fizz_buzz(n%100000)+fizz_buzz(n%10000)+fizz_buzz(n%100000)+fizz_buzz(n%10000\n\
    \                                                                            \
    \                                                                   ^^^^^\n\n\
    SyntaxError: missing ) after argument list\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<=1){\n  \
    \  return n;\n  }\n  if(n%11==0 && n%13==0){\n    return fizz_buzz(n/11)+\"FizzBuzz\"\
    ;\n  }\n  if(n%11==0){\n    return fizz_buzz(n/11)+\"Fizz\";\n  }\n  if(n%13==0){\n\
    \    return fizz_buzz(n/13)+\"Buzz\";\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpfqlccdbc.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpfqlccdbc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n; //If n is less than 10, return the number.\n  if(n%11==0 && n%13==0) return\
    \ n; //If n is divisible by 11 and 13, return the number.\n  if(n%11!=0 && n%13!=0)\
    \ return n; //If n is divisible by 11 and 13, return the number.\n  if(n%11==0\
    \ && n%13!=0) return n; //If n is divisible by 11 and 13, return the number.\n\
    \  if(n%11!=0 && n%13==0) return n; //If n is divisible by 11 and 13, return the\
    \ number.\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv8enmwd1.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv8enmwd1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpnttcszaf.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnttcszaf.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ return \"Not a positive number\";\n  }\n  if(n%11==0 || n%13==0){\n    return\
    \ \"FizzBuzz\";\n  }\n  if(n%11!=0){\n    return n%11+\"Fizz\";\n  }\n  if(n%13!=0){\n\
    \    return n%13+\"Buzz\";\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6Fizz'\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpu5m6lz8y.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu5m6lz8y.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6Fizz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i%11 == 0) || (i%13 == 0)){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpr0cc8f48.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr0cc8f48.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpf4grshrk.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf4grshrk.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ console.log(\"Invalid input\");\n  }\n  else{\n    var count = 0;\n    for(var\
    \ i=1;i<=n;i++){\n      if((i%11)==0||(i%13)==0){\n        count++;\n      }\n\
    \    }\n    console.log(count);\n  }\n}\n\nfizz_buzz(11);\nfizz_buzz(13);\nfizz_buzz(19);\n\
    fizz_buzz(29);\nfizz_buzz(37);\nfizz_buzz(47);\nfizz_buzz(59);\nfizz_buzz(69);\n\
    fizz_buzz(79);\nfizz_buzz(89);\nfizz_buzz(99);\nfizz_buzz(111);\nfizz_buzz(131);\n\
    fizz_buzz(151);\nfizz_buzz(171);\nfizz_buzz(191);\nfizz_buzz(211);\nfizz_buzz(231);\n\
    fizz_buzz(251);\nfizz_buzz(271);\nfizz_buzz(291);\nfizz_buzz(311);\nfizz_buzz(331);\n\
    fizz_buzz(351);\nfizz_buzz(371);\nfizz_buzz(391);\nfizz_buzz(411);\nfizz_buzz(431);\n\
    fizz_buzz(451);\nfizz_buzz(471);\nfizz_buzz(491);\nfizz_buzz(511);\nfizz_buzz(531);\
    \ \nfizz_buzz(551);\nfizz_buzz(571);\nfizz_buzz(591);\nfizz_buzz(611);\nfizz_buzz(631);\n\
    fizz_buzz(651);\nfizz_buzz(671);\nfizz_buzz(691);\nfizz_buzz(711);\nfizz_buzz(731);\
    \ \nfizz_buzz(751);\nfizz_buzz(771);\nfizz_buzz(791);\nfizz_buzz(811);\nfizz_buzz(831);\
    \ \nfizz_buzz(851);\nfizz_buzz(871);\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: "1\n2\n2\n4\n5\n7\n9\n11\n13\n14\n16\n18\n21\n23\n27\n30\n34\n37\n40\n43\n\
    46\n49\n53\n56\n59\n63\n66\n69\n72\n75\n78\n82\n85\n89\n91\n94\n98\n101\n105\n\
    108\n111\n114\n117\n120\n124\n126\n130\n133\n137\n140\n7\n"
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp1vqozm1t.js:73:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp1vqozm1t.js:83:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpkyy81snh.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkyy81snh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n43\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpikbn2eix.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpikbn2eix.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i<=n; i++){\n        if((i%11 == 0 && i%13 == 0) || (i%11\
    \ != 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpjm2fgaue.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjm2fgaue.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n43\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpwbwetjyy.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwbwetjyy.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n < 0){\n \
    \   return -1;\n  }\n  if(n === 0){\n    return 0;\n  }\n  if(n === 1){\n    return\
    \ 1;\n  }\n  if(n === 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n\
    \  }\n  if(n === 4){\n    return 4;\n  }\n  if(n === 5){\n    return 5;\n  }\n\
    \  if(n === 6){\n    return 6;\n  }\n  if(n === 7){\n    return 7;\n  }\n  if(n\
    \ === 8){\n    return 8;\n  }\n  if(n === 9){\n    return 9;\n  }\n  if(n ===\
    \ 10){\n    return 10;\n  }\n  if(n === 11){\n    return 11;\n  }\n  if(n ===\
    \ 12){\n    return 12;\n  }\n  if(n === 13){\n    return 13;\n  }\n  if(n ===\
    \ 14){\n    return 14;\n  }\n  if(n === 15){\n    return 15;\n  }\n  if(n ===\
    \ 16){\n    return 16;\n  }\n  if(n === 17){\n    return 17;\n  }\n  if(n ===\
    \ 18){\n    return 18;\n  }\n  if(n === 19){\n    return 19;\n  }\n  if(n ===\
    \ 20){\n    return 20;\n  }\n  if(n === 21){\n    return 21;\n  }\n  if(n ===\
    \ 22){\n    return 22;\n  }\n  if(n === 23){\n    return 23;\n  }\n  if(n ===\
    \ 24){\n    return 24;\n  }\n  if(n === 25){\n    return 25;\n  }\n  if(n ===\
    \ 26){\n    return 26;\n  }\n  if(n === 27){\n    return 27;\n  }\n  if(n ===\
    \ 28){\n    return 28;\n  }\n  if(n === 29){\n    return 29;\n  }\n  if(n ===\
    \ 30){\n    return 30;\n  }\n  if(n === 31){\n    return 31;\n  }\n  if(n ===\
    \ 32){\n    return 32;\n  }\n  if(n === 33){\n    return 33;\n  }\n  if(n ===\
    \ 34){\n    return 34;\n  }\n  if(n === 35){\n    return 35;\n  }\n  if(n ===\
    \ 36){\n    return 36;\n  }\n  if(n === 37){\n    return 37;\n  }\n  if(n ===\
    \ 38){\n    return 38;\n  }\n  if(n === 39){\n    return 39;\n  }\n  if(n ===\
    \ 40){\n    return 40;\n  }\n  if(n === 41){\n    return 41;\n  }\n  if(n ===\
    \ 42){\n    return 42;\n  }\n  if(n === 4\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzs_fr62j.js:136\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n\n  if(n%11==0 || n%13==0) return n\n  else return fizz_buzz(n/10)\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpm47ioxlf.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm47ioxlf.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsihr02rg.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsihr02rg.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp750wo70n.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp750wo70n.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ console.log(\"Invalid input\");\n  }\n  if(n==0){\n    console.log(\"0\");\n\
    \  }\n  if(n==1){\n    console.log(\"1\");\n  }\n  if(n==2){\n    console.log(\"\
    2\");\n  }\n  if(n==3){\n    console.log(\"3\");\n  }\n  if(n==4){\n    console.log(\"\
    4\");\n  }\n  if(n==5){\n    console.log(\"5\");\n  }\n  if(n==6){\n    console.log(\"\
    6\");\n  }\n  if(n==7){\n    console.log(\"7\");\n  }\n  if(n==8){\n    console.log(\"\
    8\");\n  }\n  if(n==9){\n    console.log(\"9\");\n  }\n  if(n==10){\n    console.log(\"\
    10\");\n  }\n  if(n==11){\n    console.log(\"11\");\n  }\n  if(n==12){\n    console.log(\"\
    12\");\n  }\n  if(n==13){\n    console.log(\"13\");\n  }\n  if(n==14){\n    console.log(\"\
    14\");\n  }\n  if(n==15){\n    console.log(\"15\");\n  }\n  if(n==16){\n    console.log(\"\
    16\");\n  }\n  if(n==17){\n    console.log(\"17\");\n  }\n  if(n==18){\n    console.log(\"\
    18\");\n  }\n  if(n==19){\n    console.log(\"19\");\n  }\n  if(n==20){\n    console.log(\"\
    20\");\n  }\n  if(n==21){\n    console.log(\"21\");\n  }\n  if(n==22){\n    console.log(\"\
    22\");\n  }\n  if(n==23){\n    console.log(\"23\");\n  }\n  if(n==24){\n    console.log(\"\
    24\");\n  }\n  if(n==25){\n    console.log(\"25\");\n  }\n  if(n==26){\n    console.log(\"\
    26\");\n  }\n  if(n==27){\n    console.log(\"27\");\n  }\n  if(n==28){\n    console.log(\"\
    28\");\n  }\n  if(n==29){\n    console.log(\"29\");\n  }\n  if(n==30){\n    console.log(\"\
    30\");\n  }\n  if(n==31){\n    console.log(\"31\");\n  }\n  if(n==32){\n    console.log(\"\
    32\");\n  }\n  if(n==33){\n    console.log(\"33\");\n  }\n  if(n==34){\n    console.log(\"\
    34\");\n  }\n  if(n==35){\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplbo6au4j.js:127\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpd9y690l6.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd9y690l6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpr4dn2yrg.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr4dn2yrg.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpx_9rzwys.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx_9rzwys.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n43\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpigkb4a4s.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpigkb4a4s.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i<n; i++){\n        if((i%11)==0 || (i%13)==0){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp0i8zzde9.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0i8zzde9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i<=n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_5emtxy7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_5emtxy7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n%11==0 &&\
    \ n%13==0){\n    return 1;\n  }\n  if(n%11==0){\n    return 2;\n  }\n  if(n%13==0){\n\
    \    return 3;\n  }\n  if(n%11==0 && n%13==0){\n    return 4;\n  }\n  if(n%11==0){\n\
    \    return 5;\n  }\n  if(n%13==0){\n    return 6;\n  }\n  if(n%11==0 && n%13==0){\n\
    \    return 7;\n  }\n  if(n%11==0){\n    return 8;\n  }\n  if(n%13==0){\n    return\
    \ 9;\n  }\n  if(n%11==0 && n%13==0){\n    return 10;\n  }\n  if(n%11==0){\n  \
    \  return 11;\n  }\n  if(n%13==0){\n    return 12;\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpqkb93p1j.js:45:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpqkb93p1j.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ return -1;\n  }\n  if(n%11==0){\n    return 1;\n  }\n  if(n%13==0){\n    return\
    \ 2;\n  }\n  if(n%7==0){\n    return 3;\n  }\n  if(n%5==0){\n    return 4;\n \
    \ }\n  if(n%3==0){\n    return 5;\n  }\n  if(n%2==0){\n    return 6;\n  }\n  if(n==0){\n\
    \    return 7;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbq70yl3b.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbq70yl3b.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n<100) return fizz_buzz(n/10)+(n%10==7?'':'FizzBuzz');\n  if(n<1000)\
    \ return fizz_buzz(n/100)+(n%100==7?'':'FizzBuzz');\n  if(n<10000) return fizz_buzz(n/1000)+(n%1000==7?'':'FizzBuzz');\n\
    \  if(n<100000) return fizz_buzz(n/10000)+(n%10000==7?'':'FizzBuzz');\n  if(n<1000000)\
    \ return fizz_buzz(n/100000)+(n%100000==7?'':'FizzBuzz');\n  if(n<10000000) return\
    \ fizz_buzz(n/1000000)+(n%100000==7?'':'FizzBuzz');\n  if(n<100000000) return\
    \ fizz_buzz(n/10000000)+(n%100000==7?'':'FizzBuzz');\n  if(n<1000000000) return\
    \ fizz_buzz(n/100000000)+(n%100000==7?'':'FizzBuzz');\n  if(n<10000000000) return\
    \ fizz_buzz(n/1000000000)+(n%100000==7?'':'FizzBuzz');\n  if(n<100000000000) return\
    \ fizz_buzz(n/10000000000)+(n%100000==7?'':'FizzBuzz');\n  if(n<1000000000000)\
    \ return fizz_buzz(n/100000000000)+(n%100000==7?'':'FizzBuzz');\n  if(n<10000000000000)\
    \ return fizz_buzz(n/1000000000000)+(n%100000==7?'':'FizzBuzz');\n  if(n<100000000000000)\
    \ return fizz_buzz(n/10000000000000)+(n%100000==7?'':'FizzBuzz');\n  if(n<1000000000000000)\
    \ return fizz_buzz(n/100000000000000)+(n%100000==7?'':'FizzBuzz');\n  if(n<10000000000000000)\
    \ return fizz_buzz(n/1000000000000000)+(n%100000==7?'':'FizzBuzz');\n  if(n<100000000000000000)\
    \ return fizz_buzz(n/10000000000000000)+(n%100000==7?'':'FizzBuzz');\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_xl6hs2m.js:36\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_hu7m0q9.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_hu7m0q9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i%11 == 0 && i%13 == 0) ||\
    \ (i%11 != 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpzl75_7gk.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzl75_7gk.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11==0 && i%13==0)||i%11==0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyns7dudm.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyns7dudm.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpjjasec6z.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjjasec6z.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_t8a633d.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_t8a633d.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n\n  if(n<100) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<1000)\
    \ return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<10000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n\
    \  if(n<100000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<1000000)\
    \ return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<10000000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n\
    \  if(n<100000000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<1000000000)\
    \ return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<10000000000) return\
    \ n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<100000000000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n\
    \  if(n<1000000000000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<10000000000000)\
    \ return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<100000000000000) return\
    \ n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<1000000000000000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n\
    \  if(n<10000000000000000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n \
    \ if(n<10000000000\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpw_uhx5pb.js:20\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0 &&\
    \ i%13 != 0) || (i%11 != 0 && i%13 == 0)){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpktfgdsks.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpktfgdsks.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i % 11) == 0 || (i % 13) == 0){\n   \
    \   count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpypuy_m99.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpypuy_m99.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpf6raqjfh.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf6raqjfh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpt5xvq873.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt5xvq873.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ return -1;\n  }\n  if(n%11==0){\n    return 1;\n  }\n  if(n%13==0){\n    return\
    \ 2;\n  }\n  if(n%7==0){\n    return 3;\n  }\n  if(n%5==0){\n    return 4;\n \
    \ }\n  if(n%3==0){\n    return 5;\n  }\n  if(n%2==0){\n    return 6;\n  }\n  if(n==0){\n\
    \    return 7;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpwp818a1t.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwp818a1t.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10){\n  \
    \  return n\n  }\n  if(n<100){\n    return n\n  }\n  if(n<1000){\n    return n\n\
    \  }\n  if(n<10000){\n    return n\n  }\n  if(n<100000){\n    return n\n  }\n\
    \  if(n<1000000){\n    return n\n  }\n  if(n<10000000){\n    return n\n  }\n \
    \ if(n<100000000){\n    return n\n  }\n  if(n<1000000000){\n    return n\n  }\n\
    \  if(n<10000000000){\n    return n\n  }\n  if(n<100000000000){\n    return n\n\
    \  }\n  if(n<1000000000000){\n    return n\n  }\n  if(n<10000000000000){\n   \
    \ return n\n  }\n  if(n<100000000000000){\n    return n\n  }\n  if(n<1000000000000000){\n\
    \    return n\n  }\n  if(n<10000000000000000){\n    return n\n  }\n  if(n<100000000000000000){\n\
    \    return n\n  }\n  if(n<1000000000000000000){\n    return n\n  }\n  if(n<10000000000000000000){\n\
    \    return n\n  }\n  if(n<100000000000000000000){\n    return n\n  }\n  if(n<1000000000000000000000){\n\
    \    return n\n  }\n  if(n<10000000000000000000000){\n    return n\n  }\n  if(n<100000000000000000000000){\n\
    \    return n\n  }\n  if(n<1000000000000000000000000){\n    return n\n  }\n  if(n<10000000000000000000000000){\n\
    \    return n\n  }\n  if(n<100000000000000000000000000){\n    return n\n  }\n\
    \  if(n<1000000000000000000000000000){\n    return n\n  }\n  if(n<10000000000000000000000000000){\n\
    \    return n\n  }\n  if(n<100000000000000000000000000000){\n    return n\n  }\n\
    \  if(n<1000000000000000000000000000000){\n    return n\n  }\n  if(n<10000000000000000000000000000000){\n\
    \    return n\n  }\n  if(n<100000000000000000000000000000000){\n    return n\n\
    \  }\n  if(n<1000000000000000000000000000000000){\n    return n\n  }\n  if(n<10000000000000000000000000000000000){\n\
    \    return n\n  }\n  if(n<100000000000000000000000000000000000){\n    return\
    \ n\n  }\n  if(n<1000000000000000000000000000000000000){\n    return n\n  }\n\
    \  if\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzeztvre8.js:112\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0 &&\
    \ i%13 != 0) || (i%11 != 0 && i%13 == 0)){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_8qupa9y.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_8qupa9y.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n\n  if(n<100) return n\n  if(n<1000) return n\n  if(n<10000) return n\n  if(n<100000)\
    \ return n\n  if(n<1000000) return n\n  if(n<10000000) return n\n  if(n<100000000)\
    \ return n\n  if(n<1000000000) return n\n  if(n<10000000000) return n\n  if(n<100000000000)\
    \ return n\n  if(n<1000000000000) return n\n  if(n<10000000000000) return n\n\
    \  if(n<100000000000000) return n\n  if(n<1000000000000000) return n\n  if(n<10000000000000000)\
    \ return n\n  if(n<100000000000000000) return n\n  if(n<1000000000000000000) return\
    \ n\n  if(n<10000000000000000000) return n\n  if(n<100000000000000000000) return\
    \ n\n  if(n<1000000000000000000000) return n\n  if(n<10000000000000000000000)\
    \ return n\n  if(n<100000000000000000000000) return n\n  if(n<1000000000000000000000000)\
    \ return n\n  if(n<10000000000000000000000000) return n\n  if(n<100000000000000000000000000)\
    \ return n\n  if(n<1000000000000000000000000000) return n\n  if(n<10000000000000000000000000000)\
    \ return n\n  if(n<100000000000000000000000000000) return n\n  if(n<1000000000000000000000000000000)\
    \ return n\n  if(n<10000000000000000000000000000000) return n\n  if(n<100000000000000000000000000000000)\
    \ return n\n  if(n<1000000000000000000000000000000000) return n\n  if(n<10000000000000000000000000000000000)\
    \ return n\n  if(n<100000000000000000000000000000000000) return n\n  if(n<1000000000000000000000000000000000000)\
    \ return n\n  if(n<10000000000000000000000000000000000000) return n\n  if(n<100000000000000000000000000000000000000)\
    \ return n\n  if(n<1000000000000000000000000000000000000000) return n\n  if(n<10000000000000000000000000000000000000000)\
    \ return n\n  if(n<100000000000000000000000000000000000000000) return n\n  if(n<1000000000000000000000000000000000000000000)\
    \ return n\n  if(n<10000000000000000000000000000000000000000000) return n\n  if(n<100000000000000000000000000000000000000000000)\
    \ return n\n  if(n<1000000000000000000000000000000000000000000000) return n\n\
    \  if(n<10000000000000000000000000000000000000000000000) return n\n  if(n<100000000000000000000000000000000000000000000000)\
    \ return n\n  if(n<1000000000000000000000000000000000000000000000000) return n\n\
    \  \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptybpjb56.js:67\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ return \"Please enter a positive integer\";\n  }\n  if(n%11==0 || n%13==0){\n\
    \    return \"The number \"+n+\" is divisible by 11 or 13\";\n  }\n  if(n%11!=0){\n\
    \    return \"The number \"+n+\" is divisible by 11\";\n  }\n  if(n%13!=0){\n\
    \    return \"The number \"+n+\" is divisible by 13\";\n  }\n  if(n%11==0 && n%13==0){\n\
    \    return \"The number \"+n+\" is divisible by both 11 and 13\";\n  }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'The number 50\
    \ is divisible by 11'\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp0ewgeznm.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0ewgeznm.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'The number\
    \ 50 is divisible by 11',\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp65cdpdla.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp65cdpdla.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i%11 == 0 && i%13 == 0) ||\
    \ (i%11 != 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8yfl4qtf.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8yfl4qtf.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyjsxz9x5.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyjsxz9x5.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11==0 && i%13==0) || (i%11!=0 && i%13==0)){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpwh_btsux.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwh_btsux.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n43\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp444hgkjj.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp444hgkjj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i <= n; i++){\n    if((i%11 == 0 || i%13 == 0) && i%7 == 0){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpd6lk8k2z.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd6lk8k2z.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11==0 && i%13==0)||(i%11==0 && i%13!=0)){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmphe71s7mp.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphe71s7mp.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4oxfbqg3.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4oxfbqg3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp576rcxro.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp576rcxro.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n < 0){\n \
    \   return -1;\n  }\n  if(n % 11 == 0){\n    return 1;\n  }\n  if(n % 13 == 0){\n\
    \    return 2;\n  }\n  if(n % 7 == 0){\n    return 3;\n  }\n  if(n % 5 == 0){\n\
    \    return 4;\n  }\n  if(n % 3 == 0){\n    return 5;\n  }\n  if(n % 2 == 0){\n\
    \    return 6;\n  }\n  if(n % 1 == 0){\n    return 7;\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgt3hw99d.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgt3hw99d.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpcouceq8b.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcouceq8b.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpnu23epgd.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnu23epgd.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmplfa2186s.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfa2186s.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3qc81chk.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3qc81chk.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n < 0){\n \
    \   return -1;\n  }\n  if(n % 11 == 0){\n    return 1;\n  }\n  if(n % 13 == 0){\n\
    \    return 2;\n  }\n  if(n % 7 == 0){\n    return 3;\n  }\n  if(n % 5 == 0){\n\
    \    return 4;\n  }\n  if(n % 3 == 0){\n    return 5;\n  }\n  if(n % 2 == 0){\n\
    \    return 6;\n  }\n  if(n % 1 == 0){\n    return 7;\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmppizjz7re.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppizjz7re.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i<n; i++){\n        if((i%11)==0 || (i%13)==0){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp86a8ixlg.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp86a8ixlg.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0) return\
    \ \"Invalid input\";\n  if(n==0) return \"0\";\n  if(n==1) return \"1\";\n  if(n==2)\
    \ return \"2\";\n  if(n==3) return \"Fizz\";\n  if(n==4) return \"4\";\n  if(n==5)\
    \ return \"Buzz\";\n  if(n==6) return \"FizzBuzz\";\n  if(n==7) return \"7\";\n\
    \  if(n==8) return \"8\";\n  if(n==9) return \"9\";\n  if(n==10) return \"Buzz\"\
    ;\n  if(n==11) return \"11\";\n  if(n==12) return \"FizzBuzz\";\n  if(n==13) return\
    \ \"13\";\n  if(n==14) return \"14\";\n  if(n==15) return \"FizzBuzz\";\n  if(n==16)\
    \ return \"16\";\n  if(n==17) return \"17\";\n  if(n==18) return \"18\";\n  if(n==19)\
    \ return \"19\";\n  if(n==20) return \"Buzz\";\n  if(n==21) return \"21\";\n \
    \ if(n==22) return \"FizzBuzz\";\n  if(n==23) return \"23\";\n  if(n==24) return\
    \ \"24\";\n  if(n==25) return \"FizzBuzz\";\n  if(n==26) return \"26\";\n  if(n==27)\
    \ return \"27\";\n  if(n==28) return \"28\";\n  if(n==29) return \"29\";\n  if(n==30)\
    \ return \"Buzz\";\n  if(n==31) return \"31\";\n  if(n==32) return \"FizzBuzz\"\
    ;\n  if(n==33) return \"33\";\n  if(n==34) return \"34\";\n  if(n==35) return\
    \ \"FizzBuzz\";\n  if(n==36) return \"36\";\n  if(n==37) return \"37\";\n  if(n==38)\
    \ return \"38\";\n  if(n==39) return \"39\";\n  if(n==40) return \"Buzz\";\n \
    \ if(n==41) return \"41\";\n  if(n==42) return \"FizzBuzz\";\n  if(n==43) return\
    \ \"43\";\n  if(n==44) return \"44\";\n  if(n==45) return \"FizzBuzz\";\n  if(n==46)\
    \ return \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzcp_523t.js:66\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpnr0n9c50.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnr0n9c50.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n < 0){\n \
    \   return 0;\n  }\n  if(n % 11 == 0){\n    return 1;\n  }\n  if(n % 13 == 0){\n\
    \    return 2;\n  }\n  return fizz_buzz(n - 1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv4xfoevo.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv4xfoevo.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpe_g4_wzw.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe_g4_wzw.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11)==0 || (i%13)==0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsgtot3st.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsgtot3st.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n%11==0 && n%13==0) return \"FizzBuzz\";\n  if(n%11==0) return \"Fizz\"\
    ;\n  if(n%13==0) return \"Buzz\";\n  return n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4id7un0w.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4id7un0w.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ console.log(\"Invalid input\");\n  }\n  if(n%11==0){\n    console.log(\"Fizz\"\
    );\n  }\n  if(n%13==0){\n    console.log(\"Buzz\");\n  }\n  if(n%7==0){\n    console.log(\"\
    FizzBuzz\");\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpsoj0nwon.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpsoj0nwon.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp274slg_2.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp274slg_2.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n % 11 == 0\
    \ && n % 13 == 0){\n    return 1;\n  }\n  if(n % 11 == 0){\n    return 2;\n  }\n\
    \  if(n % 13 == 0){\n    return 3;\n  }\n  return 4;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpk03k13uo.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk03k13uo.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n43\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpksxx1rdi.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpksxx1rdi.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpnamukhfm.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnamukhfm.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i<n; i++){\n        if((i%11==0 && i%13==0)||(i%11==0\
    \ && i%13==1)){\n            count++;\n        }\n    }\n    return count;\n}\n\
    </code>\n<|/ a tags=javascript,fizzbuzz |>\n<| a tags=javascript,fizzbuzz |>\n\
    <code>\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6k294li9.js:11\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n%11==0 && n%13==0) return 'FizzBuzz';\n  if(n%11!=0 && n%13!=0) return\
    \ 'Fizz';\n  if(n%11==0 && n%13!=0) return 'Buzz';\n  if(n%11!=0 && n%13==0) return\
    \ 'Buzz';\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Fizz'\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmprtuccpml.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprtuccpml.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Fizz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpf1p1r93w.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf1p1r93w.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i % 11 == 0 && i % 13 == 0) || (i % 11\
    \ == 0 && i % 13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpz3fuaxcm.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz3fuaxcm.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3qg31zdq.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3qg31zdq.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n\n  if(n%11==0 && n%13==0) return n\n  if(n%11==0) return n\n  if(n%13==0)\
    \ return n\n  if(n%11==0 && n%13!=0) return n\n  if(n%11!=0 && n%13!=0) return\
    \ n\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpw6g0zh71.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw6g0zh71.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpk56g_cme.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk56g_cme.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpux5a4jr4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpux5a4jr4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n%11==0 && n%13==0) return 'FizzBuzz';\n  if(n%11!=0 && n%13!=0) return\
    \ 'Fizz';\n  if(n%11==0 && n%13!=0) return 'Buzz';\n  if(n%11!=0 && n%13==0) return\
    \ 'Buzz';\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Fizz'\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpvl7f4yes.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvl7f4yes.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Fizz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 1; i <= n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ tags=javascript,fizzbuzz |>\n<| c |>\nI didn't downvote, but this answer doesn't\
    \ actually answer the question. OP wants to know how many times each number appears\
    \ in a list of numbers, not how many times each number appears in a list of strings.\
    \ Your answer just counts how many times each number appears in a list of strings.\n\
    <|/ c |>\n<| c |>\nI see what you mean. I'll edit my answer to reflect that.\n\
    <|/ c |>\n<| c |>\nI edited my answer to reflect your comment. Thanks for pointing\
    \ that out.\n<|/ c |>\n<| c |>\nI edited my answer to reflect your comment. Thanks\
    \ for pointing that out.\n<|/ c |>\n<| c |>\nI edited my answer to reflect your\
    \ comment. Thanks for pointing that out.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdbdl0mpf.js:11\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i%11 == 0 && i%13 == 0) ||\
    \ (i%11 != 0 && i%13 != 0)){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n44\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpl7ys6373.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl7ys6373.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i % 11 == 0 && i % 13 == 0) || (i % 11\
    \ == 0 && i % 13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpub0m8cii.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpub0m8cii.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i % 11) == 0 || i % 13 == 0){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmprrirofay.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprrirofay.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i % 11) == 0 || i % 13 == 0){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmplcgqtgj0.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplcgqtgj0.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 1; i <= n; i++){\n        if((i%11 == 0) || (i%13 == 0)){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpr2nccaa5.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr2nccaa5.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<=n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpov23xnob.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpov23xnob.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if((i % 11 == 0) || (i % 13 ==\
    \ 0)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4bs9grjc.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4bs9grjc.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0) return\
    \ \"Invalid input\";\n  if(n==0) return \"0\";\n  if(n==1) return \"1\";\n  if(n==2)\
    \ return \"2\";\n  if(n==3) return \"Fizz\";\n  if(n==4) return \"4\";\n  if(n==5)\
    \ return \"Buzz\";\n  if(n==6) return \"FizzBuzz\";\n  if(n==7) return \"7\";\n\
    \  if(n==8) return \"8\";\n  if(n==9) return \"9\";\n  if(n==10) return \"10\"\
    ;\n  if(n==11) return \"11\";\n  if(n==12) return \"Fizz\";\n  if(n==13) return\
    \ \"13\";\n  if(n==14) return \"14\";\n  if(n==15) return \"FizzBuzz\";\n  if(n==16)\
    \ return \"16\";\n  if(n==17) return \"17\";\n  if(n==18) return \"18\";\n  if(n==19)\
    \ return \"19\";\n  if(n==20) return \"20\";\n  if(n==21) return \"21\";\n  if(n==22)\
    \ return \"22\";\n  if(n==23) return \"Fizz\";\n  if(n==24) return \"24\";\n \
    \ if(n==25) return \"25\";\n  if(n==26) return \"FizzBuzz\";\n  if(n==27) return\
    \ \"27\";\n  if(n==28) return \"28\";\n  if(n==29) return \"29\";\n  if(n==30)\
    \ return \"30\";\n  if(n==31) return \"31\";\n  if(n==32) return \"Fizz\";\n \
    \ if(n==33) return \"33\";\n  if(n==34) return \"34\";\n  if(n==35) return \"\
    FizzBuzz\";\n  if(n==36) return \"36\";\n  if(n==37) return \"37\";\n  if(n==38)\
    \ return \"38\";\n  if(n==39) return \"39\";\n  if(n==40) return \"40\";\n  if(n==41)\
    \ return \"41\";\n  if(n==42) return \"42\";\n  if(n==43) return \"Fizz\";\n \
    \ if(n==44) return \"44\";\n  if(n==45) return \"45\";\n  if(n==46) return \"\
    FizzBuzz\";\n  if(n==47) return \"47\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxagwb9n0.js:51\n  if(n==47) return \"47\n                   ^^^\n\
    \nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpxbj1hm7l.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxbj1hm7l.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmputrebjfm.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmputrebjfm.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpc6eikrv1.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc6eikrv1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpznabezie.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpznabezie.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n\n  if(n<100) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<1000)\
    \ return n%11==0?'Fizz':n%13==0?'FizzBuzz':'Buzz'\n  if(n<10000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n\
    \  if(n<100000) return n%11==0?'Fizz':n%13==0?'FizzBuzz':'Buzz'\n  if(n<1000000)\
    \ return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<10000000) return n%11==0?'Fizz':n%13==0?'FizzBuzz':'Buzz'\n\
    \  if(n<100000000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<1000000000)\
    \ return n%11==0?'Fizz':n%13==0?'FizzBuzz':'Buzz'\n  if(n<10000000000) return\
    \ n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<100000000000) return n%11==0?'Fizz':n%13==0?'FizzBuzz':'Buzz'\n\
    \  if(n<1000000000000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<10000000000000)\
    \ return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<100000000000000) return\
    \ n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n  if(n<1000000000000000) return n%11==0?'Fizz':n%13==0?'FizzBuzz':'Buzz'\n\
    \  if(n<10000000000000000) return n%11==0?'FizzBuzz':n%13==0?'Fizz':'Buzz'\n \
    \ if(n<10000000000\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3zgfi_r1.js:20\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8pw4idyd.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8pw4idyd.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpivaj55t4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpivaj55t4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 1; i < n; i++){\n    if((i%11 == 0 || i%13 == 0) && i%7 == 0){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmps6se4zf1.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps6se4zf1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n%11==0 && n%13==0) return \"FizzBuzz\";\n  if(n%11==0) return \"Fizz\"\
    ;\n  if(n%13==0) return \"Buzz\";\n  return n;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8o6h2ykj.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8o6h2ykj.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i<n; i++){\n    if((i%11)==0 || (i%13)==0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgbc4v3zc.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgbc4v3zc.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n % 11 == 0\
    \ && n % 13 == 0){\n    return 1;\n  }\n  if(n % 11 != 0 && n % 13 != 0){\n  \
    \  return 2;\n  }\n  if(n % 11 == 0 && n % 13 != 0){\n    return 3;\n  }\n  if(n\
    \ % 11 != 0 && n % 13 == 0){\n    return 4;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpl4y5l_pl.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl4y5l_pl.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpohep_oxg.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpohep_oxg.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ return -1;\n  }\n  if(n%11==0){\n    return 1;\n  }\n  if(n%13==0){\n    return\
    \ 2;\n  }\n  if(n%7==0){\n    return 3;\n  }\n  if(n%5==0){\n    return 4;\n \
    \ }\n  if(n%3==0){\n    return 5;\n  }\n  if(n%2==0){\n    return 6;\n  }\n  if(n==0){\n\
    \    return 7;\n  }\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp41j7d7_2.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp41j7d7_2.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<10) return\
    \ n;\n  if(n%11==0 && n%13==0) return 'FizzBuzz';\n  if(n%11==0) return 'Fizz';\n\
    \  if(n%13==0) return 'Buzz';\n  return n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpz9jocm5c.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz9jocm5c.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpf7pb5vwt.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf7pb5vwt.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n<0){\n   \
    \ return -1;\n  }\n  if(n%11==0){\n    return 1;\n  }\n  if(n%13==0){\n    return\
    \ 2;\n  }\n  if(n%7==0){\n    return 3;\n  }\n  if(n%5==0){\n    return 4;\n \
    \ }\n  if(n%3==0){\n    return 5;\n  }\n  if(n%2==0){\n    return 6;\n  }\n  if(n==0){\n\
    \    return 7;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpeq1vg30b.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeq1vg30b.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i<n; i++){\n        if((i%11==0)&&(i%13==0)){\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1fvjd7eo.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1fvjd7eo.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

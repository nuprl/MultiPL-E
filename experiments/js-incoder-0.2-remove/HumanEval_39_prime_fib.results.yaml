language: js
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===21){\n    return 21;\n  }\n  if(n===23){\n\
    \    return 23;\n  }\n  if(n===29){\n    return 29;\n  }\n  if(n===31){\n    return\
    \ 31;\n  }\n  if(n===37){\n    return 37;\n  }\n  if(n===43){\n    return 43;\n\
    \  }\n  if(n===49){\n    return 49;\n  }\n  if(n===61){\n    return 61;\n  }\n\
    \  if(n===67){\n    return 67;\n  }\n  if(n===73){\n    return 73;\n  }\n  if(n===79){\n\
    \    return 79;\n  }\n  if(n===83){\n    return 83;\n  }\n  if(n===89){\n    return\
    \ 89;\n  }\n  if(n===97){\n    return 97;\n  }\n  if(n===101){\n    return 101;\n\
    \  }\n  if(n===103){\n    return 103;\n  }\n  if(n===107){\n    return 107;\n\
    \  }\n  if(n===109){\n    return 109;\n  }\n  if(n===113){\n    return 113;\n\
    \  }\n  if(n===121){\n    return 121;\n  }\n  if(n===123){\n    return 123;\n\
    \  }\n  if(n===127){\n    return 127;\n  }\n  if(n===131){\n    return 131;\n\
    \  }\n  if(n===135){\n    return 135;\n  }\n  if(n===137){\n    return 137;\n\
    \  }\n  if(n===139){ //prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    return 139;\n  }\n  if(n===141){\n    return 141;\n\
    \  }\n  if(n===143){\n    return 143;\n  }\n  if(n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpoq3z3d5g.js:115\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var prime_fib_array = [];\n    var prime_fib_array_length\
    \ = prime_fib_array.length;\n    var prime_fib_array_counter = 0;\n    var prime_fib_array_counter2\
    \ = 0;\n    var prime_fib_array_counter3 = 0;\n    var prime_fib_array_counter4\
    \ = 0;\n    var prime_fib_array_counter5 = 0;\n    var prime_fib_array_counter6\
    \ = 0;\n    var prime_fib_array_counter7 = 0;\n    var prime_fib_array_counter8\
    \ = 0;\n    var prime_fib_array_counter9 = 0;\n    var prime_fib_array_counter10\
    \ = 0;\n    var prime_fib_array_counter11 = 0;\n    var prime_fib_array_counter12\
    \ = 0;\n    var prime_fib_array_counter13 = 0;\n    var prime_fib_array_counter14\
    \ = 0;\n    var prime_fib_array_counter15 = 0;\n    var prime_fib_array_counter16\
    \ = 0;\n    var prime_fib_array_counter17 = 0;\n    var prime_fib_array_counter18\
    \ = 0;\n    var prime_fib_array_counter19 = 0;\n    var prime_fib_array_counter20\
    \ = 0;\n    var prime_fib_array_counter21 = 0;\n    var prime_fib_array_counter22\
    \ = 0;\n    var prime_fib_array_counter23 = 0;\n    var prime_fib_array_counter24\
    \ = 0;\n    var prime_fib_array_counter25 = 0;\n    var prime_fib_array_counter26\
    \ = 0;\n    var prime_fib_array_counter27 = 0;\n    var prime_fib_array_counter28\
    \ = 0;\n    var prime_fib_array_counter29 = 0;\n    var prime_fib_array_counter30\
    \ = 0;\n    var prime_fib_array_counter31 = 0;\n    var prime_fib_array_counter32\
    \ = 0;\n    var prime_fib_array_counter33 = 0;\n    var prime_fib_array_counter34\
    \ = 0;\n    var prime_fib_array_counter35 = 0;\n    var prime_fib_array_counter36\
    \ = 0;\n    var prime_fib_array_counter37 = 0;\n    var prime_fib_array_counter38\
    \ = 0;\n    var prime_fib_array_counter39 = 0;\n    var prime_fib_array_counter40\
    \ = 0;\n    var prime_fib_array_counter41 = 0;\n    var prime_fib_array_counter42\
    \ = 0;\n    var prime_fib_array_counter43 = 0;\n    var prime_fib_array_counter44\
    \ = 0;\n    var prime_fib_array_counter45 = 0;\n    var prime_fib_array_counter46\
    \ = 0;\n    var prime_fib_array_counter47 = 0;\n    var prime_fib_array_counter48\
    \ = 0;\n    var prime_fib_array_counter49 = 0;\n    var prime_fib_\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp8tevr2tl.js:72\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n < 2){\n    return 1;\n  }\n  if(n ===\
    \ 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n  if(n === 4){\n\
    \    return 5;\n  }\n  if(n === 5){\n    return 8;\n  }\n  if(n === 6){\n    return\
    \ 11;\n  }\n  if(n === 7){\n    return 13;\n  }\n  if(n === 8){\n    return 15;\n\
    \  }\n  if(n === 9){\n    return 21;\n  }\n  if(n === 10){\n    return 25;\n \
    \ }\n  if(n === 11){\n    return 29;\n  }\n  if(n === 12){\n    return 33;\n \
    \ }\n  if(n === 13){\n    return 37;\n  }\n  if(n === 14){\n    return 41;\n \
    \ }\n  if(n === 15){\n    return 43;\n  }\n  if(n === 16){\n    return 55;\n \
    \ }\n  if(n === 17){\n    return 59;\n  }\n  if(n === 18){\n    return 61;\n \
    \ }\n  if(n === 19){\n    return 67;\n  }\n  if(n === 20){\n    return 71;\n \
    \ }\n  if(n === 21){\n    return 73;\n  }\n  if(n === 22){\n    return 79;\n \
    \ }\n  if(n === 23){\n    return 83;\n  }\n  if(n === 24){\n    return 89;\n \
    \ }\n  if(n === 25){\n    return 97;\n  }\n  if(n === 26){\n    return 101;\n\
    \  }\n  if(n === 27){\n    return 103;\n  }\n  if(n === 28){\n    return 105;\n\
    \  }\n  if(n === 29){\n    return 107;\n  }\n  if(n === 30){\n    return 111;\n\
    \  }\n  if(n === 31){\n    return 113;\n  }\n  if(n === 32){\n    return 115;\n\
    \  }\n  if(n === 33){\n    return 117;\n  }\n  if(n === 34){\n    return 119;\n\
    \  }\n  if(n === 35){\n    return 121;\n  }\n  if(n === 36){\n    return 123;\n\
    \  }\n  if(n === 37){\n    return 125;\n  }\n  if(n === 38){\n    return 127;\n\
    \  }\n  if(n === 39){\n    return 129;\n  }\n  if(n === 40){\n    return 131;\n\
    \  }\n  if(n === 41){\n    return 133;\n  }\n  if(n === 42){\n    return 135;\n\
    \  }\n  if(n === 43){\n    return 137;\n  }\n  \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpg5a1ck8w.js:150\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var a = 0;\n  var b = 1;\n  for(var i = 2;\
    \ i <= n; i++){\n    var temp = a;\n    a = b;\n    b = temp + b;\n  }\n  return\
    \ b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_b99r0w5.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_b99r0w5.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttghh67m.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpttghh67m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  var fib=prime_fib(n-1);\n\
    \  return fib+fib;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpokv6z4tq.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpokv6z4tq.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var a = 0;\n  var b = 0;\n  var c = 1;\n \
    \ for(var i = 0; i <= n; i++){\n    c = a + b;\n    a = b;\n    b = c;\n  }\n\
    \  return b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpm3eez5al.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm3eez5al.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar i, fib_number, prime_number;\n\t\n\tfib_number\
    \ = 1;\n\tprime_number = 1;\n\t\n\tfor(i = 2; i <= n; i++){\n\t\tfib_number =\
    \ fib_number + i;\n\t\tprime_number = prime_number + fib_number;\n\t}\n\t\n\t\
    return prime_number;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp43ggk6h_.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp43ggk6h_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n===2){\n\
    \t\treturn 2;\n\t}\n\tif(n===3){\n\t\treturn 3;\n\t}\n\tif(n===5){\n\t\treturn\
    \ 5;\n\t}\n\tif(n===7){\n\t\treturn 7;\n\t}\n\tif(n===11){\n\t\treturn 11;\n\t\
    }\n\tif(n===13){\n\t\treturn 13;\n\t}\n\tif(n===17){\n\t\treturn 17;\n\t}\n\t\
    if(n===19){\n\t\treturn 19;\n\t}\n\tif(n===21){\n\t\treturn 21;\n\t}\n\tif(n===23){\n\
    \t\treturn 23;\n\t}\n\tif(n===29){\n\t\treturn 29;\n\t}\n\tif(n===31){\n\t\treturn\
    \ 31;\n\t}\n\tif(n===37){\n\t\treturn 37;\n\t}\n\tif(n===43){\n\t\treturn 43;\n\
    \t}\n\tif(n===47){\n\t\treturn 47;\n\t}\n\tif(n===53){\n\t\treturn 53;\n\t}\n\t\
    if(n===59){\n\t\treturn 59;\n\t}\n\tif(n===61){\n\t\treturn 61;\n\t}\n\tif(n===67){\n\
    \t\treturn 67;\n\t}\n\tif(n===73){\n\t\treturn 73;\n\t}\n\tif(n===79){\n\t\treturn\
    \ 79;\n\t}\n\tif(n===83){\n\t\treturn 83;\n\t}\n\tif(n===89){\n\t\treturn 89;\n\
    \t}\n\tif(n===97){\n\t\treturn 97;\n\t}\n\tif(n===101){\n\t\treturn 101;\n\t}\n\
    \tif(n===103){\n\t\treturn 103;\n\t}\n\tif(n===107){\n\t\treturn 107;\n\t}\n\t\
    if(n===109){\n\t\treturn 109;\n\t}\n\tif(n===113){\n\t\treturn 113;\n\t}\n\tif(n===121){\n\
    \t\treturn 121;\n\t}\n\tif(n===123){\n\t\treturn 123;\n\t}\n\tif(n===127){\n\t\
    \treturn 127;\n\t}\n\tif(n===131){\n\t\treturn 131;\n\t}\n\tif(n===135){\n\t\t\
    return 135;\n\t}\n\tif(n===137){\n\t\treturn 137;\n\t}\n\tif(n===139){\n\t\treturn\
    \ 139;\n\t}\n\tif(n===143){\n\t\treturn 143;\n\t}\n\tif(n===145){\n\t\treturn\
    \ 145;\n\t}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmphmt4ku67.js:137\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar a = 0;\n\tvar b = 0;\n\tvar c = 0;\n\t\
    var d = 1;\n\tvar e = 1;\n\tvar f = 1;\n\tvar g = n;\n\t\n\twhile(true){\n\t\t\
    if((g%2) == 0){\n\t\t\tg = g / 2;\n\t\t\ta = a + 1;\n\t\t}\n\t\telse{\n\t\t\t\
    g = g / 2;\n\t\t\tb = b + 1;\n\t\t}\n\t\t\n\t\tif((g%2) == 0){\n\t\t\tg = g /\
    \ 2;\n\t\t\tc = c + 1;\n\t\t}\n\t\telse{\n\t\t\tg = g / 2;\n\t\t\td = d + 1;\n\
    \t\t}\n\t\t\n\t\tif((g%2) == 0){\n\t\t\tg = g / 2;\n\t\t\te = e + 1;\n\t\t}\n\t\
    \telse{\n\t\t\tg = g / 2;\n\t\t\tf = f + 1;\n\t\t}\n\t\t\n\t\tif((g%2) == 0){\n\
    \t\t\tg = g / 2;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn [a,b,c,d,e,f];\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  359,\n\
    \  1,\n  359,\n  2,\n  359\n]\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpt26e9nds.js:53:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt26e9nds.js:65:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 359,\
    \ 1, 359, 2, 359 ],\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var arr = [];\n  for(var i = 0; i <= n; i++){\n\
    \    arr.push(i);\n  }\n  var prime_arr = prime_fib(arr);\n  if(prime_arr.indexOf(n)\
    \ > -1){\n    return n;\n  }\n  else{\n    return prime_arr[n];\n  }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3n81axy9.js:4\n  for(var i = 0; i <= n; i++){\n               \
    \    ^\n\nRangeError: Maximum call stack size exceeded\n    at Array.join (<anonymous>)\n\
    \    at Array.toString (<anonymous>)\n    at prime_fib (/tmp/tmp3n81axy9.js:4:20)\n\
    \    at prime_fib (/tmp/tmp3n81axy9.js:7:19)\n    at prime_fib (/tmp/tmp3n81axy9.js:7:19)\n\
    \    at prime_fib (/tmp/tmp3n81axy9.js:7:19)\n    at prime_fib (/tmp/tmp3n81axy9.js:7:19)\n\
    \    at prime_fib (/tmp/tmp3n81axy9.js:7:19)\n    at prime_fib (/tmp/tmp3n81axy9.js:7:19)\n\
    \    at prime_fib (/tmp/tmp3n81axy9.js:7:19)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n===2){\n\
    \t\treturn 2;\n\t}\n\tif(n===3){\n\t\treturn 3;\n\t}\n\tif(n===5){\n\t\treturn\
    \ 5;\n\t}\n\tif(n===7){\n\t\treturn 7;\n\t}\n\tif(n===11){\n\t\treturn 11;\n\t\
    }\n\tif(n===13){\n\t\treturn 13;\n\t}\n\tif(n===17){\n\t\treturn 17;\n\t}\n\t\
    if(n===19){\n\t\treturn 19;\n\t}\n\tif(n===21){\n\t\treturn 21;\n\t}\n\tif(n===23){\n\
    \t\treturn 23;\n\t}\n\tif(n===29){\n\t\treturn 29;\n\t}\n\tif(n===31){\n\t\treturn\
    \ 31;\n\t}\n\tif(n===37){\n\t\treturn 37;\n\t}\n\tif(n===43){\n\t\treturn 43;\n\
    \t}\n\tif(n===47){\n\t\treturn 47;\n\t}\n\tif(n===53){\n\t\treturn 53;\n\t}\n\t\
    if(n===59){\n\t\treturn 59;\n\t}\n\tif(n===61){\n\t\treturn 61;\n\t}\n\tif(n===67){\n\
    \t\treturn 67;\n\t}\n\tif(n===73){\n\t\treturn 73;\n\t}\n\tif(n===79){\n\t\treturn\
    \ 79;\n\t}\n\tif(n===83){\n\t\treturn 83;\n\t}\n\tif(n===89){\n\t\treturn 89;\n\
    \t}\n\tif(n===97){\n\t\treturn 97;\n\t}\n\tif(n===101){\n\t\treturn 101;\n\t}\n\
    \tif(n===103){\n\t\treturn 103;\n\t}\n\tif(n===107){\n\t\treturn 107;\n\t}\n\t\
    if(n===109){\n\t\treturn 109;\n\t}\n\tif(n===111){\n\t\treturn 111;\n\t}\n\tif(n===123){\n\
    \t\treturn 123;\n\t}\n\tif(n===127){\n\t\treturn 127;\n\t}\n\tif(n===131){\n\t\
    \treturn 131;\n\t}\n\tif(n===135){\n\t\treturn 135;\n\t}\n\tif(n===137){\n\t\t\
    return 137;\n\t}\n\tif(n===139){\n\t\treturn 139;\n\t}\n\tif(n===141){\n\t\treturn\
    \ 141;\n\t}\n\tif(n===143){\n\t\treturn 143;\n\t}\n\tif(n===147){\n\t\treturn\
    \ 147;\n\t}\n\t\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpgo34r2a6.js:138\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttghh67m.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpttghh67m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n === 0 || n === 1){\n    return 1;\n \
    \ }\n  if(n === 2){\n    return 2;\n  }\n  if(n % 2 === 0){\n    return prime_fib(Math.floor(n\
    \ / 2)) + prime_fib(Math.floor(n / 2) + 1);\n  }\n  if(n % 3 === 0){\n    return\
    \ prime_fib(Math.floor(n / 3)) + prime_fib(Math.floor(n / 3) + 1) + prime_fib(Math.floor(n\
    \ / 3) + 2);\n  }\n  if(n % 5 === 0){\n    return prime_fib(Math.floor(n / 5))\
    \ + prime_fib(Math.floor(n / 5) + 1) + prime_fib(Math.floor(n / 5) + 2) + prime_fib(Math.floor(n\
    \ / 5) + 3) + prime_fib(Math.floor(n / 5) + 4);\n  }\n  if(n % 7 === 0){\n   \
    \ return prime_fib(Math.floor(n / 7)) + prime_fib(Math.floor(n / 7) + 1) + prime_fib(Math.floor(n\
    \ / 7) + 2) + prime_fib(Math.floor(n / 7) + 3) + prime_fib(Math.floor(n / 7) +\
    \ 4) + prime_fib(Math.floor(n / 7) + 5);\n  }\n  if(n % 11 === 0){\n    return\
    \ prime_fib(Math.floor(n / 11)) + prime_fib(Math.floor(n / 11) + 1) + prime_fib(Math.floor(n\
    \ / 11) + 2) + prime_fib(Math.floor(n / 11) + 3) + prime_fib(Math.floor(n / 11)\
    \ + 4) + prime_fib(Math.floor(n / 11) + 5) + prime_fib(Math.floor(n / 11) + 6);\n\
    \  }\n  if(n % 13 === 0){\n    return prime_fib(Math.floor(n / 13)) + prime_fib(Math.floor(n\
    \ / 13) + 1) + prime_fib(Math.floor(n / 13) + 2) + prime_fib(Math.floor(n / 13)\
    \ + 3) + prime_fib(Math.floor(n / 13) + 4) + prime_fib(Math.floor(n / 13) + 5)\
    \ + prime_fib(Math.floor(n / 13) + 6) + prime_fib(Math.floor(n / 13) + 7);\n \
    \ }\n  if(n % 17 === 0){\n    return prime_fib(Math.floor(n / 17)) + prime_fib(Math.floor(n\
    \ / 17) + 1) + prime_fib(Math.floor(n / 17) + 2) + prime_fib(Math.floor(n / 17)\
    \ + 3) + prime_fib(Math.floor(n / 17) + 4) + prime_fib(Math.floor(n / 17) + 5)\
    \ + prime_fib(Math.floor(n / 17) + 6) + prime_fib(Math.floor(n / 17) + 7) + prime_fib(Math.floor(n\
    \ / 17) + 8);\n  }\n  if(n % 19\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpmmb7mwke.js:31\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttghh67m.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpttghh67m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar i, fib_number, prime_number;\n\t\n\tif(n<=1){\n\
    \t\treturn 1;\n\t}\n\t\n\tfib_number = prime_fib(n-1);\n\tprime_number = 1;\n\t\
    \n\tfor(i=2;i<=n;i++){\n\t\tif((fib_number+prime_number)%i === 0){\n\t\t\tprime_number++;\n\
    \t\t}\n\t\tfib_number = (fib_number+prime_number)%i;\n\t}\n\t\n\treturn fib_number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpvj9y1h4u.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvj9y1h4u.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\treturn prime_fib(n\
    \ - 1) + prime_fib(n - 2);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp20wr1xus.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp20wr1xus.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===21){\n    return 21;\n  }\n  if(n===23){\n\
    \    return 23;\n  }\n  if(n===25){\n    return 25;\n  }\n  if(n===27){\n    return\
    \ 27;\n  }\n  if(n===29){\n    return 29;\n  }\n  if(n===31){\n    return 31;\n\
    \  }\n  if(n===33){\n    return 33;\n  }\n  if(n===35){\n    return 35;\n  }\n\
    \  if(n===37){\n    return 37;\n  }\n  if(n===39){\n    return 39;\n  }\n  if(n===41){\n\
    \    return 41;\n  }\n  if(n===43){\n    return 43;\n  }\n  if(n===45){\n    return\
    \ 45;\n  }\n  if(n===47){\n    return 47;\n  }\n  if(n===49){\n    return 49;\n\
    \  }\n  if(n===51){\n    return 51;\n  }\n  if(n===53){\n    return 53;\n  }\n\
    \  if(n===55){\n    return 55;\n  }\n  if(n===57){\n    return 57;\n  }\n  if(n===59){\n\
    \    return 59;\n  }\n  if(n===61){\n    return 61;\n  }\n  if(n===63){\n    return\
    \ 63;\n  }\n  if(n===65){\n    return 65;\n  }\n  if(n===67){\n    return 67;\n\
    \  }\n  if(n===69){\n    return 69;\n  }\n  if(n===71){\n    return 71;\n  }\n\
    \  if(n===73){\n    return 73;\n  }\n  if(n===75){\n    return 75;\n  }\n  if(n===77){\n\
    \    return 77;\n  }\n  if(n===79){\n    return 79;\n  }\n  if(n===81)\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyaid3968.js:121\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var primes = [];\n    var fibs = [];\n \
    \   var fibs_length = 0;\n    var fibs_sum = 0;\n    var fibs_sum2 = 0;\n    var\
    \ fibs_sum3 = 0;\n    var fibs_sum4 = 0;\n    var fibs_sum5 = 0;\n    var fibs_sum6\
    \ = 0;\n    var fibs_sum7 = 0;\n    var fibs_sum8 = 0;\n    var fibs_sum9 = 0;\n\
    \    var fibs_sum10 = 0;\n    var fibs_sum11 = 0;\n    var fibs_sum12 = 0;\n \
    \   var fibs_sum13 = 0;\n    var fibs_sum14 = 0;\n    var fibs_sum15 = 0;\n  \
    \  var fibs_sum16 = 0;\n    var fibs_sum17 = 0;\n    var fibs_sum18 = 0;\n   \
    \ var fibs_sum19 = 0;\n    var fibs_sum20 = 0;\n    var fibs_sum21 = 0;\n    var\
    \ fibs_sum22 = 0;\n    var fibs_sum23 = 0;\n    var fibs_sum24 = 0;\n    var fibs_sum25\
    \ = 0;\n    var fibs_sum26 = 0;\n    var fibs_sum27 = 0;\n    var fibs_sum28 =\
    \ 0;\n    var fibs_sum29 = 0;\n    var fibs_sum30 = 0;\n    var fibs_sum31 = 0;\n\
    \    var fibs_sum32 = 0;\n    var fibs_sum33 = 0;\n    var fibs_sum34 = 0;\n \
    \   var fibs_sum35 = 0;\n    var fibs_sum36 = 0;\n    var fibs_sum37 = 0;\n  \
    \  var fibs_sum38 = 0;\n    var fibs_sum39 = 0;\n    var fibs_sum40 = 0;\n   \
    \ var fibs_sum41 = 0;\n    var fibs_sum42 = 0;\n    var fibs_sum43 = 0;\n    var\
    \ fibs_sum44 = 0;\n    var fibs_sum45 = 0;\n    var fibs_sum46 = 0;\n    var fibs_sum47\
    \ = 0;\n    var fibs_sum48 = 0;\n    var fibs_sum49 = 0;\n    var fibs_sum50 =\
    \ 0;\n    var fibs_sum51 = 0;\n    var fibs_sum52 = 0;\n    var fibs_sum53 = 0;\n\
    \    var fibs_sum54 = 0;\n    var fibs_sum55 = 0;\n    var fibs_sum56 = 0;\n \
    \   var fibs_sum57 = 0;\n    var fibs_sum58 = 0;\n    var fibs_sum59 = 0;\n  \
    \  var fibs_sum60 = 0;\n    var fibs_sum61 = 0;\n    var fibs_sum62 = 0;\n   \
    \ var fibs_sum63 = 0;\n    var fibs_sum64 = 0;\n    var fibs_sum65 = 0;\n    var\
    \ fibs_sum66 = 0;\n    var fibs_sum67 = 0;\n    var fibs_sum68 = 0;\n    var fibs_sum69\
    \ = 0;\n    var fibs_sum70 = 0;\n    var fibs_sum71 = 0;\n    var fibs_sum72 =\
    \ 0;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpmnk10d3e.js:95\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar prime_fib_array = [];\n\tvar prime_fib_array_length\
    \ = prime_fib_array.length;\n\tvar prime_fib_array_counter = 0;\n\tvar prime_fib_array_counter2\
    \ = 0;\n\tvar prime_fib_array_counter3 = 0;\n\tvar prime_fib_array_counter4 =\
    \ 0;\n\tvar prime_fib_array_counter5 = 0;\n\tvar prime_fib_array_counter6 = 0;\n\
    \tvar prime_fib_array_counter7 = 0;\n\tvar prime_fib_array_counter8 = 0;\n\tvar\
    \ prime_fib_array_counter9 = 0;\n\tvar prime_fib_array_counter10 = 0;\n\tvar prime_fib_array_counter11\
    \ = 0;\n\tvar prime_fib_array_counter12 = 0;\n\tvar prime_fib_array_counter13\
    \ = 0;\n\tvar prime_fib_array_counter14 = 0;\n\tvar prime_fib_array_counter15\
    \ = 0;\n\tvar prime_fib_array_counter16 = 0;\n\tvar prime_fib_array_counter17\
    \ = 0;\n\tvar prime_fib_array_counter18 = 0;\n\tvar prime_fib_array_counter19\
    \ = 0;\n\tvar prime_fib_array_counter20 = 0;\n\tvar prime_fib_array_counter21\
    \ = 0;\n\tvar prime_fib_array_counter22 = 0;\n\tvar prime_fib_array_counter23\
    \ = 0;\n\tvar prime_fib_array_counter24 = 0;\n\tvar prime_fib_array_counter25\
    \ = 0;\n\tvar prime_fib_array_counter26 = 0;\n\tvar prime_fib_array_counter27\
    \ = 0;\n\tvar prime_fib_array_counter28 = 0;\n\tvar prime_fib_array_counter29\
    \ = 0;\n\tvar prime_fib_array_counter30 = 0;\n\tvar prime_fib_array_counter31\
    \ = 0;\n\tvar prime_fib_array_counter32 = 0;\n\tvar prime_fib_array_counter33\
    \ = 0;\n\tvar prime_fib_array_counter34 = 0;\n\tvar prime_fib_array_counter35\
    \ = 0;\n\tvar prime_fib_array_counter36 = 0;\n\tvar prime_fib_array_counter37\
    \ = 0;\n\tvar prime_fib_array_counter38 = 0;\n\tvar prime_fib_array_counter39\
    \ = 0;\n\tvar prime_fib_array_counter40 = 0;\n\tvar prime_fib_array_counter41\
    \ = 0;\n\tvar prime_fib_array_counter42 = 0;\n\tvar prime_fib_array_counter43\
    \ = 0;\n\tvar prime_fib_array_counter44 = 0;\n\tvar prime_fib_array_counter45\
    \ = 0;\n\tvar prime_fib_array_counter46 = 0;\n\tvar prime_fib_array_counter47\
    \ = 0;\n\tvar prime_fib_array_counter48 = 0;\n\tvar prime_fib_array_counter49\
    \ = 0;\n\tvar prime_fib_\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpariw_moq.js:72\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var arr = [];\n  for(var i = 0; i <= n; i++){\n\
    \    arr.push(i);\n  }\n  for(var i = 2; i <= Math.sqrt(n); i++){\n    if(arr[i]\
    \ === 0){\n      arr[i] = 1;\n    }\n    else if(arr[i] === 1){\n      arr[i]\
    \ = 2;\n    }\n    else if(arr[i] === 2){\n      arr[i] = 3;\n    }\n    else\
    \ if(arr[i] === 3){\n      arr[i] = 4;\n    }\n    else if(arr[i] === 4){\n  \
    \    arr[i] = 5;\n    }\n    else if(arr[i] === 5){\n      arr[i] = 6;\n    }\n\
    \    else if(arr[i] === 6){\n      arr[i] = 7;\n    }\n    else if(arr[i] ===\
    \ 7){\n      arr[i] = 8;\n    }\n    else if(arr[i] === 8){\n      arr[i] = 9;\n\
    \    }\n    else if(arr[i] === 9){\n      arr[i] = 10;\n    }\n    else if(arr[i]\
    \ === 10){\n      arr[i] = 11;\n    }\n    else if(arr[i] === 11){\n      arr[i]\
    \ = 12;\n    }\n    else if(arr[i] === 12){\n      arr[i] = 13;\n    }\n    else\
    \ if(arr[i] === 13){\n      arr[i] = 14;\n    }\n    else if(arr[i] === 14){\n\
    \      arr[i] = 15;\n    }\n    else if(arr[i] === 15){\n      arr[i] = 16;\n\
    \    }\n    else if(arr[i] === 16){\n      arr[i] = 17;\n    }\n    else if(arr[i]\
    \ === 17){\n      arr[i] = 18;\n    }\n    else if(arr[i] === 18){\n      arr[i]\
    \ = 19;\n    }\n    else if(arr[i] === 19){\n      arr[i] = 20;\n    }\n    else\
    \ if(arr[i] === 20){\n      arr[i] = 21;\n    }\n    else if(arr[i] === 21){\n\
    \      arr[i] = 22;\n    }\n    else if(arr[i] === 22){\n      arr[i] = 23;\n\
    \    }\n    else if(arr[i] === 23){\n      arr[i] = 24;\n    }\n    else if(arr[i]\
    \ === 24){\n      arr[i] = 25;\n    }\n    else if(arr[i] === 25){\n      arr[i]\
    \ = 26;\n    }\n    else if(arr[i] === 26){\n      arr[i] = 27;\n    }\n    else\
    \ if(arr[i] === 27){\n      arr[i] = 28;\n    }\n    else if(arr[i] === 28){\n\
    \      arr[i] = 29;\n    }\n    else if(arr[i] === 29){\n      arr[i] = 30;\n\
    \    }\n    else if(arr[i] === 30){\n      arr[i] = 31;\n    }\n    else if(\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_t32rkl9.js:102\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar fib_num;\n\tvar prime_flag;\n\tvar i;\n\
    \tvar prime_fib_num;\n\tvar prime_fib_num_flag;\n\tvar prime_fib_num_flag2;\n\t\
    var prime_fib_num_flag3;\n\tvar prime_fib_num_flag4;\n\tvar prime_fib_num_flag5;\n\
    \tvar prime_fib_num_flag6;\n\tvar prime_fib_num_flag7;\n\tvar prime_fib_num_flag8;\n\
    \tvar prime_fib_num_flag9;\n\tvar prime_fib_num_flag10;\n\tvar prime_fib_num_flag11;\n\
    \tvar prime_fib_num_flag12;\n\tvar prime_fib_num_flag13;\n\tvar prime_fib_num_flag14;\n\
    \tvar prime_fib_num_flag15;\n\tvar prime_fib_num_flag16;\n\tvar prime_fib_num_flag17;\n\
    \tvar prime_fib_num_flag18;\n\tvar prime_fib_num_flag19;\n\tvar prime_fib_num_flag20;\n\
    \tvar prime_fib_num_flag21;\n\tvar prime_fib_num_flag22;\n\tvar prime_fib_num_flag23;\n\
    \tvar prime_fib_num_flag24;\n\tvar prime_fib_num_flag25;\n\tvar prime_fib_num_flag26;\n\
    \tvar prime_fib_num_flag27;\n\tvar prime_fib_num_flag28;\n\tvar prime_fib_num_flag29;\n\
    \tvar prime_fib_num_flag30;\n\tvar prime_fib_num_flag31;\n\tvar prime_fib_num_flag32;\n\
    \tvar prime_fib_num_flag33;\n\tvar prime_fib_num_flag34;\n\tvar prime_fib_num_flag35;\n\
    \tvar prime_fib_num_flag36;\n\tvar prime_fib_num_flag37;\n\tvar prime_fib_num_flag38;\n\
    \tvar prime_fib_num_flag39;\n\tvar prime_fib_num_flag40;\n\tvar prime_fib_num_flag41;\n\
    \tvar prime_fib_num_flag42;\n\tvar prime_fib_num_flag43;\n\tvar prime_fib_num_flag44;\n\
    \tvar prime_fib_num_flag45;\n\tvar prime_fib_num_flag46;\n\tvar prime_fib_num_flag47;\n\
    \tvar prime_fib_num_flag48;\n\tvar prime_fib_num_flag49;\n\tvar prime_fib_num_flag50;\n\
    \tvar prime_fib_num_flag5\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpmbh9ykdm.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar a = 0, b = 1, c;\n\tfor(var i = 0; i <\
    \ n; i++){\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpwljsqp3e.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwljsqp3e.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar i, fib_number, prime_number;\n\tfor(i=1;i<=n;i++){\n\
    \t\tfib_number = i;\n\t\tprime_number = 1;\n\t\twhile(fib_number <= n){\n\t\t\t\
    if(fib_number % 2 === 0){\n\t\t\t\tprime_number = prime_number * 2;\n\t\t\t}\n\
    \t\t\tfib_number = fib_number + 1;\n\t\t}\n\t\tif(prime_number === n){\n\t\t\t\
    return i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp6ieptdxf.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6ieptdxf.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib=1;\n    var prime=1;\n    for(var\
    \ i=2; i<=n; i++){\n        fib=fib+i;\n        if(fib%2==0){\n            prime=false;\n\
    \        }\n    }\n    if(prime){\n        return fib;\n    }else{\n        return\
    \ -1;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmph388q1oa.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph388q1oa.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n===2){\n\
    \t\treturn 2;\n\t}\n\tif(n===3){\n\t\treturn 3;\n\t}\n\tif(n===5){\n\t\treturn\
    \ 5;\n\t}\n\tif(n===7){\n\t\treturn 7;\n\t}\n\tif(n===11){\n\t\treturn 11;\n\t\
    }\n\tif(n===13){\n\t\treturn 13;\n\t}\n\tif(n===17){\n\t\treturn 17;\n\t}\n\t\
    if(n===19){\n\t\treturn 19;\n\t}\n\tif(n===21){\n\t\treturn 21;\n\t}\n\tif(n===23){\n\
    \t\treturn 23;\n\t}\n\tif(n===29){\n\t\treturn 29;\n\t}\n\tif(n===31){\n\t\treturn\
    \ 31;\n\t}\n\tif(n===37){\n\t\treturn 37;\n\t}\n\tif(n===43){\n\t\treturn 43;\n\
    \t}\n\tif(n===47){\n\t\treturn 47;\n\t}\n\tif(n===53){\n\t\treturn 53;\n\t}\n\t\
    if(n===59){\n\t\treturn 59;\n\t}\n\tif(n===61){\n\t\treturn 61;\n\t}\n\tif(n===67){\n\
    \t\treturn 67;\n\t}\n\tif(n===73){\n\t\treturn 73;\n\t}\n\tif(n===79){\n\t\treturn\
    \ 79;\n\t}\n\tif(n===83){\n\t\treturn 83;\n\t}\n\tif(n===89){\n\t\treturn 89;\n\
    \t}\n\tif(n===97){\n\t\treturn 97;\n\t}\n\tif(n===101){\n\t\treturn 101;\n\t}\n\
    \tif(n===103){\n\t\treturn 103;\n\t}\n\tif(n===105){\n\t\treturn 105;\n\t}\n\t\
    if(n===107){\n\t\treturn 107;\n\t}\n\tif(n===109){\n\t\treturn 109;\n\t}\n\tif(n===111){\n\
    \t\treturn 111;\n\t}\n\tif(n===113){\n\t\treturn 113;\n\t}\n\tif(n===121){\n\t\
    \treturn 121;\n\t}\n\tif(n===123){\n\t\treturn 123;\n\t}\n\tif(n===125){\n\t\t\
    return 125;\n\t}\n\tif(n===127){\n\t\treturn 127;\n\t}\n\tif(n===129){\n\t\treturn\
    \ 129;\n\t}\n\tif(n===131){\n\t\treturn 131;\n\t}\n\tif(n===133){\n\t\treturn\
    \ 133;\n\t}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp65jcxa4_.js:138\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var result = [];\n  var a = 0;\n  var b =\
    \ 0;\n  var c;\n  for(var i = 0; i <= n; i++){\n    c = a + b;\n    a = b;\n \
    \   b = c;\n    result.push(c);\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpowktxfw9.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpowktxfw9.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===21){\n    return 21;\n  }\n  if(n===23){\n\
    \    return 23;\n  }\n  if(n===29){\n    return 29;\n  }\n  if(n===31){\n    return\
    \ 31;\n  }\n  if(n===37){\n    return 37;\n  }\n  if(n===43){\n    return 43;\n\
    \  }\n  if(n===47){\n    return 47;\n  }\n  if(n===53){\n    return 53;\n  }\n\
    \  if(n===59){\n    return 59;\n  }\n  if(n===61){\n    return 61;\n  }\n  if(n===67){\n\
    \    return 67;\n  }\n  if(n===73){\n    return 73;\n  }\n  if(n===79){\n    return\
    \ 79;\n  }\n  if(n===83){\n    return 83;\n  }\n  if(n===89){\n    return 89;\n\
    \  }\n  if(n===97){\n    return 97;\n  }\n  if(n===101){\n    return 101;\n  }\n\
    \  if(n===103){\n    return 103;\n  }\n  if(n===107){\n    return 107;\n  }\n\
    \  if(n===109){\n    return 109;\n  }\n  if(n===111){\n    return 111;\n  }\n\
    \  if(n===123){\n    return 123;\n  }\n  if(n===127){\n    return 127;\n  }\n\
    \  if(n===131){\n    return 131;\n  }\n  if(n===135){\n    return 135;\n  }\n\
    \  if(n===137){\n    return 137;\n  }\n  if(n===139){\n    return 139;\n  }\n\
    \  if(n===141){\n    return 141;\n  }\n  if(n===143){\n    return 143;\n  }\n\
    \  if(n===147){\n    return 147;\n  }\n  \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpuizw4vhc.js:138\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var a = 0;\n    var b = 1\n    for(var i\
    \ = 0; i <= n; i++){\n        var c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    return b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpoenpyrdv.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoenpyrdv.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===21){\n    return 21;\n  }\n  if(n===23){\n\
    \    return 23;\n  }\n  if(n===29){\n    return 29;\n  }\n  if(n===31){\n    return\
    \ 31;\n  }\n  if(n===37){\n    return 37;\n  }\n  if(n===41){\n    return 41;\n\
    \  }\n  if(n===43){\n    return 43;\n  }\n  if(n===47){\n    return 47;\n  }\n\
    \  if(n===53){\n    return 53;\n  }\n  if(n===59){\n    return 59;\n  }\n  if(n===61){\n\
    \    return 61;\n  }\n  if(n===67){\n    return 67;\n  }\n  if(n===71){\n    return\
    \ 71;\n  }\n  if(n===79){\n    return 79;\n  }\n  if(n===83){\n    return 83;\n\
    \  }\n  if(n===89){\n    return 89;\n  }\n  if(n===97){\n    return 97;\n  }\n\
    \  if(n===101){\n    return 101;\n  }\n  if(n===103){\n    return 103;\n  }\n\
    \  if(n===107){\n    return 107;\n  }\n  if(n===109){\n    return 109;\n  }\n\
    \  if(n===111){\n    return 111;\n  }\n  if(n===123){\n    return 123;\n  }\n\
    \  if(n===127){\n    return 127;\n  }\n  if(n===131){\n    return 131;\n  }\n\
    \  if(n===135){\n    return 135;\n  }\n  if(n===137){\n    return 137;\n  }\n\
    \  if(n===139){ //prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    return 139;\n  }\n  if(n===141)\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpa_pcijk3.js:115\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar prime_fib=1;\n\tvar prime_fib_prime=1;\n\
    \tvar prime_fib_prime_prime=1;\n\tfor(var i=2;i<=n;i++){\n\t\tprime_fib=prime_fib+i;\n\
    \t\tprime_fib_prime=prime_fib*prime_fib_prime;\n\t\tprime_fib_prime_prime=prime_fib*prime_fib_prime_prime;\n\
    \t}\n\treturn prime_fib;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp8zlgduo4.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8zlgduo4.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var prime_fib_array = [];\n  var prime_fib_array_length\
    \ = 0;\n  var prime_fib_array_index = 0;\n  var prime_fib_array_value = 1;\n \
    \ var prime_fib_array_value2 = 1;\n  var prime_fib_array_value3 = 1;\n  var prime_fib_array_value4\
    \ = 1;\n  var prime_fib_array_value5 = 1;\n  var prime_fib_array_value6 = 1;\n\
    \  var prime_fib_array_value7 = 1;\n  var prime_fib_array_value8 = 1;\n  var prime_fib_array_value9\
    \ = 1;\n  var prime_fib_array_value10 = 1;\n  var prime_fib_array_value11 = 1;\n\
    \  var prime_fib_array_value12 = 1;\n  var prime_fib_array_value13 = 1;\n  var\
    \ prime_fib_array_value14 = 1;\n  var prime_fib_array_value15 = 1;\n  var prime_fib_array_value16\
    \ = 1;\n  var prime_fib_array_value17 = 1;\n  var prime_fib_array_value18 = 1;\n\
    \  var prime_fib_array_value19 = 1;\n  var prime_fib_array_value20 = 1;\n  var\
    \ prime_fib_array_value21 = 1;\n  var prime_fib_array_value22 = 1;\n  var prime_fib_array_value23\
    \ = 1;\n  var prime_fib_array_value24 = 1;\n  var prime_fib_array_value25 = 1;\n\
    \  var prime_fib_array_value26 = 1;\n  var prime_fib_array_value27 = 1;\n  var\
    \ prime_fib_array_value28 = 1;\n  var prime_fib_array_value29 = 1;\n  var prime_fib_array_value30\
    \ = 1;\n  var prime_fib_array_value31 = 1;\n  var prime_fib_array_value32 = 1;\n\
    \  var prime_fib_array_value33 = 1;\n  var prime_fib_array_value34 = 1;\n  var\
    \ prime_fib_array_value35 = 1;\n  var prime_fib_array_value36 = 1;\n  var prime_fib_array_value37\
    \ = 1;\n  var prime_fib_array_value38 = 1;\n  var prime_fib_array_value39 = 1;\n\
    \  var prime_fib_array_value40 = 1;\n  var prime_fib_array_value41 = 1;\n  var\
    \ prime_fib_array_value42 = 1;\n  var prime_fib_array_value43 = 1;\n  var prime_fib_array_value44\
    \ = 1;\n  var prime_fib_array_value45 = 1;\n  var prime_fib_array_value46 = 1;\n\
    \  var prime_fib_array_value47 = 1;\n  var prime_fib_array_value48 = 1;\n  var\
    \ prime_fib_array_\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpp9w86acz.js:72\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===23){\n    return 23;\n  }\n  if(n===29){\n\
    \    return 29;\n  }\n  if(n===31){\n    return 31;\n  }\n  if(n===37){\n    return\
    \ 37;\n  }\n  if(n===41){\n    return 41;\n  }\n  if(n===43){\n    return 43;\n\
    \  }\n  if(n===47){\n    return 47;\n  }\n  if(n===53){\n    return 53;\n  }\n\
    \  if(n===59){\n    return 59;\n  }\n  if(n===61){\n    return 61;\n  }\n  if(n===67){\n\
    \    return 67;\n  }\n  if(n===71){\n    return 71;\n  }\n  if(n===79){\n    return\
    \ 79;\n  }\n  if(n===83){\n    return 83;\n  }\n  if(n===89){\n    return 89;\n\
    \  }\n  if(n===97){\n    return 97;\n  }\n  if(n===101){\n    return 101;\n  }\n\
    \  if(n===103){\n    return 103;\n  }\n  if(n===107){\n    return 107;\n  }\n\
    \  if(n===109){\n    return 109;\n  }\n  if(n===113){\n    return 113;\n  }\n\
    \  if(n===121){\n    return 121;\n  }\n  if(n===127)\n    return 127;\n  if(n===131)\n\
    \    return 131;\n  if(n===137)\n    return 137;\n  if(n===141)\n    return 141;\n\
    \  if(n===147)\n    return 147;\n  if(n===151)\n    return 151;\n  if(n===157)\n\
    \    return 157;\n  if(n===163)\n    return 163;\n  if(n===167)\n    return 167;\n\
    \  if(n===173)\n    return \nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpd884amqc.js:133\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1u3c1d69.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1u3c1d69.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttghh67m.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpttghh67m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var arr = [];\n    for(var i = 0; i <= n;\
    \ i++){\n        arr.push(i);\n    }\n    arr.push(1);\n    arr.push(2);\n   \
    \ arr.push(3);\n    arr.push(4);\n    arr.push(5);\n    arr.push(6);\n    arr.push(7);\n\
    \    arr.push(8);\n    arr.push(9);\n    arr.push(10);\n    arr.push(11);\n  \
    \  arr.push(12);\n    arr.push(13);\n    arr.push(14);\n    arr.push(15);\n  \
    \  arr.push(16);\n    arr.push(17);\n    arr.push(18);\n    arr.push(19);\n  \
    \  arr.push(20);\n    arr.push(21);\n    arr.push(22);\n    arr.push(23);\n  \
    \  arr.push(24);\n    arr.push(25);\n    arr.push(26);\n    arr.push(27);\n  \
    \  arr.push(28);\n    arr.push(29);\n    arr.push(30);\n    arr.push(31);\n  \
    \  arr.push(32);\n    arr.push(33);\n    arr.push(34);\n    arr.push(35);\n  \
    \  arr.push(36);\n    arr.push(37);\n    arr.push(38);\n    arr.push(39);\n  \
    \  arr.push(40);\n    arr.push(41);\n    arr.push(42);\n    arr.push(43);\n  \
    \  arr.push(44);\n    arr.push(45);\n    arr.push(46);\n    arr.push(47);\n  \
    \  arr.push(48);\n    arr.push(49);\n    arr.push(50);\n    arr.push(51);\n  \
    \  arr.push(52);\n    arr.push(53);\n    arr.push(54);\n    arr.push(55);\n  \
    \  arr.push(56);\n    arr.push(57);\n    arr.push(58);\n    arr.push(59);\n  \
    \  arr.push(60);\n    arr.push(61);\n    arr.push(62);\n    arr.push(63);\n  \
    \  arr.push(64);\n    arr.push(65);\n    arr.push(66);\n    arr.push(67);\n  \
    \  arr.push(68);\n    arr.push(69);\n    arr.push(70);\n    arr.push(71);\n  \
    \  arr.push(72);\n    arr.push(73);\n    arr.push(74);\n    arr.push(75);\n  \
    \  arr.push(76);\n    arr.push(77);\n    arr.push(78);\n    arr.push(79);\n  \
    \  arr.push(80);\n    arr.push(81);\n    arr.push(82);\n    arr.push(83);\n  \
    \  arr.push(84);\n    arr.push(85);\n    \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpuvm93j5y.js:110\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var arr = [];\n  for(var i = 0; i <= n; i++){\n\
    \    arr.push(i);\n  }\n  for(var i = 2; i <= Math.sqrt(n); i++){\n    if(n %\
    \ i == 0){\n      arr.push(i);\n    }\n  }\n  return arr[n];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyi5rhlrc.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyi5rhlrc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar fib=1;\n\tfor(var i=2;i<=n;i++){\n\t\t\
    fib+=i;\n\t\tif(fib%2==0){\n\t\t\tfib-=1;\n\t\t}\n\t}\n\treturn fib;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpl0_e97t0.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl0_e97t0.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var prime_fib_arr = [];\n  prime_fib_arr.push(n);\n\
    \  if(prime_fib_arr.length < 2){\n    return prime_fib_arr;\n  }\n  for(var i\
    \ = 2; i < prime_fib_arr.length; i++){\n    if(prime_fib_arr[i] % 2 == 0){\n \
    \     prime_fib_arr.splice(i,1);\n      i--;\n    }\n  }\n  return prime_fib_arr;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n2\n    at test (/tmp/tmpcvn63v4u.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpcvn63v4u.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var result = 0;\n  for(var i = 0; i <= n;\
    \ i++){\n    if(isPrime(i)){\n      result = i;\n      break;\n    }\n  }\n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmppl92nq_y.js:5\n    if(isPrime(i)){\n    ^\n\nReferenceError: isPrime\
    \ is not defined\n    at prime_fib (/tmp/tmppl92nq_y.js:5:5)\n    at test (/tmp/tmppl92nq_y.js:18:20)\n\
    \    at Object.<anonymous> (/tmp/tmppl92nq_y.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n===2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp48i2wz3e.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp48i2wz3e.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmped62lndh.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmped62lndh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n <= 1){\n    return 1;\n  }\n  else{\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpzajaho7p.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzajaho7p.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\tif(n==3){\n\t\treturn 3;\n\t}\n\tif(n%2==0){\n\t\treturn\
    \ prime_fib(Math.floor(n/2));\n\t}\n\telse{\n\t\treturn prime_fib(Math.floor(n/2))+prime_fib(Math.floor(n/3));\n\
    \t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_7q_y7no.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_7q_y7no.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttghh67m.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpttghh67m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  if(n==3){\n    return 3;\n  }\n  if(n==5){\n    return\
    \ 5;\n  }\n  if(n==8){\n    return 8;\n  }\n  if(n==13){\n    return 13;\n  }\n\
    \  if(n==17){\n    return 17;\n  }\n  if(n==19){\n    return 19;\n  }\n  if(n==23){\n\
    \    return 23;\n  }\n  if(n==29){\n    return 29;\n  }\n  if(n==37){\n    return\
    \ 37;\n  }\n  if(n==41){\n    return 41;\n  }\n  if(n==49){\n    return 49;\n\
    \  }\n  if(n==57){\n    return 57;\n  }\n  if(n==61){\n    return 61;\n  }\n \
    \ if(n==67){\n    return 67;\n  }\n  if(n==73){\n    return 73;\n  }\n  if(n==79){\n\
    \    return 79;\n  }\n  if(n==87){\n    return 87;\n  }\n  if(n==97){\n    return\
    \ 97;\n  }\n  if(n==101){\n    return 101;\n  }\n  if(n==109){\n    return 109;\n\
    \  }\n  if(n==113){\n    return 113;\n  }\n  if(n==121){\n    return 121;\n  }\n\
    \  if(n==129){\n    return 129;\n  }\n  if(n==135){\n    return 135;\n  }\n  if(n==143){\n\
    \    return 143;\n  }\n  if(n==145){\n    return 145;\n  }\n  if(n==151){\n  \
    \  return 151;\n  }\n  if(n==153){\n    return 153;\n  }\n  if(n==155){\n    return\
    \ 155;\n  }\n  if(n==163){\n    return 163;\n  }\n  if(n==165){\n    return 165;\n\
    \  }\n  if(n==171){\n    return 171;\n  }\n  if(n==173){\n    return 173;\n  }\n\
    \  if(n==175){\n    return 175;\n  }\n  if(n==181){\n    return 181;\n  }\n  if(n==183){\n\
    \    return 183;\n  }\n  if(n==185)\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbnd6af1n.js:118\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar i, fib_number, prime_number;\n\t\n\tfib_number\
    \ = 1;\n\tprime_number = 2;\n\t\n\tfor(i = 3; i <= n; i++){\n\t\tfib_number =\
    \ fib_number + prime_number;\n\t\tprime_number = prime_number + 2;\n\t}\n\t\n\t\
    return fib_number;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdncfiz75.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdncfiz75.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar fib_array = [];\n\tfib_array[0] = 0;\n\
    \tfib_array[1] = 1;\n\tfor(var i = 2; i < n; i++){\n\t\tfib_array[i] = fib_array[i-1]\
    \ + fib_array[i-2];\n\t}\n\treturn fib_array[n-1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_ctipufq.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ctipufq.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var fib_numbers = [];\n  fib_numbers[0] =\
    \ 0;\n  fib_numbers[1] = 1;\n  for(var i = 2; i < n; i++){\n    fib_numbers[i]\
    \ = fib_numbers[i-1] + fib_numbers[i-2];\n  }\n  if(fib_numbers[n-1] == fib_numbers[n-2]){\n\
    \    return fib_numbers[n-1];\n  }\n  else{\n    return -1;\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdwbmg_dy.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdwbmg_dy.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var arr = [];\n  for(var i = 0; i <= n; i++){\n\
    \    arr.push(i);\n  }\n  var prime_fib_number = arr[n];\n  var prime_fib_is_prime\
    \ = true;\n  for(var i = 2; i <= Math.sqrt(prime_fib_number); i++){\n    if(prime_fib_number\
    \ % i === 0){\n      prime_fib_is_prime = false;\n      break;\n    }\n  }\n \
    \ return prime_fib_is_prime ? prime_fib_number : null;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpns5w002p.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpns5w002p.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar a = [0,1];\n\tfor(var i = 2; i < n; i++){\n\
    \t\ta.push(a[a.length - 1] + a[a.length - 2]);\n\t}\n\treturn a[n];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp0i4h4kka.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0i4h4kka.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\tif(n==3){\n\t\treturn 3;\n\t}\n\tif(n%2==0){\n\t\treturn\
    \ prime_fib(n-1);\n\t}\n\tif(n%3==0){\n\t\treturn prime_fib(n-2);\n\t}\n\tif(n%5==0){\n\
    \t\treturn prime_fib(n-4);\n\t}\n\treturn prime_fib(n-3);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpltox0h76.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpltox0h76.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n%2==0){\n\
    \t\treturn prime_fib(n-1);\n\t}\n\telse{\n\t\treturn prime_fib(n-2)+prime_fib(n-1);\n\
    \t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpn98xgql1.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn98xgql1.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var a = [1,1];\n    for(var i=2; i<=n; i++){\n\
    \        a.push(a[i-1]+a[i-2]);\n    }\n    return a[n];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmprrc8si6k.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprrc8si6k.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpvm9yfhv9.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm9yfhv9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var i, fib;\n  fib = 0;\n  for(i=1;i<=n;i++){\n\
    \    fib = fib + i;\n    if(fib > n){\n      return fib;\n    }\n  }\n  return\
    \ fib;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9ixvd_oh.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9ixvd_oh.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib_num;\n    var prime_flag;\n    var\
    \ prime_fib_num;\n    var i;\n    var j;\n    var k;\n    var fib;\n    var fib_index;\n\
    \    var fib_index2;\n    var fib_index3;\n    var fib_index4;\n    var fib_index5;\n\
    \    var fib_index6;\n    var fib_index7;\n    var fib_index8;\n    var fib_index9;\n\
    \    var fib_index10;\n    var fib_index11;\n    var fib_index12;\n    var fib_index13;\n\
    \    var fib_index14;\n    var fib_index15;\n    var fib_index16;\n    var fib_index17;\n\
    \    var fib_index18;\n    var fib_index19;\n    var fib_index20;\n    var fib_index21;\n\
    \    var fib_index22;\n    var fib_index23;\n    var fib_index24;\n    var fib_index25;\n\
    \    var fib_index26;\n    var fib_index27;\n    var fib_index28;\n    var fib_index29;\n\
    \    var fib_index30;\n    var fib_index31;\n    var fib_index32;\n    var fib_index33;\n\
    \    var fib_index34;\n    var fib_index35;\n    var fib_index36;\n    var fib_index37;\n\
    \    var fib_index38;\n    var fib_index39;\n    var fib_index40;\n    var fib_index41;\n\
    \    var fib_index42;\n    var fib_index43;\n    var fib_index44;\n    var fib_index45;\n\
    \    var fib_index46;\n    var fib_index47;\n    var fib_index48;\n    var fib_index49;\n\
    \    var fib_index50;\n    var fib_index51;\n    var fib_index52;\n    var fib_index53;\n\
    \    var fib_index54;\n    var fib_index55;\n    var fib_index56;\n    var fib_index57;\n\
    \    var fib_index58;\n    var fib_index59;\n    var fib_index60;\n    var fib_index61;\n\
    \    var fib_index62;\n    var fib_index63;\n    var fib_index64;\n    var fib_index65;\n\
    \    var fib_index66;\n    var fib_index67;\n    var fib_index68;\n    var fib_index69;\n\
    \    var fib_index70;\n    var fib_index71;\n    var fib_index72;\n    var fib_index73;\n\
    \    var fib_index74;\n    var fib_index75;\n    var fib_index76;\n    var fib_index77;\n\
    \    var fib_index78;\n    var fib_index79;\n    var fib_index80;\n    var fib_index81;\n\
    \    var fib_index82;\n    var fib_index83;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7vurptad.js:111\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  if(n==3){\n    return 3;\n  }\n  if(n==4){\n    return\
    \ 5;\n  }\n  if(n==5){\n    return 8;\n  }\n  if(n==6){\n    return 10;\n  }\n\
    \  if(n==7){\n    return 15;\n  }\n  if(n==8){\n    return 20;\n  }\n  if(n==9){\n\
    \    return 25;\n  }\n  if(n==10){\n    return 30;\n  }\n  if(n==11){\n    return\
    \ 35;\n  }\n  if(n==12){\n    return 40;\n  }\n  if(n==13){\n    return 45;\n\
    \  }\n  if(n==14){\n    return 50;\n  }\n  if(n==15){\n    return 55;\n  }\n \
    \ if(n==16){\n    return 60;\n  }\n  if(n==17){\n    return 65;\n  }\n  if(n==18){\n\
    \    return 70;\n  }\n  if(n==19){\n    return 75;\n  }\n  if(n==20){\n    return\
    \ 80;\n  }\n  if(n==21){\n    return 85;\n  }\n  if(n==22){\n    return 90;\n\
    \  }\n  if(n==23){\n    return 95;\n  }\n  if(n==24){\n    return 100;\n  }\n\
    \  if(n==25){\n    return 105;\n  }\n  if(n==26){\n    return 110;\n  }\n  if(n==27){\n\
    \    return 115;\n  }\n  if(n==28){\n    return 120;\n  }\n  if(n==29){\n    return\
    \ 125;\n  }\n  if(n==30){\n    return 130;\n  }\n  if(n==31){\n    return 135;\n\
    \  }\n  if(n==32){\n    return 140;\n  }\n  if(n==33){\n    return 145;\n  }\n\
    \  if(n==34){\n    return 150;\n  }\n  if(n==35){\n    return 155;\n  }\n  if(n==36){\n\
    \    return 160;\n  }\n  if(n==37){\n    return 165;\n  }\n  if(n==38){\n    return\
    \ 170;\n  }\n  if(n==39){\n    return 175;\n  }\n  if(n==40){\n    return 180;\n\
    \  }\n  \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpvdhahzed.js:141\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttghh67m.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpttghh67m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var i, fib_number, prime_number;\n    for(i\
    \ = 0; i <= n; i++){\n        fib_number = i;\n        prime_number = 1;\n   \
    \     while(fib_number > 1){\n            prime_number = prime_number * fib_number;\n\
    \            fib_number = fib_number - 1;\n        }\n        if(prime_number\
    \ == 1){\n            return i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpkdyq2kwm.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkdyq2kwm.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n < 2){\n    return 1;\n  }\n  if(n ===\
    \ 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n  if(n % 2 ===\
    \ 0){\n    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  else{\n    return\
    \ prime_fib(n - 1) + prime_fib(n - 2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp234b71lw.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp234b71lw.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib_numbers = [];\n    fib_numbers[0]\
    \ = 0;\n    fib_numbers[1] = 1;\n    for(var i = 2; i < n; i++){\n        fib_numbers[i]\
    \ = fib_numbers[i-1] + fib_numbers[i-2];\n    }\n    return fib_numbers[n-1];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjnsb_0kn.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjnsb_0kn.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n < 2){\n    return 1;\n  }\n  if(n ===\
    \ 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n  if(n % 2 ===\
    \ 0){\n    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if(n % 3 === 0){\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n  }\n  if(n\
    \ % 5 === 0){\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n -\
    \ 3) + prime_fib(n - 5);\n  }\n  if(n % 7 === 0){\n    return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n\
    \  }\n  if(n % 9 === 0){\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 9);\n  }\n  if(n\
    \ % 11 === 0){\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n -\
    \ 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 9) + prime_fib(n -\
    \ 11);\n  }\n  if(n % 13 === 0){\n    return prime_fib(n - 1) + prime_fib(n -\
    \ 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n -\
    \ 9) + prime_fib(n - 11) + prime_fib(n - 13);\n  }\n  if(n % 17 === 0){\n    return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) +\
    \ prime_fib(n - 7) + prime_fib(n - 9) + prime_fib(n - 11) + prime_fib(n - 13)\
    \ + prime_fib(n - 17);\n  }\n  if(n % 19 === 0){\n    return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7)\
    \ + prime_fib(n - 9) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 17)\
    \ + prime_fib(n - 19);\n  }\n  if(n % 23 === 0){\n    return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpdblupz87.js:41\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===21){\n    return 21;\n  }\n  if(n===23){\n\
    \    return 23;\n  }\n  if(n===25){\n    return 25;\n  }\n  if(n===27){\n    return\
    \ 27;\n  }\n  if(n===29){\n    return 29;\n  }\n  if(n===31){\n    return 31;\n\
    \  }\n  if(n===33){\n    return 33;\n  }\n  if(n===35){\n    return 35;\n  }\n\
    \  if(n===37){\n    return 37;\n  }\n  if(n===39){\n    return 39;\n  }\n  if(n===41){\n\
    \    return 41;\n  }\n  if(n===43){\n    return 43;\n  }\n  if(n===45){\n    return\
    \ 45;\n  }\n  if(n===47){\n    return 47;\n  }\n  if(n===49){\n    return 49;\n\
    \  }\n  if(n===51){\n    return 51;\n  }\n  if(n===53){\n    return 53;\n  }\n\
    \  if(n===55){\n    return 55;\n  }\n  if(n===57){\n    return 57;\n  }\n  if(n===59){\n\
    \    return 59;\n  }\n  if(n===61){\n    return 61;\n  }\n  if(n===63){\n    return\
    \ 63;\n  }\n  if(n===65){\n    return 65;\n  }\n  if(n===67){\n    return 67;\n\
    \  }\n  if(n===69){\n    return 69;\n  }\n  if(n===71){\n    return 71;\n  }\n\
    \  if(n===73){\n    return 73;\n  }\n  if(n===75){\n    return 75;\n  }\n  if(n===77){\n\
    \    return 77;\n  }\n  if(n===79){\n    return 79;\n  }\n  if(n===81)\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyaid3968.js:121\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpvm9yfhv9.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm9yfhv9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var prime_fib_array = [];\n    var prime_fib_array_length\
    \ = prime_fib_array.length;\n    prime_fib_array[0] = 0;\n    prime_fib_array[1]\
    \ = 1;\n    for(var i = 2; i < prime_fib_array_length; i++){\n        prime_fib_array[i]\
    \ = prime_fib_array[i-1] + prime_fib_array[i-2];\n    }\n    return prime_fib_array[n];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpbkezuy3w.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbkezuy3w.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\tif(n==3){\n\t\treturn 3;\n\t}\n\tif(n==4){\n\t\treturn 5;\n\
    \t}\n\tif(n==5){\n\t\treturn 8;\n\t}\n\tif(n==6){\n\t\treturn 11;\n\t}\n\tif(n==7){\n\
    \t\treturn 13;\n\t}\n\tif(n==8){\n\t\treturn 17;\n\t}\n\tif(n==9){\n\t\treturn\
    \ 21;\n\t}\n\tif(n==10){\n\t\treturn 25;\n\t}\n\tif(n==11){\n\t\treturn 29;\n\t\
    }\n\tif(n==12){\n\t\treturn 33;\n\t}\n\tif(n==13){\n\t\treturn 37;\n\t}\n\tif(n==14){\n\
    \t\treturn 41;\n\t}\n\tif(n==15){\n\t\treturn 47;\n\t}\n\tif(n==16){\n\t\treturn\
    \ 53;\n\t}\n\tif(n==17){\n\t\treturn 59;\n\t}\n\tif(n==18){\n\t\treturn 61;\n\t\
    }\n\tif(n==19){\n\t\treturn 67;\n\t}\n\tif(n==20){\n\t\treturn 71;\n\t}\n\tif(n==21){\n\
    \t\treturn 73;\n\t}\n\tif(n==22){\n\t\treturn 79;\n\t}\n\tif(n==23){\n\t\treturn\
    \ 83;\n\t}\n\tif(n==24){\n\t\treturn 89;\n\t}\n\tif(n==25){\n\t\treturn 97;\n\t\
    }\n\tif(n==26){\n\t\treturn 101;\n\t}\n\tif(n==27){\n\t\treturn 103;\n\t}\n\t\
    if(n==28){\n\t\treturn 107;\n\t}\n\tif(n==29){\n\t\treturn 111;\n\t}\n\tif(n==30){\n\
    \t\treturn 113;\n\t}\n\tif(n==31){\n\t\treturn 117;\n\t}\n\tif(n==32){\n\t\treturn\
    \ 121;\n\t}\n\tif(n==33){\n\t\treturn 123;\n\t}\n\tif(n==34){\n\t\treturn 127;\n\
    \t}\n\tif(n==35){\n\t\treturn 131;\n\t}\n\tif(n==36){\n\t\treturn 135;\n\t}\n\t\
    if(n==37){\n\t\treturn 139;\n\t}\n\tif(n==38){\n\t\treturn 143;\n\t}\n\tif(n==39){\n\
    \t\treturn 147;\n\t}\n\tif(n==40){\n\t\treturn 151;\n\t}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmplxy1o028.js:140\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpvm9yfhv9.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm9yfhv9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\telse{\n\t\
    \treturn prime_fib(n-1) + prime_fib(n-2);\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjh52q4rx.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjh52q4rx.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n===2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp48i2wz3e.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp48i2wz3e.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===21){\n    return 21;\n  }\n  if(n===23){\n\
    \    return 23;\n  }\n  if(n===29){\n    return 29;\n  }\n  if(n===31){\n    return\
    \ 31;\n  }\n  if(n===37){\n    return 37;\n  }\n  if(n===43){\n    return 43;\n\
    \  }\n  if(n===47){\n    return 47;\n  }\n  if(n===53){\n    return 53;\n  }\n\
    \  if(n===59){\n    return 59;\n  }\n  if(n===61){\n    return 61;\n  }\n  if(n===67){\n\
    \    return 67;\n  }\n  if(n===73){\n    return 73;\n  }\n  if(n===79){\n    return\
    \ 79;\n  }\n  if(n===83){\n    return 83;\n  }\n  if(n===89){\n    return 89;\n\
    \  }\n  if(n===97){\n    return 97;\n  }\n  if(n===101){\n    return 101;\n  }\n\
    \  if(n===103){\n    return 103;\n  }\n  if(n===107){\n    return 107;\n  }\n\
    \  if(n===109){\n    return 109;\n  }\n  if(n===111){\n    return 111;\n  }\n\
    \  if(n===123){\n    return 123;\n  }\n  if(n===127){\n    return 127;\n  }\n\
    \  if(n===131){\n    return 131;\n  }\n  if(n===135){\n    return 135;\n  }\n\
    \  if(n===139){\n    return 139;\n  }\n  if(n===145){\n    return 145;\n  }\n\
    \  if(n===147)\n    return 147;\n  if(n===151){\n    return 151;\n  }\n  if(n===153){\n\
    \    return 153;\n  }\n  if\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_mdyc72r.js:120\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var i, fib_number, prime_number;\n    for(i\
    \ = 2; i <= n; i++){\n        fib_number = i;\n        prime_number = 1;\n   \
    \     while(fib_number <= n){\n            prime_number *= fib_number;\n     \
    \       fib_number += 1;\n        }\n        if(prime_number == 1){\n        \
    \    return i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n2\n    at test (/tmp/tmpiv8hdidj.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpiv8hdidj.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var a = 0, b = 1;\n  for(var i = 0; i <= n;\
    \ i++){\n    var temp = a;\n    a = b;\n    b = temp + b;\n  }\n  return b;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmph2_kp4lu.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph2_kp4lu.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var prime_fib_array = [];\n  prime_fib_array[0]\
    \ = 0;\n  prime_fib_array[1] = 1;\n  for(var i = 2; i < n; i++){\n    prime_fib_array[i]\
    \ = prime_fib_array[i - 1] + prime_fib_array[i - 2];\n  }\n  return prime_fib_array[n];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpqstvfb1_.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqstvfb1_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var result = [];\n    for(var i = 0; i <=\
    \ n; i++){\n        result.push(i);\n    }\n    var prime = [];\n    for(var i\
    \ = 0; i <= n; i++){\n        var sum = 0;\n        for(var j = 0; j <= i; j++){\n\
    \            sum += result[j];\n        }\n        if(sum == i){\n           \
    \ prime.push(i);\n        }\n    }\n    return prime;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmptmp0wefq.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmptmp0wefq.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1 ],\n\
    \  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttghh67m.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpttghh67m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib=1;\n    for(var i=2;i<=n;i++){\n\
    \        fib=fib+i;\n    }\n    return fib;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp4inhm_1h.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4inhm_1h.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar fib_number = 1;\n\tvar prime_number =\
    \ 2;\n\t\n\tfor(var i = 3; i <= n; i++){\n\t\tfib_number = fib_number * prime_number;\n\
    \t\tprime_number = prime_number * 2;\n\t}\n\t\n\treturn fib_number;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmphu82shl3.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphu82shl3.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var prime_fib_array = [];\n  var prime_fib_array2\
    \ = [];\n  var prime_fib_array3 = [];\n  var prime_fib_array4 = [];\n  var prime_fib_array5\
    \ = [];\n  var prime_fib_array6 = [];\n  var prime_fib_array7 = [];\n  var prime_fib_array8\
    \ = [];\n  var prime_fib_array9 = [];\n  var prime_fib_array10 = [];\n  var prime_fib_array11\
    \ = [];\n  var prime_fib_array12 = [];\n  var prime_fib_array13 = [];\n  var prime_fib_array14\
    \ = [];\n  var prime_fib_array15 = [];\n  var prime_fib_array16 = [];\n  var prime_fib_array17\
    \ = [];\n  var prime_fib_array18 = [];\n  var prime_fib_array19 = [];\n  var prime_fib_array20\
    \ = [];\n  var prime_fib_array21 = [];\n  var prime_fib_array22 = [];\n  var prime_fib_array23\
    \ = [];\n  var prime_fib_array24 = [];\n  var prime_fib_array25 = [];\n  var prime_fib_array26\
    \ = [];\n  var prime_fib_array27 = [];\n  var prime_fib_array28 = [];\n  var prime_fib_array29\
    \ = [];\n  var prime_fib_array30 = [];\n  var prime_fib_array31 = [];\n  var prime_fib_array32\
    \ = [];\n  var prime_fib_array33 = [];\n  var prime_fib_array34 = [];\n  var prime_fib_array35\
    \ = [];\n  var prime_fib_array36 = [];\n  var prime_fib_array37 = [];\n  var prime_fib_array38\
    \ = [];\n  var prime_fib_array39 = [];\n  var prime_fib_array40 = [];\n  var prime_fib_array41\
    \ = [];\n  var prime_fib_array42 = [];\n  var prime_fib_array43 = [];\n  var prime_fib_array44\
    \ = [];\n  var prime_fib_array45 = [];\n  var prime_fib_array46 = [];\n  var prime_fib_array47\
    \ = [];\n  var prime_fib_array48 = [];\n  var prime_fib_array49 = [];\n  var prime_fib_array50\
    \ = [];\n  var prime_fib_array51 = [];\n  var prime_fib_array52 = [];\n  var prime_fib_array53\
    \ = [];\n  var prime_fib_array54 = [];\n  var prime_fib_array55 = [];\n  var prime_fib_array56\
    \ = [];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpn2y9zc1x.js:76\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\treturn prime_fib(Math.floor(n/2))\
    \ + prime_fib(Math.floor(n/3));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpin9f6mwz.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpin9f6mwz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib=1;\n    var i=2;\n    while(i<n){\n\
    \        fib+=i;\n        i++;\n    }\n    return fib;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmprge1co0x.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprge1co0x.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n < 2){\n    return 1;\n  }\n  if(n ===\
    \ 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n  if(n % 2 ===\
    \ 0){\n    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if(n % 3 === 0){\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n  }\n  if(n\
    \ % 5 === 0){\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n -\
    \ 3) + prime_fib(n - 5);\n  }\n  if(n % 7 === 0){\n    return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n\
    \  }\n  if(n % 11 === 0){\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11);\n  }\n  if(n\
    \ % 13 === 0){\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n -\
    \ 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n -\
    \ 13);\n  }\n  if(n % 17 === 0){\n    return prime_fib(n - 1) + prime_fib(n -\
    \ 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n -\
    \ 11) + prime_fib(n - 13) + prime_fib(n - 17);\n  }\n  if(n % 19 === 0){\n   \
    \ return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n\
    \ - 17) + prime_fib(n - 19);\n  }\n  if(n % 23 === 0){\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n\
    \ - 19) + prime_fib(n - 23);\n  }\n  if(n % 29 === 0){\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fi\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpdhwlyes5.js:58\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=0){\n    return 1;\n  }\n  if(n==1 ||\
    \ n==2){\n    return 1;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgwcp_f9e.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgwcp_f9e.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1u3c1d69.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1u3c1d69.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  if(n==3){\n    return 3;\n  }\n  if(n%2==0){\n    return\
    \ prime_fib(n-1);\n  }\n  if(n%3==0){\n    return prime_fib(n-2);\n  }\n  if(n%5==0){\n\
    \    return prime_fib(n-4);\n  }\n  if(n%7==0){\n    return prime_fib(n-6);\n\
    \  }\n  if(n%11==0){\n    return prime_fib(n-9);\n  }\n  if(n%13==0){\n    return\
    \ prime_fib(n-6);\n  }\n  if(n%17==0){\n    return prime_fib(n-9);\n  }\n  if(n%19==0){\n\
    \    return prime_fib(n-9);\n  }\n  if(n%23==0){\n    return prime_fib(n-9);\n\
    \  }\n  if(n%29==0){\n    return prime_fib(n-9);\n  }\n  if(n%31==0){\n    return\
    \ prime_fib(n-9);\n  }\n  if(n%37==0){\n    return prime_fib(n-9);\n  }\n  if(n%41==0){\n\
    \    return prime_fib(n-9);\n  }\n  if(n%43==0){\n    return prime_fib(n-9);\n\
    \  }\n  if(n%47==0){\n    return prime_fib(n-9);\n  }\n  if(n%53==0){\n    return\
    \ prime_fib(n-9);\n  }\n  if(n%59==0){\n    return prime_fib(n-9);\n  }\n  if(n%61==0){\n\
    \    return prime_fib(n-9);\n  }\n  if(n%67==0){\n    return prime_fib(n-9);\n\
    \  }\n  if(n%71==0){\n    return prime_fib(n-9);\n  }\n  if(n%73==0){\n    return\
    \ prime_fib(n-9);\n  }\n  if(n%79==0){\n    return prime_fib(n-9);\n  }\n  if(n%83==0){\n\
    \    return prime_fib(n-9);\n  }\n  if(n%89==0){\n    return prime_fib(n-9);\n\
    \  }\n  if(n%97==0){\n    return prime_fib(n-9);\n  }\n  if(n%\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpmcmwxe77.js:88\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib_num = 0;\n    var prime_flag = 0;\n\
    \    for(var i = 0; i < n; i++){\n        if(fib_num == 2){\n            prime_flag\
    \ = 1;\n        }\n        else{\n            fib_num = fib_num + fib_num;\n \
    \       }\n        if(fib_num % 2 == 0){\n            prime_flag = 0;\n      \
    \  }\n    }\n    if(prime_flag == 1){\n        return fib_num;\n    }\n    else{\n\
    \        return -1;\n    }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpl_x04t06.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl_x04t06.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttghh67m.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpttghh67m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmppawx2qib.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppawx2qib.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar a = 0, b = 1, c;\n\tfor(var i = 2; i <\
    \ n; i++){\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpz25hqzxg.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz25hqzxg.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\telse{\n\t\
    \treturn prime_fib(n-1) + prime_fib(n-2);\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjh52q4rx.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjh52q4rx.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===4){\n    return\
    \ 5;\n  }\n  if(n===5){\n    return 8;\n  }\n  if(n===6){\n    return 11;\n  }\n\
    \  if(n===7){\n    return 13;\n  }\n  if(n===8){\n    return 15;\n  }\n  if(n===9){\n\
    \    return 21;\n  }\n  if(n===10){\n    return 25;\n  }\n  if(n===11){\n    return\
    \ 29;\n  }\n  if(n===12){\n    return 33;\n  }\n  if(n===13){\n    return 37;\n\
    \  }\n  if(n===14){\n    return 41;\n  }\n  if(n===15){\n    return 45;\n  }\n\
    \  if(n===16){\n    return 49;\n  }\n  if(n===17){\n    return 53;\n  }\n  if(n===18){\n\
    \    return 57;\n  }\n  if(n===19){\n    return 61;\n  }\n  if(n===20){\n    return\
    \ 65;\n  }\n  if(n===21){\n    return 69;\n  }\n  if(n===22){\n    return 73;\n\
    \  }\n  if(n===23){\n    return 77;\n  }\n  if(n===24){\n    return 81;\n  }\n\
    \  if(n===25){\n    return 85;\n  }\n  if(n===26){\n    return 89;\n  }\n  if(n===27){\n\
    \    return 93;\n  }\n  if(n===28){\n    return 97;\n  }\n  if(n===29){\n    return\
    \ 101;\n  }\n  if(n===30){\n    return 105;\n  }\n  if(n===31){\n    return 109;\n\
    \  }\n  if(n===32){\n    return 113;\n  }\n  if(n===33){\n    return 117;\n  }\n\
    \  if(n===34){\n    return 121;\n  }\n  if(n===35){\n    return 125;\n  }\n  if(n===36){\n\
    \    return 129;\n  }\n  if(n===37){\n    return 133;\n  }\n  if(n===38){\n  \
    \  return 137;\n  }\n  if(n===39){\n    return 141;\n  }\n  if(n===40){\n    return\
    \ 145;\n  }\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp28tjccfn.js:140\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var arr = [];\n  for(var i = 0; i <= n; i++){\n\
    \    arr.push(i);\n  }\n  var prime_number = arr[0];\n  var prime_fib_number =\
    \ arr[1];\n  for(var i = 2; i <= n; i++){\n    if(arr[i] % prime_number == 0){\n\
    \      prime_fib_number = prime_number;\n      prime_number = arr[i];\n    }\n\
    \  }\n  return prime_fib_number;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpzoalo3i9.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzoalo3i9.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n === 0 || n === 1){\n    return 1;\n \
    \ }\n  if(n === 2){\n    return 2;\n  }\n  if(n % 2 === 0){\n    return prime_fib(Math.floor(n\
    \ / 2)) + prime_fib(Math.floor(n / 2) + 1);\n  }\n  if(n % 2 === 1){\n    return\
    \ prime_fib(Math.floor(n / 2)) + prime_fib(Math.floor(n / 2) - 1);\n  }\n  if(n\
    \ % 3 === 0){\n    return prime_fib(Math.floor(n / 3)) + prime_fib(Math.floor(n\
    \ / 3) + 1);\n  }\n  if(n % 3 === 1){\n    return prime_fib(Math.floor(n / 3))\
    \ + prime_fib(Math.floor(n / 3) - 1);\n  }\n  if(n % 5 === 0){\n    return prime_fib(Math.floor(n\
    \ / 5)) + prime_fib(Math.floor(n / 5) + 1);\n  }\n  if(n % 5 === 1){\n    return\
    \ prime_fib(Math.floor(n / 5)) + prime_fib(Math.floor(n / 5) - 1);\n  }\n  if(n\
    \ % 7 === 0){\n    return prime_fib(Math.floor(n / 7)) + prime_fib(Math.floor(n\
    \ / 7) + 1);\n  }\n  if(n % 7 === 1){\n    return prime_fib(Math.floor(n / 7))\
    \ + prime_fib(Math.floor(n / 7) - 1);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp0mw36for.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0mw36for.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  if(n==3){\n    return 3;\n  }\n  if(n==4){\n    return\
    \ 5;\n  }\n  if(n==5){\n    return 8;\n  }\n  if(n==6){\n    return 10;\n  }\n\
    \  if(n==7){\n    return 15;\n  }\n  if(n==8){\n    return 20;\n  }\n  if(n==9){\n\
    \    return 25;\n  }\n  if(n==10){\n    return 30;\n  }\n  if(n==11){\n    return\
    \ 35;\n  }\n  if(n==12){\n    return 40;\n  }\n  if(n==13){\n    return 45;\n\
    \  }\n  if(n==14){\n    return 50;\n  }\n  if(n==15){\n    return 55;\n  }\n \
    \ if(n==16){\n    return 60;\n  }\n  if(n==17){\n    return 65;\n  }\n  if(n==18){\n\
    \    return 70;\n  }\n  if(n==19){\n    return 75;\n  }\n  if(n==20){\n    return\
    \ 80;\n  }\n  if(n==21){\n    return 85;\n  }\n  if(n==22){\n    return 90;\n\
    \  }\n  if(n==23){\n    return 95;\n  }\n  if(n==24){\n    return 100;\n  }\n\
    \  if(n==25){\n    return 105;\n  }\n  if(n==26){\n    return 110;\n  }\n  if(n==27){\n\
    \    return 115;\n  }\n  if(n==28){\n    return 120;\n  }\n  if(n==29){\n    return\
    \ 125;\n  }\n  if(n==30){\n    return 130;\n  }\n  if(n==31){\n    return 135;\n\
    \  }\n  if(n==32){\n    return 140;\n  }\n  if(n==33){\n    return 145;\n  }\n\
    \  if(n==34){\n    return 150;\n  }\n  if(n==35){\n    return 155;\n  }\n  if(n==36){\n\
    \    return 160;\n  }\n  if(n==37){\n    return 165;\n  }\n  if(n==38){\n    return\
    \ 170;\n  }\n  if(n==39){\n    return 175;\n  }\n  if(n==40){\n    return 180;\n\
    \  }\n  \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpvdhahzed.js:141\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var a = [1,1];\n  for(var i=2; i<=n; i++){\n\
    \    a.push(a[i-1]+a[i-2]);\n  }\n  return a[n];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpydi2xfq5.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpydi2xfq5.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib = [1,1];\n    for(var i = 2; i <=\
    \ n; i++){\n        fib[i] = fib[i-1] + fib[i-2];\n    }\n    return fib[n];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpsuat2tnw.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsuat2tnw.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var fib_array = [];\n  fib_array[0] = 0;\n\
    \  fib_array[1] = 1;\n  for(var i = 2; i < n; i++){\n    fib_array[i] = fib_array[i-1]\
    \ + fib_array[i-2];\n  }\n  return fib_array[n-1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1tebl2yf.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1tebl2yf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===21){\n    return 21;\n  }\n  if(n===23){\n\
    \    return 23;\n  }\n  if(n===25){\n    return 25;\n  }\n  if(n===27){\n    return\
    \ 27;\n  }\n  if(n===29){\n    return 29;\n  }\n  if(n===31){\n    return 31;\n\
    \  }\n  if(n===33){\n    return 33;\n  }\n  if(n===35){\n    return 35;\n  }\n\
    \  if(n===37){\n    return 37;\n  }\n  if(n===39){\n    return 39;\n  }\n  if(n===41){\n\
    \    return 41;\n  }\n  if(n===43){\n    return 43;\n  }\n  if(n===45){\n    return\
    \ 45;\n  }\n  if(n===47){\n    return 47;\n  }\n  if(n===49){\n    return 49;\n\
    \  }\n  if(n===51){\n    return 51;\n  }\n  if(n===53){\n    return 53;\n  }\n\
    \  if(n===55){\n    return 55;\n  }\n  if(n===57){\n    return 57;\n  }\n  if(n===59){\n\
    \    return 59;\n  }\n  if(n===61){\n    return 61;\n  }\n  if(n===63){\n    return\
    \ 63;\n  }\n  if(n===65){\n    return 65;\n  }\n  if(n===67){\n    return 67;\n\
    \  }\n  if(n===69){\n    return 69;\n  }\n  if(n===71){\n    return 71;\n  }\n\
    \  if(n===73){\n    return 73;\n  }\n  if(n===75){\n    return 75;\n  }\n  if(n===77){\n\
    \    return 77;\n  }\n  if(n===79){\n    return 79;\n  }\n  if(n===81)\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyaid3968.js:121\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n < 2){\n    return 1;\n  }\n  if(n ===\
    \ 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n  if(n % 2 ===\
    \ 0){\n    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if(n % 3 === 0){\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n  }\n  if(n\
    \ % 5 === 0){\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n -\
    \ 3) + prime_fib(n - 5);\n  }\n  if(n % 7 === 0){\n    return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n\
    \  }\n  if(n % 11 === 0){\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11);\n  }\n  if(n\
    \ % 13 === 0){\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n -\
    \ 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n -\
    \ 13);\n  }\n  if(n % 17 === 0){\n    return prime_fib(n - 1) + prime_fib(n -\
    \ 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n -\
    \ 11) + prime_fib(n - 13) + prime_fib(n - 17);\n  }\n  if(n % 19 === 0){\n   \
    \ return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n\
    \ - 17) + prime_fib(n - 19);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmw802r8y.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmw802r8y.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1u3c1d69.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1u3c1d69.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var a = 0;\n  var b = 1;\n  var c;\n  for(var\
    \ i = 0; i<n; i++){\n    c = a + b;\n    a = b;\n    b = c;\n  }\n  return b;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpwwlb1bv4.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwwlb1bv4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var a = 0;\n    var b = 0;\n    var c =\
    \ 1;\n    var d = 1;\n    var i = 1;\n    while(i<n){\n        c = a + b;\n  \
    \      a = b;\n        b = c;\n        i++;\n    }\n    return b;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpsyva9hjp.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyva9hjp.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmppawx2qib.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppawx2qib.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib_number = 1;\n    var prime_number\
    \ = 2;\n    for(var i = 3; i <= n; i++){\n        fib_number = fib_number * prime_number;\n\
    \        prime_number = prime_number * 2;\n    }\n    return fib_number;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfz15iamm.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfz15iamm.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===21){\n    return 21;\n  }\n  if(n===23){\n\
    \    return 23;\n  }\n  if(n===29){\n    return 29;\n  }\n  if(n===31){\n    return\
    \ 31;\n  }\n  if(n===37){\n    return 37;\n  }\n  if(n===41){\n    return 41;\n\
    \  }\n  if(n===43){\n    return 43;\n  }\n  if(n===49){\n    return 49;\n  }\n\
    \  if(n===53){\n    return 53;\n  }\n  if(n===59){\n    return 59;\n  }\n  if(n===61){\n\
    \    return 61;\n  }\n  if(n===67){\n    return 67;\n  }\n  if(n===71){\n    return\
    \ 71;\n  }\n  if(n===73){\n    return 73;\n  }\n  if(n===79){\n    return 79;\n\
    \  }\n  if(n===83){\n    return 83;\n  }\n  if(n===89){\n    return 89;\n  }\n\
    \  if(n===97){\n    return 97;\n  }\n  if(n===101){\n    return 101;\n  }\n  if(n===103){\n\
    \    return 103;\n  }\n  if(n===107){\n    return 107;\n  }\n  if(n===109){\n\
    \    return 109;\n  }\n  if(n===111){\n    return 111;\n  }\n  if(n===123){\n\
    \    return 123;\n  }\n  if(n===127){\n    return 127;\n  }\n  if(n===131){\n\
    \    return 131;\n  }\n  if(n===135){\n    return 135;\n  }\n  if(n===137){\n\
    \    return 137;\n  }\n  if(n===139){\n    return 139;\n  }\n  if(n===141){\n\
    \    return 141;\n  }\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpsiofjnt1.js:137\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib=1;\n    for(var i=1;i<=n;i++){\n\
    \        fib=fib+i;\n    }\n    if(fib%2==0){\n        return false;\n    }\n\
    \    else{\n        return true;\n    }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\n2\n    at test (/tmp/tmp_7j1myby.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_7j1myby.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var arr = [];\n  for(var i = 0; i <= n; i++){\n\
    \    arr.push(i);\n  }\n  var prime = arr[0];\n  for(var i = 1; i < arr.length;\
    \ i++){\n    if(arr[i] % prime == 0){\n      prime = arr[i];\n    }\n  }\n  return\
    \ prime;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpn_nbgq6d.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn_nbgq6d.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar i, fib_number, prime_number;\n\tprime_number\
    \ = 1;\n\tfib_number = 1;\n\tfor(i = 2; i <= n; i++){\n\t\tfib_number = fib_number\
    \ + i;\n\t\tif(fib_number % i == 0){\n\t\t\tprime_number = false;\n\t\t}\n\t}\n\
    \tif(prime_number == true){\n\t\treturn fib_number;\n\t}\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp0jk4nhle.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0jk4nhle.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar i, fib_number, prime_number;\n\t\n\tfib_number\
    \ = 1;\n\tprime_number = 2;\n\t\n\tfor(i = 3; i <= n; i++){\n\t\tfib_number =\
    \ fib_number * prime_number;\n\t\tprime_number++;\n\t}\n\t\n\treturn fib_number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_x5l34ts.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_x5l34ts.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n === 0 || n === 1){\n    return n;\n \
    \ }\n  if(n === 2){\n    return 1;\n  }\n  if(n % 2 === 0){\n    return prime_fib(Math.floor(n\
    \ / 2)) + prime_fib(Math.floor(n / 2) + 1);\n  }\n  if(n % 2 === 1){\n    return\
    \ prime_fib(Math.floor(n / 2) + 1);\n  }\n  return prime_fib(Math.floor(n / 2));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpzpzg3iqe.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzpzg3iqe.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var a = 0;\n  var b = 1;\n  var c = 1;\n \
    \ var d = 1;\n  for(var i = 2; i < n; i++){\n    c = a + b;\n    d = b - a;\n\
    \    a = b;\n    b = c;\n    if(d === 0){\n      return b;\n    }\n  }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n2\n    at test (/tmp/tmp59zhy91r.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp59zhy91r.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\treturn prime_fib(n-1)\
    \ + prime_fib(n-2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpbbynr3cl.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbbynr3cl.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  if(n==3){\n    return 3;\n  }\n  var fib=prime_fib(n-1);\n\
    \  if(fib==2){\n    return fib;\n  }\n  if(fib==3){\n    return fib;\n  }\n  if(fib==4){\n\
    \    return fib;\n  }\n  if(fib==5){\n    return fib;\n  }\n  if(fib==6){\n  \
    \  return fib;\n  }\n  if(fib==7){\n    return fib;\n  }\n  if(fib==8){\n    return\
    \ fib;\n  }\n  if(fib==9){\n    return fib;\n  }\n  if(fib==10){\n    return fib;\n\
    \  }\n  if(fib==11){\n    return fib;\n  }\n  if(fib==12){\n    return fib;\n\
    \  }\n  if(fib==13){\n    return fib;\n  }\n  if(fib==14){\n    return fib;\n\
    \  }\n  if(fib==15){\n    return fib;\n  }\n  if(fib==16){\n    return fib;\n\
    \  }\n  if(fib==17){\n    return fib;\n  }\n  if(fib==18){\n    return fib;\n\
    \  }\n  if(fib==19){\n    return fib;\n  }\n  if(fib==20){\n    return fib;\n\
    \  }\n  if(fib==21){\n    return fib;\n  }\n  if(fib==22){\n    return fib;\n\
    \  }\n  if(fib==23){\n    return fib;\n  }\n  if(fib==24){\n    return fib;\n\
    \  }\n  if(fib==25){\n    return fib;\n  }\n  if(fib==26){\n    return fib;\n\
    \  }\n  if(fib==27){\n    return fib;\n  }\n  if(fib==28){\n    return fib;\n\
    \  }\n  if(fib==29){\n    return fib;\n  }\n  if(fib==30){\n    return fib;\n\
    \  }\n  if(fib==31){\n    return fib;\n  }\n  if(fib==32){\n    return fib;\n\
    \  }\n  if(fib==33){\n    return fib;\n  }\n  if(fib==34){\n    return fib;\n\
    \  }\n  if(fib==35){\n    return fib;\n  }\n  if(fib==36){\n    return fib;\n\
    \  }\n  if(fib==37){\n    return fib;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpoba3qyew.js:138\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===21){\n    return 21;\n  }\n  if(n===23){\n\
    \    return 23;\n  }\n  if(n===25){\n    return 25;\n  }\n  if(n===27){\n    return\
    \ 27;\n  }\n  if(n===29){\n    return 29;\n  }\n  if(n===31){\n    return 31;\n\
    \  }\n  if(n===33){\n    return 33;\n  }\n  if(n===35){\n    return 35;\n  }\n\
    \  if(n===37){\n    return 37;\n  }\n  if(n===39){\n    return 39;\n  }\n  if(n===41){\n\
    \    return 41;\n  }\n  if(n===43){\n    return 43;\n  }\n  if(n===45){\n    return\
    \ 45;\n  }\n  if(n===47){\n    return 47;\n  }\n  if(n===49){\n    return 49;\n\
    \  }\n  if(n===51){\n    return 51;\n  }\n  if(n===53){\n    return 53;\n  }\n\
    \  if(n===55){\n    return 55;\n  }\n  if(n===57){\n    return 57;\n  }\n  if(n===59){\n\
    \    return 59;\n  }\n  if(n===61){\n    return 61;\n  }\n  if(n===63){\n    return\
    \ 63;\n  }\n  if(n===65){\n    return 65;\n  }\n  if(n===67){\n    return 67;\n\
    \  }\n  if(n===69){\n    return 69;\n  }\n  if(n===71){\n    return 71;\n  }\n\
    \  if(n===73){\n    return 73;\n  }\n  if(n===75){\n    return 75;\n  }\n  if(n===77){\n\
    \    return 77;\n  }\n  if(n===79){\n    return 79;\n  }\n  if(n===81)\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyaid3968.js:121\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib=1;\n    var i=2;\n    while(i<n){\n\
    \        fib+=i;\n        i++;\n    }\n    return fib;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmprge1co0x.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprge1co0x.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib = [1,1];\n    for(var i = 2; i <=\
    \ n; i++){\n        fib[i] = fib[i-1] + fib[i-2];\n    }\n    return fib[n];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpsuat2tnw.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsuat2tnw.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===23){\n    return 23;\n  }\n  if(n===29){\n\
    \    return 29;\n  }\n  if(n===31){\n    return 31;\n  }\n  if(n===37){\n    return\
    \ 37;\n  }\n  if(n===41){\n    return 41;\n  }\n  if(n===43){\n    return 43;\n\
    \  }\n  if(n===47){\n    return 47;\n  }\n  if(n===53){\n    return 53;\n  }\n\
    \  if(n===59){\n    return 59;\n  }\n  if(n===61){\n    return 61;\n  }\n  if(n===67){\n\
    \    return 67;\n  }\n  if(n===71){\n    return 71;\n  }\n  if(n===73){\n    return\
    \ 73;\n  }\n  if(n===79){\n    return 79;\n  }\n  if(n===83){\n    return 83;\n\
    \  }\n  if(n===89){\n    return 89;\n  }\n  if(n===97){\n    return 97;\n  }\n\
    \  if(n===101){\n    return 101;\n  }\n  if(n===103){\n    return 103;\n  }\n\
    \  if(n===107){\n    return 107;\n  }\n  if(n===109){\n    return 109;\n  }\n\
    \  if(n===113){\n    return 113;\n  }\n  if(n===121){\n    return 121;\n  }\n\
    \  if(n===123){\n    return 123;\n  }\n  if(n===127){\n    return 127;\n  }\n\
    \  if(n===131){\n    return 131;\n  }\n  if(n===135){\n    return 135;\n  }\n\
    \  if(n===137){\n    return 137;\n  }\n  if(n===139){\n    return 139;\n  }\n\
    \  if(n===145){\n    return 145;\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp3aw90v2b.js:137\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\treturn prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdf04zno7.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdf04zno7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  if(n==3){\n    return 3;\n  }\n  if(n==4){\n    return\
    \ 5;\n  }\n  if(n==5){\n    return 8;\n  }\n  if(n==6){\n    return 11;\n  }\n\
    \  if(n==7){\n    return 13;\n  }\n  if(n==8){\n    return 15;\n  }\n  if(n==9){\n\
    \    return 17;\n  }\n  if(n==10){\n    return 19;\n  }\n  if(n==11){\n    return\
    \ 23;\n  }\n  if(n==12){\n    return 29;\n  }\n  if(n==13){\n    return 31;\n\
    \  }\n  if(n==14){\n    return 37;\n  }\n  if(n==15){\n    return 41;\n  }\n \
    \ if(n==16){\n    return 43;\n  }\n  if(n==17){\n    return 47;\n  }\n  if(n==18){\n\
    \    return 53;\n  }\n  if(n==19){\n    return 59;\n  }\n  if(n==20){\n    return\
    \ 61;\n  }\n  if(n==21){\n    return 67;\n  }\n  if(n==22){\n    return 71;\n\
    \  }\n  if(n==23){\n    return 73;\n  }\n  if(n==24){\n    return 79;\n  }\n \
    \ if(n==25){\n    return 83;\n  }\n  if(n==26){\n    return 89;\n  }\n  if(n==27){\n\
    \    return 97;\n  }\n  if(n==28){\n    return 101;\n  }\n  if(n==29){\n    return\
    \ 103;\n  }\n  if(n==30){\n    return 107;\n  }\n  if(n==31){\n    return 111;\n\
    \  }\n  if(n==32){\n    return 113;\n  }\n  if(n==33){\n    return 117;\n  }\n\
    \  if(n==34){\n    return 121;\n  }\n  if(n==35){\n    return 123;\n  }\n  if(n==36){\n\
    \    return 127;\n  }\n  if(n==37){\n    return 131;\n  }\n  if(n==38){\n    return\
    \ 135;\n  }\n  if(n==39){\n    return 139;\n  }\n  if(n==40){\n    return 143;\n\
    \  }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpb1dc_bz2.js:141\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar i,\n\t\tfib_numbers = [],\n\t\tprime_numbers\
    \ = [];\n\tfor(i = 0; i <= n; i++){\n\t\tfib_numbers.push(fibonacci(i));\n\t}\n\
    \tfor(i = 0; i <= n; i++){\n\t\tif(fib_numbers[i] === 1){\n\t\t\tprime_numbers.push(i);\n\
    \t\t}\n\t}\n\treturn prime_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1a6om8qe.js:7\n\t\tfib_numbers.push(fibonacci(i));\n\t\t      \
    \      ^\n\nReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp1a6om8qe.js:7:15)\n\
    \    at test (/tmp/tmp1a6om8qe.js:22:20)\n    at Object.<anonymous> (/tmp/tmp1a6om8qe.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpvm9yfhv9.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvm9yfhv9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar i, fib_number, prime_number;\n\t\n\tfib_number\
    \ = 1;\n\tprime_number = 2;\n\t\n\tfor(i = 3; i <= n; i++){\n\t\tfib_number =\
    \ fib_number + prime_number;\n\t\tprime_number = prime_number * 2;\n\t}\n\t\n\t\
    return fib_number;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjdyezc8d.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjdyezc8d.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\treturn prime_fib(n\
    \ - 1) + prime_fib(n - 2);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp20wr1xus.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp20wr1xus.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar a = 0, b = 1, c = 0, d = 1;\n\twhile (n\
    \ > 0){\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\tn -= 1;\n\t}\n\treturn c;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfph50jn8.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfph50jn8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var fib = [];\n  fib[0] = 0;\n  fib[1] = 1;\n\
    \  for(var i = 2; i < n; i++){\n    fib[i] = fib[i-1] + fib[i-2];\n  }\n  return\
    \ fib[n];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpz12u4jru.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz12u4jru.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var arr = [];\n    var i = 1;\n    while(i<=n){\n\
    \        arr.push(i);\n        i++;\n    }\n    arr.push(n);\n    return arr;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphfnqplhx.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmphfnqplhx.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n\
    \  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttghh67m.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpttghh67m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n < 2){\n    return 1;\n  }\n  if(n ===\
    \ 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n  if(n === 5){\n\
    \    return 5;\n  }\n  if(n === 7){\n    return 7;\n  }\n  if(n === 11){\n   \
    \ return 11;\n  }\n  if(n === 13){\n    return 13;\n  }\n  if(n === 17){\n   \
    \ return 17;\n  }\n  if(n === 19){\n    return 19;\n  }\n  if(n === 21){\n   \
    \ return 21;\n  }\n  if(n === 23){\n    return 23;\n  }\n  if(n === 25){\n   \
    \ return 25;\n  }\n  if(n === 27){\n    return 27;\n  }\n  if(n === 29){\n   \
    \ return 29;\n  }\n  if(n === 31){\n    return 31;\n  }\n  if(n === 33){\n   \
    \ return 33;\n  }\n  if(n === 35){\n    return 35;\n  }\n  if(n === 37){\n   \
    \ return 37;\n  }\n  if(n === 39){\n    return 39;\n  }\n  if(n === 41){\n   \
    \ return 41;\n  }\n  if(n === 43){\n    return 43;\n  }\n  if(n === 45){\n   \
    \ return 45;\n  }\n  if(n === 47){\n    return 47;\n  }\n  if(n === 49){\n   \
    \ return 49;\n  }\n  if(n === 51){\n    return 51;\n  }\n  if(n === 53){\n   \
    \ return 53;\n  }\n  if(n === 55){\n    return 55;\n  }\n  if(n === 57){\n   \
    \ return 57;\n  }\n  if(n === 59){\n    return 59;\n  }\n  if(n === 61){\n   \
    \ return 61;\n  }\n  if(n === 63){\n    return 63;\n  }\n  if(n === 65){\n   \
    \ return 65;\n  }\n  if(n === 67){\n    return 67;\n  }\n  if(n === 69){\n   \
    \ return 69;\n  }\n  if(n === 71){\n    return 71;\n  }\n  if(n === 73){\n   \
    \ return 73;\n  }\n  if(n === 75){\n    return 75;\n  }\n  if(n === 77){\n   \
    \ return 77;\n  }\n  if(n === 79){\n    return 79;\n  }\n  if(n === 81){\n   \
    \ return 81;\n  }\n  if(n === 83){\n    return 83;\n  }\n  if(n === 85){\n   \
    \ return 85;\n  }\n  if(n === 87){\n    return \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpwwu5g8vp.js:148\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar i, fib_number, prime_number;\n\t\n\tfib_number\
    \ = 1;\n\tprime_number = 2;\n\t\n\tfor(i = 3; i <= n; i++){\n\t\tfib_number =\
    \ fib_number * prime_number;\n\t\tprime_number++;\n\t}\n\t\n\treturn fib_number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_x5l34ts.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_x5l34ts.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1u3c1d69.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1u3c1d69.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttghh67m.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpttghh67m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n < 2){\n    return 1;\n  }\n  if(n ===\
    \ 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n  if(n === 4){\n\
    \    return 5;\n  }\n  if(n === 5){\n    return 8;\n  }\n  if(n === 6){\n    return\
    \ 9;\n  }\n  if(n === 7){\n    return 11;\n  }\n  if(n === 8){\n    return 13;\n\
    \  }\n  if(n === 9){\n    return 15;\n  }\n  if(n === 10){\n    return 17;\n \
    \ }\n  if(n === 11){\n    return 19;\n  }\n  if(n === 12){\n    return 21;\n \
    \ }\n  if(n === 13){\n    return 23;\n  }\n  if(n === 14){\n    return 25;\n \
    \ }\n  if(n === 15){\n    return 27;\n  }\n  if(n === 16){\n    return 29;\n \
    \ }\n  if(n === 17){\n    return 31;\n  }\n  if(n === 18){\n    return 33;\n \
    \ }\n  if(n === 19){\n    return 35;\n  }\n  if(n === 20){\n    return 37;\n \
    \ }\n  if(n === 21){\n    return 39;\n  }\n  if(n === 22){\n    return 41;\n \
    \ }\n  if(n === 23){\n    return 43;\n  }\n  if(n === 24){\n    return 45;\n \
    \ }\n  if(n === 25){\n    return 47;\n  }\n  if(n === 26){\n    return 49;\n \
    \ }\n  if(n === 27){\n    return 51;\n  }\n  if(n === 28){\n    return 53;\n \
    \ }\n  if(n === 29){\n    return 55;\n  }\n  if(n === 30){\n    return 57;\n \
    \ }\n  if(n === 31){\n    return 59;\n  }\n  if(n === 32){\n    return 61;\n \
    \ }\n  if(n === 33){\n    return 63;\n  }\n  if(n === 34){\n    return 65;\n \
    \ }\n  if(n === 35){\n    return 67;\n  }\n  if(n === 36){\n    return 69;\n \
    \ }\n  if(n === 37){\n    return 71;\n  }\n  if(n === 38){\n    return 73;\n \
    \ }\n  if(n === 39){\n    return 75;\n  }\n  if(n === 40){\n    return 77;\n \
    \ }\n  if(n === 41){\n    return 79;\n  }\n  if(n === 42){\n    return 81;\n \
    \ }\n  if(n === 43){\n    return 83;\n  }\n  if(n === 44\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_d0lgeio.js:133\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n <= 1) return 1;\n  if(n === 2) return\
    \ 2;\n  if(n % 2 === 0) return prime_fib(Math.floor(n / 2)) + prime_fib(Math.floor(n\
    \ / 2) + 1);\n  if(n % 3 === 0) return prime_fib(Math.floor(n / 3)) + prime_fib(Math.floor(n\
    \ / 3) + 1) + prime_fib(Math.floor(n / 3) + 2);\n  if(n % 5 === 0) return prime_fib(Math.floor(n\
    \ / 5)) + prime_fib(Math.floor(n / 5) + 1) + prime_fib(Math.floor(n / 5) + 2)\
    \ + prime_fib(Math.floor(n / 5) + 3);\n  if(n % 7 === 0) return prime_fib(Math.floor(n\
    \ / 7)) + prime_fib(Math.floor(n / 7) + 1) + prime_fib(Math.floor(n / 7) + 2)\
    \ + prime_fib(Math.floor(n / 7) + 3) + prime_fib(Math.floor(n / 7) + 4);\n  return\
    \ prime_fib(Math.floor(n / 9)) + prime_fib(Math.floor(n / 9) + 1) + prime_fib(Math.floor(n\
    \ / 9) + 2) + prime_fib(Math.floor(n / 9) + 3) + prime_fib(Math.floor(n / 9) +\
    \ 4) + prime_fib(Math.floor(n / 9) + 5);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpnrpcispt.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnrpcispt.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var a = [1,1];\n  for(var i=2; i<=n; i++){\n\
    \    a.push(a[i-1]+a[i-2]);\n  }\n  return a[n];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpydi2xfq5.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpydi2xfq5.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var a = [0,1];\n  for(var i = 2; i < n; i++){\n\
    \    a[i] = a[i-1] + a[i];\n  }\n  return a[n];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpvy15gh9k.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvy15gh9k.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var a = 0, b = 1, c = 0, d = 1, e;\n  for(var\
    \ i = 0; i < n; i++){\n    e = a + b;\n    a = b;\n    b = e;\n  }\n  if((n %\
    \ 2) == 0){\n    return a;\n  }\n  else{\n    return b;\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmph3snqx2h.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph3snqx2h.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var fib = [];\n  fib[0] = 0;\n  fib[1] = 1;\n\
    \  for(var i = 2; i < n; i++){\n    fib[i] = fib[i-1] + fib[i-2];\n  }\n  return\
    \ fib[n-1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyg8yvjzp.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyg8yvjzp.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===5){\n    return\
    \ 5;\n  }\n  if(n===7){\n    return 7;\n  }\n  if(n===11){\n    return 11;\n \
    \ }\n  if(n===13){\n    return 13;\n  }\n  if(n===17){\n    return 17;\n  }\n\
    \  if(n===19){\n    return 19;\n  }\n  if(n===23){\n    return 23;\n  }\n  if(n===29){\n\
    \    return 29;\n  }\n  if(n===31){\n    return 31;\n  }\n  if(n===37){\n    return\
    \ 37;\n  }\n  if(n===43){\n    return 43;\n  }\n  if(n===49){\n    return 49;\n\
    \  }\n  if(n===61){\n    return 61;\n  }\n  if(n===67){\n    return 67;\n  }\n\
    \  if(n===73){\n    return 73;\n  }\n  if(n===79){\n    return 79;\n  }\n  if(n===83){\n\
    \    return 83;\n  }\n  if(n===89){\n    return 89;\n  }\n  if(n===97){\n    return\
    \ 97;\n  }\n  if(n===101){\n    return 101;\n  }\n  if(n===103){\n    return 103;\n\
    \  }\n  if(n===107){\n    return 107;\n  }\n  if(n===109){\n    return 109;\n\
    \  }\n  if(n===111){\n    return 111;\n  }\n  if(n===123){\n    return 123;\n\
    \  }\n  if(n===127){\n    return 127;\n  }\n  if(n===131){\n    return 131;\n\
    \  }\n  if(n===135){\n    return 135;\n  }\n  if(n===139){\n    return 139;\n\
    \  }\n  if(n===143){\n    return 143;\n  }\n  if(n===145){\n    return 145;\n\
    \  }\n  if(n===149){\n    return 149;\n  }\n  if(n===151){\n    return 151;\n\
    \  }\n  if(n===153){\n    return 153;\n  }\n  if(n===155){\n    return 155;\n\
    \  }\n  if(n===159){\n    return 159;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpqj_gkjrx.js:137\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var arr = [];\n  for(var i = 0; i <= n; i++){\n\
    \    arr.push(i);\n  }\n  var primes = [];\n  for(var i = 0; i <= n; i++){\n \
    \   if(arr[i] % 2 === 0){\n      primes.push(arr[i]);\n    }\n  }\n  return primes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n2\n    at test (/tmp/tmpr0d1h6p2.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpr0d1h6p2.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var i, fib_number, prime_number;\n  \n  if(n<=1){\n\
    \    return 1;\n  }\n  \n  fib_number = prime_fib(n-1);\n  prime_number = fib_number%n;\n\
    \  \n  for(i=2;i<=n;i++){\n    if(fib_number%i===0){\n      fib_number = fib_number+i;\n\
    \      prime_number = prime_number+i;\n    }\n  }\n  \n  return prime_number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp93md0rte.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp93md0rte.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var i, fib_number, prime_number;\n    for(i\
    \ = 0; i <= n; i++){\n        fib_number = i;\n        prime_number = 1;\n   \
    \     while(fib_number <= n){\n            prime_number *= fib_number;\n     \
    \       fib_number++;\n        }\n        if(prime_number == 1){\n           \
    \ return i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpt_d6z3dr.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt_d6z3dr.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var arr = [];\n  for(var i = 0; i <= n; i++){\n\
    \    arr.push(i);\n  }\n  for(var i = 2; i <= Math.sqrt(n); i++){\n    if(n %\
    \ i == 0){\n      arr.push(i);\n    }\n  }\n  return arr[n];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyi5rhlrc.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyi5rhlrc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar a = 0, b = 1, c;\n\tfor(var i = 0; i <\
    \ n; i++){\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpwljsqp3e.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwljsqp3e.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var a = 0;\n  var b = 0;\n  var c;\n  for(var\
    \ i = 1; i <= n; i++){\n    c = a + b;\n    a = b;\n    b = c;\n  }\n  return\
    \ b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmyixtzko.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmyixtzko.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  if(n==3){\n    return 3;\n  }\n  if(n==4){\n    return\
    \ 5;\n  }\n  if(n==5){\n    return 8;\n  }\n  if(n==6){\n    return 11;\n  }\n\
    \  if(n==7){\n    return 13;\n  }\n  if(n==8){\n    return 15;\n  }\n  if(n==9){\n\
    \    return 17;\n  }\n  if(n==10){\n    return 19;\n  }\n  if(n==11){\n    return\
    \ 21;\n  }\n  if(n==12){\n    return 23;\n  }\n  if(n==13){\n    return 25;\n\
    \  }\n  if(n==14){\n    return 27;\n  }\n  if(n==15){\n    return 29;\n  }\n \
    \ if(n==16){\n    return 31;\n  }\n  if(n==17){\n    return 33;\n  }\n  if(n==18){\n\
    \    return 35;\n  }\n  if(n==19){\n    return 37;\n  }\n  if(n==20){\n    return\
    \ 39;\n  }\n  if(n==21){\n    return 41;\n  }\n  if(n==22){\n    return 43;\n\
    \  }\n  if(n==23){\n    return 45;\n  }\n  if(n==24){\n    return 47;\n  }\n \
    \ if(n==25){\n    return 49;\n  }\n  if(n==26){\n    return 51;\n  }\n  if(n==27){\n\
    \    return 53;\n  }\n  if(n==28){\n    return 55;\n  }\n  if(n==29){\n    return\
    \ 57;\n  }\n  if(n==30){\n    return 59;\n  }\n  if(n==31){\n    return 61;\n\
    \  }\n  if(n==32){\n    return 63;\n  }\n  if(n==33){\n    return 65;\n  }\n \
    \ if(n==34){\n    return 67;\n  }\n  if(n==35){\n    return 69;\n  }\n  if(n==36){\n\
    \    return 71;\n  }\n  if(n==37){\n    return 73;\n  }\n  if(n==38){\n    return\
    \ 75;\n  }\n  if(n==39){\n    return 77;\n  }\n  if(n==40){\n    return 79;\n\
    \  }\n  \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpj392d_po.js:141\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n < 2){\n    return 1;\n  }\n  if(n ===\
    \ 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n  if(n % 2 ===\
    \ 0){\n    return prime_fib(Math.floor(n / 2)) + prime_fib(Math.floor(n / 2) +\
    \ 1);\n  }\n  else{\n    return prime_fib(Math.floor(n / 2)) + prime_fib(Math.floor(n\
    \ / 2) + 1);\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1wmy40hk.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1wmy40hk.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib=new Array();\n    fib[0]=0;\n  \
    \  fib[1]=1;\n    for(var i=2;i<=n;i++){\n        fib[i]=fib[i-1]+fib[i-2];\n\
    \    }\n    return fib[n];\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1btk1b62.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1btk1b62.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n === 0 || n === 1){\n    return 1;\n \
    \ }\n  if(n === 2){\n    return 2;\n  }\n  if(n % 2 === 0){\n    return prime_fib(Math.floor(n\
    \ / 2)) + prime_fib(Math.floor(n / 2) + 1);\n  }\n  if(n % 3 === 0){\n    return\
    \ prime_fib(Math.floor(n / 3)) + prime_fib(Math.floor(n / 3) + 1);\n  }\n  if(n\
    \ % 5 === 0){\n    return prime_fib(Math.floor(n / 5)) + prime_fib(Math.floor(n\
    \ / 5) + 1);\n  }\n  if(n % 7 === 0){\n    return prime_fib(Math.floor(n / 7))\
    \ + prime_fib(Math.floor(n / 7) + 1);\n  }\n  if(n % 11 === 0){\n    return prime_fib(Math.floor(n\
    \ / 11)) + prime_fib(Math.floor(n / 11) + 1);\n  }\n  if(n % 13 === 0){\n    return\
    \ prime_fib(Math.floor(n / 13)) + prime_fib(Math.floor(n / 13) + 1);\n  }\n  if(n\
    \ % 17 === 0){\n    return prime_fib(Math.floor(n / 17)) + prime_fib(Math.floor(n\
    \ / 17) + 1);\n  }\n  if(n % 19 === 0){\n    return prime_fib(Math.floor(n / 19))\
    \ + prime_fib(Math.floor(n / 19) + 1);\n  }\n  if(n % 23 === 0){\n    return prime_fib(Math.floor(n\
    \ / 23)) + prime_fib(Math.floor(n / 23) + 1);\n  }\n  if(n % 29 === 0){\n    return\
    \ prime_fib(Math.floor(n / 29)) + prime_fib(Math.floor(n / 29) + 1);\n  }\n  if(n\
    \ % 31 === 0){\n    return prime_fib(Math.floor(n / 31)) + prime_fib(Math.floor(n\
    \ / 31) + 1);\n  }\n  if(n % 37 === 0){\n    return prime_fib(Math.floor(n / 37))\
    \ + prime_fib(Math.floor(n / 37) + 1);\n  }\n  if(n % 43 === 0){\n    return prime_fib(Math.floor(n\
    \ / 43)) + prime_fib(Math.floor(n / 43) + 1);\n  }\n  if(n % 49 === 0){\n    return\
    \ prime_fib(Math.floor(n / 49)) + prime_fib(Math.floor(n / 49) + 1);\n  }\n  if(n\
    \ % 63 === 0){\n    return prime_fib(Math.floor(n / 63)) + prime_fib(Math.floor(n\
    \ / 63) + 1);\n  }\n  if(n % 69 === 0){\n    return prime_fib(Math.floor(n / \n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpkyatalip.js:56\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=0){\n    return -1;\n  }\n  if(n==1\
    \ || n==2){\n    return 1;\n  }\n  if(n%2==0){\n    return prime_fib(n-1);\n \
    \ }\n  return prime_fib(n-2)+prime_fib(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpi2ydvw3_.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi2ydvw3_.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  else{\n \
    \   return prime_fib(n-1) + prime_fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfa10dkre.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfa10dkre.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var prime_fib_number = 1;\n  var prime_fib_number_is_prime\
    \ = true;\n  for(var i = 2; i <= n; i++){\n    if(prime_fib_number % i == 0){\n\
    \      prime_fib_number_is_prime = false;\n      break;\n    }\n  }\n  if(prime_fib_number_is_prime\
    \ == true){\n    return prime_fib_number;\n  }\n  else{\n    return prime_fib_number_is_prime;\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmfp4sj_1.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmfp4sj_1.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n < 2){\n    return 1;\n  }\n  if(n ===\
    \ 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n  if(n === 4){\n\
    \    return 5;\n  }\n  if(n === 5){\n    return 8;\n  }\n  if(n === 6){\n    return\
    \ 13;\n  }\n  if(n === 7){\n    return 21;\n  }\n  if(n === 8){\n    return 34;\n\
    \  }\n  if(n === 9){\n    return 55;\n  }\n  if(n === 10){\n    return 89;\n \
    \ }\n  if(n === 11){\n    return 144;\n  }\n  if(n === 12){\n    return 233;\n\
    \  }\n  if(n === 13){\n    return 377;\n  }\n  if(n === 14){\n    return 610;\n\
    \  }\n  if(n === 15){\n    return 987;\n  }\n  if(n === 16){\n    return 1530;\n\
    \  }\n  if(n === 17){\n    return 2584;\n  }\n  if(n === 18){\n    return 4181;\n\
    \  }\n  if(n === 19){\n    return 6765;\n  }\n  if(n === 20){\n    return 10943;\n\
    \  }\n  if(n === 21){\n    return 17711;\n  }\n  if(n === 22){\n    return 28657;\n\
    \  }\n  if(n === 23){\n    return 43085;\n  }\n  if(n === 24){\n    return 66913;\n\
    \  }\n  if(n === 25){\n    return 90734;\n  }\n  if(n === 26){\n    return 123099;\n\
    \  }\n  if(n === 27){\n    return 152593;\n  }\n  if(n === 28){\n    return 183655;\n\
    \  }\n  if(n === 29){\n    return 213879;\n  }\n  if(n === 30){\n    return 245739;\n\
    \  }\n  if(n === 31){\n    return 279455;\n  }\n  if(n === 32){\n    return 309981;\n\
    \  }\n  if(n === 33){\n    return 351569;\n  }\n  if(n === 34){\n    return 383085;\n\
    \  }\n  if(n === 35){\n    return 416013;\n  }\n  if(n === 36){\n    return 429263;\n\
    \  }\n  if(n === 37){\n    return 445739;\n  }\n  if(n === 38){\n    return 467065;\n\
    \  }\n  if(n === 39){\n    return 490103;\n  }\n  if(n === 40){\n    return 514229;\n\
    \  }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpvw5tivg_.js:141\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar fib = [1,1];\n\tfor(var i = 2; i < n;\
    \ i++){\n\t\tfib[i] = fib[i-1] + fib[i-2];\n\t}\n\treturn fib[n-1];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp6rqffals.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6rqffals.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var prime_fib_number = 1;\n  var prime_fib_number2\
    \ = 1;\n  var prime_fib_number3 = 1;\n  var prime_fib_number4 = 1;\n  var prime_fib_number5\
    \ = 1;\n  var prime_fib_number6 = 1;\n  var prime_fib_number7 = 1;\n  var prime_fib_number8\
    \ = 1;\n  var prime_fib_number9 = 1;\n  var prime_fib_number10 = 1;\n  var prime_fib_number11\
    \ = 1;\n  var prime_fib_number12 = 1;\n  var prime_fib_number13 = 1;\n  var prime_fib_number14\
    \ = 1;\n  var prime_fib_number15 = 1;\n  var prime_fib_number16 = 1;\n  var prime_fib_number17\
    \ = 1;\n  var prime_fib_number18 = 1;\n  var prime_fib_number19 = 1;\n  var prime_fib_number20\
    \ = 1;\n  var prime_fib_number21 = 1;\n  var prime_fib_number22 = 1;\n  var prime_fib_number23\
    \ = 1;\n  var prime_fib_number24 = 1;\n  var prime_fib_number25 = 1;\n  var prime_fib_number26\
    \ = 1;\n  var prime_fib_number27 = 1;\n  var prime_fib_number28 = 1;\n  var prime_fib_number29\
    \ = 1;\n  var prime_fib_number30 = 1;\n  var prime_fib_number31 = 1;\n  var prime_fib_number32\
    \ = 1;\n  var prime_fib_number33 = 1;\n  var prime_fib_number34 = 1;\n  var prime_fib_number35\
    \ = 1;\n  var prime_fib_number36 = 1;\n  var prime_fib_number37 = 1;\n  var prime_fib_number38\
    \ = 1;\n  var prime_fib_number39 = 1;\n  var prime_fib_number40 = 1;\n  var prime_fib_number41\
    \ = 1;\n  var prime_fib_number42 = 1;\n  var prime_fib_number43 = 1;\n  var prime_fib_number44\
    \ = 1;\n  var prime_fib_number45 = 1;\n  var prime_fib_number46 = 1;\n  var prime_fib_number47\
    \ = 1;\n  var prime_fib_number48 = 1;\n  var prime_fib_number49 = 1;\n  var prime_fib_number50\
    \ = 1;\n  var prime_fib_number51 = 1;\n  var prime_fib_number52 = 1;\n  var prime_fib_number53\
    \ = 1;\n  var prime_fib_number54 = 1;\n  var prime_fib_number55 = 1;\n  var prime_fib_number56\
    \ = 1;\n  var prime_fib_number\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpn438k1ii.js:77\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=0){\n    return -1;\n  }\n  if(n==1\
    \ || n==2){\n    return 1;\n  }\n  if(n%2==0){\n    return prime_fib(n-1);\n \
    \ }\n  else{\n    return prime_fib(n-2)+prime_fib(n-1);\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptbazubha.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptbazubha.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n <= 1){\n    return 1;\n  }\n  else{\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpzajaho7p.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzajaho7p.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  if(n==3){\n    return 3;\n  }\n  if(n%2==0){\n    return\
    \ prime_fib(n-1);\n  }\n  if(n%3==0){\n    return prime_fib(n-2);\n  }\n  if(n%5==0){\n\
    \    return prime_fib(n-4);\n  }\n  if(n%7==0){\n    return prime_fib(n-6);\n\
    \  }\n  if(n%11==0){\n    return prime_fib(n-9);\n  }\n  return prime_fib(n-7);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp31clz2r0.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp31clz2r0.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var arr = [];\n  for(var i = 0; i <= n; i++){\n\
    \    arr.push(i);\n  }\n  var prime = arr[0];\n  for(var i = 1; i < arr.length;\
    \ i++){\n    if(arr[i] % prime == 0){\n      prime = arr[i];\n    }\n  }\n  return\
    \ prime;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpn_nbgq6d.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn_nbgq6d.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\treturn prime_fib(n-1)\
    \ + prime_fib(n-2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpbbynr3cl.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbbynr3cl.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  var prime_fib_numbers = [];\n  var prime_fib_numbers_length\
    \ = 0;\n  var prime_fib_numbers_length_2 = 0;\n  var prime_fib_numbers_length_3\
    \ = 0;\n  var prime_fib_numbers_length_4 = 0;\n  var prime_fib_numbers_length_5\
    \ = 0;\n  var prime_fib_numbers_length_6 = 0;\n  var prime_fib_numbers_length_7\
    \ = 0;\n  var prime_fib_numbers_length_8 = 0;\n  var prime_fib_numbers_length_9\
    \ = 0;\n  var prime_fib_numbers_length_10 = 0;\n  var prime_fib_numbers_length_11\
    \ = 0;\n  var prime_fib_numbers_length_12 = 0;\n  var prime_fib_numbers_length_13\
    \ = 0;\n  var prime_fib_numbers_length_14 = 0;\n  var prime_fib_numbers_length_15\
    \ = 0;\n  var prime_fib_numbers_length_16 = 0;\n  var prime_fib_numbers_length_17\
    \ = 0;\n  var prime_fib_numbers_length_18 = 0;\n  var prime_fib_numbers_length_19\
    \ = 0;\n  var prime_fib_numbers_length_20 = 0;\n  var prime_fib_numbers_length_21\
    \ = 0;\n  var prime_fib_numbers_length_22 = 0;\n  var prime_fib_numbers_length_23\
    \ = 0;\n  var prime_fib_numbers_length_24 = 0;\n  var prime_fib_numbers_length_25\
    \ = 0;\n  var prime_fib_numbers_length_26 = 0;\n  var prime_fib_numbers_length_27\
    \ = 0;\n  var prime_fib_numbers_length_28 = 0;\n  var prime_fib_numbers_length_29\
    \ = 0;\n  var prime_fib_numbers_length_30 = 0;\n  var prime_fib_numbers_length_31\
    \ = 0;\n  var prime_fib_numbers_length_32 = 0;\n  var prime_fib_numbers_length_33\
    \ = 0;\n  var prime_fib_numbers_length_34 = 0;\n  var prime_fib_numbers_length_35\
    \ = 0;\n  var prime_fib_numbers_length_36 = 0;\n  var prime_fib_numbers_length_37\
    \ = 0;\n  var prime_fib_numbers_length_38 = 0;\n  var prime_fib_numbers_length_39\
    \ = 0;\n  var prime_fib_numbers_length_40 = 0;\n  var prime_fib_numbers_length_41\
    \ = 0;\n  var prime_fib_numbers_length_42 = 0;\n  var prime_fib_numbers_length_43\
    \ = 0;\n  var prime_fib_numbers_length_44 = 0;\n  var prime_fib_numbers_length_45\
    \ = 0;\n  var prime_fib_numbers_length_46 = 0;\n  var \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp66n8me6q.js:51\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n    var fib = [];\n    fib[0] = 0;\n    fib[1]\
    \ = 1;\n    for(var i = 2; i < n; i++){\n        fib[i] = fib[i-1] + fib[i-2];\n\
    \    }\n    return fib[n];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpe430fz42.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe430fz42.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  return prime_fib(n-1) + prime_fib(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxi2_vbl4.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxi2_vbl4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n<=1){\n    return 1;\n  }\n  if(n===2){\n\
    \    return 2;\n  }\n  if(n===3){\n    return 3;\n  }\n  if(n===4){\n    return\
    \ 5;\n  }\n  if(n===5){\n    return 8;\n  }\n  if(n===6){\n    return 11;\n  }\n\
    \  if(n===7){\n    return 13;\n  }\n  if(n===8){\n    return 15;\n  }\n  if(n===9){\n\
    \    return 21;\n  }\n  if(n===10){\n    return 25;\n  }\n  if(n===11){\n    return\
    \ 29;\n  }\n  if(n===12){\n    return 33;\n  }\n  if(n===13){\n    return 37;\n\
    \  }\n  if(n===14){\n    return 41;\n  }\n  if(n===15){\n    return 47;\n  }\n\
    \  if(n===16){\n    return 51;\n  }\n  if(n===17){\n    return 57;\n  }\n  if(n===18){\n\
    \    return 61;\n  }\n  if(n===19){\n    return 67;\n  }\n  if(n===20){\n    return\
    \ 71;\n  }\n  if(n===21){\n    return 76;\n  }\n  if(n===22){\n    return 81;\n\
    \  }\n  if(n===23){\n    return 86;\n  }\n  if(n===24){\n    return 91;\n  }\n\
    \  if(n===25){\n    return 97;\n  }\n  if(n===26){\n    return 101;\n  }\n  if(n===27){\n\
    \    return 105;\n  }\n  if(n===28){\n    return 110;\n  }\n  if(n===29){\n  \
    \  return 115;\n  }\n  if(n===30){\n    return 120;\n  }\n  if(n===31){\n    return\
    \ 125;\n  }\n  if(n===32){\n    return 130;\n  }\n  if(n===33){\n    return 135;\n\
    \  }\n  if(n===34){\n    return 140;\n  }\n  if(n===35){\n    return 145;\n  }\n\
    \  if(n===36){\n    return 150;\n  }\n  if(n===37){\n    return 155;\n  }\n  if(n===38){\n\
    \    return 160;\n  }\n  if(n===39){\n    return 165;\n  }\n  if(n===40){\n  \
    \  return 170;\n  }\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmppftx124v.js:141\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar i, fib_number, prime_number;\n\tprime_number\
    \ = 1;\n\tfib_number = 1;\n\tfor(i = 2; i <= n; i++){\n\t\tfib_number = fib_number\
    \ * i;\n\t\tif(fib_number > n){\n\t\t\tbreak;\n\t\t}\n\t\tprime_number = prime_number\
    \ * i;\n\t}\n\treturn prime_number;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpvs4edasx.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvs4edasx.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n  if(n <= 1){\n    return 1;\n  }\n  else{\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpzajaho7p.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzajaho7p.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977527
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nfunction prime_fib(n){\n\tvar fib_array = [];\n\tfib_array[0] = 0;\n\
    \tfib_array[1] = 1;\n\tfor(var i = 2; i < n; i++){\n\t\tfib_array[i] = fib_array[i\
    \ - 1] + fib_array[i - 2];\n\t}\n\treturn fib_array[n];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpcr0cwdfa.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcr0cwdfa.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977528

name: HumanEval_133_sum_squares
language: js
prompt: "//You are given a list of numbers.\n// You need to return the sum of squared\
  \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
  \ first.\n// Examples:\nfunction sum_squares(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sum_squares;\n  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
  \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n  assert.deepEqual(candidate([1.4,\
  \ 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4, 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0,\
  \ 1.0, 15.0, 2.0]),10230);\n  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n\
  \  assert.deepEqual(candidate([-1.4, 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4,\
  \ 17.9, 18.9, 19.9]),1086);\n  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
  \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
completions: ["    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n      \
    \  sum += Math.ceil(lst[i] * lst[i]);\n    }\n    return sum;\n}", "    let sum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\nsum_squares([1.1,2.2,3.3,4.4,5.5,6.6,7.7,8.8,9.9]);",
  "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript |>\n<| c |>\nThe OP\
    \ wants to round the numbers to the nearest integer. Your code doesn't do that.\n\
    <|/ c |>\n<| c |>\nThe OP wants to round the numbers to the nearest integer. Your\
    \ code doesn't do that.\n<|/ c |>\n<| c |>\nThe OP wants to round the numbers\
    \ to the nearest integer. Your code doesn't do that.\n<|/ c |>\n<| c |>\nThe OP\
    \ wants to round the numbers to the nearest integer. Your code doesn't do that.\n\
    <|/ c |>\n<| c |>\nThe OP wants to round the numbers to the nearest integer. Your\
    \ code doesn't do that.\n<|/ c |>\n<| a tags=javascript |>\n<code>", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    var sum\
    \ = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0; i<lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9]);",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\nsum_squares([2,4,6,8,10,12]);\
    \ //=> 42\nsum_squares([2,4,6,8,10,12,14]); //=> 42\nsum_squares([2,4,6,8,10,12,14,16]);\
    \ //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18]); //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\
    \ //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22]); //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24]);\
    \ //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26]); //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28]);\
    \ //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30]); //=> 42\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32]); //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34]);\
    \ //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36]); //=>\
    \ 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38]); //=>\
    \ 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40]);\
    \ //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42]);\
    \ //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44]);\
    \ //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46]);\
    \ //=> 42\nsum_squares([2,4,6,8,10,12,14,16,18,", "    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n   \
    \ }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    var sum\
    \ = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| c |>\nThis doesn't answer the question. OP\
    \ wants to round the numbers to the nearest integer.\n<|/ c |>\n<| c |>\nI guess\
    \ I misunderstood the question. I'll edit my answer.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't answer the question. OP wants to round the numbers to the nearest integer.\n\
    <|/ c |>\n<| c |>\nI guess I misunderstood the question. I'll edit my answer.\n\
    <|/ c |>\n<| a tags=javascript,arrays |>\n<code>", "    var sum = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n  \
    \  return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,algorithm\
    \ |>\n<code>", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n     \
    \   sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var sum\
    \ = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\nsum_squares([2,4,6,8,10,12]); //returns 25\nsum_squares([2,4,6,8,10,12,14]);\
    \ //returns 36\nsum_squares([2,4,6,8,10,12,14,16]); //returns 49\nsum_squares([2,4,6,8,10,12,14,16,18]);\
    \ //returns 64\nsum_squares([2,4,6,8,10,12,14,16,18,20]); //returns 81\nsum_squares([2,4,6,8,10,12,14,16,18,20,24]);\
    \ //returns 100\nsum_squares([2,4,6,8,10,12,14,16,18,20,24,28]); //returns 121\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20,24,28,32]); //returns 142\nsum_squares([2,4,6,8,10,12,14,16,18,20,24,28,32,36]);\
    \ //returns 169\nsum_squares([2,4,6,8,10,12,14,16,18,20,24,28,32,36,40]); //returns\
    \ 200\nsum_squares([2,4,6,8,10,12,14,16,18,20,24,28,32,36,40,44]); //returns 225\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20,24,28,32,36,40,44,48]); //returns 256\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20,24,28,32,36,40,44,48,52]); //returns 289\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20,24,28,32,36,40,44,48,52,56]); //returns\
    \ 324\nsum_squares([2,4,6,8,10,12,14,16,18,20,24,28,32,36,40,44,48,52,56,60]);\
    \ //returns 361\nsum_squares([2,4,6,8,10,12,14,16,18,20,24,28,32,36,40,44,48,52,56,60,64]);\
    \ //returns 392\nsum_squares([2,4,6,8,10,12,14,16,18,20,24,28,32,36,40,44,48,52,56,60,64,68]);\
    \ //returns 423\nsum_squares([2,4,6,8,10,12,14,16,18,20,24,28,32,36,40,44,48,52,56,60,64,68,",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    var sum\
    \ = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\nsum_squares([1,2,3]);\nsum_squares([1.5,2.5,3.5]);\
    \ // returns 9\nsum_squares([1.5,2.5,3.5,4.5]); // returns 10\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5]);\
    \ // returns 25\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5]); // returns 25\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5]);\
    \ // returns 25\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5]); // returns\
    \ 25\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5]); // returns 25\n\
    sum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5]); // returns 25\n\
    sum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5]); // returns\
    \ 25\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5,13.5]);\
    \ // returns 25\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5,13.5,14.5]);\
    \ // returns 25\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5,13.5,14.5,15.5]);\
    \ // returns 25\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5,13.5,14.5,15.5,16.5]);\
    \ // returns 25\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5,13.5,14.5,15.5,16.5,17.5]);\
    \ // returns 25\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5,13.5,14.5,15.5,16.5,17.5,18.5]);\
    \ // returns 25\nsum_squares([1.5,2.5,3.", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    return\
    \ lst.reduce((a, b) => a + Math.ceil(b*b), 0);\n}\n", "    var sum = 0;\n    for(var\
    \ i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n\
    \    return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n  \
    \  sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}", "  let sum = 0;\n\
    \  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i] * lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  let sum =\
    \ 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n",
  "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}",
  "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "   \
    \ var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    var sum\
    \ = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n       \
    \ sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var sum =\
    \ 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n\
    </code>\n<|/ a tags=javascript |>\n<| a tags=javascript |>\n<code>", "    var\
    \ sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    var sum\
    \ = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "  var\
    \ sum = 0;\n  for(var i=0; i<lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var\
    \ sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a |>\n\
    <code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n       \
    \ sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var sum =\
    \ 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\nsum_squares([1.1, 2.5, 3.3, 4.2, 5.6, 6.5, 7.8, 8.9,\
    \ 9.0]);", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum\
    \ += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var sum = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\nsum_squares([1.1,2.2,3.3,4.4,5.5,6.6,7.7,8.8,9.9]);",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n\
    </code>\n<|/ a tags=javascript,arrays |>\n<| c |>\nThis doesn't round the numbers\
    \ to the ceiling first\n<|/ c |>\n<| c |>\nI missed that part. Thanks for pointing\
    \ it out. Updated the answer.\n<|/ c |>\n<| a tags=javascript,arrays |>\n<code>",
  "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a |>\n\
    <code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum +=\
    \ Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var sum = 0;\n \
    \   for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}",
  "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ round the numbers to the ceiling. It just truncates them. Try it with `sum_squares([1.2,\
    \ 2.3, 3.4, 4.5])`.\n<|/ c |>\n<| c |>\nYes, you are right. My bad. Thanks for\
    \ pointing it out. Updated the answer.\n<|/ c |>\n<| a tags=javascript |>\n<code>",
  "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var\
    \ sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=javascript |>\n<code>", "    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    var sum\
    \ = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "   \
    \ var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\nsum_squares([2,4,6,8,10,12]); // 50\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\
    \ // 100\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100]);\
    \ // 1000\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,254,256]);\
    \ // 10000\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\nsum_squares([1,4,5,9,16]); // 25\nsum_squares([1,4,5,9,16,25]);\
    \ // 50\nsum_squares([1,4,5,9,16,25,36]); // 81\nsum_squares([1,4,5,9,16,25,36,49]);\
    \ // 100\nsum_squares([1,4,5,9,16,25,36,49,64]); // 125\nsum_squares([1,4,5,9,16,25,36,49,64,81]);\
    \ // 150\nsum_squares([1,4,5,9,16,25,36,49,64,81,100]); // 175\nsum_squares([1,4,5,9,16,25,36,49,64,81,100,125]);\
    \ // 200\nsum_squares([1,4,5,9,16,25,36,49,64,81,100,125,150]); // 225\nsum_squares([1,4,5,9,16,25,36,49,64,81,100,125,150,175]);\
    \ // 250\nsum_squares([1,4,5,9,16,25,36,49,64,81,100,125,150,175,200]); // 275\n\
    sum_squares([1,4,5,9,16,25,36,49,64,81,100,125,150,175,200,225]); // 300\nsum_squares([1,4,5,9,16,25,36,49,64,81,100,125,150,175,200,225,250]);\
    \ // 325\nsum_squares([1,4,5,9,16,25,36,49,64,81,100,125,150,175,200,225,250,275]);\
    \ // 350\nsum_squares([1,4,5,9,16,25,36,49,64,81,100,125,150,175,200,225,250,275,300]);\
    \ // 375\nsum_squares([1,4,5,9,16,25,36,49,64,81,100,125,150,175,200,225,250,275,300,325]);\
    \ // 400\nsum_squares([1,4,5,9,16,25,36,49,64,81,100,125,150,175,200,225,250,275,300,325,350]);\
    \ // 425\nsum_squares([1,4,5,9,16,25,36,49,64,81,100,125,150,175,200,225,250,275,300,325,350,375]);\
    \ // 450\nsum_squ", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "   \
    \ var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    var sum\
    \ = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\nsum_squares([1.1,2.2,3.3,4.4,5.5,6.6,7.7,8.8,9.9]);",
  "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var\
    \ sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\nsum_squares([1,4,9,16,25]);", "  var sum = 0;\n  for(var\
    \ i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return\
    \ sum;\n}\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9]);", "   \
    \ var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\nvar lst = [1,2,3,4,5,6,7,8,9,10];", "    let sum =\
    \ 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0; i<lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "   \
    \ var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9]);", "  let sum = 0;\n  for(let i = 0;\
    \ i < lst.length; i++){\n    sum += Math.ceil(lst[i]) * Math.ceil(lst[i]);\n \
    \ }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "   \
    \ let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20]);\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\n\
    sum_squares", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum\
    \ += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "    var sum = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript |>\n<| a |>\n<code>", "  var sum = 0;\n  for(var i=0; i<lst.length;\
    \ i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "   \
    \ let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "   \
    \ var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\nsum_squares([1.1,2.2,3.3,4.4,5.5,6.6,7.7,8.8,9.9]);",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}",
  "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0; i<lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\nsum_squares([1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,37,37.5,38,38.5,39,39.5,40,40.5,41,41.5,42,42.5,43,43.5,44,44.5,45,45.5,46,46.5,47,47.5,48,48.5,49,49.5,50,50.5,51,51.5,52,52.5,53,53.5,54,54.5,55,55.5,56,56.5,57,57.5,58,58.5,59,59.5,60,60.5,61,61.5,62,62.5,63,63.5,64,64.5,65,65.5,66,66.5,67,67.5,68,68.5,69,69.5,70,70.5,71,71.5,72,72.5,73,73.5,74,74.5,75,75.5,76,76.5,77,77.5,78,78.5,79,79.5,80,80.5,81,81.5,82,82.5,83,83.5,84,84.5,85,85.5,86,86.5,87,87.5,88,88.5,89,89.5,90,90.5,91,91.5,92,92.5,93,93.5,94,94.5,95,95.5,96,96.5,97,97.5,98,98.5,99,99.5,100]);\
    \ // 49925\nsum_squares([1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,",
  "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| c |>\nThis doesn't work if the list is empty\n\
    <|/ c |>\n<| c |>\nIt doesn't work if the list is empty. Try `sum_squares([])`.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if the list is empty. Try `sum_squares([])`.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if the list is empty. Try `sum_squares([])`.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if the list is empty. Try `sum_squares([])`.\n\
    <|/ c |>\n<| a tags=javascript,arrays |>\n<code>", "    var sum = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n  \
    \  return sum;\n}\nsum_squares([1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,37,37.5,38,38.5,39,39.5,40,40.5,41,41.5,42,42.5,43,43.5,44,44.5,45,45.5,46,46.5,47,47.5,48,48.5,49,49.5,50,50.5,51,51.5,52,52.5,53,53.5,54,54.5,55,55.5,56,56.5,57,57.5,58,58.5,59,59.5,60,60.5,61,61.5,62,62.5,63,63.5,64,64.5,65,65.5,66,66.5,67,67.5,68,68.5,69,69.5,70,70.5,71,71.5,72,72.5,73,73.5,74,74.5,75,75.5,76,76.5,77,77.5,78,78.5,79,79.5,80,80.5,81,81.5,82,82.5,83,83.5,84,84.5,85,85.5,86,86.5,87,87.5,88,88.5,89,89.5,90,90.5,91,91.5,92,92.5,93,93.5,94,94.5,95,95.5,96,96.5,97,97.5,98,98.5,99,99.5,100]);\
    \ // 5050\nsum_squares([1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.",
  "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9]);",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript |>\n<| a tags=javascript |>\n<code>", "    var sum = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\nsum_squares([1,4,9,16,25]);\nsum_squares([1.1,4.4,9.9,16.1,25.6]);\n\
    sum_squares([1,4.9,16,25.6,36]);\nsum_squares([1,4,9,16,25,36]);\nsum_squares([1,4,9,16,25,36,49]);\n\
    sum_squares([1,4,9,16,25,36,49,64]);\nsum_squares([1,4,9,16,25,36,49,64,81]);\n\
    sum_squares([1,4,9,16,25,36,49,64,81,100]);\nsum_squares([1,4,9,16,25,36,49,64,81,100,121]);\n\
    sum_squares([1,4,9,16,25,36,49,64,81,100,121,144]); //Wrong answer\nsum_squares([1,4,9,16,25,36,49,64,81,100,121,144,168]);\
    \ //Wrong answer\nsum_squares([1,4,9,16,25,36,49,64,81,100,121,144,168,192]);\
    \ //Wrong answer\nsum_squares([1,4,9,16,25,36,49,64,81,100,121,144,168,192,224]);\
    \ //Wrong answer\nsum_squares([1,4,9,16,25,36,49,64,81,100,121,144,168,192,224,256]);\
    \ //Wrong answer\nsum_squares([1,4,9,16,25,36,49,64,81,100,121,144,168,192,224,256,288]);\
    \ //Wrong answer\nsum_squares([1,4,9,16,25,36,49,64,81,100,121,144,168,192,224,256,288,320]);\
    \ //Wrong answer\nsum_squares([1,4,9,16,25,36,49,64,81,100,121,144,168,192,224,256,288,320,352]);\
    \ //Wrong answer\nsum_squares([1,4,9,16,25,36,49,64,81,100,121,144,168,192,224,256,288,320,352,384]);\
    \ //Wrong answer\nsum_squares([1,4,9,16,25,36,49,64,81,100,121,144,168,192,224,256,288,320,352,",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't round the numbers to the ceiling first\n\
    <|/ c |>\n<| c |>\nI didn't see that requirement in the question. I'll update\
    \ my answer.\n<|/ c |>\n<| a tags=javascript,arrays |>\n<code>", "  var sum =\
    \ 0;\n  for(var i=0; i<lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    var sum\
    \ = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a |>\n\
    <code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum +=\
    \ Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    let sum = 0;\n \
    \   for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\nsum_squares([1,2,3,4,5,6,7,8,9,10]);", "    var sum =\
    \ 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\nsum_squares([1.1,2.2,3.3,4.4,5.5,6.6,7.7,8.8,9.9]);",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=javascript |>\n<code>", "    var sum = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript |>\n<| a tags=javascript\
    \ |>\n<code>", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n     \
    \   sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=javascript |>\n<| a dscore=0 |>\n<code>", "    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n   \
    \ }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}",
  "  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\nsum_squares([1,4,9,16,25]);", "  var sum = 0;\n  for(var\
    \ i=0; i<lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return\
    \ sum;\n}\n", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n      \
    \  sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n<|/ a\
    \ |>\n<| a tags=javascript |>\n<code>", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]\
    \ * lst[i]);\n    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;\
    \ i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return\
    \ sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript |>\n<| a dscore=0 |>\n<code>", "  var sum = 0;\n  for(var\
    \ i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return\
    \ sum;\n}\nsum_squares([2,4,6,8,10,12]); //=> 50\nsum_squares([2,4,6,8,10,12,14]);\
    \ //=> 70\nsum_squares([2,4,6,8,10,12,14,16]); //=> 86\nsum_squares([2,4,6,8,10,12,14,16,18,20]);\
    \ //=> 142\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24]); //=> 486\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28]);\
    \ //=> 724\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32]); //=> 1086\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36]); //=> 1424\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40]); //=> 1886\n\
    sum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100]);\
    \ //=> 2486\nsum_squares([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,19",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "   \
    \ var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\nsum_squares([4,5,6,8,9,10,11,12]); //Returns 25\nsum_squares([1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5,12.5]);\
    \ //Returns 25.5\nsum_squares([1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5]);\
    \ //Returns 25.5\nsum_squares([1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,37,37.5,38,38.5,39,39.5,40,40.5,41,41.5,42,42.5,43,43.5,44,44.5,45,45.5,46,46.5,47,47.5,48,48.5,49,49.5,50,50.5,51,51.5,52,52.5,53,53.5,54,54.5,55,55.5,56,56.5,57,57.5,58,58.5,59,59.5,60,60.5,61,61.5,62,62.5,63,63.5,64,64.5,65,65.5,66,66.5,67,67.5,68,68.5,69,69.5,70,70.5,71,71.5,72,72.5,73,73.5,74,74.5,75,75.5,76,76.5,77,77.5,78,78.5,79,79.5,80,80.5,81,81.5,82,82.5,83,83.5,84,84.5,85,85.5,86,86.5,87,87.5,88,88.5,89,89.5,90,90.5,91,91.5,92,92.5,93,93.5,94,94.",
  "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\nsum_squares([1,2,3,4,5,6,7,8,9,10]);", "    var sum =\
    \ 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "   \
    \ var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\nsum_squares([1,2,3]); // 9\nsum_squares([1.5,2.5,3.5]);\
    \ // 9\nsum_squares([1,2.5,3]); // 9\nsum_squares([1.5,2,3.5]); // 9\nsum_squares([1,2.5,3,4.5]);\
    \ // 10\nsum_squares([1,2.5,3,4.5,6.5]); // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5]);\
    \ // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10]); // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12]);\
    \ // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14]); // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14,16]);\
    \ // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14,16,18]); // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14,16,18,20]);\
    \ // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14,16,18,20,24]); // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14,16,18,20,24,28]);\
    \ // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14,16,18,20,24,28,32]); // 10\n\
    sum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14,16,18,20,24,28,32,36]); // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14,16,18,20,24,28,32,36,40]);\
    \ // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14,16,18,20,24,28,32,36,40,44]);\
    \ // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14,16,18,20,24,28,32,36,40,44,48]);\
    \ // 10\nsum_squares([1,2.5,3,4.5,6.5,8.5,10,12,14,16,18,20,24,28,32,36,40,44,48,52]);\
    \ // 10\nsum_squares([1,2.5,3,4.", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\nsum_squares([2.3,\
    \ 3.4, 4.5, 5.6, 6.7, 7.8, 9.0]);", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n\
    sum_squares([1.3, 2.7, 3.4, 4.5, 5.6, 6.7, 7.8, 9.0]);", "  let sum = 0;\n  for(let\
    \ i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return\
    \ sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum\
    \ += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}", "    var sum = 0;\n\
    \    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays |>\n<code>", "    var\
    \ sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\nsum_squares([1.2, 2.4, 3.6, 4.8, 5.6, 6.8, 7.0, 8.2,\
    \ 9.4, 10.6, 11.8, 12.0, 13.2, 14.4, 15.6, 16.8, 17.0, 18.2, 19.4, 20.6, 21.8,\
    \ 22.0]);"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

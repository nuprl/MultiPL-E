name: HumanEval_143_words_in_sentence
language: js
prompt: "//You are given a string representing a sentence,\n// the sentence contains\
  \ some words separated by a space,\n// and you have to return a string that contains\
  \ the words from the original sentence,\n// whose lengths are prime numbers,\n//\
  \ the order of the words in the new string should be the same as the original one.\n\
  // Example 1:\n// Example 2:\n// Constraints:\n// * 1 <= len(sentence) <= 100\n\
  // * sentence contains only letters\nfunction words_in_sentence(sentence){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = words_in_sentence;\n  assert.deepEqual(candidate(\"This is a test\"),\"is\"\
  );\n  assert.deepEqual(candidate(\"lets go for swimming\"),\"go for\");\n  assert.deepEqual(candidate(\"\
  there is no place available here\"),\"there is no place\");\n  assert.deepEqual(candidate(\"\
  Hi I am Hussein\"),\"Hi am Hussein\");\n  assert.deepEqual(candidate(\"go for it\"\
  ),\"go for it\");\n  assert.deepEqual(candidate(\"here\"),\"\");\n  assert.deepEqual(candidate(\"\
  here is\"),\"is\");\n}\n\ntest();"
completions: ["    let arr = sentence.split(\" \");\n    let newArr = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        let count = 0;\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] === arr[i]){\n                count++;\n\
    \            }\n        }\n        if(count === 1){\n            newArr.push(arr[i]);\n\
    \        }\n    }\n    return newArr.join(\" \");\n}\n", "    let result = '';\n\
    \    for(let i = 0; i < sentence.length; i++){\n        let letter = sentence[i];\n\
    \        if(isPrime(letter)){\n            result += letter;\n        }\n    }\n\
    \    return result;\n}\n", "    // Write your code here\n    let result = '';\n\
    \    for(let i = 0; i < sentence.length; i++){\n        let word = sentence.charAt(i);\n\
    \        if(isPrime(word.length)){\n            result += word;\n        }\n \
    \   }\n    return result;\n}\n", "    let result = '';\n    let primes = [];\n\
    \    let primesCount = 0;\n    let primesCount2 = 0;\n    let primesCount3 = 0;\n\
    \    let primesCount4 = 0;\n    let primesCount5 = 0;\n    let primesCount6 =\
    \ 0;\n    let primesCount7 = 0;\n    let primesCount8 = 0;\n    let primesCount9\
    \ = 0;\n    let primesCount10 = 0;\n    let primesCount11 = 0;\n    let primesCount12\
    \ = 0;\n    let primesCount13 = 0;\n    let primesCount14 = 0;\n    let primesCount15\
    \ = 0;\n    let primesCount16 = 0;\n    let primesCount17 = 0;\n    let primesCount18\
    \ = 0;\n    let primesCount19 = 0;\n    let primesCount20 = 0;\n    let primesCount21\
    \ = 0;\n    let primesCount22 = 0;\n    let primesCount23 = 0;\n    let primesCount24\
    \ = 0;\n    let primesCount25 = 0;\n    let primesCount26 = 0;\n    let primesCount27\
    \ = 0;\n    let primesCount28 = 0;\n    let primesCount29 = 0;\n    let primesCount30\
    \ = 0;\n    let primesCount31 = 0;\n    let primesCount32 = 0;\n    let primesCount33\
    \ = 0;\n    let primesCount34 = 0;\n    let primesCount35 = 0;\n    let primesCount36\
    \ = 0;\n    let primesCount37 = 0;\n    let primesCount38 = 0;\n    let primesCount39\
    \ = 0;\n    let primesCount40 = 0;\n    let primesCount41 = 0;\n    let primesCount42\
    \ = 0;\n    let primesCount43 = 0;\n    let primesCount44 = 0;\n    let primesCount45\
    \ = 0;\n    let primesCount46 = 0;\n    let primesCount47 = 0;\n    let primesCount48\
    \ = 0;\n    let primesCount49 = 0;\n    let primesCount50 = 0;\n    let primesCount51\
    \ = 0;\n    let primesCount52 = 0;\n    let primesCount53 = 0;\n    let primesCount54\
    \ = 0;\n    let primesCount55 = 0;\n    let primesCount56 = 0;\n    let primesCount57\
    \ = 0;\n    let primesCount58 = 0;\n    let primesCount59 = 0;\n    let primesCount60\
    \ = 0;\n    let primesCount61 = 0;\n    let primesCount62 = 0;\n    let primesCount63\
    \ = 0;\n    let primesCount64 = 0;\n    let primesCount65 = 0;\n    let primesCount66\
    \ = 0;\n    let primesCount67 = 0;\n    let primesCount68 = 0;\n    let primesCount69\
    \ = 0;\n    let primesCount70 = 0;\n    let primesCount71 = 0;\n    let primesCount72\
    \ = 0;\n    let primesCount73", "    // Write your code here\n    let result =\
    \ '';\n    for(let i = 0; i < sentence.length; i++){\n        let char = sentence[i];\n\
    \        let count = 0;\n        for(let j = 0; j < sentence.length; j++){\n \
    \           if(sentence[j] === char){\n                count++;\n            }\n\
    \        }\n        if(count % 2 === 0){\n            result += char;\n      \
    \  }\n    }\n    return result;\n}\n\nwords_in_sentence('abc def ghi jkl mno pqr');",
  "    let words = sentence.split(\" \");\n    let result = [];\n    for(let i = 0;\
    \ i < words.length; i++){\n        let word = words[i];\n        let prime = true;\n\
    \        for(let j = 2; j < Math.sqrt(word.length); j++){\n            if(word.length\
    \ % j === 0){\n                prime = false;\n                break;\n      \
    \      }\n        }\n        if(prime){\n            result.push(word);\n    \
    \    }\n    }\n    return result.join(\" \");\n}\n", "    // Write your code here\n\
    \    let result = '';\n    let primes = [];\n    let primesSet = new Set();\n\
    \    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primesSet.add(sentence[i]);\n        }\n        else{\n         \
    \   primes.push(sentence[i]);\n        }\n    }\n    primesSet.forEach(element\
    \ => {\n        if(primes.includes(element)){\n            primesSet.add(element);\n\
    \        }\n    });\n    primesSet.forEach(element => {\n        if(primes.includes(element)){\n\
    \            primesSet.add(element);\n        }\n    });\n    primesSet.forEach(element\
    \ => {\n        if(primes.includes(element)){\n            primesSet.add(element);\n\
    \        }\n    });\n    primesSet.forEach(element => {\n        if(primes.includes(element)){\n\
    \            primesSet.add(element);\n        }\n    });\n    primesSet.forEach(element\
    \ => {\n        if(primes.includes(element)){\n            primesSet.add(element);\n\
    \        }\n    });\n    primesSet.forEach(element => {\n        if(primes.includes(element)){\n\
    \            primesSet.add(element);\n        }\n    });\n    primesSet.forEach(element\
    \ => {\n        if(primes.includes(element)){\n            primesSet.add(element);\n\
    \        }\n    });\n    primesSet.forEach(element => {\n        if(primes.includes(element)){\n\
    \            primesSet.add(element);\n        }\n    });\n    primesSet.forEach(element\
    \ => {\n        if(primes.includes(element)){\n            primesSet.add(element);\n\
    \        }\n    });\n    primesSet.forEach(element => {\n        if(primes.includes(element)){\n\
    \            primesSet.add(element);\n        }\n    });\n    primesSet.forEach(element\
    \ => {\n        if(primes.includes(element)){\n            primesSet.add(element);\n\
    \        }\n    });\n    primesSet.forEach(element => {\n        if(primes.includes(element)){\n\
    \            primesSet.add(element);\n        }\n    });\n    primesSet.forEach(element\
    \ => {\n        if(primes.includes(element)){\n            primesSet.add(element);\n\
    \        }\n    });\n    primesSet.forEach(element => {\n        if(primes.includes(element)){\n\
    \            primesSet.add(element);\n        }\n    });\n    primesSet.forEach(element\
    \ => {\n        if(primes.includes(element)){\n            primesSet.add(element);\n\
    \        }\n    });\n    primesSet.forEach(element => {\n        if(primes.includes(element)){\n\
    \            primesSet.add(element);\n        }\n    });\n    primesSet.forEach(element\
    \ => {\n        if(primes.includes(element)){\n            prime", "    // code\
    \ here\n}\n", "    let result = '';\n    for(let i = 0; i < sentence.length; i++){\n\
    \        let word = sentence[i];\n        let prime = true;\n        for(let j\
    \ = 0; j < word.length; j++){\n            if(word[j] !== 'a' && word[j] !== 'e'\
    \ && word[j] !== 'i' && word[j] !== 'o' && word[j] !== 'u'){\n               \
    \ prime = false;\n            }\n        }\n        if(prime){\n            result\
    \ += word;\n        }\n    }\n    return result;\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let res = [];\n    for(let i = 0; i < arr.length; i++){\n        let\
    \ n = arr[i].length;\n        for(let j = 2; j <= Math.sqrt(n); j++){\n      \
    \      if(n % j === 0){\n                res.push(arr[i]);\n                break;\n\
    \            }\n        }\n    }\n    return res.join(\" \");\n}\n", "    let\
    \ result = '';\n    let primes = [];\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(primes.includes(sentence[i])){\n            primes.push(sentence[i]);\n\
    \        }\n    }\n    primes.sort();\n    for(let i = 0; i < primes.length; i++){\n\
    \        result += primes[i] + ' ';\n    }\n    return result;\n}\n", "    //\
    \ Write your code here\n    let result = ''\n    for (let i = 0; i < sentence.length;\
    \ i++){\n        let letter = sentence[i]\n        let count = 0\n        for\
    \ (let j = 0; j < sentence.length; j++){\n            if (j != i && letter ===\
    \ sentence[j]){\n                count++\n            }\n        }\n        if\
    \ (count % 2 === 0){\n            result += letter\n        }\n    }\n    return\
    \ result\n}\n\nwords_in_sentence('abc def ghi jkl mno pqrs tuvw xyz')", "    let\
    \ words = [];\n    let primes = [];\n    for(let i = 0; i < sentence.length; i++){\n\
    \        let word = sentence[i].toUpperCase();\n        if(word.length == 1){\n\
    \            words.push(word);\n        }\n        else{\n            let prime\
    \ = true;\n            for(let j = 0; j < words.length; j++){\n              \
    \  if(words[j].toUpperCase() == word){\n                    prime = false;\n \
    \                   break;\n                }\n            }\n            if(prime){\n\
    \                primes.push(word);\n            }\n        }\n    }\n    for(let\
    \ i = 0; i < primes.length; i++){\n        for(let j = 0; j < primes.length; j++){\n\
    \            if(primes[i] == primes[j]){\n                let index = primes.indexOf(primes[j]);\n\
    \                primes.splice(index, 1);\n            }\n        }\n    }\n \
    \   return primes.join(\" \");\n}\n\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog\");", "    // Write your code here\n    let result = '';\n\
    \    for(let i = 0; i < sentence.length; i++){\n        let temp = sentence.slice(i,\
    \ i + 1);\n        if(isPrime(temp.length)){\n            result += temp;\n  \
    \      }\n    }\n    return result;\n}\n", "    // Write your code here\n    let\
    \ words = [];\n    let word = \"\";\n    for(let i = 0; i < sentence.length; i++){\n\
    \        if(sentence[i] === \" \"){\n            words.push(word);\n         \
    \   word = \"\";\n        }else{\n            word += sentence[i];\n        }\n\
    \    }\n    words.push(word);\n    for(let i = 0; i < words.length; i++){\n  \
    \      let prime = true;\n        for(let j = 0; j < words.length; j++){\n   \
    \         if(words[j].length != words[i].length){\n                prime = false;\n\
    \            }\n        }\n        if(prime){\n            return words[i];\n\
    \        }\n    }\n}\n", "    // Write your code here\n    let result = '';\n\
    \    let primes = [];\n    for(let i = 0; i < sentence.length; i++){\n       \
    \ if(primes.includes(sentence[i])){\n            primes.push(sentence[i]);\n \
    \       }\n    }\n    for(let i = 0; i < primes.length; i++){\n        result\
    \ += primes[i];\n    }\n    return result;\n}\n\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog\");", "    let words = [];\n    for(let word\
    \ of sentence.split(\" \")){\n        words.push(word);\n    }\n    let primes\
    \ = [];\n    for(let i = 0; i < words.length; i++){\n        let prime = true;\n\
    \        for(let j = 0; j < primes.length; j++){\n            if(words[i].length\
    \ == primes[j]){\n                prime = false;\n                break;\n   \
    \         }\n        }\n        if(prime){\n            primes.push(words[i].length);\n\
    \        }\n    }\n    let result = \"\";\n    for(let i = 0; i < words.length;\
    \ i++){\n        result += words[i] + \" \";\n    }\n    for(let i = 0; i < primes.length;\
    \ i++){\n        result += \" \" + primes[i];\n    }\n    return result;\n}\n",
  "    // Write your code here\n    let result = '';\n    let primes = [];\n    let\
    \ primesString = '';\n    let primesStringArray = [];\n    for(let i = 0; i <\
    \ sentence.length; i++){\n        if(primes.includes(sentence[i])){\n        \
    \    primesString.push(sentence[i]);\n        }\n        else{\n            primes.push(sentence[i]);\n\
    \        }\n    }\n    primesString = primesString.join('');\n    primesStringArray\
    \ = primesString.split('');\n    for(let i = 0; i < primesStringArray.length;\
    \ i++){\n        if(primesStringArray[i] !== ''){\n            result += primesStringArray[i]\
    \ + ' ';\n        }\n    }\n    return result;\n}\n", "    // Write your code\
    \ here\n    let words = [];\n    let primes = [];\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(primes.includes(sentence[i])){\n            words.push(sentence[i]);\n\
    \        }\n        else{\n            primes.push(sentence[i]);\n        }\n\
    \    }\n    return words.join(' ');\n}\n\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog\");", "    // Write your code here\n    let result\
    \ = '';\n    let primes = [];\n    for(let i = 0; i < sentence.length; i++){\n\
    \        if(primes.includes(sentence[i])){\n            primes.push(sentence[i]);\n\
    \        }\n    }\n    for(let i = 0; i < primes.length; i++){\n        result\
    \ += primes[i];\n    }\n    return result;\n}\n", "    // code here\n}\n", " \
    \   // Write your code here\n    let arr = sentence.split(\" \");\n    let newArr\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        let count = 0;\n  \
    \      for(let j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n\
    \                count++;\n            }\n        }\n        if(count === 1){\n\
    \            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    let arr = sentence.split(\" \");\n    let newArr = new Array(arr.length);\n\
    \    for (let i = 0; i < arr.length; i++){\n        let prime = true;\n      \
    \  for (let j = 0; j < arr.length; j++){\n            if (arr[j] % arr[i] !==\
    \ 0){\n                prime = false;\n                break;\n            }\n\
    \        }\n        if (prime){\n            newArr[i] = arr[i];\n        }\n\
    \    }\n    return newArr.join(\" \");\n}\n", "    // write your code here\n \
    \   let result = '';\n    let primes = [];\n    let primesCount = 0;\n    let\
    \ primesCount2 = 0;\n    let primesCount3 = 0;\n    let primesCount4 = 0;\n  \
    \  let primesCount5 = 0;\n    let primesCount6 = 0;\n    let primesCount7 = 0;\n\
    \    let primesCount8 = 0;\n    let primesCount9 = 0;\n    let primesCount10 =\
    \ 0;\n    let primesCount11 = 0;\n    let primesCount12 = 0;\n    let primesCount13\
    \ = 0;\n    let primesCount14 = 0;\n    let primesCount15 = 0;\n    let primesCount16\
    \ = 0;\n    let primesCount17 = 0;\n    let primesCount18 = 0;\n    let primesCount19\
    \ = 0;\n    let primesCount20 = 0;\n    let primesCount21 = 0;\n    let primesCount22\
    \ = 0;\n    let primesCount23 = 0;\n    let primesCount24 = 0;\n    let primesCount25\
    \ = 0;\n    let primesCount26 = 0;\n    let primesCount27 = 0;\n    let primesCount28\
    \ = 0;\n    let primesCount29 = 0;\n    let primesCount30 = 0;\n    let primesCount31\
    \ = 0;\n    let primesCount32 = 0;\n    let primesCount33 = 0;\n    let primesCount34\
    \ = 0;\n    let primesCount35 = 0;\n    let primesCount36 = 0;\n    let primesCount37\
    \ = 0;\n    let primesCount38 = 0;\n    let primesCount39 = 0;\n    let primesCount40\
    \ = 0;\n    let primesCount41 = 0;\n    let primesCount42 = 0;\n    let primesCount43\
    \ = 0;\n    let primesCount44 = 0;\n    let primesCount45 = 0;\n    let primesCount46\
    \ = 0;\n    let primesCount47 = 0;\n    let primesCount48 = 0;\n    let primesCount49\
    \ = 0;\n    let primesCount50 = 0;\n    let primesCount51 = 0;\n    let primesCount52\
    \ = 0;\n    let primesCount53 = 0;\n    let primesCount54 = 0;\n    let primesCount55\
    \ = 0;\n    let primesCount56 = 0;\n    let primesCount57 = 0;\n    let primesCount58\
    \ = 0;\n    let primesCount59 = 0;\n    let primesCount60 = 0;\n    let primesCount61\
    \ = 0;\n    let primesCount62 = 0;\n    let primesCount63 = 0;\n    let primesCount64\
    \ = 0;\n    let primesCount65 = 0;\n    let primesCount66 = 0;\n    let primesCount67\
    \ = 0;\n    let primesCount68 = 0;\n    let primesCount69 = 0;\n    let primesCount70\
    \ = 0;\n    let primesCount71 = 0;\n    let primesCount72 = 0;\n", "    let result\
    \ = '';\n    for(let i = 0; i < sentence.length; i++){\n        let temp = sentence[i].split('');\n\
    \        let count = 0;\n        for(let j = 0; j < temp.length; j++){\n     \
    \       if(temp[j].match(/[a-z]/)){\n                count++;\n            }\n\
    \        }\n        if(count % 2 === 0){\n            result += temp.join('');\n\
    \        }\n    }\n    return result;\n}\n", "    // Write your code here\n  \
    \  let words = [];\n    for(let i = 0; i < sentence.length; i++){\n        let\
    \ char = sentence.charAt(i);\n        if(char === \" \"){\n            words.push(sentence.substr(0,\
    \ i));\n            sentence = sentence.substr(i + 1);\n        }\n    }\n   \
    \ for(let i = 0; i < words.length; i++){\n        let prime = true;\n        for(let\
    \ j = 0; j < words.length; j++){\n            if(words[j].length != words[i].length){\n\
    \                prime = false;\n            }\n        }\n        if(prime){\n\
    \            words.push(words[i]);\n        }\n    }\n    return words.join(\"\
    \ \");\n}\n\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog\"\
    );", "    let result = '';\n    let primes = [];\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(primes.includes(sentence[i])){\n            primes.push(sentence[i]);\n\
    \        }\n    }\n    for(let i = 0; i < primes.length; i++){\n        result\
    \ += primes[i];\n    }\n    return result;\n}\n", "    let result = '';\n    let\
    \ primes = [];\n    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primes.push(sentence[i]);\n        }\n    }\n    for(let i = 0; i\
    \ < primes.length; i++){\n        let prime = primes[i];\n        let count =\
    \ 0;\n        for(let j = 0; j < sentence.length; j++){\n            if(sentence[j]\
    \ === prime){\n                count++;\n            }\n        }\n        if(count\
    \ === prime){\n            result += prime + ' ';\n        }\n    }\n    return\
    \ result;\n}\n", "    // Write your code here\n    let words = [];\n    let primes\
    \ = [];\n    let primesIndex = [];\n    let primesLength = [];\n    let primesIndexLength\
    \ = [];\n    let primesIndexLengthLength = [];\n    let primesIndexLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLength = [];\n    let primesIndexLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLength = [];\n    let\
    \ primesIndexLengthLengthLengthLengthLengthLengthLength = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndex", "    // write your code here\n    let result =\
    \ '';\n    let primes = [];\n    for (let i = 0; i < sentence.length; i++){\n\
    \        let word = sentence[i];\n        let prime = true;\n        for (let\
    \ j = 0; j < primes.length; j++){\n            if (primes[j] === word.length){\n\
    \                prime = false;\n                break;\n            }\n     \
    \   }\n        if (prime){\n            primes.push(word.length);\n          \
    \  result += word + ' ';\n        }\n    }\n    return result;\n}\nwords_in_sentence('The\
    \ quick brown fox jumps over the lazy dog');\nwords_in_sentence('The quick brown\
    \ fox jumps over the lazy dog.');\nwords_in_sentence('The quick brown fox jumps\
    \ over the lazy dog.\\n');\nwords_in_sentence('The quick brown fox jumps over\
    \ the lazy dog.\\n ');\nwords_in_sentence('The quick brown fox jumps over the\
    \ lazy dog.\\n \\n');\nwords_in_sentence('The quick brown fox jumps over the lazy\
    \ dog.\\n \\n ');\nwords_in_sentence('The quick brown fox jumps over the lazy\
    \ dog.\\n \\n \\n');\nwords_in_sentence('The quick brown fox jumps over the lazy\
    \ dog.\\n \\n \\n \\n');\nwords_in_sentence('The quick brown fox jumps over the\
    \ lazy dog.\\n \\n \\n \\n \\n');\nwords_in_sentence('The quick brown fox jumps\
    \ over the lazy dog.\\n \\n \\n \\n \\n \\n');\nwords_in_sentence('The quick brown\
    \ fox jumps over the lazy dog.\\n \\n \\n \\n \\n \\n \\n');\nwords_in_sentence('The\
    \ quick brown fox jumps over the lazy dog.\\n \\n \\n \\n \\n \\n \\n \\n');\n\
    words_in_sentence('The quick brown fox jumps over the lazy dog.\\n \\n \\n \\\
    n \\n \\n \\n \\n \\n');\nwords_in_sentence('The quick brown fox jumps over the\
    \ lazy dog.\\n \\n \\n \\n \\n \\n \\n \\n \\n \\n');\nwords_in_sentence('The\
    \ quick brown fox jumps over the lazy dog.\\n \\n \\n \\n \\n \\n \\n \\n \\n\
    \ \\n');\nwords_in_sentence('The quick brown fox jumps over the lazy dog.\\n \\\
    n \\n \\n \\n \\n \\n \\n \\n \\n');\nwords_in_sentence('The quick brown fox jumps\
    \ over the lazy dog.\\n \\n \\n \\n \\n \\n \\n \\n \\n \\n');\nwords_in_sentence('The\
    \ quick brown fox jumps over the lazy dog.\\n \\n \\n \\n \\n \\n \\n \\n \\n\
    \ \\n \\n');\nwords_in_sentence('The quick ", "    let result = '';\n    let primes\
    \ = [];\n    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primes.push(sentence[i]);\n        }\n    }\n    for(let i = 0; i\
    \ < primes.length; i++){\n        let prime = primes[i];\n        for(let j =\
    \ 0; j < sentence.length; j++){\n            if(sentence[j] === prime){\n    \
    \            result += sentence[j];\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    let words = [];\n    let primes = [];\n    let primesIndex\
    \ = [];\n    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primesIndex.push(i);\n        }\n    }\n    primesIndex.sort((a,\
    \ b) => a - b);\n    for(let i = 0; i < primesIndex.length; i++){\n        primes.push(sentence[primesIndex[i]]);\n\
    \    }\n    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            words.push(sentence[i]);\n        }\n    }\n    return words.join('\
    \ ');\n}\n", "    // Write your code here\n    let arr = [];\n    for(let i =\
    \ 0; i < sentence.length; i++){\n        if(!arr.includes(sentence[i])){\n   \
    \         arr.push(sentence[i]);\n        }\n    }\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(!arr.includes(arr[i])){\n            arr.push(arr[i]);\n \
    \       }\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(!arr.includes(arr[i])){\n\
    \            arr.splice(i, 1);\n        }\n    }\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(!arr.includes(arr[i])){\n            arr.splice(i, 1);\n \
    \       }\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(!arr.includes(arr[i])){\n\
    \            arr.splice(i, 1);\n        }\n    }\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(!arr.includes(arr[i])){\n            arr.splice(i, 1);\n \
    \       }\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(!arr.includes(arr[i])){\n\
    \            arr.splice(i, 1);\n        }\n    }\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(!arr.includes(arr[i])){\n            arr.splice(i, 1);\n \
    \       }\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(!arr.includes(arr[i])){\n\
    \            arr.splice(i, 1);\n        }\n    }\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(!arr.includes(arr[i])){\n            arr.splice(i, 1);\n \
    \       }\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(!arr.includes(arr[i])){\n\
    \            arr.splice(i, 1);\n        }\n    }\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(!arr.includes(arr[i])){\n            arr.splice(i, 1);\n \
    \       }\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(!arr.includes(arr[i])){\n\
    \            arr.splice(i, 1);\n        }\n    }\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(!arr.includes(arr[i])){\n            arr.splice(i, 1);\n \
    \       }\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(!arr.includes(arr[i])){\n\
    \            arr.splice(i, 1);\n        }\n    }\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(!arr.includes(arr[i])){\n            arr.splice(i, 1);\n \
    \       }\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(!arr.includes(arr[i])){\n\
    \            arr.splice(i, 1);\n        }\n    }\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(!arr.includes(arr[i])){\n            arr.splice(i, 1);\n \
    \       }\n    }", "    let result = '';\n    let primes = [];\n    for(let i\
    \ = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primes.push(sentence[i]);\n        }\n    }\n    primes.sort();\n\
    \    for(let i = 0; i < primes.length; i++){\n        result += sentence[i] +\
    \ ' ';\n    }\n    return result;\n}\n", "    let words = [];\n    let word =\
    \ \"\";\n    for(let i = 0; i < sentence.length; i++){\n        if(sentence[i]\
    \ === \" \" || sentence[i] === \"\\n\"){\n            words.push(word);\n    \
    \        word = \"\";\n        }else{\n            word += sentence[i];\n    \
    \    }\n    }\n    words.push(word);\n    let result = [];\n    for(let i = 0;\
    \ i < words.length; i++){\n        let prime = true;\n        for(let j = 0; j\
    \ < words.length; j++){\n            if(words[i].length != words[j].length){\n\
    \                continue;\n            }\n            if(words[i].indexOf(words[j])\
    \ === -1){\n                prime = false;\n                break;\n         \
    \   }\n        }\n        if(prime){\n            result.push(words[i]);\n   \
    \     }\n    }\n    return result.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let count = 0;\n        for(let j = 0; j < arr.length; j++){\n           \
    \ if(arr[j] === arr[i]){\n                count++;\n            }\n        }\n\
    \        if(count === 1){\n            newArr.push(arr[i]);\n        }\n    }\n\
    \    return newArr.join(\" \");\n}\n", "    let words = sentence.split(\" \");\n\
    \    let result = [];\n    for(let i = 0; i < words.length; i++){\n        let\
    \ word = words[i];\n        let prime = true;\n        for(let j = i; j < words.length;\
    \ j++){\n            if(words[j].length != word.length){\n                prime\
    \ = false;\n                break;\n            }\n        }\n        if(prime){\n\
    \            result.push(word);\n        }\n    }\n    return result.join(\" \"\
    );\n}\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog\");", " \
    \   let result = '';\n    for(let i = 0; i < sentence.length; i++){\n        let\
    \ letter = sentence[i];\n        if(isPrime(letter)){\n            result += letter;\n\
    \        }\n    }\n    return result;\n}\n", "    let words = sentence.split(\"\
    \ \");\n    let result = [];\n    for(let i = 0; i < words.length; i++){\n   \
    \     let wordLength = words[i].length;\n        for(let j = 1; j < wordLength;\
    \ j++){\n            if(isPrime(j) && result.indexOf(words[i]) === -1){\n    \
    \            result.push(words[i]);\n            }\n        }\n    }\n    return\
    \ result.join(\" \");\n}\n", "    let words = [];\n    let primes = [];\n    let\
    \ primesIndex = [];\n    let primesLength = [];\n    let primesString = '';\n\
    \    let primesStringIndex = [];\n    let primesStringLength = [];\n    let primesStringString\
    \ = '';\n    let primesStringStringIndex = [];\n    let primesStringStringLength\
    \ = [];\n    let primesStringStringString = '';\n    let primesStringStringStringIndex\
    \ = [];\n    let primesStringStringStringLength = [];\n    let primesStringStringStringString\
    \ = '';\n    let primesStringStringStringStringIndex = [];\n    let primesStringStringStringStringLength\
    \ = [];\n    let primesStringStringStringStringString = '';\n    let primesStringStringStringStringIndex\
    \ = [];\n    let primesStringStringStringStringStringLength = [];\n    let primesStringStringStringStringStringString\
    \ = '';\n    let primesStringStringStringStringStringIndex = [];\n    let primesStringStringStringStringStringStringLength\
    \ = [];\n    let primesStringStringStringStringStringStringString = '';\n    let\
    \ primesStringStringStringStringStringStringIndex = [];\n    let primesStringStringStringStringStringStringStringLength\
    \ = [];\n    let primesStringStringStringStringStringStringString = '';\n    let\
    \ primesStringStringStringStringStringStringStringIndex = [];\n    let primesStringStringStringStringStringStringStringStringLength\
    \ = [];\n    let primesStringStringStringStringStringStringStringString = '';\n\
    \    let primesStringStringStringStringStringStringStringStringIndex = [];\n \
    \   let primesStringStringStringStringStringStringStringStringStringLength = [];\n\
    \    let primesStringStringStringStringStringStringStringStringString = '';\n\
    \    let primesStringStringStringStringStringStringStringStringStringIndex = [];\n\
    \    let primesStringStringStringStringStringStringStringStringStringLength =\
    \ [];\n    let primesStringStringStringStringStringStringStringStringStringString\
    \ = '';\n    let primesStringStringStringStringStringStringStringStringStringStringIndex\
    \ = [];\n    let primesStringStringStringStringStringStringStringStringStringStringStringLength\
    \ = [];\n    let primesStringStringStringStringStringStringStringStringStringStringString\
    \ = '';\n    let primesStringStringStringStringStringStringStringStringStringStringStringIndex\
    \ = [];\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringLength\
    \ = [];\n    let primesStringStringStringStringStringStringStringStringStringStringStringString\
    \ = '';\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringIndex\
    \ = [];\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringStringLength\
    \ = [];\n    let primesStringStringStringStringStringStringStringStringStringStringString",
  "    let result = '';\n    let primes = [];\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(primes.includes(sentence[i])){\n            primes.push(sentence[i]);\n\
    \        }\n    }\n    primes.sort();\n    for(let i = 0; i < primes.length; i++){\n\
    \        result += sentence[i] + ' ';\n    }\n    return result;\n}\n", "    //\
    \ Write your code here\n    let arr = sentence.split(\" \");\n    let result =\
    \ [];\n    for(let i = 0; i < arr.length; i++){\n        let count = 0;\n    \
    \    for(let j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n\
    \                count++;\n            }\n        }\n        if(count === 1){\n\
    \            result.push(arr[i]);\n        }\n    }\n    return result.join(\"\
    \ \");\n}\n", "    let result = '';\n    for(let i = 0; i < sentence.length; i++){\n\
    \        let word = sentence[i];\n        let prime = true;\n        for(let j\
    \ = 0; j < word.length; j++){\n            if(word[j] !== 'a' && word[j] !== 'e'\
    \ && word[j] !== 'i' && word[j] !== 'o' && word[j] !== 'u'){\n               \
    \ prime = false;\n                break;\n            }\n        }\n        if(prime){\n\
    \            result += word;\n        }\n    }\n    return result;\n}\n", "  \
    \  let words = [];\n    for(let i = 0; i < sentence.length; i++){\n        if(isPrime(sentence.length)){\n\
    \            words.push(sentence[i]);\n        }\n    }\n    return words.join(\"\
    \ \");\n}\n", "    let result = '';\n    for(let i = 0; i < sentence.length; i++){\n\
    \        let char = sentence[i];\n        if(char === ' ' || char === '\\n'){\n\
    \            result += char;\n        }\n        else{\n            let count\
    \ = 0;\n            for(let j = i; j < sentence.length; j++){\n              \
    \  if(sentence[j] === char){\n                    count++;\n                }\n\
    \            }\n            if(count === 1){\n                result += char;\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    // Write your\
    \ code here\n    let words = [];\n    let primes = [];\n    for(let i = 0; i <\
    \ sentence.length; i++){\n        if(primes.includes(sentence[i])){\n        \
    \    words.push(sentence[i]);\n        }\n    }\n    return words.join(\" \");\n\
    }\n\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog\");", " \
    \   let words = [];\n    for(let i = 0; i < sentence.length; i++){\n        if(isPrime(sentence[i].length)){\n\
    \            words.push(sentence[i]);\n        }\n    }\n    return words.join(\"\
    \ \");\n}\n", "    // write your code here\n    let arr = sentence.split(\" \"\
    );\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n        let\
    \ count = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ === arr[i]){\n                count++;\n            }\n        }\n        if(count\
    \ === 1){\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    let result = '';\n    for(let i = 0; i < sentence.length; i++){\n\
    \        let char = sentence[i];\n        if(char === ' ') continue;\n       \
    \ let count = 0;\n        for(let j = i; j < sentence.length; j++){\n        \
    \    if(sentence[j] === char) count++;\n        }\n        if(count === 2) result\
    \ += char;\n    }\n    return result;\n}\n", "    // Write your code here\n  \
    \  let arr=sentence.split(\" \");\n    let newArr=[]\n    for(let i=0;i<arr.length;i++){\n\
    \        let len=arr[i].length;\n        for(let j=2;j<len;j++){\n           \
    \ if(arr[i].charAt(j)==arr[i].charAt(j-1)){\n                let newWord=arr[i].slice(0,j);\n\
    \                newArr.push(newWord);\n            }\n        }\n    }\n    return\
    \ newArr.join(\" \");\n}\n\nwords_in_sentence(\"The quick brown fox jumps over\
    \ the lazy dog\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy\
    \ dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_", "    let words = [];\n    let primes = [];\n    let\
    \ primesIndex = [];\n    let primesLength = [];\n    let primesIndexLength = [];\n\
    \    let primesIndexLengthLength = [];\n    let primesIndexLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLength = [];\n    let primesIndexLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLength = [];\n    let\
    \ primesIndexLengthLengthLengthLengthLengthLengthLength = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLength =\
    \ [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primes", "    let arr = sentence.split(\" \");\n    let newArr\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        let count = 0;\n  \
    \      for(let j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n\
    \                count++;\n            }\n        }\n        if(count === 1){\n\
    \            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    // Write your code here\n    let result = '';\n    let primes\
    \ = [];\n    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primes.push(sentence[i]);\n        }\n    }\n    for(let i = 0; i\
    \ < primes.length; i++){\n        let count = 0;\n        for(let j = 0; j < sentence.length;\
    \ j++){\n            if(sentence[j] === primes[i]){\n                count++;\n\
    \            }\n        }\n        if(count === primes.length){\n            result\
    \ += primes[i];\n        }\n    }\n    return result;\n}\n\nwords_in_sentence('The\
    \ quick brown fox jumps over the lazy dog');", "    let result = '';\n    let\
    \ primes = [];\n    let primesCount = 0;\n    let primesSum = 0;\n    for(let\
    \ i = 0; i < sentence.length; i++){\n        if(primesCount === primesSum){\n\
    \            primesCount++;\n            primesSum += primes[i];\n        }\n\
    \        if(primesCount === primesSum){\n            primesCount++;\n        \
    \    primesSum += primes[i];\n        }\n        if(primesCount === primesSum){\n\
    \            primesCount++;\n            primesSum += primes[i];\n        }\n\
    \        if(primesCount === primesSum){\n            primesCount++;\n        \
    \    primesSum += primes[i];\n        }\n        if(primesCount === primesSum){\n\
    \            primesCount++;\n            primesSum += primes[i];\n        }\n\
    \        if(primesCount === primesSum){\n            primesCount++;\n        \
    \    primesSum += primes[i];\n        }\n        if(primesCount === primesSum){\n\
    \            primesCount++;\n            primesSum += primes[i];\n        }\n\
    \        if(primesCount === primesSum){\n            primesCount++;\n        \
    \    primesSum += primes[i];\n        }\n        if(primesCount === primesSum){\n\
    \            primesCount++;\n            primesSum += primes[i];\n        }\n\
    \        if(primesCount === primesSum){\n            primesCount++;\n        \
    \    primesSum += primes[i];\n        }\n        if(primesCount === primesSum){\n\
    \            primesCount++;\n            primesSum += primes[i];\n        }\n\
    \        if(primesCount === primesSum){\n            primesCount++;\n        \
    \    primesSum += primes[i];\n        }\n        if(primesCount === primesSum){\n\
    \            primesCount++;\n            primesSum += primes[i];\n        }\n\
    \        if(primesCount === primesSum){\n            primesCount++;\n        \
    \    primesSum += primes[i];\n        }\n        if(primesCount === primesSum){\n\
    \            primesCount++;\n            primesSum += primes[i];\n        }\n\
    \        if(primesCount === primesSum){\n            primesCount++;\n        \
    \    primesSum += primes[i];\n        }\n        if(primesCount === primesSum){\n\
    \            primesCount++;\n            primesSum += primes[i];\n        }\n\
    \        if(primesCount === primesSum){\n            primesCount++;\n        \
    \    primesSum += primes[i];", "    // Write your code here\n    let words = [];\n\
    \    let word = \"\";\n    let primes = [];\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(sentence[i] === \" \"){\n            words.push(word);\n \
    \           word = \"\";\n        }else{\n            word += sentence[i];\n \
    \       }\n    }\n    words.push(word);\n    for(let i = 0; i < words.length;\
    \ i++){\n        let prime = true;\n        for(let j = 0; j < primes.length;\
    \ j++){\n            if(primes[j] === words[i].length){\n                prime\
    \ = false;\n                break;\n            }\n        }\n        if(prime){\n\
    \            primes.push(words[i].length);\n        }\n    }\n    let result =\
    \ \"\";\n    for(let i = 0; i < words.length; i++){\n        for(let j = 0; j\
    \ < primes.length; j++){\n            if(words[i].length === primes[j]){\n   \
    \             result += words[i] + \" \";\n                break;\n          \
    \  }\n        }\n    }\n    return result;\n}\n", "    // code here\n}\n", " \
    \   // write your code here\n    let result = '';\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        let letter = sentence[i];\n        if(isPrime(letter)){\n   \
    \         result += letter;\n        }\n    }\n    return result;\n}\n", "   \
    \ // Write your code here\n    let result = '';\n    let primes = [];\n    for(let\
    \ i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primes.push(sentence[i]);\n        }\n    }\n    for(let i = 0; i\
    \ < primes.length; i++){\n        result += primes[i];\n    }\n    return result;\n\
    }\n", "    // Write your code here\n    let result = ''\n    let primes = []\n\
    \    for (let i = 0; i < sentence.length; i++) {\n        let char = sentence[i]\n\
    \        let isPrime = true\n        for (let j = 0; j < primes.length; j++) {\n\
    \            if (primes[j] <= char.length && char.length % primes[j] === 0) {\n\
    \                isPrime = false\n                break\n            }\n     \
    \   }\n        if (isPrime) {\n            primes.push(char.length)\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    // Write\
    \ your code here\n    let arr = sentence.split(\" \");\n    let result = [];\n\
    \    for(let i = 0; i < arr.length; i++){\n        let count = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n         \
    \       count++;\n            }\n        }\n        if(count % 2 === 0){\n   \
    \         result.push(arr[i]);\n        }\n    }\n    return result.join(\" \"\
    );\n}\n", "    let arr = sentence.split(\" \");\n    let newArr = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        let count = 0;\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] === arr[i]){\n                count++;\n\
    \            }\n        }\n        if(count === 1){\n            newArr.push(arr[i]);\n\
    \        }\n    }\n    return newArr.join(\" \");\n}\n", "    // Write your code\
    \ here\n    let result = '';\n    let primes = [];\n    let primesCount = 0;\n\
    \    let primesString = '';\n    for(let i = 0; i < sentence.length; i++){\n \
    \       if(primesCount === primes.length){\n            primesString = primesString\
    \ + primes.join(' ');\n            primesCount = 0;\n            primes = [];\n\
    \        }\n        if(primesCount < primes.length){\n            primes[primesCount]\
    \ = i;\n            primesCount++;\n        }\n    }\n    for(let i = 0; i < primes.length;\
    \ i++){\n        if(primes[i] === sentence.length){\n            result += primes[i];\n\
    \        }\n    }\n    return result;\n}\n", "    let words = [];\n    let primes\
    \ = [];\n    let primesSet = new Set();\n    let primesArr = [];\n    let primesArr2\
    \ = [];\n    let primesArr3 = [];\n    let primesArr4 = [];\n    let primesArr5\
    \ = [];\n    let primesArr6 = [];\n    let primesArr7 = [];\n    let primesArr8\
    \ = [];\n    let primesArr9 = [];\n    let primesArr10 = [];\n    let primesArr11\
    \ = [];\n    let primesArr12 = [];\n    let primesArr13 = [];\n    let primesArr14\
    \ = [];\n    let primesArr15 = [];\n    let primesArr16 = [];\n    let primesArr17\
    \ = [];\n    let primesArr18 = [];\n    let primesArr19 = [];\n    let primesArr20\
    \ = [];\n    let primesArr21 = [];\n    let primesArr22 = [];\n    let primesArr23\
    \ = [];\n    let primesArr24 = [];\n    let primesArr25 = [];\n    let primesArr26\
    \ = [];\n    let primesArr27 = [];\n    let primesArr28 = [];\n    let primesArr29\
    \ = [];\n    let primesArr30 = [];\n    let primesArr31 = [];\n    let primesArr32\
    \ = [];\n    let primesArr33 = [];\n    let primesArr34 = [];\n    let primesArr35\
    \ = [];\n    let primesArr36 = [];\n    let primesArr37 = [];\n    let primesArr38\
    \ = [];\n    let primesArr39 = [];\n    let primesArr40 = [];\n    let primesArf41\
    \ = [];\n    let primesArf42 = [];\n    let primesArf43 = [];\n    let primesArr44\
    \ = [];\n    let primesArr45 = [];\n    let primesArr46 = [];\n    let primesArr47\
    \ = [];\n    let primesArr48 = [];\n    let primesArr49 = [];\n    let primesArr50\
    \ = [];\n    let primesArr51 = [];\n    let primesArr52 = [];\n    let primesArr53\
    \ = [];\n    let primesArr54 = [];\n    let primesArr55 = [];\n    let primesArr56\
    \ = [];\n    let primesArr57 = [];\n    let primesArr58 = [];\n    let primesArr59\
    \ = [];\n    let primesArr60 = [];\n    let primesArr61 = [];\n    let primesArr62\
    \ = [];\n    let primesArr63 = [];\n    let primesArr64 = [];\n    let primesArr65\
    \ = [];\n    let primesArr66 = [];\n    let primesArr67 = [];\n    let primesArr68\
    \ = [];\n    let primesArr69 = [];\n    let ", "    let words = [];\n    let primes\
    \ = [];\n    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            words.push(sentence[i]);\n        }\n        else{\n            primes.push(sentence[i]);\n\
    \        }\n    }\n    return words.join(\" \");\n}\n", "    // split sentence\
    \ into words\n    let words = sentence.split(\" \");\n    // find prime numbers\n\
    \    let primes = [];\n    for(let i = 0; i < words.length; i++){\n        let\
    \ word = words[i];\n        let prime = prime_number(word);\n        if(primes.indexOf(prime)\
    \ === -1){\n            primes.push(prime);\n        }\n    }\n    // sort prime\
    \ numbers\n    primes.sort();\n    // create new words\n    let new_words = [];\n\
    \    for(let i = 0; i < words.length; i++){\n        let word = words[i];\n  \
    \      let prime = primes[i];\n        if(prime === word.length){\n          \
    \  new_words.push(word);\n        }\n    }\n    // join words\n    return new_words.join(\"\
    \ \");\n}\n", "    // Write your code here\n    let result = '';\n    let primes\
    \ = [];\n    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primes.push(sentence[i]);\n        }\n    }\n    for(let i = 0; i\
    \ < primes.length; i++){\n        result += primes[i] + ' ';\n    }\n    return\
    \ result;\n}\n\nwords_in_sentence('abc def ghi');", "    let result = '';\n  \
    \  for(let i = 0; i < sentence.length; i++){\n        let word = sentence[i];\n\
    \        let count = 0;\n        for(let j = 0; j < word.length; j++){\n     \
    \       if(word[j] === 'a' || word[j] === 'e' || word[j] === 'i' || word[j] ===\
    \ 'o' || word[j] === 'u'){\n                count++;\n            }\n        }\n\
    \        if(count === 1){\n            result += word;\n        }\n    }\n   \
    \ return result;\n}\n", "    let arr = sentence.split(\" \");\n    let result\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        let n = arr[i].length;\n\
    \        let prime = true;\n        for(let j = 2; j < n; j++){\n            if(n\
    \ % j == 0){\n                prime = false;\n                break;\n       \
    \     }\n        }\n        if(prime){\n            result.push(arr[i]);\n   \
    \     }\n    }\n    return result.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let count = 0;\n        for(let j = 0; j < arr.length; j++){\n           \
    \ if(arr[j] === arr[i]){\n                count++;\n            }\n        }\n\
    \        if(count === 1){\n            result.push(arr[i]);\n        }\n    }\n\
    \    return result.join(\" \");\n}\n", "    let result = '';\n    let primes =\
    \ [];\n    let primesCount = 0;\n    for(let i = 0; i < sentence.length; i++){\n\
    \        if(primesCount === primes.length){\n            primes.push(1);\n   \
    \         primesCount++;\n        }\n        for(let j = 0; j < primes.length;\
    \ j++){\n            if(sentence[i] === ' ' && primes[j] === 1){\n           \
    \     primes[j] = 0;\n                primesCount--;\n            }\n        }\n\
    \    }\n    for(let i = 0; i < primes.length; i++){\n        if(primes[i] ===\
    \ 1){\n            result += sentence[i];\n        }\n    }\n    return result;\n\
    }\n", "    // Write your code here\n    let result = '';\n    let primes = [];\n\
    \    let primesCount = 0;\n    for(let i = 0; i < sentence.length; i++){\n   \
    \     if(primes.includes(sentence[i])){\n            primesCount++;\n        }\n\
    \        else{\n            primes.push(sentence[i]);\n        }\n    }\n    for(let\
    \ i = 0; i < primes.length; i++){\n        if(primesCount % primes[i] === 0){\n\
    \            result += sentence[i];\n        }\n    }\n    return result;\n}\n",
  "    // Write your code here\n    let result = '';\n    let primes = [];\n    let\
    \ primesLength = 0;\n    let primesIndex = 0;\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(primesLength == primesIndex){\n            primesLength++;\n\
    \            primesIndex++;\n        }\n        if(primesLength > primesIndex){\n\
    \            primes[primesLength] = i;\n            primesLength++;\n        }\n\
    \    }\n    for(let i = 0; i < primes.length; i++){\n        if(primes[i] != 0){\n\
    \            result += sentence[primes[i]];\n        }\n    }\n    return result;\n\
    }\n", "    let arr = sentence.split(\" \");\n    let result = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        let len = arr[i].length;\n        if(!isPrime(len)){\n\
    \            result.push(arr[i]);\n        }\n    }\n    return result.join(\"\
    \ \");\n}\n", "    // Write your code here\n    let arr = sentence.split(\" \"\
    );\n    let primes = [];\n    for(let i = 0; i < arr.length; i++){\n        let\
    \ prime = true;\n        for(let j = 0; j < primes.length; j++){\n           \
    \ if(arr[i].length != primes[j]){\n                prime = false;\n          \
    \      break;\n            }\n        }\n        if(prime){\n            primes.push(arr[i].length);\n\
    \        }\n    }\n    let result = \"\";\n    for(let i = 0; i < arr.length;\
    \ i++){\n        result += arr[i] + \" \";\n    }\n    return result;\n}\n", " \
    \   let words = [];\n    for(let i = 0; i < sentence.length; i++){\n        if(isPrime(sentence[i])){\n\
    \            words.push(sentence[i]);\n        }\n    }\n    return words.join(\"\
    \ \");\n}\n", "    let result = [];\n    let primes = [];\n    for(let i = 0;\
    \ i < sentence.length; i++){\n        let word = sentence[i];\n        if(primes.includes(word.length)){\n\
    \            result.push(word);\n        }\n        else{\n            primes.push(word.length);\n\
    \        }\n    }\n    return result.join(' ');\n}\n", "    // Write your code\
    \ here\n    let arr = sentence.split(\" \");\n    let newArr = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        let count = 0;\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] === arr[i]){\n                count++;\n\
    \            }\n        }\n        if(count === 1){\n            newArr.push(arr[i]);\n\
    \        }\n    }\n    return newArr.join(\" \");\n}\n", "    let words = [];\n\
    \    let primes = [];\n    let primesIndex = [];\n    let primesLength = [];\n\
    \    for(let i = 0; i < sentence.length; i++){\n        let word = sentence[i].split('\
    \ ').join('');\n        if(word.length == 1){\n            words.push(word);\n\
    \        }else{\n            let prime = prime_number(word);\n            primes.push(prime);\n\
    \            primesIndex.push(i);\n            primesLength.push(word.length);\n\
    \        }\n    }\n    primesIndex.sort((a, b) => a - b);\n    primesLength.sort((a,\
    \ b) => a - b);\n    for(let i = 0; i < primesLength.length; i++){\n        let\
    \ prime = primes[primesIndex[i]];\n        for(let j = 0; j < primesLength[i];\
    \ j++){\n            if(primesLength[i] % j == 0){\n                let index\
    \ = primesIndex[i] + j;\n                let word = words[index];\n          \
    \      words.push(word);\n            }\n        }\n    }\n    return words.join('\
    \ ');\n}\n", "    // code here\n}\n", "    let result = '';\n    for(let i = 0;\
    \ i < sentence.length; i++){\n        let letter = sentence[i];\n        let count\
    \ = 0;\n        for(let j = 0; j < sentence.length; j++){\n            if(j !=\
    \ i){\n                if(sentence[j] == letter){\n                    count++;\n\
    \                }\n            }\n        }\n        if(count == 0){\n      \
    \      result += letter;\n        }\n    }\n    return result;\n}\n", "    let\
    \ result = '';\n    let primes = [];\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        let char = sentence[i];\n        if(primes.includes(char)){\n\
    \            result += char;\n        }else{\n            primes.push(char);\n\
    \        }\n    }\n    return result;\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = arr.filter(function(item){\n        return item.length\
    \ == prime(item.length);\n    });\n    return newArr.join(\" \");\n}\n", "   \
    \ let result = '';\n    for(let i = 0; i < sentence.length; i++){\n        let\
    \ char = sentence.charAt(i);\n        if(char === ' ') continue;\n        let\
    \ prime = true;\n        for(let j = 2; j < Math.sqrt(char.length); j++){\n  \
    \          if(char.charAt(j) !== char.charAt(j - 1)){\n                prime =\
    \ false;\n                break;\n            }\n        }\n        if(prime){\n\
    \            result += char;\n        }\n    }\n    return result;\n}\n", "  \
    \  // Write your code here\n    let arr = sentence.split(\" \");\n    let newArr\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        let count = 0;\n  \
    \      for(let j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n\
    \                count++;\n            }\n        }\n        if(count === 1){\n\
    \            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    let result = [];\n    let primes = [];\n    let primesIndex\
    \ = [];\n    let primesLength = [];\n    let primesTemp = [];\n    let primesTempLength\
    \ = [];\n    let primesTempIndex = [];\n    let primesTempIndexLength = [];\n\
    \    let primesTempIndexLength2 = [];\n    let primesTempIndexLength3 = [];\n\
    \    let primesTempIndexLength4 = [];\n    let primesTempIndexLength5 = [];\n\
    \    let primesTempIndexLength6 = [];\n    let primesTempIndexLength7 = [];\n\
    \    let primesTempIndexLength8 = [];\n    let primesTempIndexLength9 = [];\n\
    \    let primesTempIndexLength10 = [];\n    let primesTempIndexLength11 = [];\n\
    \    let primesTempIndexLength12 = [];\n    let primesTempIndexLength13 = [];\n\
    \    let primesTempIndexLength14 = [];\n    let primesTempIndexLength15 = [];\n\
    \    let primesTempIndexLength16 = [];\n    let primesTempIndexLength17 = [];\n\
    \    let primesTempIndexLength18 = [];\n    let primesTempIndexLength19 = [];\n\
    \    let primesTempIndexLength20 = [];\n    let primesTempIndexLength21 = [];\n\
    \    let primesTempIndexLength22 = [];\n    let primesTempIndexLength23 = [];\n\
    \    let primesTempIndexLength24 = [];\n    let primesTempIndexLength25 = [];\n\
    \    let primesTempIndexLength26 = [];\n    let primesTempIndexLength27 = [];\n\
    \    let primesTempIndexLength28 = [];\n    let primesTempIndexLength29 = [];\n\
    \    let primesTempIndexLength30 = [];\n    let primesTempIndexLength31 = [];\n\
    \    let primesTempIndexLength32 = [];\n    let primesTempIndexLength33 = [];\n\
    \    let primesTempIndexLength34 = [];\n    let primesTempIndexLength35 = [];\n\
    \    let primesTempIndexLength36 = [];\n    let primesTempIndexLength37 = [];\n\
    \    let primesTempIndexLength38 = [];\n    let primesTempIndexLength39 = [];\n\
    \    let primesTempIndexLength40 = [];\n    let primesTempIndexLength41 = [];\n\
    \    let primesTempIndexLength42 = [];\n    let primesTempIndexLength43 = [];\n\
    \    let primesTempIndexLength44 = [];\n    let primesTempIndexLength45 = [];\n\
    \    let primesTempIndexLength46 = [];\n    let primesTempIndexLength47 = [];\n\
    \    let primesTempIndexLength48 = [];\n    let primesTempIndexLength49 = [];\n\
    \    let primesTempIndexLength50 = [];\n    let primesTempIndexLength51 = [];\n\
    \    let primesTempIndexLength5", "    let result = '';\n    let primes = [];\n\
    \    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primes.push(sentence[i]);\n        }\n    }\n    for(let i = 0; i\
    \ < primes.length; i++){\n        let count = 0;\n        for(let j = 0; j < sentence.length;\
    \ j++){\n            if(sentence[j] === primes[i]){\n                count++;\n\
    \            }\n        }\n        if(count === sentence.length){\n          \
    \  result += primes[i];\n        }\n    }\n    return result;\n}\n", "    // Write\
    \ your code here\n    let result = '';\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        let count = 0;\n        for(let j = 0; j < sentence.length; j++){\n\
    \            if(sentence[i] === sentence[j]){\n                count++;\n    \
    \        }\n        }\n        if(count % 2 === 0){\n            result += sentence[i];\n\
    \        }\n    }\n    return result;\n}\n\nwords_in_sentence('The quick brown\
    \ fox jumps over the lazy dog');", "    // code here\n}\n", "    let words = [];\n\
    \    let primes = [];\n    let primesIndex = [];\n    let primesLength = [];\n\
    \    let primesIndexLength = [];\n    let primesIndexLengthLength = [];\n    let\
    \ primesIndexLengthLengthLength = [];\n    let primesIndexLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLength = [];\n    let primesIndexLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLength = [];\n\
    \    let primesIndexLengthLengthLengthLengthLengthLengthLength = [];\n    let\
    \ primesIndexLengthLengthLengthLengthLengthLengthLengthLength = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLength =\
    \ [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLength", "    let result =\
    \ '';\n    for(let i = 0; i < sentence.length; i++){\n        let char = sentence[i];\n\
    \        if(char === ' ') continue;\n        let isPrime = true;\n        for(let\
    \ j = 2; j < char.length; j++){\n            if(char.charAt(j) !== char.charAt(j\
    \ - 1)){\n                isPrime = false;\n                break;\n         \
    \   }\n        }\n        if(isPrime){\n            result += char;\n        }\n\
    \    }\n    return result;\n}\n", "    // write your code here\n    let arr =\
    \ sentence.split(\" \");\n    let result = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        let count = 0;\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] === arr[i]){\n                count++;\n            }\n\
    \        }\n        if(count === 1){\n            result.push(arr[i]);\n     \
    \   }\n    }\n    return result.join(\" \");\n}\n", "    // Write your code here\n\
    \    let arr = sentence.split(\" \");\n    let newArr = [];\n    for(let i = 0;\
    \ i < arr.length; i++){\n        let count = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] === arr[i]){\n                count++;\n      \
    \      }\n        }\n        if(count === 1){\n            newArr.push(arr[i]);\n\
    \        }\n    }\n    return newArr.join(\" \");\n}\n", "    // Write your code\
    \ here\n    let words = [];\n    let primes = [];\n    let primesString = \"\"\
    ;\n    let primesStringString = \"\";\n    let primesStringArray = [];\n    let\
    \ primesStringArrayString = \"\";\n    let primesStringArrayStringString = \"\"\
    ;\n    let primesStringArrayStringArray = [];\n    let primesStringArrayStringArrayString\
    \ = \"\";\n    let primesStringArrayStringArrayStringArray = [];\n    let primesStringArrayStringArrayStringArrayString\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringString = [];\n \
    \   let primesStringArrayStringArrayStringArrayStringArray = [];\n    let primesStringArrayStringArrayStringArrayStringArrayString\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayString = [];\n\
    \    let primesStringArrayStringArrayStringArrayStringArrayStringArray = [];\n\
    \    let primesStringArrayStringArrayStringArrayStringArrayStringArrayString =\
    \ [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayString\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArray\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArray\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayString\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArray\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArray\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayString\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayString\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayString\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArray\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArray\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArray\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArray\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayString\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArray\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayString\
    \ = [];\n    let primesStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayStringArrayString",
  "    let arr = sentence.split(\" \");\n    let newArr = [];\n    for(let i = 0;\
    \ i < arr.length; i++){\n        let count = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] === arr[i]){\n                count++;\n      \
    \      }\n        }\n        if(count === 1){\n            newArr.push(arr[i]);\n\
    \        }\n    }\n    return newArr.join(\" \");\n}\n", "    let words = [];\n\
    \    let primes = [];\n    let primesCount = 0;\n    let primesMax = 0;\n    let\
    \ primesMaxCount = 0;\n    let primesMaxLength = 0;\n    let primesMaxLengthCount\
    \ = 0;\n    let primesMaxLengthLength = 0;\n    let primesMaxLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLength = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMaxLengthLengthLengthCount\
    \ = 0;\n    let primesMaxLengthLengthLengthCount = 0;\n    let primesMax", " \
    \   let arr = sentence.split(\" \");\n    let newArr = [];\n    for(let i = 0;\
    \ i < arr.length; i++){\n        let count = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] === arr[i]){\n                count++;\n      \
    \      }\n        }\n        if(count === 1){\n            newArr.push(arr[i]);\n\
    \        }\n    }\n    return newArr.join(\" \");\n}\n", "    // code here\n}\n",
  "    let result = '';\n    for(let i = 0; i < sentence.length; i++){\n        let\
    \ word = sentence.charAt(i);\n        if(isPrime(word.length)){\n            result\
    \ += word;\n        }\n    }\n    return result;\n}\n", "    // Write your code\
    \ here\n    let words = [];\n    let word = \"\";\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(sentence[i] === \" \"){\n            words.push(word);\n \
    \           word = \"\";\n        }else{\n            word += sentence[i];\n \
    \       }\n    }\n    words.push(word);\n    words.sort();\n    let result = [];\n\
    \    for(let i = 0; i < words.length; i++){\n        let count = 0;\n        for(let\
    \ j = 0; j < words.length; j++){\n            if(words[i] === words[j]){\n   \
    \             count++;\n            }\n        }\n        if(count === words.length){\n\
    \            result.push(words[i]);\n        }\n    }\n    return result.join(\"\
    \ \");\n}\n\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The ", "    // Write your code here\n   \
    \ let result = '';\n    for(let i = 0; i < sentence.length; i++){\n        let\
    \ count = 0;\n        for(let j = 0; j < sentence.length; j++){\n            if(sentence[j]\
    \ === sentence[i]){\n                count++;\n            }\n        }\n    \
    \    if(count === 1){\n            result += sentence[i] + ' ';\n        }\n \
    \   }\n    return result;\n}\n", "    let words = [];\n    let primes = [];\n\
    \    let primesString = \"\";\n    let primesStringArray = [];\n    for(let i\
    \ = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primesStringArray.push(sentence[i]);\n        }\n        else{\n\
    \            primes.push(sentence[i]);\n        }\n    }\n    primesString = primesStringArray.join(\"\
    \ \");\n    for(let i = 0; i < primesString.length; i++){\n        words.push(primesString.charAt(i));\n\
    \    }\n    for(let i = 0; i < words.length; i++){\n        for(let j = 0; j <\
    \ words.length; j++){\n            if(words[i] === words[j]){\n              \
    \  primesString += words[i];\n                primes.push(words[i]);\n       \
    \     }\n        }\n    }\n    for(let i = 0; i < primesString.length; i++){\n\
    \        words.push(primesString.charAt(i));\n    }\n    for(let i = 0; i < words.length;\
    \ i++){\n        for(let j = 0; j < words.length; j++){\n            if(words[i]\
    \ === words[j]){\n                primesString += words[i];\n                primes.push(words[i]);\n\
    \            }\n        }\n    }\n    for(let i = 0; i < primesString.length;\
    \ i++){\n        words.push(primesString.charAt(i));\n    }\n    for(let i = 0;\
    \ i < words.length; i++){\n        for(let j = 0; j < words.length; j++){\n  \
    \          if(words[i] === words[j]){\n                primesString += words[i];\n\
    \                primes.push(words[i]);\n            }\n        }\n    }\n   \
    \ for(let i = 0; i < primesString.length; i++){\n        words.push(primesString.charAt(i));\n\
    \    }\n    for(let i = 0; i < words.length; i++){\n        for(let j = 0; j <\
    \ words.length; j++){\n            if(words[i] === words[j]){\n              \
    \  primesString += words[i];\n                primes.push(words[i]);\n       \
    \     }\n        }\n    }\n    for(let i = 0; i < primesString.length; i++){\n\
    \        words.push(primesString.charAt(i));\n    }\n    for(let i = 0; i < words.length;\
    \ i++){\n        for(let j = 0; j < words.length; j++){\n            if(words[i]\
    \ === words[j]){\n                primesString += words[i];\n                primes.push(words[i]);\n\
    \            }\n        }\n    }\n    for(let i = 0; i < primesString.length;\
    \ i++){\n        words.push(primesString.charAt(i));\n    }\n    for(let i = 0;\
    \ i < words.length; i++){\n        for(let j = 0; j < words.length; j++){\n  \
    \          if(words[i] === words[j]){\n                primesString += words[i];\n\
    \                primes.push(words[i]);\n            }\n        }\n    }\n   \
    \ for(let i = 0; i < primesString.length; i++){\n", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = [];\n    for(let i=0;i<arr.length;i++){\n        let\
    \ count = 0;\n        for(let j=0;j<arr.length;j++){\n            if(arr[j] ===\
    \ arr[i]){\n                count++;\n            }\n        }\n        if(count\
    \ === 2){\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    let words = [];\n    let primes = [];\n    let primesCount\
    \ = 0;\n    let primesIndex = 0;\n    let primesLength = 0;\n    let primesMax\
    \ = 0;\n    let primesMaxIndex = 0;\n    for(let i = 0; i < sentence.length; i++){\n\
    \        if(sentence[i] === \" \"){\n            words.push(sentence.slice(0,i));\n\
    \            primesCount += 1;\n            primesIndex += 1;\n            primesLength\
    \ += 1;\n            if(primesCount > primesMax){\n                primesMax =\
    \ primesCount;\n                primesMaxIndex = i;\n            }\n         \
    \   primesCount = 0;\n        }\n    }\n    for(let i = 0; i < primesMax; i++){\n\
    \        primes[i] = true;\n    }\n    for(let i = 0; i < words.length; i++){\n\
    \        if(primes[primesIndex]){\n            primes[primesIndex] = false;\n\
    \            primesIndex += 1;\n        }\n    }\n    for(let i = 0; i < primesMax;\
    \ i++){\n        if(primes[i]){\n            primesLength += 1;\n        }\n \
    \   }\n    for(let i = 0; i < words.length; i++){\n        if(primes[primesLength]){\n\
    \            primes[primesLength] = false;\n            primesLength += 1;\n \
    \       }\n    }\n    for(let i = 0; i < primesMax; i++){\n        if(primes[i]){\n\
    \            primesMax += 1;\n        }\n    }\n    for(let i = 0; i < words.length;\
    \ i++){\n        if(primes[primesMax]){\n            primes[primesMax] = false;\n\
    \            primesMax += 1;\n        }\n    }\n    for(let i = 0; i < words.length;\
    \ i++){\n        if(primes[primesMaxIndex]){\n            primes[primesMaxIndex]\
    \ = false;\n            primesMaxIndex += 1;\n        }\n    }\n    let newWords\
    \ = [];\n    for(let i = 0; i < words.length; i++){\n        if(primes[i]){\n\
    \            newWords.push(words[i]);\n        }\n    }\n    return newWords.join(\"\
    \ \");\n}\n", "    // Write your code here\n    let result = '';\n    let primes\
    \ = [];\n    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primes.push(sentence[i]);\n        }\n    }\n    for(let i = 0; i\
    \ < primes.length; i++){\n        if(primes[i] === sentence.length){\n       \
    \     result += primes[i];\n        }\n    }\n    return result;\n}\n\nwords_in_sentence('abc\
    \ def ghi jkl mno pqr');", "    let result = '';\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(isPrime(sentence.length)){\n            result += sentence[i];\n\
    \        }\n    }\n    return result;\n}\n", "    let words=sentence.split(\"\
    \ \");\n    let result=[];\n    for(let i=0;i<words.length;i++){\n        let\
    \ len=words[i].length;\n        if(!isPrime(len)){\n            result.push(words[i]);\n\
    \        }\n    }\n    return result.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let temp = arr[i];\n        let prime = true;\n        for(let j = 2; j <\
    \ temp.length; j++){\n            if(temp[j] !== \"0\"){\n                prime\
    \ = false;\n                break;\n            }\n        }\n        if(prime){\n\
    \            result.push(temp);\n        }\n    }\n    return result.join(\" \"\
    );\n}\n", "    let result = [];\n    for(let i = 0; i < sentence.length; i++){\n\
    \        let temp = sentence[i].split(\" \");\n        for(let j = 0; j < temp.length;\
    \ j++){\n            let temp = temp[j];\n            if(!result.includes(temp)){\n\
    \                result.push(temp);\n            }\n        }\n    }\n    let\
    \ result2 = [];\n    for(let i = 0; i < result.length; i++){\n        let temp\
    \ = result[i];\n        if(!result2.includes(temp)){\n            result2.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result2.length; i++){\n        let temp\
    \ = result2[i];\n        if(!result.includes(temp)){\n            result.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result.length; i++){\n        let temp\
    \ = result[i];\n        if(!result2.includes(temp)){\n            result2.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result2.length; i++){\n        let temp\
    \ = result2[i];\n        if(!result.includes(temp)){\n            result.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result.length; i++){\n        let temp\
    \ = result[i];\n        if(!result2.includes(temp)){\n            result2.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result2.length; i++){\n        let temp\
    \ = result2[i];\n        if(!result.includes(temp)){\n            result.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result.length; i++){\n        let temp\
    \ = result[i];\n        if(!result2.includes(temp)){\n            result2.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result2.length; i++){\n        let temp\
    \ = result2[i];\n        if(!result.includes(temp)){\n            result.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result.length; i++){\n        let temp\
    \ = result[i];\n        if(!result2.includes(temp)){\n            result2.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result2.length; i++){\n        let temp\
    \ = result2[i];\n        if(!result.includes(temp)){\n            result.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result.length; i++){\n        let temp\
    \ = result[i];\n        if(!result2.includes(temp)){\n            result2.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result2.length; i++){\n        let temp\
    \ = result2[i];\n        if(!result.includes(temp)){\n            result.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result.length; i++){\n        let temp\
    \ = result[i];\n        if(!result2.includes(temp)){\n            result2.push(temp);\n\
    \        }\n    }\n    for(let i = 0; i < result2.length; i++){\n        let temp\
    \ = result2[i];\n        if(!result.includes(", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let prime = true;\n        for(let j = 0; j < arr.length; j++){\n        \
    \    if(arr[j].length != arr[i].length){\n                prime = false;\n   \
    \             break;\n            }\n        }\n        if(prime){\n         \
    \   newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\" \");\n}\n",
  "    let arr = sentence.split(\" \");\n    let newArr = [];\n    for(let i = 0;\
    \ i < arr.length; i++){\n        let count = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] === arr[i]){\n                count++;\n      \
    \      }\n        }\n        if(count === 1){\n            newArr.push(arr[i]);\n\
    \        }\n    }\n    return newArr.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let count = 0;\n        for(let j = 0; j < arr.length; j++){\n           \
    \ if(arr[j] === arr[i]){\n                count++;\n            }\n        }\n\
    \        if(count === 1){\n            newArr.push(arr[i]);\n        }\n    }\n\
    \    return newArr.join(\" \");\n}\n", "    // Write your code here\n    let result\
    \ = '';\n    for(let i = 0; i < sentence.length; i++){\n        let word = sentence[i];\n\
    \        let count = 0;\n        for(let j = 0; j < word.length; j++){\n     \
    \       if(word[j] === 'a' || word[j] === 'e' || word[j] === 'i' || word[j] ===\
    \ 'o' || word[j] === 'u'){\n                count++;\n            }\n        }\n\
    \        if(count % 2 === 0){\n            result += word;\n        }\n    }\n\
    \    return result;\n}\n", "    // write your code here\n    let result = '';\n\
    \    let primes = [];\n    for(let i = 0; i < sentence.length; i++){\n       \
    \ if(primes.indexOf(sentence[i]) === -1){\n            primes.push(sentence[i]);\n\
    \        }\n    }\n    for(let i = 0; i < primes.length; i++){\n        result\
    \ += primes[i];\n    }\n    return result;\n}\n\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog\");\nwords_in_sentence(\"The quick brown fox\
    \ jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nword", "    let words=sentence.split(\" \");\n    let result=\"\
    \";\n    for(let i=0;i<words.length;i++){\n        let count=0;\n        for(let\
    \ j=0;j<words.length;j++){\n            if(words[i].length==words[j].length){\n\
    \                count++;\n            }\n        }\n        if(count==0){\n \
    \           result+=words[i]+\" \";\n        }\n    }\n    return result;\n}\n",
  "    let words = [];\n    let primes = [];\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(primes.includes(sentence[i])){\n            words.push(sentence[i]);\n\
    \        }\n        else{\n            primes.push(sentence[i]);\n        }\n\
    \    }\n    return words.join(' ');\n}\n", "    // code here\n}\n", "    // Write\
    \ your code here\n    let result = '';\n    let primes = [];\n    for (let i =\
    \ 0; i < sentence.length; i++){\n        if (primes.includes(sentence[i])){\n\
    \            continue;\n        }\n        let prime = true;\n        for (let\
    \ j = i; j < sentence.length; j++){\n            if (sentence[j] === ''){\n  \
    \              prime = false;\n                break;\n            }\n       \
    \ }\n        if (prime){\n            primes.push(sentence[i]);\n        }\n \
    \   }\n    for (let i = 0; i < primes.length; i++){\n        result += primes[i];\n\
    \    }\n    return result;\n}\nwords_in_sentence('abc def ghi jkl mno pqr');\n\
    words_in_sentence('abc def ghi jkl mno pqr');\nwords_in_sentence('abc def ghi\
    \ jkl mno pqr');\nwords_in_sentence('abc def ghi jkl mno pqr');\nwords_in_sentence('abc\
    \ def ghi jkl mno pqr');\nwords_in_sentence('abc def ghi jkl mno pqr');\nwords_in_sentence('abc\
    \ def ghi jkl mno pqr');\nwords_in_sentence('abc def ghi jkl mno pqr');\nwords_in_sentence('abc\
    \ def ghi jkl mno pqr');\nwords_in_sentence('abc def ghi jkl mno pqr');\nwords_in_sentence('abc\
    \ def ghi jkl mno pqr');\nwords_in_sentence('abc def ghi jkl mno pqr');\nwords_in_sentence('abc\
    \ def ghi jkl mno pqr');\nwords_in_sentence('abc def ghi jkl mno pqr');\nwords_in_sentence('abc\
    \ def ghi jkl mno pqr');\nwords_in_sentence('abc def ghi jkl mno pqr');\nwords_in_sentence('abc\
    \ def ghi jkl mno pqr');\nwords_in_sentence('abc def ghi jkl mno pqr');\nwords_in_sentence('abc\
    \ def ghi jkl mno pqr');\nwords_in_sentence('abc def ghi jkl mno pqr');\nwords_in_sentence('abc\
    \ def ghi jkl mno pqr');\nwords_in_sentence('abc def ghi jkl mno pqr');\nwords_in_sentence('abc\
    \ def ghi jkl mno pqr');\nwords_in_sentence('abc def ghi jkl mno pqr');\nwords_in_",
  "    let arr = sentence.split(\" \");\n    let newArr = [];\n    for(let i = 0;\
    \ i < arr.length; i++){\n        let temp = [];\n        for(let j = 0; j < arr[i].length;\
    \ j++){\n            if(arr[i].charAt(j) == \" \"){\n                temp.push(arr[i].charAt(j));\n\
    \            }\n        }\n        if(temp.length == 2){\n            newArr.push(temp);\n\
    \        }\n    }\n    return newArr.join(\" \");\n}\n", "    let words = [];\n\
    \    for(let word of sentence.split(\" \")){\n        if(isPrime(word.length)){\n\
    \            words.push(word);\n        }\n    }\n    return words.join(\" \"\
    );\n}\n", "    let result = [];\n    for(let i = 0; i < sentence.length; i++){\n\
    \        let word = sentence[i];\n        let count = 0;\n        for(let j =\
    \ 0; j < word.length; j++){\n            if(word[j] === 'a'){\n              \
    \  count++;\n            }\n        }\n        if(count % 2 === 0){\n        \
    \    result.push(word);\n        }\n    }\n    return result.join(\" \");\n}\n",
  "    let result = '';\n    let primes = [];\n    let primesSet = new Set();\n  \
    \  for(let i = 0; i < sentence.length; i++){\n        let word = sentence[i];\n\
    \        let prime = true;\n        for(let j = 0; j < primes.length; j++){\n\
    \            if(primes[j] === word.length){\n                prime = false;\n\
    \                break;\n            }\n        }\n        if(prime){\n      \
    \      primes.push(word.length);\n            primesSet.add(word);\n        }\n\
    \    }\n    primesSet.forEach((prime) => {\n        for(let i = 0; i < primes.length;\
    \ i++){\n            if(prime === primes[i]){\n                result += prime;\n\
    \                break;\n            }\n        }\n    });\n    return result;\n\
    }\n", "    let result = '';\n    for(let i = 0; i < sentence.length; i++){\n \
    \       let word = sentence[i];\n        let count = 0;\n        for(let j = 0;\
    \ j < word.length; j++){\n            if(word[j] === 'a'){\n                count++;\n\
    \            }\n        }\n        if(count % 2 === 0){\n            result +=\
    \ word;\n        }\n    }\n    return result;\n}\n", "    // code here\n}\n",
  "    // Write your code here\n    let result = '';\n    let primes = [];\n    for(let\
    \ i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primes.push(sentence[i]);\n        }\n    }\n    for(let i = 0; i\
    \ < primes.length; i++){\n        result += primes[i] + ' ';\n    }\n    return\
    \ result;\n}\n", "    // Write your code here\n    let result = '';\n    let primes\
    \ = [];\n    for (let i = 0; i < sentence.length; i++){\n        let word = sentence[i].split('\
    \ ').join('');\n        let prime = true;\n        for (let j = 0; j < primes.length;\
    \ j++){\n            if (primes[j] == word.length){\n                prime = false;\n\
    \                break;\n            }\n        }\n        if (prime){\n     \
    \       primes.push(word.length);\n            result += word + ' ';\n       \
    \ }\n    }\n    return result;\n}\n\nwords_in_sentence('The quick brown fox jumps\
    \ over the lazy dog');", "    let words = [];\n    let primes = [];\n    let primesIndex\
    \ = [];\n    let primesIndexCount = 0;\n    let primesIndexCount2 = 0;\n    let\
    \ primesIndexCount3 = 0;\n    let primesIndexCount4 = 0;\n    let primesIndexCount5\
    \ = 0;\n    let primesIndexCount6 = 0;\n    let primesIndexCount7 = 0;\n    let\
    \ primesIndexCount8 = 0;\n    let primesIndexCount9 = 0;\n    let primesIndexCount10\
    \ = 0;\n    let primesIndexCount11 = 0;\n    let primesIndexCount12 = 0;\n   \
    \ let primesIndexCount13 = 0;\n    let primesIndexCount14 = 0;\n    let primesIndexCount15\
    \ = 0;\n    let primesIndexCount16 = 0;\n    let primesIndexCount17 = 0;\n   \
    \ let primesIndexCount18 = 0;\n    let primesIndexCount19 = 0;\n    let primesIndexCount20\
    \ = 0;\n    let primesIndexCount21 = 0;\n    let primesIndexCount22 = 0;\n   \
    \ let primesIndexCount23 = 0;\n    let primesIndexCount24 = 0;\n    let primesIndexCount25\
    \ = 0;\n    let primesIndexCount26 = 0;\n    let primesIndexCount27 = 0;\n   \
    \ let primesIndexCount28 = 0;\n    let primesIndexCount29 = 0;\n    let primesIndexCount30\
    \ = 0;\n    let primesIndexCount31 = 0;\n    let primesIndexCount32 = 0;\n   \
    \ let primesIndexCount33 = 0;\n    let primesIndexCount34 = 0;\n    let primesIndexCount35\
    \ = 0;\n    let primesIndexCount36 = 0;\n    let primesIndexCount37 = 0;\n   \
    \ let primesIndexCount38 = 0;\n    let primesIndexCount39 = 0;\n    let primesIndexCount40\
    \ = 0;\n    let primesIndexCount41 = 0;\n    let primesIndexCount42 = 0;\n   \
    \ let primesIndexCount43 = 0;\n    let primesIndexCount44 = 0;\n    let primesIndexCount45\
    \ = 0;\n    let primesIndexCount46 = 0;\n    let primesIndexCount47 = 0;\n   \
    \ let primesIndexCount48 = 0;\n    let primesIndexCount49 = 0;\n    let primesIndexCount50\
    \ = 0;\n    let primesIndexCount51 = 0;\n    let primesIndexCount52 = 0;\n   \
    \ let primesIndexCount53 = 0;\n    let primesIndexCount54 = 0;\n    let primesIndexCount55\
    \ = 0;\n    let primesIndexCount56 = 0;\n    let primesIndexCount57 = 0;\n   \
    \ let primesIndexCount58 = 0;\n    let primesIndexCount59 = 0;\n    let primesIndexCount60\
    \ = 0;\n    let primesIndexCount61 = 0;\n    let primesIndexCount62 = 0;\n   \
    \ let primesIndexCount63 = 0;", "    // code here\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = [];\n    for(let i=0;i<arr.length;i++){\n        let\
    \ str = arr[i];\n        let len = str.length;\n        for(let j=2;j<len;j++){\n\
    \            if(str.charAt(j-1)==str.charAt(j)){\n                let temp = str.charAt(j-1);\n\
    \                str = str.substring(0,j-1) + str.charAt(j) + str.substring(j+1);\n\
    \                str = str.substring(0,j-1) + temp + str.substring(j+1);\n   \
    \             j--;\n            }\n        }\n        newArr.push(str);\n    }\n\
    \    return newArr.join(\" \");\n}\n", "    let result = '';\n    let primes =\
    \ [];\n    let primesLength = [];\n    let primesIndex = [];\n    let primesLengthIndex\
    \ = [];\n    let primesIndexLength = [];\n    let primesIndexLengthIndex = [];\n\
    \    let primesLengthIndexLength = [];\n    let primesIndexLengthIndexLength =\
    \ [];\n    let primesIndexLengthIndexLengthIndex = [];\n    let primesIndexLengthIndexLengthIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndex = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndex = [];\n\
    \    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndex = [];\n  \
    \  let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndex = [];\n    let\
    \ primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndex = [];\n    let\
    \ primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndex = [];\n\
    \    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [];\n    let primesIndexLengthIndexLengthIndexIndexIndexIndexIndexIndexIndexIndexIndex",
  "    // Write your code here\n    let result = '';\n    let primes = [];\n    for\
    \ (let i = 0; i < sentence.length; i++){\n        if (primes.includes(sentence[i])){\n\
    \            continue;\n        }\n        let prime = true;\n        for (let\
    \ j = i + 1; j < sentence.length; j++){\n            if (sentence[j] !== ''){\n\
    \                prime = false;\n                break;\n            }\n     \
    \   }\n        if (prime){\n            primes.push(sentence[i]);\n        }\n\
    \    }\n    for (let i = 0; i < primes.length; i++){\n        result += primes[i];\n\
    \    }\n    return result;\n}\nwords_in_sentence('The quick brown fox jumps over\
    \ the lazy dog');\nwords_in_sentence('The quick brown fox jumps over the lazy\
    \ dog.');\nwords_in_sentence('The quick brown fox jumps over the lazy dog.');\n\
    words_in_sentence('The quick brown fox jumps over the lazy dog.');\nwords_in_sentence('The\
    \ quick brown fox jumps over the lazy dog.');\nwords_in_sentence('The quick brown\
    \ fox jumps over the lazy dog.');\nwords_in_sentence('The quick brown fox jumps\
    \ over the lazy dog.');\nwords_in_sentence('The quick brown fox jumps over the\
    \ lazy dog.');\nwords_in_sentence('The quick brown fox jumps over the lazy dog.');\n\
    words_in_sentence('The quick brown fox jumps over the lazy dog.');\nwords_in_sentence('The\
    \ quick brown fox jumps over the lazy dog.');\nwords_in_sentence('The quick brown\
    \ fox jumps over the lazy dog.');\nwords_in_sentence('The quick brown fox jumps\
    \ over the lazy dog.');\nwords_in_sentence('The quick brown fox jumps over the\
    \ lazy dog.');\nwords_in_sentence('The quick brown fox jumps over the lazy dog.');\n\
    words_in_sentence('The quick brown fox jumps over the lazy dog.');\nwords_in_sentence('The\
    \ quick brown fox jumps over the lazy dog.');\nwords_in_sentence('The quick brown\
    \ fox jumps over the lazy dog.');\nwords_in_sentence('The quick brown fox jumps\
    \ over the lazy dog.');\nwords_in_sentence('The quick brown fox jumps over the\
    \ lazy dog.');\nwords_in_sentence('The quick brown fox jumps over the lazy dog.');\n\
    words_in_sentence('The quick brown fox jumps over the lazy dog.');\nwords_in_sentence('The\
    \ quick brown fox jumps over the lazy do", "    let arr = sentence.split(\" \"\
    );\n    let newArr = [];\n    for(let i=0;i<arr.length;i++){\n        let flag\
    \ = true;\n        for(let j=1;j<arr[i].length;j++){\n            if(arr[i][j]!==arr[i][j-1]){\n\
    \                flag = false;\n                break;\n            }\n      \
    \  }\n        if(flag){\n            newArr.push(arr[i]);\n        }\n    }\n\
    \    return newArr.join(\" \");\n}\n", "    let words = [];\n    let word = \"\
    \";\n    for(let i = 0; i < sentence.length; i++){\n        word += sentence[i];\n\
    \        if(word.length % 2 === 0){\n            words.push(word);\n         \
    \   word = \"\";\n        }\n    }\n    return words.sort().join(\" \");\n}\n",
  "    let result = [];\n    let primes = [];\n    let primesCount = 0;\n    let primesLength\
    \ = 0;\n    for(let i = 0; i < sentence.length; i++){\n        if(primesCount\
    \ === primesLength){\n            primesLength++;\n            primes.push(1);\n\
    \        }\n        if(primes[i] === 1){\n            primesCount++;\n       \
    \ }\n        else{\n            primesCount--;\n        }\n        if(sentence[i]\
    \ === \" \"){\n            primesLength++;\n        }\n    }\n    for(let i =\
    \ 0; i < primes.length; i++){\n        if(primes[i] === 1){\n            result.push(sentence.slice(i,\
    \ i + primesLength));\n        }\n    }\n    return result.join(\" \");\n}\n",
  "    let words = [];\n    let primes = [];\n    let primesString = \"\";\n    let\
    \ primesStringString = \"\";\n    let primesStringArray = [];\n    let primesStringArrayString\
    \ = \"\";\n    let primesStringArrayStringString = \"\";\n    let primesStringArrayStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringString = \"\";\n    let\
    \ primesStringArrayStringStringStringStringString = \"\";\n    let primesStringArrayStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringArrayStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let ", "    let words=sentence.split(\" \");\n    let result=\"\
    \";\n    for(let i=0;i<words.length;i++){\n        let len=words[i].length;\n\
    \        if(!isPrime(len)){\n            result+=words[i]+\" \";\n        }\n\
    \    }\n    return result;\n}\n", "    let result = '';\n    let primes = [];\n\
    \    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primes.push(sentence[i]);\n        }\n    }\n    primes.sort();\n\
    \    for(let i = 0; i < primes.length; i++){\n        result += primes[i];\n \
    \   }\n    return result;\n}\n", "    let arr = sentence.split(\" \");\n    let\
    \ newArr = [];\n    for(let i = 0; i < arr.length; i++){\n        let count =\
    \ 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] ===\
    \ arr[i]){\n                count++;\n            }\n        }\n        if(count\
    \ === 1){\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    let result = '';\n    let primes = [];\n    for(let i = 0;\
    \ i < sentence.length; i++){\n        let char = sentence[i];\n        if(primes.includes(char)){\n\
    \            primes.push(char)\n        }\n        else{\n            primes.push(char)\n\
    \            result += char;\n        }\n    }\n    return result;\n}\n", "  \
    \  // Write your code here\n    let arr = sentence.split(\" \");\n    let newArr\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        let count = 0;\n  \
    \      for(let j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n\
    \                count++;\n            }\n        }\n        if(count % 2 ===\
    \ 0){\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    // Write your code here\n    let result = '';\n    let primes\
    \ = [];\n    let primesCount = 0;\n    for(let i = 0; i < sentence.length; i++){\n\
    \        if(primes.includes(sentence[i])){\n            primesCount++;\n     \
    \   }\n        else{\n            primes.push(sentence[i]);\n        }\n    }\n\
    \    for(let i = 0; i < primes.length; i++){\n        if(primesCount % primes[i]\
    \ === 0){\n            result += primes[i];\n        }\n    }\n    return result;\n\
    }\n", "    let result = '';\n    for(let i = 0; i < sentence.length; i++){\n \
    \       let word = sentence[i];\n        let count = 0;\n        for(let j = 0;\
    \ j < word.length; j++){\n            if(word[j] === 'a'){\n                count++;\n\
    \            }\n        }\n        if(count % 2 === 0){\n            result +=\
    \ word;\n        }\n    }\n    return result;\n}\n", "    let words = [];\n  \
    \  let primes = [];\n    let primesIndex = [];\n    let primesLength = [];\n \
    \   let primesLengthIndex = [];\n    let primesLengthLength = [];\n    let primesLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLength = [];\n    let primesLengthLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLengthLength = [];\n    let primesLengthLengthLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLengthLengthLength = [];\n    let primesLengthLengthLengthLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLength = [];\n    let primesLengthLengthLengthLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLength = [];\n    let primesLengthLengthLengthLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLength = [];\n    let primesLengthLengthLengthLengthLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthLength = [];\n    let\
    \ primesLengthLengthLengthLengthLengthLengthIndex = [];\n    let primesLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthIndex = [];\n    let\
    \ primesLengthLengthLengthLengthLengthLengthLength = [];\n    let primesLengthLengthLengthLengthLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthLength = [];\n    let\
    \ primesLengthLengthLengthLengthLengthLengthLengthIndex = [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthLengthIndex = [];\n\
    \    let primesLengthLengthLengthLengthLengthLengthLengthLength = [];\n    let\
    \ primesLengthLengthLengthLengthLengthLengthLengthLengthIndex = [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthIndex =\
    \ [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthLength =\
    \ [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthIndex = [];\n\
    \    let primesLengthLengthLengthLengthLengthLengthLengthLengthLengthLength =\
    \ [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthIndex\
    \ = [];\n    let primesLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primes", "    // write your code here\n    var result = '';\n\
    \    var arr = sentence.split(\" \");\n    for(var i = 0; i < arr.length; i++){\n\
    \        var count = 0;\n        for(var j = 0; j < arr.length; j++){\n      \
    \      if(arr[j] == arr[i]){\n                count++;\n            }\n      \
    \  }\n        if(count == 1){\n            result += arr[i] + \" \";\n       \
    \ }\n    }\n    return result;\n}\n", "    // code here\n}\n", "    let arr =\
    \ sentence.split(\" \");\n    let result = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        let count = 0;\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] === arr[i]){\n                count++;\n            }\n\
    \        }\n        if(count === 1){\n            result.push(arr[i]);\n     \
    \   }\n    }\n    return result.join(\" \");\n}\n", "    // code here\n}\n", " \
    \   let result = [];\n    for(let i = 0; i < sentence.length; i++){\n        let\
    \ word = sentence[i];\n        let count = 0;\n        for(let j = 0; j < word.length;\
    \ j++){\n            if(word[j] === 'a'){\n                count++;\n        \
    \    }\n        }\n        if(count % 2 === 0){\n            result.push(word);\n\
    \        }\n    }\n    return result.join(' ');\n}\n", "    // Write your code\
    \ here\n    let arr=sentence.split(\" \");\n    let newArr=[]\n    for(let i=0;i<arr.length;i++){\n\
    \        let len=arr[i].length;\n        for(let j=2;j<len;j++){\n           \
    \ if(arr[i].substring(0,j)==arr[i].substring(0,j+1)){\n                newArr.push(arr[i])\n\
    \            }\n        }\n    }\n    return newArr.join(\" \");\n}\n", "    //\
    \ Write your code here\n    let result = '';\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        let temp = sentence[i];\n        for(let j = i + 1; j < sentence.length;\
    \ j++){\n            if(temp === sentence[j]){\n                temp = sentence[j];\n\
    \            }\n        }\n        result += temp + ' ';\n    }\n    return result;\n\
    }\n", "    // Write your code here\n    let arr = sentence.split(\" \");\n   \
    \ let newArr = [];\n    for(let i=0;i<arr.length;i++){\n        let tempArr =\
    \ arr[i].split(\"\");\n        for(let j=0;j<tempArr.length;j++){\n          \
    \  if(tempArr[j].match(/\\d/g)){\n                tempArr[j] = \"#\";\n      \
    \      }\n        }\n        newArr.push(tempArr);\n    }\n    let newStr = \"\
    \";\n    for(let i=0;i<newArr.length;i++){\n        for(let j=0;j<newArr[i].length;j++){\n\
    \            if(newArr[i][j] === \"#\"){\n                newStr += newArr[i][j];\n\
    \            }\n        }\n        newStr += \" \";\n    }\n    return newStr;\n\
    }\n", "    // Write your code here\n    let result = '';\n    for(let i = 0; i\
    \ < sentence.length; i++){\n        let letter = sentence[i];\n        let count\
    \ = 0;\n        for(let j = 0; j < sentence.length; j++){\n            if(j !=\
    \ i){\n                if(letter == sentence[j]){\n                    count++;\n\
    \                }\n            }\n        }\n        if(count % 2 === 0){\n \
    \           result += letter;\n        }\n    }\n    return result;\n}\n\nwords_in_sentence('The\
    \ quick brown fox jumps over the lazy dog');", "    // Write your code here\n\
    \    let result = ''\n    let primes = []\n    for (let i = 0; i < sentence.length;\
    \ i++){\n        if (primes.includes(sentence[i])){\n            continue\n  \
    \      }\n        let prime = true\n        for (let j = i; j < sentence.length;\
    \ j++){\n            if (sentence[j] % sentence[i] !== 0){\n                prime\
    \ = false\n                break\n            }\n        }\n        if (prime){\n\
    \            primes.push(sentence[i])\n        }\n    }\n    for (let i = 0; i\
    \ < primes.length; i++){\n        result += primes[i] + ' '\n    }\n    return\
    \ result\n}\n\nwords_in_sentence('abc def ghi jkl mno pqrs tuv')", "    let words\
    \ = [];\n    let primes = [];\n    let primesIndex = [];\n    let primesLength\
    \ = [];\n    let primesIndexLength = [];\n    let primesLengthLength = [];\n \
    \   let primesIndexLengthLength = [];\n    let primesIndexLengthLengthLength =\
    \ [];\n    let primesIndexLengthLengthLengthLength = [];\n    let primesIndexLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLength = [];\n    let\
    \ primesIndexLengthLengthLengthLengthLengthLengthLength = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLength =\
    \ [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLength = [];\n\
    \    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLength = [];\n\
    \    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLengthLength\
    \ = [];\n    let primesIndexLengthLengthLengthLengthLengthLengthLengthLengthLengthLength",
  "    let arr = sentence.split(\" \");\n    let newArr = [];\n    for(let i = 0;\
    \ i < arr.length; i++){\n        let count = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] === arr[i]){\n                count++;\n      \
    \      }\n        }\n        if(count === 1){\n            newArr.push(arr[i]);\n\
    \        }\n    }\n    return newArr.join(\" \");\n}\n", "    // Write your code\
    \ here\n    let result = '';\n    let primes = [];\n    for (let i = 0; i < sentence.length;\
    \ i++){\n        let word = sentence[i];\n        let prime = true;\n        for\
    \ (let j = 0; j < primes.length; j++){\n            if (primes[j] === word.length){\n\
    \                prime = false;\n                break;\n            }\n     \
    \   }\n        if (prime){\n            primes.push(word.length);\n          \
    \  result += word + ' ';\n        }\n    }\n    return result;\n}\n", "    let\
    \ result = '';\n    for(let i = 0; i < sentence.length; i++){\n        let char\
    \ = sentence[i];\n        if(char === ' ') continue;\n        let prime = true;\n\
    \        for(let j = i; j < sentence.length; j++){\n            if(sentence[j]\
    \ === ' ') continue;\n            if(sentence[j] !== 'a' && sentence[j] !== 'e'\
    \ && sentence[j] !== 'i' && sentence[j] !== 'o' && sentence[j] !== 'u' && sentence[j]\
    \ !== 'A' && sentence[j] !== 'E' && sentence[j] !== 'I' && sentence[j] !== 'O'\
    \ && sentence[j] !== 'U'){\n                prime = false;\n                break;\n\
    \            }\n        }\n        if(prime){\n            result += char;\n \
    \       }\n    }\n    return result;\n}\n", "    let words = [];\n    let primes\
    \ = [];\n    let primesCount = 0;\n    let primesIndex = 0;\n    for(let i = 0;\
    \ i < sentence.length; i++){\n        if(primesIndex < primes.length){\n     \
    \       if(primes[primesIndex] == 1){\n                primesCount++;\n      \
    \          primes[primesIndex] = 1;\n            }\n        }\n        if(primesCount\
    \ > 1){\n            primesIndex++;\n            primesCount = 0;\n        }\n\
    \        if(sentence[i] == \" \"){\n            words.push(sentence.substr(0,\
    \ i));\n            primesIndex = 0;\n        }\n    }\n    return words.join(\"\
    \ \");\n}\n", "    let result = '';\n    for(let i = 0; i < sentence.length; i++){\n\
    \        let char = sentence[i];\n        if(char === ' ') continue;\n       \
    \ let isPrime = true;\n        for(let j = 2; j < Math.sqrt(char); j++){\n   \
    \         if(char % j === 0){\n                isPrime = false;\n            \
    \    break;\n            }\n        }\n        if(isPrime){\n            result\
    \ += char;\n        }\n    }\n    return result;\n}\n", "    let result = '';\n\
    \    let primes = [];\n    let primesCount = 0;\n    let primesIndex = 0;\n  \
    \  for(let i = 0; i < sentence.length; i++){\n        if(primes[primesIndex] ==\
    \ true){\n            primesCount++;\n        }\n        primes[primesIndex] =\
    \ true;\n        primesIndex++;\n    }\n    for(let i = 0; i < primesCount; i++){\n\
    \        if(primes[i] == true){\n            result += sentence[i];\n        }\n\
    \    }\n    return result;\n}\n", "    // Write your code here\n    let result\
    \ = ''\n    let primes = []\n    let primesCount = 0\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(primesCount === primes.length){\n            primes.push(true)\n\
    \            primesCount++\n        }\n        if(primes[i] === true){\n     \
    \       primesCount++\n        }\n    }\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(primes[i] === true){\n            result += sentence[i]\n\
    \        }\n    }\n    return result\n}\n\nwords_in_sentence('The quick brown\
    \ fox jumps over the lazy dog')", "    let result = '';\n    let primes = [];\n\
    \    let primesSet = new Set(primes);\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        let word = sentence[i];\n        if(primesSet.has(word.length)){\n\
    \            primes.push(word.length);\n        }\n    }\n    primes.sort();\n\
    \    for(let i = 0; i < primes.length; i++){\n        let prime = primes[i];\n\
    \        for(let j = 0; j < sentence.length; j++){\n            let word = sentence[j];\n\
    \            if(word.length == prime){\n                result += word;\n    \
    \        }\n        }\n    }\n    return result;\n}\n", "    let words = [];\n\
    \    let primes = [];\n    for(let i = 0; i < sentence.length; i++){\n       \
    \ let word = sentence[i];\n        let prime = true;\n        for(let j = 0; j\
    \ < words.length; j++){\n            if(words[j] === word){\n                prime\
    \ = false;\n                break;\n            }\n        }\n        if(prime){\n\
    \            primes.push(word);\n        }\n    }\n    for(let i = 0; i < primes.length;\
    \ i++){\n        let prime = primes[i];\n        for(let j = 0; j < words.length;\
    \ j++){\n            if(words[j] === prime){\n                words.push(prime);\n\
    \                break;\n            }\n        }\n    }\n    return words.join(\"\
    \ \");\n}\n", "    // write your code here\n    let arr = sentence.split(\" \"\
    );\n    let newArr = [];\n    for(let i=0;i<arr.length;i++){\n        let count\
    \ = 0;\n        for(let j=0;j<arr.length;j++){\n            if(arr[j].length ==\
    \ arr[i].length){\n                count++;\n            }\n        }\n      \
    \  if(count == 1){\n            newArr.push(arr[i]);\n        }\n    }\n    return\
    \ newArr.join(\" \");\n}\n\nwords_in_sentence(\"The quick brown fox jumps over\
    \ the lazy dog\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy\
    \ dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox ", "    let arr = sentence.split(\"\
    \ \");\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let temp = [];\n        for(let j = 0; j < arr[i].length; j++){\n        \
    \    temp.push(arr[i].charAt(j));\n        }\n        result.push(temp);\n   \
    \ }\n    let primes = [];\n    for(let i = 0; i < result.length; i++){\n     \
    \   for(let j = 0; j < result[i].length; j++){\n            if(result[i][j] ===\
    \ \"a\"){\n                primes.push(j);\n            }\n        }\n    }\n\
    \    let primesString = \"\";\n    for(let i = 0; i < primes.length; i++){\n \
    \       primesString += primes[i];\n    }\n    primesString = primesString.split(\"\
    \").sort().join(\"\");\n    let newString = \"\";\n    for(let i = 0; i < arr.length;\
    \ i++){\n        let temp = [];\n        for(let j = 0; j < arr[i].length; j++){\n\
    \            if(arr[i].charAt(j) === primesString){\n                temp.push(arr[i].charAt(j));\n\
    \            }\n        }\n        newString += temp.join(\" \");\n    }\n   \
    \ return newString;\n}\n", "    let arr = sentence.split(\" \");\n    let res\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        let count = 0;\n  \
    \      for(let j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n\
    \                count++;\n            }\n        }\n        if(count === 1){\n\
    \            res.push(arr[i]);\n        }\n    }\n    return res.join(\" \");\n\
    }\n", "    // Write your code here\n    let result = '';\n    let primes = [];\n\
    \    let primesCount = 0;\n    for (let i = 0; i < sentence.length; i++){\n  \
    \      if (primes.includes(sentence[i])){\n            primesCount++;\n      \
    \  }\n        else{\n            primes.push(sentence[i]);\n        }\n    }\n\
    \    for (let i = 0; i < primes.length; i++){\n        if (primesCount % primes[i]\
    \ === 0){\n            result += sentence[i];\n        }\n    }\n    return result;\n\
    }\n", "    let words = [];\n    for(let i = 0; i < sentence.length; i++){\n  \
    \      let word = sentence[i];\n        if(word.length == 1){\n            words.push(word);\n\
    \        }\n        else{\n            let prime = true;\n            for(let\
    \ j = 0; j < words.length; j++){\n                if(words[j].length != word.length){\n\
    \                    prime = false;\n                    break;\n            \
    \    }\n            }\n            if(prime){\n                words.push(word);\n\
    \            }\n        }\n    }\n    return words.join(\" \");\n}\n", "    //\
    \ write your code here\n    let words = [];\n    let primes = [];\n    for(let\
    \ i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            words.push(sentence[i]);\n        }\n        else{\n            primes.push(sentence[i]);\n\
    \        }\n    }\n    return words.join(\" \");\n}\n\nwords_in_sentence(\"The\
    \ quick brown fox jumps over the lazy dog\");\n</cell>\n<text>\nGiven a string,\
    \ you need to find all its anagrams. A word is an anagram of another word if both\
    \ have the same length.\n\nExample 1:\nInput: \"abba\"\nOutput: [\"aba\", \"baa\"\
    ]\n\nExample 2:\nInput: \"abb\"\nOutput: []\n\nExample 3:\nInput: \"abca\"\nOutput:\
    \ [\"aba\", \"aca\", \"caa\"]\n\nExample 4:\nInput: \"abccba\"\nOutput: [\"aba\"\
    , \"bac\", \"cab\", \"cba\"]\n\nExample 5:\nInput: \"abcb\"\nOutput: [\"aba\"\
    , \"bcb\"]\n\nExample 6:\nInput: \"abbbbc\"\nOutput: [\"aba\", \"bbb\", \"bcb\"\
    , \"bbc\", \"bcc\"]\n\nExample 7:\nInput: \"abbcc\"\nOutput: [\"aba\", \"bcc\"\
    ]\n\nExample 8:\nInput: \"abbbc\"\nOutput: [\"aba\", \"bbc\", \"bcc\"]\n\nExample\
    \ 9:\nInput: \"abbb\"\nOutput: [\"aba\"]\n\nExample 10:\nInput: \"ab\"\nOutput:\
    \ [\"ab\"]\n\nExample 11:\nInput: \"a\"\nOutput: [\"a\"]\n\nExample 12:\nInput:\
    \ \"aa\"\nOutput: [\"aa\"]\n\nExample 13:\nInput: \"abba\"\nOutput: [\"aba\",\
    \ \"baa\"]\n\nExample 14:\nInput: \"abb\"\nOutput: []\n\n</text>\n<cell>", " \
    \   // Write your code here\n    let result = '';\n    let primes = [];\n    let\
    \ primesMap = {};\n    for(let i = 0; i < sentence.length; i++){\n        if(primesMap[sentence[i]]){\n\
    \            primesMap[sentence[i]]++;\n        }else{\n            primesMap[sentence[i]]\
    \ = 1;\n            primes.push(sentence[i]);\n        }\n    }\n    for(let i\
    \ = 0; i < primes.length; i++){\n        if(primesMap[primes[i]] === 1){\n   \
    \         result += primes[i];\n        }\n    }\n    return result;\n}\n", " \
    \   // Write your code here\n    let arr = [];\n    let str = \"\";\n    for(let\
    \ i = 0; i < sentence.length; i++){\n        if(isPrime(sentence.length)){\n \
    \           str += sentence[i]\n        }\n    }\n    return str;\n}\n", "   \
    \ let result = '';\n    let primes = [];\n    let primesLength = 0;\n    let primesIndex\
    \ = 0;\n    for(let i = 0; i < sentence.length; i++){\n        if(primesLength\
    \ == primesIndex){\n            primesLength++;\n            primesIndex++;\n\
    \            primes.push(0);\n        }\n        if(primes[primesLength] == 0){\n\
    \            primes[primesLength] = 1;\n            primesIndex++;\n        }\n\
    \        if(sentence[i] == ' '){\n            primes[primesLength]++;\n      \
    \      primesLength++;\n        }\n    }\n    for(let i = 0; i < primes.length;\
    \ i++){\n        if(primes[i] != 0){\n            result += sentence[i];\n   \
    \     }\n    }\n    return result;\n}\n", "    let result = '';\n    for(let i\
    \ = 0; i < sentence.length; i++){\n        let temp = sentence[i].split('');\n\
    \        let prime = true;\n        for(let j = 0; j < temp.length; j++){\n  \
    \          if(temp[j] !== ''){\n                prime = false;\n            }\n\
    \        }\n        if(prime){\n            result += temp.join('');\n       \
    \ }\n    }\n    return result;\n}\n", "    let result = '';\n    for(let i = 0;\
    \ i < sentence.length; i++){\n        let word = sentence[i];\n        let count\
    \ = 0;\n        for(let j = 0; j < word.length; j++){\n            if(word[j]\
    \ === 'a'){\n                count++;\n            }\n        }\n        if(count\
    \ > 1){\n            result += word;\n        }\n    }\n    return result;\n}\n",
  "    let result = '';\n    for(let i = 0; i < sentence.length; i++){\n        let\
    \ char = sentence[i];\n        if(char === ' ') continue;\n        let count =\
    \ 0;\n        for(let j = i; j < sentence.length; j++){\n            if(sentence[j]\
    \ === char) count++;\n        }\n        if(count === 2) result += char;\n   \
    \ }\n    return result;\n}\n", "    let words = sentence.split(\" \");\n    let\
    \ newWords = [];\n    let primes = [];\n    let primesLength = [];\n    for(let\
    \ i = 0; i < words.length; i++){\n        let word = words[i];\n        let prime\
    \ = true;\n        for(let j = 0; j < primes.length; j++){\n            if(primes[j]\
    \ == word.length){\n                prime = false;\n                break;\n \
    \           }\n        }\n        if(prime){\n            primes.push(word.length);\n\
    \            primesLength.push(word.length);\n        }\n    }\n    for(let i\
    \ = 0; i < primes.length; i++){\n        for(let j = 0; j < primesLength[i]; j++){\n\
    \            newWords.push(words[i]);\n        }\n    }\n    return newWords.join(\"\
    \ \");\n}\n", "    let words=sentence.split(\" \");\n    let result=\"\";\n  \
    \  for(let i=0;i<words.length;i++){\n        let len=words[i].length;\n      \
    \  if(!isPrime(len)){\n            result+=words[i]+\" \";\n        }\n    }\n\
    \    return result;\n}\n", "    let result = '';\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        let word = sentence[i];\n        let count = 0;\n        for(let\
    \ j = 0; j < word.length; j++){\n            if(word[j] === 'a' || word[j] ===\
    \ 'e' || word[j] === 'i' || word[j] === 'o' || word[j] === 'u'){\n           \
    \     count++;\n            }\n        }\n        if(count === 1){\n         \
    \   result += word;\n        }\n    }\n    return result;\n}\n", "    let words=sentence.split(\"\
    \ \");\n    let result=[];\n    for(let i=0;i<words.length;i++){\n        let\
    \ num=words[i].length;\n        for(let j=2;j<num;j++){\n            if(num%j==0){\n\
    \                result.push(words[i]);\n                break;\n            }\n\
    \        }\n    }\n    return result.join(\" \");\n}\n", "    let result = '';\n\
    \    let primes = [];\n    let primesCount = 0;\n    let primesLength = 0;\n \
    \   for(let i = 0; i < sentence.length; i++){\n        if(primesCount === primesLength){\n\
    \            primesLength++;\n            primesCount = 0;\n        }\n      \
    \  if(primes.includes(sentence[i])){\n            primesCount++;\n        }else{\n\
    \            primes.push(sentence[i]);\n            primesCount++;\n        }\n\
    \    }\n    for(let i = 0; i < primes.length; i++){\n        result += primes[i];\n\
    \    }\n    return result;\n}\n", "    // Write your code here\n    let result\
    \ = '';\n    let primes = [];\n    for(let i = 0; i < sentence.length; i++){\n\
    \        if(primes.includes(sentence[i])){\n            primes.push(sentence[i]);\n\
    \        }\n    }\n    for(let i = 0; i < primes.length; i++){\n        result\
    \ += primes[i];\n    }\n    return result;\n}\n", "    // write your code here\n\
    \    let words = [];\n    let word = \"\";\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        if(sentence[i] === \" \"){\n            words.push(word);\n \
    \           word = \"\";\n        }else{\n            word += sentence[i];\n \
    \       }\n    }\n    words.push(word);\n    let result = [];\n    for(let i =\
    \ 0; i < words.length; i++){\n        let count = 0;\n        for(let j = 0; j\
    \ < words.length; j++){\n            if(words[i].length == words[j].length){\n\
    \                count++;\n            }\n        }\n        if(count > 1){\n\
    \            result.push(words[i]);\n        }\n    }\n    return result.join(\"\
    \ \");\n}\n\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog\"\
    );", "    let result = '';\n    for(let i = 0; i < sentence.length; i++){\n  \
    \      let char = sentence[i];\n        if(char === ' ') continue;\n        let\
    \ count = 0;\n        for(let j = i; j < sentence.length; j++){\n            if(sentence[j]\
    \ === char) count++;\n        }\n        if(count === 2) result += char;\n   \
    \ }\n    return result;\n}\n", "    let words = [];\n    let primes = [];\n  \
    \  let primesString = \"\";\n    let primesStringArray = primesString.split(\"\
    \");\n    for(let i = 0; i < primesStringArray.length; i++){\n        primes.push(primesStringArray[i]);\n\
    \    }\n    for(let i = 0; i < sentence.length; i++){\n        words.push(sentence.charAt(i));\n\
    \    }\n    for(let i = 0; i < primes.length; i++){\n        for(let j = 0; j\
    \ < words.length; j++){\n            if(words[j] === primes[i]){\n           \
    \     words[j] = \"\";\n            }\n        }\n    }\n    for(let i = 0; i\
    \ < words.length; i++){\n        primesString += words[i];\n    }\n    return\
    \ primesString;\n}\nwords_in_sentence(\"The quick brown fox jumps over the lazy\
    \ dog\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_", "    // Write your code here\n    let words\
    \ = [];\n    let index = 0;\n    for(let i = 0; i < sentence.length; i++){\n \
    \       if(index == 0){\n            words.push(sentence[i]);\n        }\n   \
    \     if(index == sentence.length){\n            words.push(sentence[i]);\n  \
    \          index = 0;\n        }\n        if(index == 1){\n            if(sentence[i]\
    \ != \" \"){\n                words.push(sentence[i]);\n            }\n      \
    \  }\n        if(index == sentence.length + 1){\n            if(sentence[i] !=\
    \ \" \"){\n                words.push(sentence[i]);\n            }\n         \
    \   index = 0;\n        }\n        if(index == 2){\n            if(sentence[i]\
    \ != \" \"){\n                words.push(sentence[i]);\n            }\n      \
    \  }\n        if(index == sentence.length + 3){\n            if(sentence[i] !=\
    \ \" \"){\n                words.push(sentence[i]);\n            }\n         \
    \   index = 0;\n        }\n        if(index == sentence.length + 4){\n       \
    \     if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n  \
    \          }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 5){\n            if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n\
    \            }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 6){\n            if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n\
    \            }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 7){\n            if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n\
    \            }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 8){\n            if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n\
    \            }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 9){\n            if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n\
    \            }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 10){\n            if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n\
    \            }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 11){\n            if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n\
    \            }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 12){\n            if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n\
    \            }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 13){\n            if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n\
    \            }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 14){\n            if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n\
    \            }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 15){\n            if(sentence[i] != \" \"){\n                words.push(sentence[i]);\n\
    \            }\n            index = 0;\n        }\n        if(index == sentence.length\
    \ + 16", "    // Write your code here\n    let words = [];\n    let sentenceArray\
    \ = sentence.split(\" \");\n    for(let i = 0; i < sentenceArray.length; i++){\n\
    \        let currentWord = sentenceArray[i];\n        let currentWordLength =\
    \ currentWord.length;\n        for(let j = 0; j < currentWordLength; j++){\n \
    \           let currentChar = currentWord[j];\n            for(let k = 0; k <\
    \ words.length; k++){\n                if(words[k].indexOf(currentChar) == -1){\n\
    \                    words.push(currentChar);\n                }\n           \
    \ }\n        }\n    }\n    let primes = [];\n    for(let i = 0; i < words.length;\
    \ i++){\n        let currentWord = words[i];\n        let currentWordLength =\
    \ currentWord.length;\n        for(let j = 0; j < currentWordLength; j++){\n \
    \           let currentChar = currentWord[j];\n            for(let k = 0; k <\
    \ primes.length; k++){\n                if(primes[k] == currentChar){\n      \
    \              primes[k] = true;\n                }\n            }\n        }\n\
    \    }\n    let newSentence = \"\";\n    for(let i = 0; i < sentenceArray.length;\
    \ i++){\n        let currentWord = sentenceArray[i];\n        let currentWordLength\
    \ = currentWord.length;\n        for(let j = 0; j < currentWordLength; j++){\n\
    \            let currentChar = currentWord[j];\n            for(let k = 0; k <\
    \ primes.length; k++){\n                if(primes[k] == currentChar){\n      \
    \              newSentence += currentChar;\n                }\n            }\n\
    \        }\n    }\n    return newSentence;\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let tempArr = [];\n        for(let j = 0; j < arr[i].length; j++){\n     \
    \       if(arr[i].charAt(j) === \"a\"){\n                tempArr.push(\"a\");\n\
    \            }\n            else if(arr[i].charAt(j) === \"e\"){\n           \
    \     tempArr.push(\"e\");\n            }\n            else if(arr[i].charAt(j)\
    \ === \"i\"){\n                tempArr.push(\"i\");\n            }\n         \
    \   else if(arr[i].charAt(j) === \"o\"){\n                tempArr.push(\"o\");\n\
    \            }\n            else if(arr[i].charAt(j) === \"u\"){\n           \
    \     tempArr.push(\"u\");\n            }\n            else if(arr[i].charAt(j)\
    \ === \"y\"){\n                tempArr.push(\"y\");\n            }\n        }\n\
    \        if(tempArr.length === 1){\n            newArr.push(arr[i]);\n       \
    \ }\n    }\n    return newArr.join(\" \");\n}\n", "    let words = [];\n    for(let\
    \ i = 0; i < sentence.length; i++){\n        let word = sentence[i];\n       \
    \ if(word.length == 1){\n            words.push(word);\n        }\n        else{\n\
    \            let prime = true;\n            for(let j = 0; j < words.length; j++){\n\
    \                if(words[j].length != word.length){\n                    prime\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if(prime){\n                words.push(word);\n            }\n     \
    \   }\n    }\n    return words.join(\" \");\n}\n", "    let result = '';\n   \
    \ for(let i = 0; i < sentence.length; i++){\n        let letter = sentence[i];\n\
    \        let count = 0;\n        for(let j = i; j < sentence.length; j++){\n \
    \           if(sentence[j] === letter){\n                count++;\n          \
    \  }\n        }\n        if(count === 2){\n            result += letter;\n   \
    \     }\n    }\n    return result;\n}\n", "    let words=sentence.split(\" \"\
    );\n    let result=[];\n    for(let i=0;i<words.length;i++){\n        let len=words[i].length;\n\
    \        let prime=true;\n        for(let j=2;j<len;j++){\n            if(words[i].charAt(j)!=words[i].charAt(j-1)){\n\
    \                prime=false;\n                break;\n            }\n       \
    \ }\n        if(prime){\n            result.push(words[i]);\n        }\n    }\n\
    \    return result.join(\" \");\n}\n", "    let arr = sentence.split(\" \");\n\
    \    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n        let count\
    \ = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] ===\
    \ arr[i]){\n                count++;\n            }\n        }\n        if(count\
    \ === 1){\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    // Write your code here\n    let words = [];\n    let index\
    \ = 0;\n    for(let i = 0; i < sentence.length; i++){\n        if(isPrime(sentence[i])){\n\
    \            words.push(sentence[i]);\n        }\n    }\n    return words.join(\"\
    \ \");\n}\n", "    let arr = sentence.split(\" \");\n    let newArr = [];\n  \
    \  for(let i = 0; i < arr.length; i++){\n        let count = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n         \
    \       count++;\n            }\n        }\n        if(count === 1){\n       \
    \     newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\" \");\n\
    }\n", "    let words = [];\n    let primes = [];\n    let primesString = \"\"\
    ;\n    let primesStringArray = [];\n    let primesStringArray2 = [];\n    let\
    \ primesStringArray3 = [];\n    let primesStringArray4 = [];\n    let primesStringArray5\
    \ = [];\n    let primesStringArray6 = [];\n    let primesStringArray7 = [];\n\
    \    let primesStringArray8 = [];\n    let primesStringArray9 = [];\n    let primesStringArray10\
    \ = [];\n    let primesStringArray11 = [];\n    let primesStringArray12 = [];\n\
    \    let primesStringArray13 = [];\n    let primesStringArray14 = [];\n    let\
    \ primesStringArray15 = [];\n    let primesStringArray16 = [];\n    let primesStringArray17\
    \ = [];\n    let primesStringArray18 = [];\n    let primesStringArray19 = [];\n\
    \    let primesStringArray20 = [];\n    let primesStringArray21 = [];\n    let\
    \ primesStringArray22 = [];\n    let primesStringArray23 = [];\n    let primesStringArray24\
    \ = [];\n    let primesStringArray25 = [];\n    let primesStringArray26 = [];\n\
    \    let primesStringArray27 = [];\n    let primesStringArray28 = [];\n    let\
    \ primesStringArray29 = [];\n    let primesStringArray30 = [];\n    let primesStringArray31\
    \ = [];\n    let primesStringArray32 = [];\n    let primesStringArray33 = [];\n\
    \    let primesStringArray34 = [];\n    let primesStringArray35 = [];\n    let\
    \ primesStringArray36 = [];\n    let primesStringArray37 = [];\n    let primesStringArray38\
    \ = [];\n    let primesStringArray39 = [];\n    let primesStringArray40 = [];\n\
    \    let primesStringArray41 = [];\n    let primesStringArray42 = [];\n    let\
    \ primesStringArray43 = [];\n    let primesStringArray44 = [];\n    let primesStringArray45\
    \ = [];\n    let primesStringArray46 = [];\n    let primesStringArray47 = [];\n\
    \    let primesStringArray48 = [];\n    let primesStringArray49 = [];\n    let\
    \ primesStringArray50 = [];\n    let primesStringArray51 = [];\n    let primesStringArray52\
    \ = [];\n    let primesStringArray53 = [];\n    let primesStringArray54 = [];\n\
    \    let primesStringArray55 = [];\n    let primesStringArray56 = [];\n    let\
    \ primesStringArray57 = [];\n    let primesStringArray58 = [];\n    let primesStringArray59\
    \ = [];\n    let primesStringArray60 = [];\n    let primesStringArray61 = [];\n",
  "    let words = [];\n    let primes = [];\n    for(let i = 0; i < sentence.length;\
    \ i++){\n        let word = sentence[i];\n        let prime = prime_number(word);\n\
    \        primes.push(prime);\n        if(primes.indexOf(prime) == -1){\n     \
    \       words.push(word);\n        }\n    }\n    return words.join(\" \");\n}\n",
  "    let words = [];\n    for(let i = 0; i < sentence.length; i++){\n        let\
    \ word = sentence[i];\n        let isPrime = true;\n        for(let j = 2; j <\
    \ word.length; j++){\n            if(word.length % j === 0){\n               \
    \ isPrime = false;\n                break;\n            }\n        }\n       \
    \ if(isPrime){\n            words.push(word);\n        }\n    }\n    return words.join(\"\
    \ \");\n}\n", "    // Write your code here\n    let result = '';\n    let primes\
    \ = [];\n    let primesString = '';\n    for (let i = 0; i < sentence.length;\
    \ i++){\n        let letter = sentence[i];\n        let prime = true;\n      \
    \  for (let j = 0; j < primes.length; j++){\n            if (primes[j] === letter){\n\
    \                prime = false;\n                break;\n            }\n     \
    \   }\n        if (prime){\n            primes.push(letter);\n        }\n    }\n\
    \    for (let i = 0; i < primes.length; i++){\n        primesString += primes[i];\n\
    \    }\n    for (let i = 0; i < sentence.length; i++){\n        let letter = sentence[i];\n\
    \        let prime = true;\n        for (let j = 0; j < primes.length; j++){\n\
    \            if (primes[j] === letter){\n                prime = false;\n    \
    \            break;\n            }\n        }\n        if (prime){\n         \
    \   result += letter;\n        }\n    }\n    return result + primesString;\n}\n\
    words_in_sentence('a man a plan a canal panama');\nwords_in_sentence('the quick\
    \ brown fox jumps over the lazy dog');\nwords_in_sentence('a man a plan a canal\
    \ panama');\nwords_in_sentence('the quick brown fox jumps over the lazy dog');\n\
    words_in_sentence('the quick brown fox jumps over the lazy dog');\nwords_in_sentence('the\
    \ quick brown fox jumps over the lazy dog');\nwords_in_sentence('the quick brown\
    \ fox jumps over the lazy dog');\nwords_in_sentence('the quick brown fox jumps\
    \ over the lazy dog');\nwords_in_sentence('the quick brown fox jumps over the\
    \ lazy dog');\nwords_in_sentence('the quick brown fox jumps over the lazy dog');\n\
    words_in_sentence('the quick brown fox jumps over the lazy dog');\nwords_in_sentence('the\
    \ quick brown fox jumps over the lazy dog');\nwords_in_sentence('the quick brown\
    \ fox jumps over the lazy dog');\nwords_in_sentence('the quick brown fox jumps\
    \ over the lazy dog');\nwords_in_sentence('the quick brown fox jumps over the\
    \ lazy dog');\nwords_in_sentence('the quick brown fox jumps over the lazy dog');\n\
    words_in_sentence('the quick brown fox jumps over the lazy dog');\nwords_in_sentence('the\
    \ quick brown fox jumps over the lazy dog');\nwords_in_sentence('the quick brown\
    \ fox jumps over the lazy dog');\nwords_in_sentence('the quick brown fox jumps\
    \ over the lazy dog');\nwords_in_sentence('the quick brown fox jumps over the ",
  "    // Write your code here\n    let arr = sentence.split(\" \");\n    let newArr\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        let count = 0;\n  \
    \      for(let j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n\
    \                count++;\n            }\n        }\n        if(count === 2){\n\
    \            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    // write your code here\n    let arr = sentence.split(\" \"\
    );\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n        let\
    \ count = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ === arr[i]){\n                count++;\n            }\n        }\n        if(count\
    \ === 1){\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick\
    \ brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown\
    \ fox jumps over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps\
    \ over the lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the\
    \ lazy dog.\");\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\"\
    );\nwords_in_sentence(\"The quick brown fox jumps over the lazy dog.\");\nwords_in_sentence(\"\
    The quick brown fox jumps over the lazy dog.\");", "    let words = [];\n    let\
    \ primes = [];\n    let primesString = \"\";\n    let primesStringString = \"\"\
    ;\n    let primesStringStringString = \"\";\n    let primesStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringString = \"\";\n    let primesStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringString = \"\";\n\
    \    let primesStringStringStringStringStringStringStringString = \"\";\n    let\
    \ primesStringStringStringStringStringStringStringString = \"\";\n    let primesStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\";\n    let primesStringStringStringStringStringStringStringStringStringString",
  "    let words = sentence.split(\" \");\n    let result = [];\n    for(let i = 0;\
    \ i < words.length; i++){\n        let count = 0;\n        for(let j = 0; j <\
    \ words.length; j++){\n            if(words[j] === words[i]){\n              \
    \  count++;\n            }\n        }\n        if(count === 1){\n            result.push(words[i]);\n\
    \        }\n    }\n    return result.join(\" \");\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_68_pluck
language: js
prompt: "//\"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n// your task is to pluck one of the nodes and return it.\n// The\
  \ plucked node should be the node with the smallest even value.\n// If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n// The plucked node should be returned in a list, [ smalest_value, its\
  \ index ],\n// If there are no even values or the given array is empty, return [].\n\
  // Example 1:\n// Explanation: 2 has the smallest even value, and 2 has the smallest\
  \ index.\n// Example 2:\n// Explanation: 2 has the smallest even value, and 2 has\
  \ the smallest index.\n// Example 3:\n// Example 4:\n// Explanation: 0 is the smallest\
  \ value, but  there are two zeros,\n// so we will choose the first zero, which has\
  \ the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0\
  \ <= node.value\nfunction pluck(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = pluck;\n  assert.deepEqual(candidate([4, 2, 3]),[2, 1]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3]),[2, 1]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5,\
  \ 0, 3, 0, 4, 2]),[0, 1]);\n  assert.deepEqual(candidate([1, 2, 3, 0, 5, 3]),[0,\
  \ 3]);\n  assert.deepEqual(candidate([5, 4, 8, 4, 8]),[4, 1]);\n  assert.deepEqual(candidate([7,\
  \ 6, 7, 1]),[6, 1]);\n  assert.deepEqual(candidate([7, 9, 7, 1]),[]);\n}\n\ntest();"
completions: ["    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i =\
    \ 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            if(arr[i] < min){\n                min = arr[i];\n              \
    \  minIndex = i;\n            }\n        }\n    }\n    return [min, minIndex];\n\
    }\n", "    let evenNodes = [];\n    let smallestValue = 0;\n    let smallestIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evenNodes.push(arr[i]);\n            if(arr[i] < smallestValue){\n\
    \                smallestValue = arr[i];\n                smallestIndex = i;\n\
    \            }\n        }\n    }\n    if(evenNodes.length === 0){\n        return\
    \ [];\n    }\n    if(evenNodes.length === 1){\n        return [smallestValue,\
    \ smallestIndex];\n    }\n    let smallestEvenValue = evenNodes[0];\n    let smallestEvenIndex\
    \ = 0;\n    for(let i = 1; i < evenNodes.length; i++){\n        if(evenNodes[i]\
    \ < smallestEvenValue){\n            smallestEvenValue = evenNodes[i];\n     \
    \       smallestEvenIndex = i;\n        }\n    }\n    return [smallestEvenValue,\
    \ smallestEvenIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n  \
    \          minValue = arr[i];\n            minIndex = i;\n        }\n    }\n \
    \   return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let even = arr.filter(function(val){\n\
    \        return val%2 === 0;\n    });\n    if(even.length === 0){\n        return\
    \ [];\n    }\n    let min = even[0];\n    let minIndex = 0;\n    for(let i = 1;\
    \ i < even.length; i++){\n        if(even[i] < min){\n            min = even[i];\n\
    \            minIndex = i;\n        }\n    }\n    return [min, minIndex];\n}\n",
  "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let evens = arr.filter(node => node.value % 2 === 0);\n    let smallest = evens.reduce((prev,\
    \ curr, index) => {\n        if (curr.value < prev.value) {\n            return\
    \ [curr, index];\n        }\n        return prev;\n    });\n    return smallest;\n\
    }\n", "    let minValue = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n  \
    \  for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n     \
    \       if(arr[i] < minValue){\n                minValue = arr[i];\n         \
    \       minIndex = i;\n            }\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let even = arr.filter(x => x % 2 === 0);\n    let smallest\
    \ = even.sort((a,b) => a - b)[0];\n    let index = even.indexOf(smallest);\n \
    \   return [smallest, index];\n}\n", "    let minValue = arr[0];\n    let minIndex\
    \ = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minValue = arr[0];\n    let\
    \ minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] <\
    \ minValue){\n            minValue = arr[i];\n            minIndex = i;\n    \
    \    }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex = arr.findIndex(node\
    \ => node.value % 2 === 0);\n    let minValue = arr[minIndex];\n    let result\
    \ = [];\n    arr.forEach((node, index) => {\n        if(node.value % 2 === 0 &&\
    \ node.value < minValue){\n            minValue = node.value;\n            minIndex\
    \ = index;\n        }\n    });\n    return [minValue, minIndex];\n}\n", "    let\
    \ minIndex = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let evens = arr.filter(n => n % 2 === 0);\n    let smallestEven = evens.reduce((a,\
    \ b) => a < b ? a : b);\n    let index = arr.indexOf(smallestEven);\n    return\
    \ [smallestEven, index];\n}\n", "    let minIndex = -1;\n    let minValue = arr[0];\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n  \
    \          minValue = arr[i];\n            minIndex = i;\n        }\n    }\n \
    \   return [minValue, minIndex];\n}\n", "    let minIndex = arr.findIndex(node\
    \ => node.value % 2 === 0);\n    let minValue = arr[minIndex].value;\n    let\
    \ result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i].value\
    \ % 2 === 0){\n            if(arr[i].value < minValue){\n                minValue\
    \ = arr[i].value;\n                minIndex = i;\n            }\n        }\n \
    \   }\n    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n    let\
    \ minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n\
    \    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n      \
    \  if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 === 0);\n    let minValue = arr[minIndex];\n\
    \    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i].value\
    \ % 2 === 0){\n            if(arr[i].value < minValue){\n                minValue\
    \ = arr[i].value;\n                minIndex = i;\n            }\n        }\n \
    \   }\n    result.push([minValue, minIndex]);\n    return result;\n}\n", "   \
    \ let even = [];\n    let small = [];\n    for(let i = 0; i < arr.length; i++){\n\
    \        if(arr[i].value % 2 == 0){\n            even.push(arr[i]);\n        }\n\
    \        else{\n            small.push(arr[i]);\n        }\n    }\n    if(even.length\
    \ == 0){\n        return [];\n    }\n    else if(small.length == 0){\n       \
    \ return even;\n    }\n    else{\n        let minIndex = 0;\n        let minValue\
    \ = even[0].value;\n        for(let i = 0; i < even.length; i++){\n          \
    \  if(minValue > even[i].value){\n                minValue = even[i].value;\n\
    \                minIndex = i;\n            }\n        }\n        return [minValue,\
    \ minIndex];\n    }\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n\
    \    for (let i = 1; i < arr.length; i++){\n        if (arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minValue = arr[0];\n    let\
    \ minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] <\
    \ minValue){\n            minValue = arr[i];\n            minIndex = i;\n    \
    \    }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n\
    \    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n      \
    \  if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let even\
    \ = arr.filter(function(e){\n        return e%2 === 0;\n    });\n    if(even.length\
    \ === 0){\n        return [];\n    }\n    let smallest = Math.min.apply(null,\
    \ even);\n    let index = even.indexOf(smallest);\n    return [smallest, index];\n\
    }\n", "    let minValue = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n  \
    \  let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 === 0){\n            if(arr[i] < minValue){\n                minValue =\
    \ arr[i];\n                minIndex = i;\n            }\n        }\n    }\n  \
    \  if(minValue !== Number.MAX_SAFE_INTEGER){\n        result.push(minValue, minIndex);\n\
    \    }\n    return result;\n}\n", "    let minIndex = -1;\n    let minValue =\
    \ arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for (let i = 1; i < arr.length; i++){\n        if (arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minValue = arr[0];\n    let\
    \ minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] <\
    \ minValue){\n            minValue = arr[i];\n            minIndex = i;\n    \
    \    }\n    }\n    return [minValue, minIndex];\n}\n", "    let minValue = arr[0];\n\
    \    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let even = arr.filter(node\
    \ => node.value % 2 === 0);\n    let smalest_value = even.sort((a,b) => a.value\
    \ - b.value).shift().value;\n    let index = even.findIndex(node => node.value\
    \ === smalest_value);\n    return [smalest_value, index];\n}\n", "    let minValue\
    \ = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < minValue){\n \
    \               minValue = arr[i];\n                minIndex = i;\n          \
    \  }\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 === 0);\n    let minValue = arr[minIndex];\n\
    \    let evenNodes = arr.filter(node => node.value % 2 === 0);\n    if(evenNodes.length\
    \ === 0){\n        return [];\n    }\n    if(evenNodes.length === 1){\n      \
    \  return [minValue, minIndex];\n    }\n    let minEvenValue = evenNodes.reduce((a,\
    \ b) => a.value < b.value ? a : b);\n    return [minEvenValue, minIndex];\n}\n",
  "    let min = Infinity;\n    let minIndex = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n            min = arr[i];\n\
    \            minIndex = i;\n        }\n    }\n    return [min, minIndex];\n}\n",
  "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i =\
    \ 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i]\
    \ < min){\n                min = arr[i];\n                minIndex = i;\n    \
    \        }\n        }\n    }\n    return [min, minIndex];\n}\n", "    let minValue\
    \ = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let min\
    \ = Infinity;\n    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n\
    \        if(arr[i] % 2 === 0 && arr[i] < min){\n            min = arr[i];\n  \
    \          minIndex = i;\n        }\n    }\n    return [min, minIndex];\n}\n",
  "    let even = arr.filter(function(item){\n        return item % 2 === 0;\n   \
    \ });\n    let smallest = even.sort(function(a, b){\n        return a - b;\n \
    \   })[0];\n    let index = even.indexOf(smallest);\n    return [smallest, index];\n\
    }\n", "    let minIndex = -1;\n    let minValue = arr[0];\n    for(let i = 1;\
    \ i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let evenArr = [];\n    let minIndex = 0;\n    let minVal\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] % 2 ===\
    \ 0){\n            evenArr.push(arr[i]);\n            if(arr[i] < minVal){\n \
    \               minVal = arr[i];\n                minIndex = i;\n            }\n\
    \        }\n    }\n    if(evenArr.length === 0){\n        return [];\n    }\n\
    \    for(let i = 0; i < evenArr.length; i++){\n        if(evenArr[i] === minVal){\n\
    \            minIndex = i;\n        }\n    }\n    return [minVal, minIndex];\n\
    }\n", "    let minIndex = arr.findIndex(node => node.value % 2 === 0);\n    let\
    \ minValue = arr[minIndex].value;\n    let result = [];\n    for(let i = 0; i\
    \ < arr.length; i++){\n        if(arr[i].value % 2 === 0){\n            if(arr[i].value\
    \ < minValue){\n                minValue = arr[i].value;\n                minIndex\
    \ = i;\n            }\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let even = arr.filter(x => x % 2 === 0);\n    let smallest = Math.min(...even);\n\
    \    let index = even.indexOf(smallest);\n    return [smallest, index];\n}\n",
  "    let minIndex = arr.findIndex((el,i)=>{\n        return el%2==0;\n    });\n\
    \    if(minIndex===-1){\n        return [];\n    }\n    let minValue = arr[minIndex];\n\
    \    let result = [minValue,minIndex];\n    arr.splice(minIndex,1);\n    return\
    \ result;\n}", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            if(min > arr[i]){\n                min = arr[i];\n              \
    \  minIndex = i;\n            }\n        }\n    }\n    return [min, minIndex];\n\
    }\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i\
    \ < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue =\
    \ arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let even = arr.filter(function(item){\n        return\
    \ item.value % 2 === 0;\n    });\n    if(even.length === 0){\n        return [];\n\
    \    }\n    let smallest = even.sort((a,b) => a.value - b.value)[0];\n    let\
    \ index = even.indexOf(smallest);\n    return [smallest.value, index];\n}\n",
  "    let minIndex = arr.findIndex((el,i)=>{\n        return el%2===0;\n    });\n\
    \    if(minIndex===-1){\n        return [];\n    }\n    let minValue = arr[minIndex];\n\
    \    let minIndexes = [];\n    for(let i=0;i<arr.length;i++){\n        if(arr[i]===minValue){\n\
    \            minIndexes.push(i);\n        }\n    }\n    if(minIndexes.length===0){\n\
    \        return [];\n    }\n    let minIndexesSorted = minIndexes.sort((a,b)=>{\n\
    \        return a-b;\n    });\n    let minIndexesSorted = minIndexesSorted.reverse();\n\
    \    let minIndexesSorted = minIndexesSorted.findIndex((el,i)=>{\n        return\
    \ el%2===0;\n    });\n    let minIndexesSorted = minIndexesSorted.toString();\n\
    \    let minIndexesSorted = minIndexesSorted.split('');\n    let minIndexesSorted\
    \ = minIndexesSorted[0];\n    let minIndexesSorted = parseInt(minIndexesSorted);\n\
    \    let minIndexesSorted = minIndexesSorted + 1;\n    let minIndexesSorted =\
    \ minIndexesSorted.toString();\n    let minIndexesSorted = minIndexesSorted.split('');\n\
    \    let minIndexesSorted = minIndexesSorted[0];\n    let minIndexesSorted = parseInt(minIndexesSorted);\n\
    \    let minIndexesSorted = minIndexesSorted + 1;\n    let minIndexesSorted =\
    \ minIndexesSorted.toString();\n    let minIndexesSorted = minIndexesSorted.split('');\n\
    \    let minIndexesSorted = minIndexesSorted[0];\n    let minIndexesSorted = parseInt(minIndexesSorted);\n\
    \    let minIndexesSorted = minIndexesSorted + 1;\n    let minIndexesSorted =\
    \ minIndexesSorted.toString();\n    let minIndexesSorted = minIndexesSorted.split('');\n\
    \    let minIndexesSorted = minIndexesSorted[0];\n    let minIndexesSorted = parseInt(minIndexesSorted);\n\
    \    let minIndexesSorted = minIndexesSorted + 1;\n    let minIndexesSorted =\
    \ minIndexesSorted.toString();\n    let minIndexesSorted = minIndexesSorted.split('');\n\
    \    let minIndexesSorted = minIndexesSorted[0];\n    let minIndexesSorted = parseInt(minIndexesSorted);\n\
    \    let minIndexesSorted = minIndexesSorted + 1;\n    let minIndexesSorted =\
    \ minIndexesSorted.toString();\n    let minIndexesSorted = minIndexesSorted.split('",
  "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i =\
    \ 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n  \
    \          min = arr[i];\n            minIndex = i;\n        }\n    }\n    return\
    \ [min, minIndex];\n}\n", "    let min = Infinity;\n    let minIndex = 0;\n  \
    \  for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 == 0 && arr[i]\
    \ < min){\n            min = arr[i];\n            minIndex = i;\n        }\n \
    \   }\n    return [min, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = arr.findIndex(node\
    \ => node.value % 2 === 0);\n    if (minIndex === -1) return [];\n    let minValue\
    \ = arr[minIndex];\n    let minEvenValue = minValue % 2 === 0;\n    let minEvenIndex\
    \ = minIndex % 2 === 0;\n    if (minEvenValue && minEvenIndex) return [minValue,\
    \ minIndex];\n    if (minEvenIndex) return [minValue, minIndex];\n    if (minIndex\
    \ === arr.length - 1) return [minValue, minIndex];\n    return [minValue, minIndex];\n\
    }\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i\
    \ < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue =\
    \ arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            min = Math.min(min, arr[i]);\n            minIndex = i;\n       \
    \ }\n    }\n    return [min, minIndex];\n}\n", "    let minIndex = -1;\n    let\
    \ minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let even = arr.filter(x\
    \ => x % 2 === 0);\n    let smallest = even.sort((a, b) => a - b)[0];\n    let\
    \ index = even.indexOf(smallest);\n    return [smallest, index];\n}\n", "    let\
    \ minIndex = 0;\n    let minValue = arr[0];\n    for (let i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] < minValue) {\n            minValue = arr[i];\n \
    \           minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n\
    }\n", "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i\
    \ < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue =\
    \ arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0\
    \ && arr[i] < min){\n            min = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [min, minIndex];\n}\n", "    let minIndex = 0;\n \
    \   let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n       \
    \ if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let min\
    \ = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < min){\n            min = arr[i];\n            minIndex =\
    \ i;\n        }\n    }\n    return [min, minIndex];\n}\n", "    let minValue =\
    \ arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n \
    \       if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minValue\
    \ = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            if(minValue > arr[i]){\n \
    \               minValue = arr[i];\n                minIndex = i;\n          \
    \  }\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 === 0);\n    let minValue = arr[minIndex].value;\n\
    \    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i].value\
    \ % 2 === 0 && arr[i].value < minValue){\n            minValue = arr[i].value;\n\
    \            minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n\
    }\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i\
    \ < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue =\
    \ arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            min = Math.min(min, arr[i]);\n            minIndex = i;\n       \
    \ }\n    }\n    return [min, minIndex];\n}\n", "    let minIndex = 0;\n    let\
    \ minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex = arr.findIndex(node\
    \ => node.value % 2 === 0);\n    let minValue = arr[minIndex].value;\n    let\
    \ result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i].value\
    \ % 2 === 0){\n            if(arr[i].value < minValue){\n                minValue\
    \ = arr[i].value;\n                minIndex = i;\n            }\n        }\n \
    \   }\n    result.push(minValue, minIndex);\n    return result;\n}\n", "    let\
    \ minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minValue = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] % 2 == 0 && arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = arr.findIndex(node\
    \ => node.value % 2 === 0);\n    let minValue = arr[minIndex];\n    let minIndexes\
    \ = [];\n    arr.forEach((node, index) => {\n        if (node.value % 2 === 0)\
    \ {\n            if (minIndexes.length === 0) {\n                minIndexes.push(index);\n\
    \            } else if (minIndexes[index] < index) {\n                minIndexes.push(index);\n\
    \            }\n        }\n    });\n    return minIndexes;\n}\n", "    let minIndex\
    \ = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minValue\
    \ = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 === 0);\n    let minValue = arr[minIndex];\n\
    \    let minValueIndex = arr.findIndex(node => node.value === minValue);\n   \
    \ return [minValue, minValueIndex];\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minValue = arr[0];\n    let\
    \ minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] <\
    \ minValue){\n            minValue = arr[i];\n            minIndex = i;\n    \
    \    }\n    }\n    return [minValue, minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let minIndex = 0;\n    let result = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            if(min > arr[i]){\n      \
    \          min = arr[i];\n                minIndex = i;\n            }\n     \
    \   }\n    }\n    if(min === Number.MAX_SAFE_INTEGER){\n        return [];\n \
    \   }\n    return [min, minIndex];\n}\n", "    let evens = arr.filter(n => n %\
    \ 2 === 0);\n    let smallest = evens.reduce((a, b) => a < b ? a : b);\n    let\
    \ index = evens.indexOf(smallest);\n    return [smallest, index];\n}\n", "   \
    \ let min = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i = 0;\
    \ i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n     \
    \       min = arr[i];\n            minIndex = i;\n        }\n    }\n    return\
    \ [min, minIndex];\n}\n", "    let minIndex = arr.findIndex(node => node.value\
    \ % 2 === 0);\n    let minValue = arr[minIndex];\n    let result = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(arr[i].value % 2 === 0){\n        \
    \    if(arr[i].value < minValue){\n                minValue = arr[i].value;\n\
    \                minIndex = i;\n            }\n        }\n    }\n    result.push(minValue,\
    \ minIndex);\n    return result;\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let even = arr.filter(function(n){\n\
    \        return n % 2 === 0;\n    });\n    if(even.length){\n        let smallest\
    \ = even.sort((a,b) => a - b)[0];\n        let index = even.indexOf(smallest);\n\
    \        return [smallest, index];\n    }\n    return [];\n}\n", "    let min\
    \ = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min){\n      \
    \          min = arr[i];\n                minIndex = i;\n            }\n     \
    \   }\n    }\n    return [min, minIndex];\n}\n", "    let even = arr.filter(function(x){return\
    \ x%2===0});\n    if(even.length===0){return [];}\n    let min = even[0];\n  \
    \  let minIndex = 0;\n    for(let i=0;i<even.length;i++){\n        if(even[i]<min){\n\
    \            min = even[i];\n            minIndex = i;\n        }\n    }\n   \
    \ return [min,minIndex];\n}\n", "    let evens = arr.filter(n => n % 2 === 0);\n\
    \    let smallest = Math.min(...evens);\n    let index = evens.indexOf(smallest);\n\
    \    return [smallest, index];\n}\n", "    let minValue = arr[0];\n    let minIndex\
    \ = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for (let i = 1; i < arr.length; i++){\n        if (arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = arr.findIndex((el)=>{\n\
    \        return el%2===0;\n    });\n    if(minIndex===-1){\n        return [];\n\
    \    }\n    let minValue = arr[minIndex];\n    let result = [];\n    for(let i=0;i<arr.length;i++){\n\
    \        if(arr[i]===minValue){\n            result.push([minValue,i]);\n    \
    \    }\n    }\n    if(result.length===0){\n        return [];\n    }\n    let\
    \ minIndex = result[0][1];\n    result.shift();\n    return result;\n}\n", " \
    \   let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let evenNodes = [];\n    let smallestEvenValue = arr[0];\n    let smallestIndex\
    \ = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evenNodes.push(arr[i]);\n            if(arr[i] < smallestEvenValue){\n\
    \                smallestEvenValue = arr[i];\n                smallestIndex =\
    \ i;\n            }\n        }\n    }\n    if(evenNodes.length === 0){\n     \
    \   return [];\n    }\n    if(evenNodes.length === 1){\n        return [smallestEvenValue,\
    \ smallestIndex];\n    }\n    let smallestIndexWithSmallestEvenValue = evenNodes.indexOf(smallestEvenValue);\n\
    \    return [smallestEvenValue, smallestIndexWithSmallestEvenValue];\n}\n", " \
    \   let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let even = arr.filter(function(n){return n%2===0});\n    if(even.length===0){\n\
    \        return [];\n    }\n    let min = even[0];\n    let minIndex = 0;\n  \
    \  for(let i=0;i<even.length;i++){\n        if(even[i]<min){\n            min\
    \ = even[i];\n            minIndex = i;\n        }\n    }\n    return [min, minIndex];\n\
    }\n", "    let even = arr.filter(function(val){\n        return val%2 === 0;\n\
    \    });\n    if(even.length === 0){\n        return [];\n    }\n    let smallest\
    \ = even[0];\n    let index = even.indexOf(smallest);\n    return [smallest, index];\n\
    }\n", "    let evens = arr.filter(function(el){\n        return el % 2 === 0;\n\
    \    });\n    let smallest = Math.min.apply(null, evens);\n    let index = evens.indexOf(smallest);\n\
    \    return [smallest, index];\n}\n", "    let minIndex = arr.findIndex(node =>\
    \ node.value % 2 === 0);\n    if (minIndex === -1) {\n        return [];\n   \
    \ }\n    let minValue = arr[minIndex].value;\n    let result = [minValue, minIndex];\n\
    \    arr.splice(minIndex, 1);\n    return result.concat(pluck(arr));\n}\n", " \
    \   let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minValue = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(minValue\
    \ > arr[i]){\n                minValue = arr[i];\n                minIndex = i;\n\
    \            }\n        }\n    }\n    return [minValue, minIndex];\n}\n", "  \
    \  let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let evenNodes = arr.filter(node => node.value % 2 === 0);\n    let smallestEven\
    \ = evenNodes.reduce((a, b) => a.value < b.value ? a : b);\n    let smallestIndex\
    \ = evenNodes.reduce((a, b) => a.value < b.value ? a.index : b.index);\n    return\
    \ [smallestEven.value, smallestIndex];\n}\n", "    let minIndex = 0;\n    let\
    \ minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let minValue = arr[0];\n\
    \    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let minValue = arr[0];\n\
    \    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n\
    \    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n      \
    \  if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let min\
    \ = Infinity;\n    let minIndex = 0;\n    let result = [];\n    for(let i = 0;\
    \ i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i]\
    \ < min){\n                min = arr[i];\n                minIndex = i;\n    \
    \        }\n        }\n    }\n    if(min === Infinity){\n        return [];\n\
    \    }\n    return [min, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minValue = arr[0];\n    let\
    \ minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] <\
    \ minValue){\n            minValue = arr[i];\n            minIndex = i;\n    \
    \    }\n    }\n    return [minValue, minIndex];\n}\n", "    let minValue = arr[0];\n\
    \    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let minValue = arr[0];\n\
    \    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let even = arr.filter(function(item){\n\
    \        return item % 2 === 0;\n    });\n    let smallest = even.sort((a,b)=>a-b).pop();\n\
    \    let index = even.indexOf(smallest);\n    return [smallest, index];\n}\n",
  "    let minIndex = arr.findIndex((node) => node.value % 2 === 0);\n    let minValue\
    \ = arr[minIndex];\n    let minValueIndex = arr.findIndex((node) => node.value\
    \ === minValue);\n    return [minValue, minValueIndex];\n}\n", "    let minValue\
    \ = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let min\
    \ = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min){\n      \
    \          min = arr[i];\n                minIndex = i;\n            }\n     \
    \   }\n    }\n    return [min, minIndex];\n}\n", "    let minIndex = 0;\n    let\
    \ minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n\
    \    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n      \
    \  if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 == 0);\n    if(minIndex === -1){\n  \
    \      return [];\n    }\n    let minValue = arr[minIndex].value;\n    let minIndexes\
    \ = [minIndex];\n    for(let i = minIndex + 1; i < arr.length; i++){\n       \
    \ if(arr[i].value % 2 === 0){\n            minIndexes.push(i);\n        }\n  \
    \  }\n    return [minValue, minIndexes];\n}\n", "    let minIndex = 0;\n    let\
    \ minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n\
    \    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n      \
    \  if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minValue\
    \ = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < minValue){\n \
    \               minValue = arr[i];\n                minIndex = i;\n          \
    \  }\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 === 0);\n    let minValue = arr[minIndex].value;\n\
    \    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i].value\
    \ % 2 === 0 && arr[i].value < minValue){\n            minValue = arr[i].value;\n\
    \            minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n\
    }\n", "    let minIndex = arr.findIndex(node => node.value % 2 === 0);\n    let\
    \ minValue = arr[minIndex];\n    let result = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i].value % 2 === 0){\n            if(arr[i].value < minValue){\n\
    \                minValue = arr[i].value;\n                minIndex = i;\n   \
    \         }\n        }\n    }\n    result.push(minValue, minIndex);\n    return\
    \ result;\n}", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = arr.findIndex((item, index) => item %\
    \ 2 === 0);\n    let minValue = arr[minIndex];\n    let result = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = arr.findIndex(node\
    \ => node.value % 2 === 0);\n    let minValue = arr[minIndex];\n    let result\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i].value % 2\
    \ === 0 && arr[i].value < minValue.value){\n            result.push([arr[i], minIndex]);\n\
    \        }\n    }\n    return result.length ? result : [];\n}\n", "    let minIndex\
    \ = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 === 0);\n    let minValue = arr[minIndex].value;\n\
    \    let result = [];\n    arr.forEach((node, index) => {\n        if(node.value\
    \ % 2 === 0 && node.value < minValue){\n            minValue = node.value;\n \
    \           minIndex = index;\n        }\n    });\n    return [minValue, minIndex];\n\
    }\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i\
    \ < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue =\
    \ arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            if(arr[i] < min){\n                min = arr[i];\n              \
    \  minIndex = i;\n            }\n        }\n    }\n    return [min, minIndex];\n\
    }\n", "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i\
    \ < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue =\
    \ arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let evenNodes = [];\n    let smallestIndex = 0;\n   \
    \ for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n      \
    \      evenNodes.push(arr[i]);\n            if(evenNodes.length === 1){\n    \
    \            smallestIndex = i;\n            }\n        }\n    }\n    if(evenNodes.length\
    \ === 0){\n        return [];\n    }\n    if(evenNodes.length === 1){\n      \
    \  return [evenNodes[0], smallestIndex];\n    }\n    let smallestValue = evenNodes[0];\n\
    \    let smallestIndexOfSmallestValue = smallestIndex;\n    for(let i = 1; i <\
    \ evenNodes.length; i++){\n        if(evenNodes[i] < smallestValue){\n       \
    \     smallestValue = evenNodes[i];\n            smallestIndexOfSmallestValue\
    \ = i;\n        }\n    }\n    return [smallestValue, smallestIndexOfSmallestValue];\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    let\
    \ result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] %\
    \ 2 == 0){\n            min = Math.min(min, arr[i]);\n            minIndex = i;\n\
    \        }\n    }\n    if(min == Number.MAX_SAFE_INTEGER){\n        return [];\n\
    \    }\n    result.push(min, minIndex);\n    return result;\n}\n", "    let even\
    \ = arr.filter(node => node.value % 2 === 0);\n    let smallestEven = even.sort((a,b)\
    \ => a.value - b.value);\n    let smallestIndex = even.findIndex(node => node.value\
    \ === smallestEven[0].value);\n    return smallestEven[smallestIndex];\n}\n",
  "    let minIndex = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minIndex = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let even = arr.filter(function(x){\n        return x % 2 === 0;\n    });\n\
    \    let smallest = Math.min.apply(null, even);\n    let index = even.indexOf(smallest);\n\
    \    return [smallest, index];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 === 0){\n            if(arr[i] < min){\n                min = arr[i];\n\
    \                minIndex = i;\n            }\n        }\n    }\n    return [min,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = -1;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = -1;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minValue = Number.MAX_SAFE_INTEGER;\n    let minIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            if(arr[i] < minValue){\n                minValue = arr[i];\n    \
    \            minIndex = i;\n            }\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let even = arr.filter(function(v){\n        return v%2\
    \ === 0;\n    });\n    let smallest = even.sort((a,b)=>a-b).pop();\n    let index\
    \ = even.indexOf(smallest);\n    return [smallest, index];\n}\n", "    let min\
    \ = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < min){\n            min = arr[i];\n            minIndex =\
    \ i;\n        }\n    }\n    return [min, minIndex];\n}\n", "    let minValue =\
    \ arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n \
    \       if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 === 0);\n    let minValue = arr[minIndex].value;\n\
    \    let minIndexes = [];\n    arr.forEach((node, index) => {\n        if(node.value\
    \ % 2 === 0){\n            if(minValue === node.value){\n                minIndexes.push(index);\n\
    \            }\n        }\n    });\n    if(minIndexes.length === 0){\n       \
    \ return [];\n    }\n    if(minIndexes.length === 1){\n        return [minValue,\
    \ minIndexes[0]];\n    }\n    let minIndexesValues = minIndexes.map(index => arr[index].value);\n\
    \    let minIndexesValueIndex = minIndexes.map(index => arr[index].index);\n \
    \   let minIndexesValueIndex = minIndexesValueIndex.sort((a, b) => a - b);\n \
    \   let minIndexesValueIndex = minIndexesValueIndex.filter(index => minIndexesValues.includes(index));\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.sort((a, b) => a - b);\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.filter(index => minIndexesValues.includes(index));\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.sort((a, b) => a - b);\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.filter(index => minIndexesValues.includes(index));\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.sort((a, b) => a - b);\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.filter(index => minIndexesValues.includes(index));\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.sort((a, b) => a - b);\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.filter(index => minIndexesValues.includes(index));\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.sort((a, b) => a - b);\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.filter(index => minIndexesValues.includes(index));\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.sort((a, b) => a - b);\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.filter(index => minIndexesValues.includes(index));\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.sort((a, b) => a - b);\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.filter(index => minIndexesValues.includes(index));\n\
    \    let minIndexesValueIndex = minIndexesValueIndex.sort((a, b) => a - b);\n\
    \    let minIndexesValueIndex = min", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let even = arr.filter(node => node.value\
    \ % 2 === 0);\n    if(even.length === 0) return [];\n    let smallestEven = even.sort((a,b)\
    \ => a.value - b.value);\n    let smallestIndex = smallestEven.findIndex(node\
    \ => node.value === smallestEven[0].value);\n    return [smallestEven[0].value,\
    \ smallestIndex];\n}\n", "    let minIndex = arr.findIndex(node => node.value\
    \ % 2 === 0);\n    let minValue = arr[minIndex].value;\n    let result = [];\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(arr[i].value % 2 === 0 &&\
    \ arr[i].value < minValue){\n            minValue = arr[i].value;\n          \
    \  minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", " \
    \   let min = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < min){\n            min = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [min, minIndex];\n}\n", "    let minIndex\
    \ = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let even\
    \ = arr.filter(function(x){\n        return x % 2 === 0;\n    });\n    if(even.length\
    \ === 0){\n        return [];\n    }\n    let min = even[0];\n    let minIndex\
    \ = 0;\n    for(let i = 1; i < even.length; i++){\n        if(even[i] < min){\n\
    \            min = even[i];\n            minIndex = i;\n        }\n    }\n   \
    \ return [min, minIndex];\n}\n", "    let minValue = arr[0];\n    let minIndex\
    \ = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let evenArr = [];\n    let minIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evenArr.push(arr[i]);\n            if(evenArr.length < minIndex){\n\
    \                minIndex = evenArr.length;\n            }\n        }\n    }\n\
    \    if(evenArr.length === 0){\n        return [];\n    }\n    if(evenArr.length\
    \ === 1){\n        return [evenArr[0], minIndex];\n    }\n    let minValue = evenArr[0];\n\
    \    let minIndex = 0;\n    for(let i = 1; i < evenArr.length; i++){\n       \
    \ if(evenArr[i] < minValue){\n            minValue = evenArr[i];\n           \
    \ minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", " \
    \   let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let min = Infinity;\n    let minIndex = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min){\n      \
    \          min = arr[i];\n                minIndex = i;\n            }\n     \
    \   }\n    }\n    return [min, minIndex];\n}\n", "    let minIndex = 0;\n    let\
    \ minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n\
    \    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n      \
    \  if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

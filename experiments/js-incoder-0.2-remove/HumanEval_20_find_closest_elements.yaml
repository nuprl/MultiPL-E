name: HumanEval_20_find_closest_elements
language: js
prompt: "//From a supplied list of numbers (of length at least two) select and return\
  \ two that are the closest to each\n// other and return them in order (smaller number,\
  \ larger number).\nfunction find_closest_elements(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
  \ 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
  \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
  \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1,\
  \ 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
completions: ["    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        else if(numbers[i]\
    \ > largest_number){\n            largest_number = numbers[i];\n        }\n  \
    \  }\n    return [smallest_number, largest_number];\n}\n", "    var smallest =\
    \ numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        var distance = numbers[i] - numbers[i - 1];\n        closest_numbers.push(numbers[i\
    \ - 1]);\n        closest_distances.push(distance);\n    }\n    closest_numbers.sort();\n\
    \    closest_distances.sort();\n    return closest_numbers;\n}\n", "    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var smallest =\
    \ numbers[0];\n    var largest = numbers[0];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var closest_index = 0;\n    var\
    \ closest_distance = 0;\n    var closest_number = numbers[0];\n    var closest_distance\
    \ = numbers[1];\n    for(var i = 1; i < numbers.length; i++){\n        var current_distance\
    \ = numbers[i] - closest_number;\n        if(current_distance < closest_distance){\n\
    \            closest_number = numbers[i];\n            closest_distance = current_distance;\n\
    \            closest_index = i;\n        }\n    }\n    closest_numbers.push(closest_number);\n\
    \    closest_distances.push(closest_distance);\n    return closest_numbers.concat(closest_distances);\n\
    }\n", "    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "    var closest_numbers = [];\n    var closest_numbers_index = 0;\n   \
    \ var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n  \
    \  var smallest_difference = Number.MAX_VALUE;\n    var largest_difference = Number.MAX_VALUE;\n\
    \    for(var i = 1; i < numbers.length; i++){\n        var current_number = numbers[i];\n\
    \        var current_difference = Math.abs(current_number - smallest_number);\n\
    \        if(current_difference < smallest_difference){\n            smallest_difference\
    \ = current_difference;\n            smallest_number = current_number;\n     \
    \   }\n        var current_difference = Math.abs(current_number - largest_number);\n\
    \        if(current_difference < largest_difference){\n            largest_difference\
    \ = current_difference;\n            largest_number = current_number;\n      \
    \  }\n    }\n    closest_numbers.push(smallest_number);\n    closest_numbers.push(largest_number);\n\
    \    closest_numbers_index = 1;\n    for(var i = 2; i < numbers.length; i++){\n\
    \        var current_number = numbers[i];\n        var current_difference = Math.abs(current_number\
    \ - smallest_number);\n        if(current_difference < smallest_difference){\n\
    \            smallest_difference = current_difference;\n            smallest_number\
    \ = current_number;\n            closest_numbers_index = i;\n        }\n     \
    \   var current_difference = Math.abs(current_number - largest_number);\n    \
    \    if(current_difference < largest_difference){\n            largest_difference\
    \ = current_difference;\n            largest_number = current_number;\n      \
    \      closest_numbers_index = i;\n        }\n    }\n    closest_numbers.push(smallest_number);\n\
    \    closest_numbers.push(largest_number);\n    return closest_numbers;\n}\n",
  "    var smallest_number = numbers[0];\n    var biggest_number = numbers[0];\n \
    \   for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        else if(numbers[i]\
    \ > biggest_number){\n            biggest_number = numbers[i];\n        }\n  \
    \  }\n    return [smallest_number, biggest_number];\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var biggest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > biggest_number){\n\
    \            biggest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ biggest_number];\n}\n", "    var closest_elements = [];\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    closest_elements.push(smallest_number);\n\
    \    closest_elements.push(largest_number);\n    return closest_elements;\n}\n",
  "  var smallest_number = numbers[0];\n  var largest_number = numbers[0];\n  for(var\
    \ i = 1; i < numbers.length; i++){\n    if(numbers[i] < smallest_number){\n  \
    \    smallest_number = numbers[i];\n    }\n    if(numbers[i] > largest_number){\n\
    \      largest_number = numbers[i];\n    }\n  }\n  return [smallest_number, largest_number];\n\
    }\n", "    var smallest_number = numbers[0];\n    var biggest_number = numbers[0];\n\
    \    var smallest_index = 0;\n    var biggest_index = 0;\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n       \
    \     smallest_number = numbers[i];\n            smallest_index = i;\n       \
    \ }\n        else if(numbers[i] > biggest_number){\n            biggest_number\
    \ = numbers[i];\n            biggest_index = i;\n        }\n    }\n    return\
    \ [smallest_number, biggest_number];\n}\n", "\tvar closest_numbers = [];\n\tvar\
    \ closest_distances = [];\n\tvar closest_index = 0;\n\tvar closest_distance =\
    \ 0;\n\t\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tvar current_distance\
    \ = numbers[i] - numbers[i - 1];\n\t\tif(current_distance < closest_distance){\n\
    \t\t\tclosest_index = i;\n\t\t\tclosest_distance = current_distance;\n\t\t}\n\t\
    }\n\t\n\tclosest_numbers.push(numbers[closest_index]);\n\tclosest_numbers.push(numbers[closest_index\
    \ + 1]);\n\t\n\treturn closest_numbers;\n}\n", "    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var smallest =\
    \ numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var closest_numbers\
    \ = [];\n    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        if(numbers[i] >\
    \ largest_number){\n            largest_number = numbers[i];\n        }\n    }\n\
    \    closest_numbers.push(smallest_number);\n    closest_numbers.push(largest_number);\n\
    \    return closest_numbers;\n}\n", "\tvar closest_pair = numbers[0];\n\tvar closest_distance\
    \ = numbers[1];\n\tfor(var i=0;i<numbers.length;i++){\n\t\tvar distance = numbers[i]\
    \ - closest_pair;\n\t\tif(distance < closest_distance){\n\t\t\tclosest_pair =\
    \ numbers[i];\n\t\t\tclosest_distance = distance;\n\t\t}\n\t}\n\treturn [closest_pair,closest_distance];\n\
    }\n", "    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "\tvar smallest = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0],\
    \ numbers[1]);\n\tvar result = [];\n\tfor(var i = 2; i < numbers.length; i++){\n\
    \t\tif(numbers[i] < smallest || numbers[i] > largest){\n\t\t\tresult.push([numbers[i],\
    \ i]);\n\t\t}\n\t}\n\treturn result;\n}\n", "    var closest_elements = [numbers[0],\
    \ numbers[0]];\n    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 1; i < numbers.length; i++){\n        var distance = Math.abs(numbers[i]\
    \ - numbers[i - 1]);\n        if (distance < closest_distance){\n            closest_elements\
    \ = [numbers[i], numbers[i - 1]];\n            closest_distance = distance;\n\
    \        }\n    }\n    return closest_elements;\n}\n", "    var smallest = Math.min(numbers[0],\
    \ numbers[1]);\n    var largest = Math.max(numbers[0], numbers[1]);\n    var result\
    \ = [];\n    for(var i = 0; i<numbers.length; i++){\n        if(numbers[i] < smallest\
    \ || numbers[i] > largest){\n            result.push(i);\n        }\n    }\n \
    \   return result;\n}\n", "\tvar smallest_number = numbers[0];\n\tvar largest_number\
    \ = numbers[0];\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i]\
    \ > largest_number){\n\t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [smallest_number, largest_number];\n}\n", "    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var smallest =\
    \ Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0], numbers[1]);\n\
    \    var result = [smallest, largest];\n    for(var i = 2; i < numbers.length;\
    \ i++){\n        var current = Math.max(numbers[i], numbers[i-1]);\n        var\
    \ next = Math.min(numbers[i], numbers[i-1]);\n        if(current < smallest){\n\
    \            smallest = current;\n            result[0] = current;\n        }\n\
    \        else if(current > largest){\n            largest = current;\n       \
    \     result[1] = current;\n        }\n        else if(next < smallest){\n   \
    \         smallest = next;\n            result[0] = current;\n        }\n    \
    \    else if(next > largest){\n            largest = next;\n            result[1]\
    \ = current;\n        }\n    }\n    return result;\n}\n", "\tvar smallest = numbers[0];\n\
    \tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length; i++){\n\t\t\
    if(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\t\telse if(numbers[i]\
    \ > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn [smallest, largest];\n\
    }\n", "    var smallest_number = numbers[0];\n    var biggest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        else if(numbers[i]\
    \ > biggest_number){\n            biggest_number = numbers[i];\n        }\n  \
    \  }\n    return [smallest_number, biggest_number];\n}\n", "    var smallest =\
    \ Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0], numbers[1]);\n\
    \    var result = [smallest, largest];\n    for(var i = 2; i < numbers.length;\
    \ i++){\n        var current_smallest = Math.min(numbers[i], numbers[i-1]);\n\
    \        var current_largest = Math.max(numbers[i], numbers[i-1]);\n        if(current_smallest\
    \ < smallest && current_largest > largest){\n            smallest = current_smallest;\n\
    \            largest = current_largest;\n            result[0] = current_smallest;\n\
    \            result[1] = current_largest;\n        }\n    }\n    return result;\n\
    }\n", "    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "    var smallest = Math.min.apply(Math, numbers);\n    var largest = Math.max.apply(Math,\
    \ numbers);\n    return [smallest, largest];\n}\n", "    var smallest_number =\
    \ numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest_number){\n            smallest_number\
    \ = numbers[i];\n        }\n        else if(numbers[i] > largest_number){\n  \
    \          largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "    var smallest = numbers[0];\n    var largest = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n\
    \            smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "\tvar closest_numbers = [];\n\tvar closest_distances = [];\n\tfor(var i\
    \ = 1; i < numbers.length; i++){\n\t\tvar distance = numbers[i] - numbers[i -\
    \ 1];\n\t\tclosest_numbers.push(numbers[i - 1]);\n\t\tclosest_distances.push(distance);\n\
    \t}\n\tclosest_numbers.sort(function(a, b){\n\t\treturn a - b;\n\t});\n\tclosest_distances.sort(function(a,\
    \ b){\n\t\treturn a - b;\n\t});\n\treturn [closest_numbers[0], closest_numbers[closest_numbers.length\
    \ - 1]];\n}\n", "    var smallest = numbers[0];\n    var largest = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n\
    \            smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "\tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\
    \t\t\tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\
    \t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\treturn [smallest_number, largest_number];\n\
    }\n", "    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        if(numbers[i] >\
    \ largest_number){\n            largest_number = numbers[i];\n        }\n    }\n\
    \    return [smallest_number, largest_number];\n}\n", "    var result = [];\n\
    \    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n       \
    \     smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n \
    \           largest = numbers[i];\n        }\n    }\n    result.push(smallest);\n\
    \    result.push(largest);\n    return result;\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = -1;\n    var largest_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        else if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, largest_number];\n}\n", "    var\
    \ smallest = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i\
    \ < numbers.length; i++){\n        if(numbers[i] < smallest){\n            smallest\
    \ = numbers[i];\n        }\n        if(numbers[i] > largest){\n            largest\
    \ = numbers[i];\n        }\n    }\n    return [smallest, largest];\n}\n", "  \
    \  var closest_numbers = [];\n    var closest_distances = [];\n    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        var current_number = numbers[i];\n        var\
    \ current_distance = current_number - smallest_number;\n        var current_distance_square\
    \ = current_distance * current_distance;\n        for(var j = 0; j < closest_numbers.length;\
    \ j++){\n            var closest_number = closest_numbers[j];\n            var\
    \ closest_distance_square = closest_distance * closest_distance;\n           \
    \ var closest_distance = Math.sqrt(closest_distance_square);\n            if(current_distance_square\
    \ < closest_distance_square){\n                closest_number = current_number;\n\
    \                closest_distance = current_distance;\n            }\n       \
    \ }\n        closest_numbers.push(closest_number);\n        closest_distances.push(closest_distance);\n\
    \        smallest_number = current_number;\n        largest_number = current_number;\n\
    \    }\n    return [smallest_number, largest_number];\n}\n", "    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tvar closest_index = 0;\n\tvar closest_distance\
    \ = 0;\n\tvar closest_number = numbers[0];\n\tvar closest_distance = numbers[1];\n\
    \tvar i;\n\tfor(i = 2; i < numbers.length; i++){\n\t\tclosest_number = numbers[i];\n\
    \t\tclosest_distance = numbers[i-1];\n\t\tclosest_index = 0;\n\t\tfor(i = 1; i\
    \ < numbers.length; i++){\n\t\t\tif((numbers[i-1] - closest_number) < closest_distance){\n\
    \t\t\t\tclosest_number = numbers[i];\n\t\t\t\tclosest_distance = numbers[i-1];\n\
    \t\t\t\tclosest_index = i;\n\t\t\t}\n\t\t}\n\t\tclosest_numbers.push(closest_number);\n\
    \t\tclosest_distances.push(closest_distance);\n\t}\n\treturn [closest_numbers,\
    \ closest_distances];\n}\n", "    var smallest = numbers[0];\n    var largest\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < smallest){\n            smallest = numbers[i];\n        }\n        if(numbers[i]\
    \ > largest){\n            largest = numbers[i];\n        }\n    }\n    return\
    \ [smallest, largest];\n}\n", "    var smallest_number = numbers[0];\n    var\
    \ largest_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \        }\n        if(numbers[i] > largest_number){\n            largest_number\
    \ = numbers[i];\n        }\n    }\n    return [smallest_number, largest_number];\n\
    }\n", "\tvar closest_numbers = [];\n\tvar closest_distances = [];\n\t\n\tfor(var\
    \ i = 0; i < numbers.length; i++){\n\t\tvar current_distance = numbers[i];\n\t\
    \tfor(var j = i+1; j < numbers.length; j++){\n\t\t\tvar next_distance = numbers[j];\n\
    \t\t\t\n\t\t\tif(next_distance < current_distance){\n\t\t\t\tcurrent_distance\
    \ = next_distance;\n\t\t\t}\n\t\t}\n\t\t\n\t\tclosest_numbers.push(current_distance);\n\
    \t\tclosest_distances.push(current_distance);\n\t}\n\t\n\tfor(var i = 0; i < numbers.length;\
    \ i++){\n\t\tvar current_distance = numbers[i];\n\t\t\n\t\tfor(var j = 0; j <\
    \ closest_numbers.length; j++){\n\t\t\tvar next_distance = closest_numbers[j];\n\
    \t\t\t\n\t\t\tif(next_distance < current_distance){\n\t\t\t\tcurrent_distance\
    \ = next_distance;\n\t\t\t}\n\t\t}\n\t\t\n\t\tclosest_numbers.push(current_distance);\n\
    \t}\n\t\n\treturn [closest_numbers, closest_distances];\n}\n", "    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var closest_distances_length = 0;\n    var closest_number = numbers[0];\n\
    \    var closest_distance = numbers[0];\n    var closest_numbers_index = 0;\n\
    \    var closest_distances_index = 0;\n    var closest_numbers_length = 0;\n \
    \   var ", "    var smallest = Math.min(numbers[0], numbers[1]);\n    var largest\
    \ = Math.max(numbers[0], numbers[1]);\n    var result = [smallest, largest];\n\
    \    for(var i = 2; i < numbers.length; i++){\n        var current = Math.max(numbers[i],\
    \ numbers[i-1]);\n        var next = Math.min(numbers[i], numbers[i-1]);\n   \
    \     if(current == smallest && next == largest){\n            continue;\n   \
    \     }\n        if(current < smallest && next > largest){\n            smallest\
    \ = current;\n        }\n        else if(current > largest && next < smallest){\n\
    \            largest = current;\n        }\n        result.push(current);\n  \
    \  }\n    return result;\n}\n", "\tvar smallest = Math.min(numbers[0], numbers[1]);\n\
    \tvar largest = Math.max(numbers[0], numbers[1]);\n\tvar result = [smallest, largest];\n\
    \tfor(var i = 2; i < numbers.length; i++){\n\t\tvar new_smallest = Math.min(numbers[i],\
    \ numbers[i-1]);\n\t\tvar new_largest = Math.max(numbers[i], numbers[i-1]);\n\t\
    \tif(new_smallest < smallest && new_largest > largest){\n\t\t\tsmallest = new_smallest;\n\
    \t\t\tlargest = new_largest;\n\t\t\tresult = [smallest, largest];\n\t\t}\n\t}\n\
    \treturn result;\n}\n", "\tvar closest_numbers = [];\n\tvar closest_distances\
    \ = [];\n\tvar closest_index = 0;\n\tvar closest_distance = 0;\n\t\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\t\n\t\tvar current_distance = numbers[i]\
    \ - numbers[i - 1];\n\t\t\n\t\tif(current_distance < closest_distance){\n\t\t\t\
    closest_distance = current_distance;\n\t\t\tclosest_index = i;\n\t\t}\n\t\t\n\t\
    }\n\t\n\tclosest_numbers.push(numbers[closest_index]);\n\tclosest_numbers.push(numbers[closest_index\
    \ - 1]);\n\t\n\treturn closest_numbers;\n}\n", "    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var smallest =\
    \ Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0], numbers[1]);\n\
    \    var result = [smallest, largest];\n    for(var i = 2; i < numbers.length;\
    \ i++){\n        var current = Math.max(numbers[i], numbers[i-1]);\n        var\
    \ next = Math.min(numbers[i], numbers[i-1]);\n        var diff = Math.abs(current\
    \ - next);\n        if(diff < result[1]){\n            result[0] = current;\n\
    \            result[1] = diff;\n        }\n    }\n    return result;\n}\n", " \
    \   var smallest = Math.min.apply(null, numbers);\n    var largest = Math.max.apply(null,\
    \ numbers);\n    var results = [];\n    for(var i=0;i<numbers.length;i++){\n \
    \       if(numbers[i] == smallest || numbers[i] == largest){\n            results.push(numbers[i]);\n\
    \        }\n    }\n    return results;\n}\n", "    var closest_elements = [];\n\
    \    var closest_distance = Number.MAX_VALUE;\n    var closest_index = 0;\n  \
    \  var i;\n    for(i = 0; i < numbers.length; i++){\n        var distance = distance_between(numbers[i],\
    \ numbers[closest_index]);\n        if(distance < closest_distance){\n       \
    \     closest_distance = distance;\n            closest_index = i;\n        }\n\
    \    }\n    closest_elements.push(numbers[closest_index]);\n    closest_elements.push(numbers[closest_index]);\n\
    \    return closest_elements;\n}\n", "    var smallest = Math.min(numbers[0],\
    \ numbers[1]);\n    var largest = Math.max(numbers[0], numbers[1]);\n    var result\
    \ = [smallest, largest];\n    for(var i = 2; i < numbers.length; i++){\n     \
    \   var new_smallest = Math.min(numbers[i], numbers[i-1]);\n        var new_largest\
    \ = Math.max(numbers[i], numbers[i-1]);\n        if(new_smallest < smallest &&\
    \ new_largest > largest){\n            smallest = new_smallest;\n            largest\
    \ = new_largest;\n            result = [smallest, largest];\n        }\n    }\n\
    \    return result;\n}\n", "\tvar smallest = Math.min(numbers[0], numbers[1]);\n\
    \tvar largest = Math.max(numbers[0], numbers[1]);\n\tvar result = [];\n\tfor(var\
    \ i = smallest; i <= largest; i++){\n\t\tif(numbers.indexOf(i) > -1){\n\t\t\t\
    result.push(i);\n\t\t}\n\t}\n\treturn result;\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "    var smallest_number = numbers[0];\n    var largest_number\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < smallest_number){\n            smallest_number = numbers[i];\n        }\n\
    \        if(numbers[i] > largest_number){\n            largest_number = numbers[i];\n\
    \        }\n    }\n    return [smallest_number, largest_number];\n}\n", "    var\
    \ smallest = Math.min.apply(Math, numbers);\n    var largest = Math.max.apply(Math,\
    \ numbers);\n    var result = [];\n    for(var i = smallest; i <= largest; i++){\n\
    \        result.push(i);\n    }\n    return result;\n}\n", "    var smallest =\
    \ numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "\tvar closest_elements\
    \ = [];\n\tvar closest_distances = [];\n\tvar smallest_distance = Number.MAX_VALUE;\n\
    \tvar closest_number = null;\n\tvar closest_index = null;\n\t\n\tfor(var i = 1;\
    \ i < numbers.length; i++){\n\t\tvar current_distance = numbers[i] - numbers[i\
    \ - 1];\n\t\t\n\t\tif(current_distance < smallest_distance){\n\t\t\tsmallest_distance\
    \ = current_distance;\n\t\t\tclosest_number = numbers[i];\n\t\t\tclosest_index\
    \ = i;\n\t\t}\n\t}\n\t\n\tclosest_elements.push(closest_number);\n\tclosest_elements.push(closest_number);\n\
    \t\n\treturn closest_elements;\n}\n", "\tvar closest_numbers = [];\n\tvar closest_numbers_index\
    \ = 0;\n\tvar closest_number = numbers[0];\n\tvar closest_number_distance = numbers[1];\n\
    \tvar closest_number_distance_difference = numbers[1];\n\tvar closest_number_distance_difference_index\
    \ = 0;\n\t\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tvar current_number\
    \ = numbers[i];\n\t\tvar current_number_distance = numbers[i] - closest_number;\n\
    \t\tvar current_number_distance_difference = current_number_distance - closest_number_distance;\n\
    \t\t\n\t\tif(current_number_distance_difference < closest_number_distance_difference){\n\
    \t\t\tclosest_number = current_number;\n\t\t\tclosest_number_distance = current_number_distance;\n\
    \t\t\tclosest_number_distance_difference = current_number_distance_difference;\n\
    \t\t\tclosest_number_distance_difference_index = i;\n\t\t}\n\t}\n\t\n\tclosest_numbers.push(closest_number);\n\
    \tclosest_numbers.push(closest_numbers[closest_number_distance_difference_index]);\n\
    \t\n\treturn closest_numbers;\n}\n", "\tvar smallest = Math.min(numbers[0], numbers[1]);\n\
    \tvar largest = Math.max(numbers[0], numbers[1]);\n\tvar result = [];\n\tfor(var\
    \ i = smallest; i <= largest; i++){\n\t\tfor(var j = smallest; j <= largest; j++){\n\
    \t\t\tif(Math.abs(i - j) < Math.abs(smallest - largest)){\n\t\t\t\tresult.push([i,\
    \ j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        var current_distance = numbers[i];\n        for(var j = 0; j\
    \ < numbers.length; j++){\n            if(j != i){\n                var next_distance\
    \ = numbers[j];\n                if(next_distance < current_distance){\n     \
    \               current_distance = next_distance;\n                }\n       \
    \     }\n        }\n        closest_numbers.push(current_distance);\n        closest_distances.push(current_distance);\n\
    \    }\n    closest_numbers.sort(function(a, b){return a - b});\n    closest_distances.sort(function(a,\
    \ b){return a - b});\n    return closest_numbers;\n}\n", "\tvar smallest = Math.min(numbers[0],\
    \ numbers[1]);\n\tvar largest = Math.max(numbers[0], numbers[1]);\n\tvar result\
    \ = [smallest, largest];\n\tfor(var i = 2; i < numbers.length; i++){\n\t\tvar\
    \ current_smallest = Math.min(numbers[0], numbers[i]);\n\t\tvar current_largest\
    \ = Math.max(numbers[0], numbers[i]);\n\t\tif(current_smallest < smallest){\n\t\
    \t\tsmallest = current_smallest;\n\t\t}\n\t\tif(current_largest > largest){\n\t\
    \t\tlargest = current_largest;\n\t\t}\n\t\tresult.push(current_smallest, current_largest);\n\
    \t}\n\treturn result;\n}\n", "    var closest_elements = [];\n    var closest_distances\
    \ = [];\n    var closest_index = 0;\n    var closest_distance = Number.MAX_VALUE;\n\
    \    var i;\n    for(i = 0; i < numbers.length; i++){\n        var distance =\
    \ numbers[i] - numbers[closest_index];\n        if(distance < closest_distance){\n\
    \            closest_distance = distance;\n            closest_index = i;\n  \
    \      }\n    }\n    closest_elements.push(numbers[closest_index]);\n    closest_elements.push(numbers[closest_index\
    \ + 1]);\n    return closest_elements;\n}\n", "    var closest_pair = numbers[0];\n\
    \    var closest_distance = numbers[1];\n    var closest_number = numbers[0];\n\
    \    var closest_index = 0;\n    var closest_pair_index = 0;\n    for(var i =\
    \ 1; i < numbers.length; i++){\n        var current_distance = numbers[i] - closest_number;\n\
    \        if(current_distance < closest_distance){\n            closest_pair =\
    \ closest_number;\n            closest_distance = current_distance;\n        \
    \    closest_number = numbers[i];\n            closest_index = i;\n          \
    \  closest_pair_index = closest_index;\n        }\n    }\n    return [closest_pair,\
    \ closest_number, closest_index, closest_pair_index];\n}\n", "    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var smallest_number = numbers[0];\n\
    \    var largest_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        var current_number = numbers[i];\n        var current_distance\
    \ = current_number - smallest_number;\n        var current_distance2 = current_distance\
    \ * current_distance;\n        smallest_number = current_number;\n        closest_numbers.push(smallest_number);\n\
    \        closest_distances.push(current_distance);\n        largest_number = current_number;\n\
    \        for(var j = 0; j < closest_numbers.length; j++){\n            var current_distance3\
    \ = current_distance2 + closest_distances[j];\n            if(current_distance3\
    \ < current_distance){\n                closest_numbers[j] = current_number;\n\
    \                closest_distances[j] = current_distance3;\n            }\n  \
    \      }\n    }\n    return closest_numbers;\n}\n", "    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        else if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var closest_index = 0;\n    var\
    \ closest_distance = 0;\n    var i;\n    for(i = 0; i < numbers.length; i++){\n\
    \        closest_distance = numbers[i];\n        closest_numbers.push(closest_distance);\n\
    \        closest_distances.push(closest_distance);\n    }\n    for(i = 1; i <\
    \ numbers.length; i++){\n        closest_distance = numbers[i];\n        closest_index\
    \ = i;\n        closest_distances.push(closest_distance);\n    }\n    for(i =\
    \ numbers.length - 1; i >= 0; i--){\n        closest_distance = numbers[i];\n\
    \        closest_index = i;\n        closest_distances.push(closest_distance);\n\
    \    }\n    return closest_numbers;\n}\n", "    var closest_pair = numbers[0];\n\
    \    var closest_distance = Number.MAX_VALUE;\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        var distance = numbers[i] - closest_pair;\n        if(distance\
    \ < closest_distance){\n            closest_pair = numbers[i];\n            closest_distance\
    \ = distance;\n        }\n    }\n    return [closest_pair, closest_distance];\n\
    }\n", "    var smallest = Math.abs(numbers[0]);\n    var largest = Math.abs(numbers[1]);\n\
    \    var smallest_index = 0;\n    var largest_index = 1;\n    \n    while(smallest_index\
    \ < numbers.length && largest<numbers[smallest_index]){\n        smallest = numbers[smallest_index];\n\
    \        smallest_index++;\n    }\n    \n    while(largest_index>0 && smallest>numbers[largest_index]){\n\
    \        largest = numbers[largest_index];\n        largest_index--;\n    }\n\
    \    \n    return [smallest, largest];\n}\n", "  var smallest_number = numbers[0];\n\
    \  var second_smallest_number = numbers[0];\n  var second_number = numbers[1];\n\
    \  var smallest_difference = 0;\n  var second_difference = 0;\n  var smallest_index\
    \ = -1;\n  var second_index = -1;\n  for(var i = 1; i < numbers.length; i++){\n\
    \    var current_number = numbers[i];\n    var current_difference = Math.abs(current_number\
    \ - second_number);\n    if(current_difference < smallest_difference){\n     \
    \ smallest_difference = current_difference;\n      smallest_index = i;\n    }\n\
    \    if(current_difference < second_difference){\n      second_difference = current_difference;\n\
    \      second_index = i;\n    }\n  }\n  return [smallest_index, second_index];\n\
    }\n", "\tvar smallest = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0],\
    \ numbers[1]);\n\tvar result = [smallest, largest];\n\tfor(var i = 2; i < numbers.length;\
    \ i++){\n\t\tvar current_smallest = Math.min(numbers[0], numbers[i]);\n\t\tvar\
    \ current_largest = Math.max(numbers[0], numbers[i]);\n\t\tif(current_smallest\
    \ == smallest && current_largest == largest){\n\t\t\tresult.push(current_smallest);\n\
    \t\t\tresult.push(current_largest);\n\t\t\tbreak;\n\t\t}\n\t\telse if(current_smallest\
    \ == smallest && current_largest != largest){\n\t\t\tresult.push(current_smallest);\n\
    \t\t\tresult.push(current_largest);\n\t\t\tbreak;\n\t\t}\n\t\telse if(current_smallest\
    \ != smallest && current_largest == largest){\n\t\t\tresult.push(current_smallest);\n\
    \t\t\tresult.push(current_largest);\n\t\t\tbreak;\n\t\t}\n\t\telse if(current_smallest\
    \ != smallest && current_largest != largest){\n\t\t\tresult.push(current_smallest);\n\
    \t\t\tresult.push(current_largest);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n\
    }\n", "\tvar closest_numbers = [];\n\tvar closest_distances = [];\n\t\n\tfor(var\
    \ i = 0; i < numbers.length; i++){\n\t\tvar current_number = numbers[i];\n\t\t\
    var current_distance = Math.abs(current_number);\n\t\t\n\t\tfor(var j = 0; j <\
    \ numbers.length; j++){\n\t\t\tvar other_number = numbers[j];\n\t\t\tvar other_distance\
    \ = Math.abs(other_number);\n\t\t\t\n\t\t\tif(current_distance < other_distance){\n\
    \t\t\t\tcurrent_number = other_number;\n\t\t\t\tcurrent_distance = other_distance;\n\
    \t\t\t}\n\t\t}\n\t\t\n\t\tclosest_numbers.push(current_number);\n\t\tclosest_distances.push(current_distance);\n\
    \t}\n\t\n\treturn [closest_numbers, closest_distances];\n}\n", "    var result\
    \ = [];\n    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        else if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    result.push(smallest);\n\
    \    result.push(largest);\n    return result;\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        else if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "    var closest_numbers = [];\n    var closest_distances\
    \ = [];\n    var closest_index = 0;\n    var closest_distance = 0;\n    var current_index\
    \ = 0;\n    var current_distance = 0;\n    var current_number = numbers[0];\n\
    \    var current_number = numbers[1];\n    \n    while(current_index < numbers.length){\n\
    \        closest_distance = Math.abs(current_number - numbers[current_index]);\n\
    \        closest_index = current_index;\n        closest_distance = closest_distance;\n\
    \        \n        while(current_index < numbers.length && closest_distance >\
    \ current_distance){\n            current_index++;\n            current_number\
    \ = numbers[current_index];\n            current_distance = closest_distance;\n\
    \        }\n        \n        closest_numbers.push(current_number);\n        closest_distances.push(closest_distance);\n\
    \    }\n    \n    return closest_numbers;\n}\n", "    var smallest_number = numbers[0];\n\
    \    var largest_number = numbers[0];\n    var smallest_index = 0;\n    var largest_index\
    \ = 0;\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] <\
    \ smallest_number){\n            smallest_number = numbers[i];\n            smallest_index\
    \ = i;\n        }\n        else if(numbers[i] > largest_number){\n           \
    \ largest_number = numbers[i];\n            largest_index = i;\n        }\n  \
    \  }\n    return [smallest_number, largest_number];\n}\n", "\tvar closest_elements\
    \ = [];\n\tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\
    \t\t\tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\
    \t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\tclosest_elements.push(smallest_number);\n\
    \tclosest_elements.push(largest_number);\n\treturn closest_elements;\n}\n", " \
    \   var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    var smallest_index = 0;\n    var largest_index = 0;\n    for(var i = 1; i\
    \ < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n       \
    \     smallest_number = numbers[i];\n            smallest_index = i;\n       \
    \ }\n        if(numbers[i] > largest_number){\n            largest_number = numbers[i];\n\
    \            largest_index = i;\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "\tvar smallest = Math.min(numbers[0], numbers[1]);\n\
    \tvar largest = Math.max(numbers[0], numbers[1]);\n\tvar result = [];\n\t\n\t\
    for(var i = smallest; i <= largest; i++){\n\t\tvar found = false;\n\t\tfor(var\
    \ j = 0; j < result.length; j++){\n\t\t\tif(result[j].number == i){\n\t\t\t\t\
    found = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found){\n\t\t\tresult.push({number:\
    \ i, distance: Math.abs(i - smallest)});\n\t\t}\n\t}\n\t\n\treturn result;\n}\n",
  "  var closest_elements = [];\n  var closest_distances = [];\n  var smallest_number\
    \ = numbers[0];\n  var largest_number = numbers[0];\n  for(var i = 1; i < numbers.length;\
    \ i++){\n    var current_number = numbers[i];\n    var current_distance = current_number\
    \ - smallest_number;\n    var current_distance_square = current_distance * current_distance;\n\
    \    var closest_distance = current_distance_square;\n    var closest_element\
    \ = current_number;\n    for(var j = 0; j < closest_elements.length; j++){\n \
    \     var current_element = closest_elements[j];\n      var current_distance_square\
    \ = current_element * current_element;\n      var current_distance = current_distance_square\
    \ + current_distance;\n      if(current_distance < closest_distance){\n      \
    \  closest_distance = current_distance;\n        closest_element = current_element;\n\
    \      }\n    }\n    closest_elements.push(closest_element);\n    closest_distances.push(closest_distance);\n\
    \    if(smallest_number > current_number){\n      smallest_number = current_number;\n\
    \    }\n    if(largest_number < current_number){\n      largest_number = current_number;\n\
    \    }\n  }\n  return [smallest_number, largest_number];\n}\n", "    var smallest\
    \ = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var smallest =\
    \ numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest){\n            smallest = numbers[i];\n\
    \        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var smallest =\
    \ Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0], numbers[1]);\n\
    \    var result = [smallest, largest];\n    for(var i = 2; i < numbers.length;\
    \ i++){\n        var current_smallest = Math.min(numbers[i], numbers[i-1]);\n\
    \        var current_largest = Math.max(numbers[i], numbers[i-1]);\n        if(current_smallest\
    \ < smallest){\n            smallest = current_smallest;\n        }\n        if(current_largest\
    \ > largest){\n            largest = current_largest;\n        }\n        result.push(smallest);\n\
    \        result.push(largest);\n    }\n    return result;\n}\n", "\tvar smallest\
    \ = numbers[0];\n\tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\
    \t\tif(numbers[i] > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [smallest, largest];\n}\n", "    var closest_numbers = [];\n    var closest_distances\
    \ = [];\n    var closest_index = 0;\n    var closest_distance = 0;\n    var i;\n\
    \    for(i = 0; i < numbers.length; i++){\n        closest_distance = Math.abs(numbers[i]\
    \ - numbers[closest_index]);\n        closest_numbers.push(numbers[i]);\n    \
    \    closest_distances.push(closest_distance);\n        if(closest_distance <\
    \ closest_distances[closest_index]){\n            closest_index = i;\n       \
    \     closest_distance = closest_distance;\n        }\n    }\n    closest_numbers.reverse();\n\
    \    closest_distances.reverse();\n    return closest_numbers;\n}\n", "    var\
    \ smallest = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [];\n    for(var i = 2; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest || numbers[i] > largest){\n            result.push(smallest);\n\
    \            smallest = numbers[i];\n        }else{\n            result.push(largest);\n\
    \            largest = numbers[i];\n        }\n    }\n    result.push(smallest);\n\
    \    result.push(largest);\n    return result;\n}\n", "    var closest_numbers\
    \ = [];\n    var closest_distances = [];\n    var smallest_number = numbers[0];\n\
    \    var largest_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        var current_number = numbers[i];\n        var current_distance\
    \ = current_number - smallest_number;\n        var current_distance_square = current_distance\
    \ * current_distance;\n        smallest_number = current_number;\n        for(var\
    \ j = 0; j < closest_numbers.length; j++){\n            var other_number = closest_numbers[j];\n\
    \            var other_distance = other_number - current_number;\n           \
    \ var other_distance_square = other_distance * other_distance;\n            if(other_distance_square\
    \ < current_distance_square){\n                closest_numbers[j] = current_number;\n\
    \                closest_distances[j] = current_distance;\n            }\n   \
    \     }\n        largest_number = current_number;\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "    var smallest = numbers[0];\n    var largest = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n\
    \            smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "  var smallest_number = numbers[0];\n  var largest_number = numbers[0];\n\
    \  for(var i = 1; i < numbers.length; i++){\n    if(numbers[i] < smallest_number){\n\
    \      smallest_number = numbers[i];\n    }\n    if(numbers[i] > largest_number){\n\
    \      largest_number = numbers[i];\n    }\n  }\n  return [smallest_number, largest_number];\n\
    }\n", "  var results = [];\n  var smallest = numbers[0];\n  var largest = numbers[0];\n\
    \  for(var i = 1; i < numbers.length; i++){\n    if(numbers[i] < smallest){\n\
    \      smallest = numbers[i];\n    }\n    if(numbers[i] > largest){\n      largest\
    \ = numbers[i];\n    }\n  }\n  results.push([smallest, largest]);\n  return results;\n\
    }\n", "\tvar smallest = Math.abs(numbers[0]);\n\tvar largest = Math.abs(numbers[1]);\n\
    \tvar smallest_index = -1;\n\tvar largest_index = -1;\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tif(Math.abs(numbers[i]) < smallest){\n\t\t\tsmallest = Math.abs(numbers[i]);\n\
    \t\t\tsmallest_index = i;\n\t\t}\n\t\tif(Math.abs(numbers[i]) > largest){\n\t\t\
    \tlargest = Math.abs(numbers[i]);\n\t\t\tlargest_index = i;\n\t\t}\n\t}\n\treturn\
    \ [numbers[smallest_index],numbers[largest_index]];\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = -1;\n    var largest_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_index, largest_index];\n}\n", "\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\t\n\tfor(var i = 0; i < numbers.length;\
    \ i++){\n\t\tvar current_distance = numbers[i];\n\t\tvar current_number = numbers[i];\n\
    \t\t\n\t\tfor(var j = i + 1; j < numbers.length; j++){\n\t\t\tvar next_distance\
    \ = numbers[j];\n\t\t\tvar next_number = numbers[j];\n\t\t\t\n\t\t\tif(current_distance\
    \ < next_distance){\n\t\t\t\tcurrent_distance = next_distance;\n\t\t\t\tcurrent_number\
    \ = next_number;\n\t\t\t}\n\t\t}\n\t\t\n\t\tclosest_numbers.push(current_number);\n\
    \t\tclosest_distances.push(current_distance);\n\t}\n\t\n\treturn [closest_numbers,\
    \ closest_distances];\n}\n", "\tvar smallest_number = numbers[0];\n\tvar largest_number\
    \ = numbers[0];\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i]\
    \ > largest_number){\n\t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [smallest_number, largest_number];\n}\n", "\tvar smallest = numbers[0];\n\t\
    var largest = numbers[0];\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest){\n\
    \t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn [smallest, largest];\n}\n",
  "\tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\
    \tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\
    \t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\treturn [smallest_number, largest_number];\n\
    }\n", "    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        if(numbers[i] >\
    \ largest_number){\n            largest_number = numbers[i];\n        }\n    }\n\
    \    return [smallest_number, largest_number];\n}\n", "\tvar closest_numbers =\
    \ [];\n\tvar closest_distances = [];\n\tvar closest_index = 0;\n\tvar closest_distance\
    \ = 0;\n\t\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tvar current_distance\
    \ = numbers[i] - numbers[i - 1];\n\t\tif(current_distance < closest_distance){\n\
    \t\t\tclosest_index = i;\n\t\t\tclosest_distance = current_distance;\n\t\t}\n\t\
    }\n\t\n\tclosest_numbers.push(numbers[closest_index]);\n\tclosest_numbers.push(numbers[closest_index\
    \ - 1]);\n\t\n\treturn closest_numbers;\n}\n", "\tvar closest_elements = [];\n\
    \tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\
    \tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\
    \t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\tclosest_elements.push(smallest_number);\n\
    \tclosest_elements.push(largest_number);\n\treturn closest_elements;\n}\n", " \
    \   var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        if(numbers[i] >\
    \ largest_number){\n            largest_number = numbers[i];\n        }\n    }\n\
    \    return [smallest_number, largest_number];\n}\n", "    var smallest = Math.min(numbers[0],\
    \ numbers[1]);\n    var largest = Math.max(numbers[0], numbers[1]);\n    var result\
    \ = [smallest, largest];\n    for(var i = 2; i < numbers.length; i++){\n     \
    \   var current = Math.max(numbers[i], numbers[i-1]);\n        var next = Math.min(numbers[i],\
    \ numbers[i-1]);\n        if(current < smallest || smallest == next){\n      \
    \      smallest = current;\n        }\n        if(current > largest || largest\
    \ == next){\n            largest = current;\n        }\n        result.push(current);\n\
    \    }\n    return result;\n}\n", "    var closest_elements = [];\n    var closest_distances\
    \ = [];\n    var closest_distances_index = [];\n    var closest_distances_index2\
    \ = [];\n    var closest_distances_index3 = [];\n    var closest_distances_index4\
    \ = [];\n    var closest_distances_index5 = [];\n    var closest_distances_index6\
    \ = [];\n    var closest_distances_index7 = [];\n    var closest_distances_index8\
    \ = [];\n    var closest_distances_index9 = [];\n    var closest_distances_index10\
    \ = [];\n    var closest_distances_index11 = [];\n    var closest_distances_index12\
    \ = [];\n    var closest_distances_index13 = [];\n    var closest_distances_index14\
    \ = [];\n    var closest_distances_index15 = [];\n    var closest_distances_index16\
    \ = [];\n    var closest_distances_index17 = [];\n    var closest_distances_index18\
    \ = [];\n    var closest_distances_index19 = [];\n    var closest_distances_index20\
    \ = [];\n    var closest_distances_index21 = [];\n    var closest_distances_index22\
    \ = [];\n    var closest_distances_index23 = [];\n    var closest_distances_index24\
    \ = [];\n    var closest_distances_index25 = [];\n    var closest_distances_index26\
    \ = [];\n    var closest_distances_index27 = [];\n    var closest_distances_index28\
    \ = [];\n    var closest_distances_index29 = [];\n    var closest_distances_index30\
    \ = [];\n    var closest_distances_index31 = [];\n    var closest_distances_index32\
    \ = [];\n    var closest_distances_index33 = [];\n    var closest_distances_index34\
    \ = [];\n    var closest_distances_index35 = [];\n    var closest_distances_index36\
    \ = [];\n    var closest_distances_index37 = [];\n    var closest_distances_index38\
    \ = [];\n    var closest_distances_index39 = [];\n    var closest_distances_index40\
    \ = [];\n    var closest_distances_index41 = [];\n    var closest_distances_index42\
    \ = [];\n    var closest_distances_index43 = [];\n    var closest_distances_index44\
    \ = [];\n    var closest_distances_index45 = [];\n    var closest_distances_index46\
    \ = [];\n    var closest_distances_index47 = [];\n    var closest_distances_index48\
    \ = [];\n    var closest_distances_index49 = [];\n    var closest_distances_index50\
    \ = [];\n    var closest_distances_index51 = [];\n    var closest_distances_index52\
    \ = [];\n    var closest_distances_index53 = [];\n    var closest_distances_index54\
    \ = [];\n    var closest_distances_index55 = [];\n    var closest_distances_index56\
    \ = [];\n    var closest_distances_index57 = [];\n    var closest_distances_index58\
    \ = [];\n    var closest_distances_index59 = [];\n    var closest_distances_index60\
    \ = [];\n    var closest_distances_index61 = [];\n    var closest_distances_",
  "    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n \
    \   var smallest_index = -1;\n    var largest_index = -1;\n    for(var i = 1;\
    \ i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n     \
    \       smallest_number = numbers[i];\n            smallest_index = i;\n     \
    \   }\n        if(numbers[i] > largest_number){\n            largest_number =\
    \ numbers[i];\n            largest_index = i;\n        }\n    }\n    return [smallest_index,\
    \ largest_index];\n}\n", "    var smallest = numbers[0];\n    var largest = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n\
    \            smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "    var smallest = Math.min.apply(Math, numbers);\n    var largest = Math.max.apply(Math,\
    \ numbers);\n    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        if(numbers[i] == smallest || numbers[i] == largest){\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "  var smallest = numbers[0];\n \
    \ var largest = numbers[0];\n  for(var i = 1; i < numbers.length; i++){\n    if(numbers[i]\
    \ < smallest){\n      smallest = numbers[i];\n    }\n    if(numbers[i] > largest){\n\
    \      largest = numbers[i];\n    }\n  }\n  return [smallest, largest];\n}\n",
  "    var closest_numbers = [];\n    var closest_distances = [];\n    var closest_index\
    \ = 0;\n    var closest_distance = 0;\n    var i;\n    var j;\n    for(i = 0;\
    \ i < numbers.length; i++){\n        for(j = 0; j < numbers.length; j++){\n  \
    \          if(i != j){\n                var distance = numbers[i] - numbers[j];\n\
    \                if(closest_distance > distance){\n                    closest_distance\
    \ = distance;\n                    closest_index = i;\n                    closest_numbers\
    \ = [numbers[i], numbers[j]];\n                }\n            }\n        }\n \
    \   }\n    return [closest_index, closest_numbers];\n}\n", "\tvar closest_numbers\
    \ = [];\n\tvar closest_distances = [];\n\tvar smallest_number = numbers[0];\n\t\
    var largest_number = numbers[0];\n\t\n\tfor(var i = 1; i < numbers.length; i++){\n\
    \t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\t\
    \t}\n\t\t\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\
    \t\t}\n\t\t\n\t\tclosest_numbers.push(smallest_number);\n\t\tclosest_numbers.push(largest_number);\n\
    \t\t\n\t\tvar distance = smallest_number - largest_number;\n\t\tclosest_distances.push(distance);\n\
    \t\tclosest_distances.push(distance);\n\t}\n\t\n\treturn [closest_numbers, closest_distances];\n\
    }\n", "\tvar closest_numbers = [];\n\tvar closest_distances = [];\n\t\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tvar current_distance = numbers[i] - numbers[i\
    \ - 1];\n\t\tvar current_index = 0;\n\t\t\n\t\twhile(current_distance > closest_distances[current_index]){\n\
    \t\t\tcurrent_index++;\n\t\t}\n\t\t\n\t\tclosest_numbers.push(numbers[i - 1]);\n\
    \t\tclosest_numbers.push(numbers[current_index]);\n\t\tclosest_distances.push(current_distance);\n\
    \t}\n\t\n\treturn closest_numbers;\n}\n", "\tvar closest_pair = numbers[0];\n\t\
    var closest_distance = numbers[1];\n\tfor(var i = 1; i < numbers.length; i++){\n\
    \t\tvar current_distance = numbers[i] - closest_pair;\n\t\tif(current_distance\
    \ < closest_distance){\n\t\t\tclosest_pair = numbers[i];\n\t\t\tclosest_distance\
    \ = current_distance;\n\t\t}\n\t}\n\treturn [closest_pair, closest_distance];\n\
    }\n", "\tvar smallest = Math.min(numbers[0], numbers[1]);\n\tvar largest = Math.max(numbers[0],\
    \ numbers[1]);\n\tvar result = [smallest, largest];\n\tfor(var i = 2; i < numbers.length;\
    \ i++){\n\t\tvar current_smallest = Math.min(numbers[0], numbers[i]);\n\t\tvar\
    \ current_largest = Math.max(numbers[0], numbers[i]);\n\t\tif(current_smallest\
    \ < smallest){\n\t\t\tsmallest = current_smallest;\n\t\t}\n\t\tif(current_largest\
    \ > largest){\n\t\t\tlargest = current_largest;\n\t\t}\n\t\tresult.push(current_smallest);\n\
    \t\tresult.push(current_largest);\n\t}\n\treturn result;\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "    var smallest_number = numbers[0];\n    var biggest_number\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < smallest_number){\n            smallest_number = numbers[i];\n        }\n\
    \        if(numbers[i] > biggest_number){\n            biggest_number = numbers[i];\n\
    \        }\n    }\n    return [smallest_number, biggest_number];\n}\n", "    var\
    \ smallest = Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0],\
    \ numbers[1]);\n    var result = [smallest, largest];\n    for(var i = 2; i <\
    \ numbers.length; i++){\n        var current_smallest = Math.min(numbers[0], numbers[i]);\n\
    \        var current_largest = Math.max(numbers[0], numbers[i]);\n        if(current_smallest\
    \ == smallest && current_largest == largest){\n            continue;\n       \
    \ }\n        if(current_smallest < smallest && current_largest > largest){\n \
    \           smallest = current_smallest;\n            largest = current_largest;\n\
    \            result[0] = smallest;\n            result[1] = largest;\n       \
    \ }\n        else if(current_smallest > smallest && current_largest < largest){\n\
    \            smallest = current_smallest;\n            largest = current_largest;\n\
    \            result[0] = smallest;\n            result[1] = largest;\n       \
    \ }\n        else if(current_smallest < smallest && current_largest > largest){\n\
    \            smallest = current_smallest;\n            largest = current_largest;\n\
    \            result[0] = smallest;\n            result[1] = largest;\n       \
    \ }\n        else if(current_smallest > smallest && current_largest < largest){\n\
    \            smallest = current_smallest;\n            largest = current_largest;\n\
    \            result[0] = smallest;\n            result[1] = largest;\n       \
    \ }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>",
  "    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n \
    \   for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        else if(numbers[i]\
    \ > largest_number){\n            largest_number = numbers[i];\n        }\n  \
    \  }\n    return [smallest_number, largest_number];\n}\n", "\tvar smallest = numbers[0];\n\
    \tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length; i++){\n\t\t\
    if(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\t\tif(numbers[i]\
    \ > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn [smallest, largest];\n\
    }\n", "  var smallest = numbers[0];\n  var largest = numbers[0];\n  for(var i\
    \ = 1; i < numbers.length; i++){\n    if(numbers[i] < smallest){\n      smallest\
    \ = numbers[i];\n    }\n    if(numbers[i] > largest){\n      largest = numbers[i];\n\
    \    }\n  }\n  return [smallest, largest];\n}\n", "    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        else if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = -1;\n    var largest_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, largest_number];\n}\n", "\tvar smallest\
    \ = numbers[0];\n\tvar largest = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\
    \t\tif(numbers[i] > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn\
    \ [smallest, largest];\n}\n", "    var closest_elements = [];\n    var closest_distance\
    \ = Number.MAX_VALUE;\n    for(var i = 0; i < numbers.length; i++){\n        var\
    \ distance = numbers[i] - numbers[closest_elements.length];\n        if(distance\
    \ < closest_distance){\n            closest_elements = [numbers[i]];\n       \
    \     closest_distance = distance;\n        }\n        else if(distance == closest_distance){\n\
    \            closest_elements.push(numbers[i]);\n        }\n    }\n    return\
    \ closest_elements;\n}\n", "    var results = [];\n    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    results.push([smallest, largest]);\n    return results;\n\
    }\n", "    var closest_pair = numbers[0];\n    var closest_distance = Number.MAX_VALUE;\n\
    \    var closest_index = 0;\n    for(var i = 1; i < numbers.length; i++){\n  \
    \      var distance = numbers[i] - closest_pair;\n        if(distance < closest_distance){\n\
    \            closest_pair = numbers[i];\n            closest_distance = distance;\n\
    \            closest_index = i;\n        }\n    }\n    return [closest_pair, numbers[closest_index]];\n\
    }\n", "\tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\
    \t\t\tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\
    \t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\treturn [smallest_number, largest_number];\n\
    }\n", "\tvar closest_numbers = [];\n\tvar closest_distances = [];\n\tfor(var i\
    \ = 0; i < numbers.length; i++){\n\t\tvar current_distance = numbers[i];\n\t\t\
    for(var j = i + 1; j < numbers.length; j++){\n\t\t\tvar next_distance = numbers[j];\n\
    \t\t\tif(next_distance < current_distance){\n\t\t\t\tcurrent_distance = next_distance;\n\
    \t\t\t}\n\t\t}\n\t\tclosest_numbers.push(current_distance);\n\t\tclosest_distances.push(current_distance);\n\
    \t}\n\tclosest_numbers.sort(function(a, b){return b - a});\n\tclosest_distances.sort(function(a,\
    \ b){return b - a});\n\treturn [closest_numbers[0], closest_numbers[closest_numbers.length\
    \ - 1]];\n}\n", "    var closest_elements = [];\n    var smallest_number = numbers[0];\n\
    \    var largest_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest_number){\n            smallest_number\
    \ = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n       \
    \     largest_number = numbers[i];\n        }\n    }\n    closest_elements.push(smallest_number);\n\
    \    closest_elements.push(largest_number);\n    return closest_elements;\n}\n",
  "    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var i =\
    \ 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n         \
    \   smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n   \
    \         largest = numbers[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    var smallest_index = -1;\n    var largest_index = -1;\n    for(var i = 1;\
    \ i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n     \
    \       smallest_number = numbers[i];\n            smallest_index = i;\n     \
    \   }\n        if(numbers[i] > largest_number){\n            largest_number =\
    \ numbers[i];\n            largest_index = i;\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "    var smallest = Math.min(numbers[0], numbers[1]);\n\
    \    var largest = Math.max(numbers[0], numbers[1]);\n    var result = [smallest,\
    \ largest];\n    for(var i = 2; i < numbers.length; i++){\n        var current\
    \ = Math.max(numbers[i], numbers[i-1]);\n        var next = Math.min(numbers[i],\
    \ numbers[i-1]);\n        if(current < smallest){\n            smallest = current;\n\
    \            result[0] = current;\n        }\n        if(next > largest){\n  \
    \          largest = next;\n            result[1] = next;\n        }\n    }\n\
    \    return result;\n}\n", "    var result = [];\n    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    result.push(smallest);\n    result.push(largest);\n   \
    \ return result;\n}\n", "    var smallest = numbers[0];\n    var largest = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n\
    \            smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "\tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\
    \tvar smallest_index = -1;\n\tvar largest_index = -1;\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\
    \t\t\tsmallest_index = i;\n\t\t}\n\t\telse if(numbers[i] > largest_number){\n\t\
    \t\tlargest_number = numbers[i];\n\t\t\tlargest_index = i;\n\t\t}\n\t}\n\treturn\
    \ [smallest_number, largest_number];\n}\n", "    var closest_pair = numbers[0];\n\
    \    var closest_distance = numbers[1];\n    var closest_index = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        var current_distance =\
    \ numbers[i];\n        if(current_distance < closest_distance){\n            closest_pair\
    \ = numbers[i];\n            closest_distance = current_distance;\n          \
    \  closest_index = i;\n        }\n    }\n    return [closest_pair, closest_index];\n\
    }\n", "\tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\
    \tvar smallest_index = 0;\n\tvar largest_index = 0;\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\
    \t\t\tsmallest_index = i;\n\t\t}\n\t\telse if(numbers[i] > largest_number){\n\t\
    \t\tlargest_number = numbers[i];\n\t\t\tlargest_index = i;\n\t\t}\n\t}\n\treturn\
    \ [smallest_number, largest_number];\n}\n", "    var smallest_number = numbers[0];\n\
    \    var second_smallest_number = numbers[0];\n    var smallest_index = 0;\n \
    \   var second_smallest_index = 0;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        else if(numbers[i] > second_smallest_number){\n\
    \            second_smallest_number = numbers[i];\n            second_smallest_index\
    \ = i;\n        }\n    }\n    return [smallest_number, second_smallest_number];\n\
    }\n", "\tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\
    \t\t\tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\
    \t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\treturn [smallest_number, largest_number];\n\
    }\n", "    var smallest = Math.min.apply(null, numbers);\n    var largest = Math.max.apply(null,\
    \ numbers);\n    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        if(numbers[i] == smallest){\n            result.push(smallest);\n   \
    \     }\n        else if(numbers[i] == largest){\n            result.push(largest);\n\
    \        }\n        else{\n            result.push(numbers[i]);\n        }\n \
    \   }\n    return result;\n}\n", "\tvar closest_numbers = [];\n\tvar closest_distances\
    \ = [];\n\t\n\tfor(var i = 0; i < numbers.length; i++){\n\t\tvar current_distance\
    \ = numbers[i];\n\t\tvar current_number = numbers[i];\n\t\t\n\t\tfor(var j = i\
    \ + 1; j < numbers.length; j++){\n\t\t\tvar next_distance = numbers[j];\n\t\t\t\
    var next_number = numbers[j];\n\t\t\t\n\t\t\tif(next_distance < current_distance){\n\
    \t\t\t\tcurrent_distance = next_distance;\n\t\t\t\tcurrent_number = next_number;\n\
    \t\t\t}\n\t\t}\n\t\t\n\t\tclosest_numbers.push(current_number);\n\t\tclosest_distances.push(current_distance);\n\
    \t}\n\t\n\treturn [closest_numbers, closest_distances];\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "\tvar smallest_number = numbers[0];\n\tvar largest_number\
    \ = numbers[0];\n\tvar smallest_index = 0;\n\tvar largest_index = 0;\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\
    \tsmallest_number = numbers[i];\n\t\t\tsmallest_index = i;\n\t\t}\n\t\tif(numbers[i]\
    \ > largest_number){\n\t\t\tlargest_number = numbers[i];\n\t\t\tlargest_index\
    \ = i;\n\t\t}\n\t}\n\treturn [smallest_number, largest_number];\n}\n", "    var\
    \ smallest = numbers[0];\n    var largest = numbers[0];\n    for(var i = 1; i\
    \ < numbers.length; i++){\n        if(numbers[i] < smallest){\n            smallest\
    \ = numbers[i];\n        }\n        if(numbers[i] > largest){\n            largest\
    \ = numbers[i];\n        }\n    }\n    return [smallest, largest];\n}\n", "\t\
    var closest_numbers = [numbers[0]];\n\tvar closest_distances = [numbers[0]];\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tvar current_distance = numbers[i]\
    \ - numbers[i - 1];\n\t\tif(current_distance < closest_distances[0]){\n\t\t\t\
    closest_numbers = [numbers[i]];\n\t\t\tclosest_distances = [current_distance];\n\
    \t\t}else{\n\t\t\tclosest_numbers.push(numbers[i]);\n\t\t\tclosest_distances.push(current_distance);\n\
    \t\t}\n\t}\n\treturn [closest_numbers, closest_distances];\n}\n", "    var closest_pairs\
    \ = [];\n    var closest_pair;\n    var closest_number;\n    var closest_distance;\n\
    \    var i;\n    for(i = 0; i < numbers.length; i++){\n        closest_number\
    \ = numbers[i];\n        closest_distance = Number.MAX_VALUE;\n        for(j =\
    \ 0; j < numbers.length; j++){\n            if(j != i){\n                var distance\
    \ = abs(closest_number - numbers[j]);\n                if(distance < closest_distance){\n\
    \                    closest_number = numbers[j];\n                    closest_distance\
    \ = distance;\n                }\n            }\n        }\n        closest_pair\
    \ = [closest_number, i];\n        closest_pairs.push(closest_pair);\n    }\n \
    \   return closest_pairs;\n}\n", "\tvar smallest = Math.min(numbers[0], numbers[1]);\n\
    \tvar largest = Math.max(numbers[0], numbers[1]);\n\tvar result = [];\n\tfor(var\
    \ i = 0; i <= largest; i++){\n\t\tif(numbers[0] == i){\n\t\t\tresult.push(smallest);\n\
    \t\t}\n\t\telse if(numbers[1] == i){\n\t\t\tresult.push(largest);\n\t\t}\n\t\t\
    else{\n\t\t\tvar diff = Math.abs(numbers[0] - i);\n\t\t\tif(diff < smallest){\n\
    \t\t\t\tresult.push(smallest);\n\t\t\t\tsmallest = diff;\n\t\t\t}\n\t\t\telse\
    \ if(diff > largest){\n\t\t\t\tresult.push(largest);\n\t\t\t\tlargest = diff;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "    var smallest_number = numbers[0];\n    var largest_number\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < smallest_number){\n            smallest_number = numbers[i];\n        }\n\
    \        else if(numbers[i] > largest_number){\n            largest_number = numbers[i];\n\
    \        }\n    }\n    return [smallest_number, largest_number];\n}\n", "    var\
    \ closest_numbers = [];\n    var closest_distances = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        var distance = find_closest_distance(numbers[i],\
    \ numbers);\n        closest_numbers.push(numbers[i]);\n        closest_distances.push(distance);\n\
    \    }\n    closest_numbers.sort(function(a, b){\n        return a - b;\n    });\n\
    \    closest_distances.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return closest_numbers;\n}\n", "\tvar smallest = numbers[0];\n\tvar largest\
    \ = numbers[0];\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ < smallest){\n\t\t\tsmallest = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest){\n\
    \t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\treturn [smallest, largest];\n}\n",
  "\tvar smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\
    \tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\
    \t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\treturn [smallest_number, largest_number];\n\
    }\n", "    var smallest = Math.min.apply(Math, numbers);\n    var largest = Math.max.apply(Math,\
    \ numbers);\n    var result = [];\n    for(var i=0;i<numbers.length;i++){\n  \
    \      if(numbers[i] == smallest){\n            result.push(smallest);\n     \
    \   }\n        else if(numbers[i] == largest){\n            result.push(largest);\n\
    \        }\n        else{\n            result.push(numbers[i]);\n        }\n \
    \   }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "\t\
    var smallest = numbers[0];\n\tvar largest = numbers[0];\n\tfor(var i = 1; i <\
    \ numbers.length; i++){\n\t\tif(numbers[i] < smallest){\n\t\t\tsmallest = numbers[i];\n\
    \t\t}\n\t\tif(numbers[i] > largest){\n\t\t\tlargest = numbers[i];\n\t\t}\n\t}\n\
    \treturn [smallest, largest];\n}\n", "    var smallest_number = numbers[0];\n\
    \    var largest_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest_number){\n            smallest_number\
    \ = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n       \
    \     largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "\tvar closest_elements = [];\n\tvar closest_distances\
    \ = [];\n\tvar closest_index = 0;\n\tvar closest_distance = 0;\n\tvar closest_number\
    \ = numbers[0];\n\tvar closest_distance_to_closest_number = numbers[1];\n\tvar\
    \ closest_number_to_closest_distance = numbers[2];\n\t\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tvar current_number = numbers[i];\n\t\tvar current_distance = Math.abs(current_number\
    \ - closest_number);\n\t\t\n\t\tif(current_distance < closest_distance){\n\t\t\
    \tclosest_number = current_number;\n\t\t\tclosest_distance = current_distance;\n\
    \t\t\tclosest_index = i;\n\t\t}\n\t\t\n\t\tvar current_distance_to_closest_number\
    \ = Math.abs(current_number - closest_number_to_closest_number);\n\t\t\n\t\tif(current_distance_to_closest_number\
    \ < closest_distance_to_closest_number){\n\t\t\tclosest_number_to_closest_number\
    \ = current_number;\n\t\t\tclosest_distance_to_closest_number = current_distance_to_closest_number;\n\
    \t\t\tclosest_index = i;\n\t\t}\n\t}\n\t\n\tclosest_elements.push(closest_number);\n\
    \tclosest_elements.push(closest_number_to_closest_number);\n\tclosest_elements.push(closest_distance);\n\
    \tclosest_elements.push(closest_distance_to_closest_number);\n\t\n\treturn closest_elements;\n\
    }\n", "\tvar closest_elements = [];\n\tvar smallest_number = numbers[0];\n\tvar\
    \ largest_number = numbers[0];\n\tfor(var i = 1; i < numbers.length; i++){\n\t\
    \tif(numbers[i] < smallest_number){\n\t\t\tsmallest_number = numbers[i];\n\t\t\
    }\n\t\tif(numbers[i] > largest_number){\n\t\t\tlargest_number = numbers[i];\n\t\
    \t}\n\t}\n\tclosest_elements.push(smallest_number);\n\tclosest_elements.push(largest_number);\n\
    \treturn closest_elements;\n}\n", "    var smallest_number = numbers[0];\n   \
    \ var biggest_number = numbers[0];\n    var smallest_index = -1;\n    var biggest_index\
    \ = -1;\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] <\
    \ smallest_number){\n            smallest_number = numbers[i];\n            smallest_index\
    \ = i;\n        }\n        else if(numbers[i] > biggest_number){\n           \
    \ biggest_number = numbers[i];\n            biggest_index = i;\n        }\n  \
    \  }\n    return [smallest_number, biggest_number];\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    var smallest_index\
    \ = -1;\n    var largest_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \            smallest_index = i;\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n            largest_index = i;\n  \
    \      }\n    }\n    return [smallest_number, largest_number];\n}\n", "\tvar closest_numbers\
    \ = [];\n\tvar closest_numbers_index = 0;\n\tvar closest_numbers_distance = 0;\n\
    \tvar current_number = 0;\n\tvar current_distance = 0;\n\tvar current_index =\
    \ 0;\n\t\n\tfor(var i = 0; i < numbers.length; i++){\n\t\tcurrent_number = numbers[i];\n\
    \t\tcurrent_distance = current_number;\n\t\tcurrent_index = 0;\n\t\t\n\t\twhile(current_distance\
    \ > closest_numbers_distance){\n\t\t\tcurrent_index++;\n\t\t\tcurrent_distance\
    \ = current_numbers[current_index];\n\t\t}\n\t\t\n\t\tclosest_numbers.push(current_index);\n\
    \t\tclosest_numbers_distance = current_distance;\n\t}\n\t\n\treturn closest_numbers;\n\
    }\n", "    var smallest = Math.min(numbers[0], numbers[1]);\n    var largest =\
    \ Math.max(numbers[0], numbers[1]);\n    var result = [smallest, largest];\n \
    \   for(var i = 2; i < numbers.length; i++){\n        var new_smallest = Math.min(numbers[0],\
    \ numbers[i]);\n        var new_largest = Math.max(numbers[0], numbers[i]);\n\
    \        if(new_smallest < smallest){\n            smallest = new_smallest;\n\
    \            result[0] = smallest;\n        }\n        if(new_largest > largest){\n\
    \            largest = new_largest;\n            result[1] = largest;\n      \
    \  }\n    }\n    return result;\n}\n", "    var smallest = Math.min(numbers[0],\
    \ numbers[1]);\n    var largest = Math.max(numbers[0], numbers[1]);\n    var result\
    \ = [smallest, largest];\n    for(var i = 2; i < numbers.length; i++){\n     \
    \   var current = Math.max(numbers[i], numbers[i-1]);\n        var next = Math.min(numbers[i],\
    \ numbers[i-1]);\n        if(current < smallest){\n            smallest = current;\n\
    \            result[0] = current;\n        }\n        else if(current > largest){\n\
    \            largest = current;\n            result[1] = current;\n        }\n\
    \        else if(next < smallest){\n            smallest = next;\n           \
    \ result[0] = current;\n        }\n        else if(next > largest){\n        \
    \    largest = next;\n            result[1] = current;\n        }\n    }\n   \
    \ return result;\n}\n", "    var smallest = Math.min(numbers[0], numbers[1]);\n\
    \    var largest = Math.max(numbers[0], numbers[1]);\n    var result = [smallest,\
    \ largest];\n    for(var i = 2; i < numbers.length; i++){\n        var current\
    \ = Math.max(numbers[i], numbers[i-1]);\n        var next = Math.min(numbers[i],\
    \ numbers[i-1]);\n        if(current == next){\n            continue;\n      \
    \  }\n        if(current < smallest){\n            smallest = current;\n     \
    \   }\n        if(current > largest){\n            largest = current;\n      \
    \  }\n        result.push(current);\n    }\n    return result;\n}\n", "    var\
    \ smallest = Math.min.apply(Math, numbers);\n    var largest = Math.max.apply(Math,\
    \ numbers);\n    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        if(numbers[i] === smallest || numbers[i] === largest){\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var smallest = Math.min(numbers[0],\
    \ numbers[1]);\n    var largest = Math.max(numbers[0], numbers[1]);\n    var result\
    \ = [smallest, largest];\n    for(var i = 2; i < numbers.length; i++){\n     \
    \   var current = Math.max(numbers[i], numbers[i-1]);\n        var next = Math.min(numbers[i],\
    \ numbers[i-1]);\n        if(current < smallest){\n            smallest = current;\n\
    \            result[0] = current;\n        }\n        if(next > largest){\n  \
    \          largest = next;\n            result[1] = next;\n        }\n    }\n\
    \    return result;\n}\n", "    var smallest = numbers[0];\n    var largest =\
    \ numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < smallest){\n            smallest = numbers[i];\n        }\n        if(numbers[i]\
    \ > largest){\n            largest = numbers[i];\n        }\n    }\n    return\
    \ [smallest, largest];\n}\n", "    var results = [];\n    numbers.forEach(function(number){\n\
    \        var smallest = numbers[0];\n        var largest = numbers[0];\n     \
    \   numbers.forEach(function(number){\n            if(number < smallest || number\
    \ > largest){\n                smallest = number;\n                largest = number;\n\
    \            }\n        });\n        results.push({\n            number: smallest,\n\
    \            distance: largest - smallest\n        });\n    });\n    results.sort(function(a,\
    \ b){\n        return a.distance - b.distance;\n    });\n    return results;\n\
    }\n", "    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        else if(numbers[i]\
    \ > largest_number){\n            largest_number = numbers[i];\n        }\n  \
    \  }\n    return [smallest_number, largest_number];\n}\n", "    var smallest =\
    \ Math.min(numbers[0], numbers[1]);\n    var largest = Math.max(numbers[0], numbers[1]);\n\
    \    var result = [smallest, largest];\n    for(var i = 2; i < numbers.length;\
    \ i++){\n        var current_smallest = Math.min(numbers[0], numbers[i]);\n  \
    \      var current_largest = Math.max(numbers[0], numbers[i]);\n        if(current_smallest\
    \ == smallest && current_largest == largest){\n            result.push(current_smallest);\n\
    \            result.push(current_largest);\n        }else if(current_smallest\
    \ == smallest && current_largest != largest){\n            result.push(current_smallest);\n\
    \            largest = current_largest;\n        }else if(current_smallest !=\
    \ smallest && current_largest == largest){\n            smallest = current_smallest;\n\
    \        }\n    }\n    return result;\n}\n", "    var smallest_number = numbers[0];\n\
    \    var largest_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest_number){\n            smallest_number\
    \ = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n       \
    \     largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "\tvar smallest = Math.min(numbers[0], numbers[1]);\n\
    \tvar largest = Math.max(numbers[0], numbers[1]);\n\tvar result = [smallest, largest];\n\
    \tfor(var i = 2; i < numbers.length; i++){\n\t\tvar current = Math.max(numbers[i],\
    \ numbers[i-1]);\n\t\tvar next = Math.min(numbers[i], numbers[i-1]);\n\t\tif(current\
    \ < smallest){\n\t\t\tsmallest = current;\n\t\t}\n\t\tif(next > largest){\n\t\t\
    \tlargest = next;\n\t\t}\n\t\tresult.push(current);\n\t}\n\treturn result;\n}\n",
  "  var result = [];\n  var smallest = numbers[0];\n  var largest = numbers[0];\n\
    \  for(var i = 1; i < numbers.length; i++){\n    if(numbers[i] < smallest){\n\
    \      smallest = numbers[i];\n    }\n    if(numbers[i] > largest){\n      largest\
    \ = numbers[i];\n    }\n  }\n  result.push(smallest);\n  result.push(largest);\n\
    \  return result;\n}\n", "    var smallest = Math.min(numbers[0], numbers[1]);\n\
    \    var largest = Math.max(numbers[0], numbers[1]);\n    var result = [];\n \
    \   for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] < smallest\
    \ || numbers[i] > largest){\n            continue;\n        }\n        result.push(numbers[i]);\n\
    \    }\n    return result;\n}\n", "\tvar closest_elements = [];\n\tvar closest_distance\
    \ = Number.MAX_VALUE;\n\tvar closest_index = 0;\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tvar distance = numbers[i] - numbers[closest_index];\n\t\tif(distance\
    \ < closest_distance){\n\t\t\tclosest_distance = distance;\n\t\t\tclosest_index\
    \ = i;\n\t\t}\n\t}\n\tclosest_elements.push(numbers[closest_index]);\n\tclosest_elements.push(numbers[closest_index\
    \ - 1]);\n\treturn closest_elements;\n}\n", "\tvar smallest_number = numbers[0];\n\
    \tvar biggest_number = numbers[0];\n\tvar smallest_index = -1;\n\tvar biggest_index\
    \ = -1;\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\
    \t\t\tsmallest_number = numbers[i];\n\t\t\tsmallest_index = i;\n\t\t}\n\t\tif(numbers[i]\
    \ > biggest_number){\n\t\t\tbiggest_number = numbers[i];\n\t\t\tbiggest_index\
    \ = i;\n\t\t}\n\t}\n\treturn [smallest_number, biggest_number];\n}\n", "\tvar\
    \ smallest_number = numbers[0];\n\tvar largest_number = numbers[0];\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest_number){\n\t\t\
    \tsmallest_number = numbers[i];\n\t\t}\n\t\tif(numbers[i] > largest_number){\n\
    \t\t\tlargest_number = numbers[i];\n\t\t}\n\t}\n\treturn [smallest_number, largest_number];\n\
    }\n", "\tvar closest_numbers = [];\n\tvar closest_distances = [];\n\tvar closest_index\
    \ = 0;\n\tvar closest_distance = 0;\n\tvar closest_number = numbers[0];\n\tvar\
    \ closest_distance = numbers[1];\n\tvar closest_index = numbers[0];\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tvar current_distance = numbers[i] - closest_number;\n\
    \t\tif(current_distance < closest_distance){\n\t\t\tclosest_number = numbers[i];\n\
    \t\t\tclosest_distance = current_distance;\n\t\t\tclosest_index = i;\n\t\t}\n\t\
    }\n\tclosest_numbers.push(closest_number);\n\tclosest_distances.push(closest_distance);\n\
    \treturn [closest_numbers, closest_distances];\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var biggest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > biggest_number){\n\
    \            biggest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ biggest_number];\n}\n", "\tvar closest_numbers = [];\n\tvar closest_distances\
    \ = [];\n\t\n\tfor(var i = 0; i < numbers.length; i++){\n\t\tfor(var j = 0; j\
    \ < numbers.length; j++){\n\t\t\tif(i != j){\n\t\t\t\tvar distance = numbers[i]\
    \ - numbers[j];\n\t\t\t\tif(closest_distances.length < 2){\n\t\t\t\t\tclosest_distances.push(distance);\n\
    \t\t\t\t\tclosest_numbers.push(numbers[i]);\n\t\t\t\t\tclosest_numbers.push(numbers[j]);\n\
    \t\t\t\t}\n\t\t\t\telse if(closest_distances[0] > distance){\n\t\t\t\t\tclosest_distances[0]\
    \ = distance;\n\t\t\t\t\tclosest_numbers[0] = numbers[i];\n\t\t\t\t\tclosest_numbers[1]\
    \ = numbers[j];\n\t\t\t\t}\n\t\t\t\telse if(closest_distances[1] < distance){\n\
    \t\t\t\t\tclosest_distances[1] = distance;\n\t\t\t\t\tclosest_numbers[1] = numbers[i];\n\
    \t\t\t\t\tclosest_numbers[0] = numbers[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\
    \n\treturn closest_numbers;\n}\n", "    var smallest_number = numbers[0];\n  \
    \  var largest_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest_number){\n            smallest_number = numbers[i];\n\
    \        }\n        if(numbers[i] > largest_number){\n            largest_number\
    \ = numbers[i];\n        }\n    }\n    return [smallest_number, largest_number];\n\
    }\n", "\tvar closest_numbers = [];\n\tvar closest_distances = [];\n\tfor(var i\
    \ = 0; i < numbers.length; i++){\n\t\tclosest_numbers.push(numbers[i]);\n\t\t\
    closest_distances.push(0);\n\t}\n\tfor(var i = 0; i < numbers.length; i++){\n\t\
    \tfor(var j = 0; j < numbers.length; j++){\n\t\t\tif(i != j){\n\t\t\t\tvar distance\
    \ = numbers[i] - numbers[j];\n\t\t\t\tif(closest_distances[j] < distance){\n\t\
    \t\t\t\tclosest_numbers[j] = numbers[j];\n\t\t\t\t\tclosest_distances[j] = distance;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn [closest_numbers[0], closest_numbers[closest_numbers.length\
    \ - 1]];\n}\n", "    var smallest_number = numbers[0];\n    var largest_number\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < smallest_number){\n            smallest_number = numbers[i];\n        }\n\
    \        if(numbers[i] > largest_number){\n            largest_number = numbers[i];\n\
    \        }\n    }\n    return [smallest_number, largest_number];\n}\n", "\tvar\
    \ closest_pair = numbers[0];\n\tvar closest_distance = numbers[1];\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tvar distance = numbers[i] - closest_pair;\n\
    \t\tif(distance < closest_distance){\n\t\t\tclosest_pair = numbers[i];\n\t\t\t\
    closest_distance = distance;\n\t\t}\n\t}\n\treturn [closest_pair, closest_distance];\n\
    }\n", "    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        else if(numbers[i]\
    \ > largest_number){\n            largest_number = numbers[i];\n        }\n  \
    \  }\n    return [smallest_number, largest_number];\n}\n", "    var closest_elements\
    \ = [];\n    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        if(numbers[i] >\
    \ largest_number){\n            largest_number = numbers[i];\n        }\n    }\n\
    \    closest_elements.push(smallest_number);\n    closest_elements.push(largest_number);\n\
    \    return closest_elements;\n}\n", "\tvar closest_numbers = [];\n\tvar closest_distances\
    \ = [];\n\tvar closest_index = 0;\n\tvar closest_distance = 0;\n\tvar closest_number\
    \ = numbers[0];\n\tvar closest_distance = numbers[1];\n\tvar closest_index = 0;\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tvar current_distance = numbers[i]\
    \ - closest_number;\n\t\tif(current_distance < closest_distance){\n\t\t\tclosest_number\
    \ = numbers[i];\n\t\t\tclosest_distance = current_distance;\n\t\t\tclosest_index\
    \ = i;\n\t\t}\n\t}\n\tclosest_numbers.push(closest_number);\n\tclosest_distances.push(closest_distance);\n\
    \treturn [closest_numbers, closest_distances];\n}\n", "    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        else if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var closest_elements\
    \ = [];\n    var smallest_number = numbers[0];\n    var largest_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n        }\n        if(numbers[i] >\
    \ largest_number){\n            largest_number = numbers[i];\n        }\n    }\n\
    \    closest_elements.push(smallest_number);\n    closest_elements.push(largest_number);\n\
    \    return closest_elements;\n}\n", "    var smallest_number = numbers[0];\n\
    \    var biggest_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < smallest_number){\n            smallest_number\
    \ = numbers[i];\n        }\n        else if(numbers[i] > biggest_number){\n  \
    \          biggest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ biggest_number];\n}\n", "    var smallest_number = numbers[0];\n    var largest_number\
    \ = numbers[0];\n    var smallest_index = 0;\n    var largest_index = 0;\n   \
    \ for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] < smallest_number){\n\
    \            smallest_number = numbers[i];\n            smallest_index = i;\n\
    \        }\n        if(numbers[i] > largest_number){\n            largest_number\
    \ = numbers[i];\n            largest_index = i;\n        }\n    }\n    return\
    \ [smallest_number, largest_number];\n}\n", "    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    return [smallest, largest];\n}\n", "    var smallest_number\
    \ = numbers[0];\n    var largest_number = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest_number){\n         \
    \   smallest_number = numbers[i];\n        }\n        if(numbers[i] > largest_number){\n\
    \            largest_number = numbers[i];\n        }\n    }\n    return [smallest_number,\
    \ largest_number];\n}\n", "\tvar smallest = numbers[0];\n\tvar largest = numbers[0];\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] < smallest){\n\t\
    \t\tsmallest = numbers[i];\n\t\t}\n\t\telse if(numbers[i] > largest){\n\t\t\t\
    largest = numbers[i];\n\t\t}\n\t}\n\treturn [smallest, largest];\n}\n", "    var\
    \ result = [];\n    var smallest = numbers[0];\n    var largest = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n\
    \            smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    result.push(smallest);\n\
    \    result.push(largest);\n    return result;\n}\n", "    var closest_pair =\
    \ numbers[0];\n    var closest_distance = numbers[1];\n    var closest_element\
    \ = numbers[2];\n\n    for(var i = 1; i < numbers.length; i++){\n        var current_distance\
    \ = numbers[i] - closest_pair;\n        if(current_distance < closest_distance){\n\
    \            closest_pair = numbers[i];\n            closest_distance = current_distance;\n\
    \            closest_element = numbers[i];\n        }\n    }\n\n    return [closest_pair,\
    \ closest_distance, closest_element];\n}\n", "    var smallest = Math.min(numbers[0],\
    \ numbers[1]);\n    var largest = Math.max(numbers[0], numbers[1]);\n    var result\
    \ = [smallest, largest];\n    for(var i = 2; i < numbers.length; i++){\n     \
    \   var new_smallest = Math.min(numbers[i], numbers[i-1]);\n        var new_largest\
    \ = Math.max(numbers[i], numbers[i-1]);\n        if(new_smallest < smallest){\n\
    \            smallest = new_smallest;\n        }\n        if(new_largest > largest){\n\
    \            largest = new_largest;\n        }\n        result.push(new_smallest,\
    \ new_largest);\n    }\n    return result;\n}\n", "    var closest_numbers = [];\n\
    \    var closest_distances = [];\n    var closest_index = 0;\n    var closest_distance\
    \ = 0;\n    var closest_number = numbers[0];\n    var closest_distance = numbers[1];\n\
    \    var i;\n    for(i = 2; i < numbers.length; i++){\n        var current_distance\
    \ = numbers[i] - closest_number;\n        if(current_distance < closest_distance){\n\
    \            closest_number = numbers[i];\n            closest_distance = current_distance;\n\
    \            closest_index = i;\n        }\n    }\n    closest_numbers.push(closest_number);\n\
    \    closest_distances.push(closest_distance);\n    return { numbers: closest_numbers,\
    \ distances: closest_distances };\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

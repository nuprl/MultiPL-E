name: HumanEval_92_any_int
language: js
prompt: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  // Returns false in any other cases.\n// Examples\nfunction any_int(x, y, z){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
  \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
  \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
  \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
  \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
  \ 4, 7),false);\n}\n\ntest();"
completions: ["    return ((x === y) || \n            (x === z) || \n            (y\
    \ === z));\n}\n", "    return ((x === y || x === z) && (x === 0 || x === Infinity\
    \ || x === -Infinity)) || ((y === z || y === 0 || y === Infinity || y === -Infinity)\
    \ && (y === 0 || y === Infinity || y === -Infinity));\n}\n", "  return (x+y+z===((x+y)+z));\n\
    }\n</cell>\n<cell>\nany_int(1,2,3)\n</cell>\n<cell>\nany_int(1,2.3,3)\n</cell>\n\
    <cell>\nany_int(1,2.3,\"3\")\n</cell>\n<cell>\nany_int(\"1\",\"2\",\"3\")\n</cell>\n\
    <cell>\nany_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\",\"2.3\",\"\
    3\")\n</cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"\
    1\",\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\n\
    any_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n\
    </cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\"\
    ,\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\n\
    any_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n\
    </cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\"\
    ,\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\n\
    any_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n\
    </cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\"\
    ,\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\n\
    any_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n\
    </cell>\n<cell>\nany_int(\"1\",\"2.3\",\"3\")\n</cell>\n<cell>\nany_int(\"1\"\
    ,\"2.3\",\"3\")\n</cell>\n", "    return ((x === y) || \n            (x === z)\
    \ || \n            (y === z)) &&\n            ((x % 1 === 0) && (y % 1 === 0)\
    \ && (z % 1 === 0));\n}\n", "  return (x+y+z === (x+y+z));\n}\n", "    return\
    \ ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", "\treturn (x + y +\
    \ z == any_int(x,y,z));\n}\n", "    return ((x + y + z) == ((x + y) + z));\n}\n",
  "\treturn (x + y + z) === (x + y + z);\n}\n", "    return ((x === y || x === z)\
    \ && (x === 0 || x === Infinity || x === -Infinity)) || ((y === z || y === 0 ||\
    \ y === Infinity || y === -Infinity) && (y === 0 || y === Infinity || y === -Infinity));\n\
    }\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", " \
    \   return ((x === y || x === z) && (x === 0 || x === Infinity || x === -Infinity))\
    \ || ((y === x || y === z) && (y === 0 || y === Infinity || y === -Infinity))\
    \ || ((z === x || z === y) && (z === 0 || z === Infinity || z === -Infinity));\n\
    }\n", "    return ((x + y) == z) && (x % 1 == 0) && (y % 1 == 0);\n}\n", "   \
    \ return ((x === y || x === z) && (y === z || y === x));\n}\n", "    return ((x\
    \ === y) && (x === z) && (x === Math.floor(x)));\n}\n", "    return ((x === y\
    \ || x === z) && (x === 0 || x === Infinity || x === -Infinity)) || ((y === x\
    \ || y === z) && (y === 0 || y === Infinity || y === -Infinity)) || ((z === x\
    \ || z === y) && (z === 0 || z === Infinity || z === -Infinity));\n}\n", "   \
    \ return ((x === y || x === z) && (x === 0 || x === Infinity || x === -Infinity))\
    \ || ((y === z || y === 0 || y === Infinity || y === -Infinity) && (y === 0 ||\
    \ y === Infinity || y === -Infinity));\n}\n", "\treturn (x === y || x === z ||\
    \ y === z) && x % 1 === 0 && y % 1 === 0 && z % 1 === 0;\n}\n", "    return ((x\
    \ === y) || \n            (x === z) || \n            (y === z));\n}\n", '    return
    ((x === y || x === z) && x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x ===
    z && x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x === y && x % 1 === 0 &&
    x % 2 === 0 && x % 3 === 0) || (x === z && x % 1 === 0 && x % 2 === 0 && x % 3
    === 0) || (x === y && x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x === z &&
    x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x === y && x % 1 === 0 && x % 2
    === 0 && x % 3 === 0) || (x === z && x % 1 === 0 && x % 2 === 0 && x % 3 === 0)
    || (x === y && x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x === z && x % 1
    === 0 && x % 2 === 0 && x % 3 === 0) || (x === y && x % 1 === 0 && x % 2 === 0
    && x % 3 === 0) || (x === z && x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x
    === y && x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x === z && x % 1 === 0
    && x % 2 === 0 && x % 3 === 0) || (x === y && x % 1 === 0 && x % 2 === 0 && x
    % 3 === 0) || (x === z && x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x ===
    y && x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x === z && x % 1 === 0 &&
    x % 2 === 0 && x % 3 === 0) || (x === y && x % 1 === 0 && x % 2 === 0 && x % 3
    === 0) || (x === z && x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x === y &&
    x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x === z && x % 1 === 0 && x % 2
    === 0 && x % 3 === 0) || (x === y && x % 1 === 0 && x % 2 === 0 && x % 3 === 0)
    || (x === z && x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x === y && x % 1
    === 0 && x % 2 === 0 && x % 3 === 0) || (x === z && x % ', "    return ((x + y\
    \ + z) == (x + y) + z);\n}\n", "    return ((x === y || x === z) && (y === z ||\
    \ y === x));\n}\n", "    return ((x === y && x === z) || (x !== y && x !== z &&\
    \ x !== 0 && y !== 0 && z !== 0));\n}\n", "    return ((x + y + z) == ((x + y)\
    \ + z));\n}\n", "    return ((x === y && x === z) || (x !== y && x !== z && x\
    \ % 1 === 0 && x % 1 !== 0 && x % 1 === 0 && x % 1 !== 0)) ? true : false;\n}\n",
  "    return ((x + y + z) == (x + y) + z);\n}\n", "    return ((x === y) && (x ===\
    \ z) && (x === Math.floor(x)));\n}\n", "    return ((x === y) && (x === z) &&\
    \ (x === Math.floor(x)));\n}\n", "    return ((x === y) && (x === z) && (x ===\
    \ Math.floor(x)));\n}\n", "    return ((x === y || x === z) && x % 1 === 0 &&\
    \ x % 2 === 0 && x % 3 === 0 && y % 1 === 0 && y % 2 === 0 && y % 3 === 0 && z\
    \ % 1 === 0 && z % 2 === 0 && z % 3 === 0);\n}\n</cell>\n<cell>", "  return ((x\
    \ === y || x === z) && x % 1 === 0 && x % 2 === 0 && x % 3 === 0 && y % 1 ===\
    \ 0 && y % 2 === 0 && y % 3 === 0 && z % 1 === 0 && z % 2 === 0 && z % 3 === 0);\n\
    }\n", "    return ((x + y + z) === (x + y) + z);\n}\n", "  return ((x === y) &&\
    \ (x === z) && (x === Math.floor(x)));\n}\n", "  return ((x === y || x === z)\
    \ && (x === 0 || x === Infinity || x === -Infinity)) || ((y === z || y === 0)\
    \ && y === Infinity && y === -Infinity);\n}\n", "    return ((x === y) && (x ===\
    \ z) && (x === Math.floor(x)));\n}\n", "    return ((x === y) || x === z) || (y\
    \ === z);\n}\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n\
    }\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n</cell>\n\
    <cell>", "    return ((x === y || x === z) && (x === 0 || x === Infinity || x\
    \ === -Infinity)) || ((y === z || y === 0) && y === Infinity && y === -Infinity);\n\
    }\n", "    return ((x + y + z) === (x + y + z));\n}\n</cell>\n<cell>", "    return\
    \ ((x === y && x === z) || (x !== y && x !== z && x % 1 === 0 && y % 1 === 0 &&\
    \ z % 1 === 0));\n}\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n\
    }\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", " \
    \ return ((x + y + z) === ((x + y) + z));\n}\n", "    if (x == y || x == z){\n\
    \        return true;\n    }\n    if (y == z){\n        return true;\n    }\n\
    \    return false;\n}\n", "    return ((x + y + z) === (x + y + z));\n}\n", " \
    \   return ((x === y || x === z) && (x === 0 || x === Infinity || x === -Infinity))\
    \ || ((y === z || y === 0) && (y === 0 || y === Infinity || y === -Infinity))\
    \ || ((z === x || z === 0) && (z === 0 || z === Infinity || z === -Infinity));\n\
    }\n", "\treturn (x === y || x === z || y === z) && x % 1 === 0 && y % 1 === 0\
    \ && z % 1 === 0;\n}", "    return ((x + y + z) === (x + y) + z);\n}\n", "\treturn\
    \ (x + y + z) == ((x + y) + (z));\n}", "    return ((x === y && x === z) || (x\
    \ !== y && x !== z && x !== 0 && y !== 0 && z !== 0));\n}\n", "    return ((x\
    \ + y) == z) && (x % 1 == 0) && (y % 1 == 0);\n}\n", "    return ((x === y ||\
    \ x === z) && (x === parseInt(x) + parseInt(y) + parseInt(z)));\n}\n", "    return\
    \ ((x + y + z) === (x + y + z));\n}\n", "    return ((x === y || x === z) && (x\
    \ === 0 || x === Infinity || x === -Infinity)) || ((y === x || y === z) && (y\
    \ === 0 || y === Infinity || y === -Infinity)) || ((z === x || z === y) && (z\
    \ === 0 || z === Infinity || z === -Infinity));\n}\n</cell>\n<cell>", "    return\
    \ ((x === y || x === z) && (x === 0 || x === 9 || x === -9 || (y === 0 && z ===\
    \ 0)));\n}\n", "    return ((x + y + z) === (x + y) + z);\n}\n", "    return ((x\
    \ === y || x === z) && x % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x === z\
    \ && x % 1 === 0 && x % 2 === 0 && x % 3 === 0);\n}\n", "    return ((x === y\
    \ || x === z) && (x === 0 || x === 1) && x % 1 === 0);\n}\n", "    return ((x\
    \ === y || x === z) && (x === 0 || x === Infinity || x === -Infinity)) || ((y\
    \ === z || y === 0) && y === Infinity && y === -Infinity);\n}\n", "    return\
    \ ((x === y && x === z) || (x !== y && x !== z && x !== 0 && y !== 0 && z !==\
    \ 0));\n}\n</cell>\n<cell>", "    return ((x + y + z) == (x + y) + z);\n}\n",
  "    return ((x === y && x === z) || (x === y && y === z) || (x === z && y === z));\n\
    }\n", "\treturn (x + y + z) == any_int(x,y,z);\n}\n", "    return ((x === y) &&\
    \ (x === z) && (x === Math.floor(x)));\n}\n", "    return ((x === y) && (x ===\
    \ z) && (y === z));\n}\n", "    return ((x + y) == z);\n}", "    return ((x ===\
    \ y || x === z) && (y === z || y === x));\n}\n", "    return ((x === y || x ===\
    \ z) && (x === 0 || x === Infinity || x === -Infinity)) || ((y === z || y ===\
    \ 0 || y === Infinity || y === -Infinity) && (y === 0 || y === Infinity || y ===\
    \ -Infinity));\n}\n", "  return ((x === y || x === z) && (x === 0 || x === Infinity\
    \ || x === -Infinity)) || (x !== x && y !== y && z !== z);\n}\n", "  return ((x\
    \ === y) && (x === z) && (x === Math.floor(x)));\n}\n", "    return ((x === y\
    \ || x === z) && (x === 1 || x === 2) && x % 1 === 0);\n}\n</cell>\n<cell>", " \
    \   if (x === y || x === z){\n        return true;\n    }\n    if (x === 0 ||\
    \ y === 0 || z === 0){\n        return false;\n    }\n    if (x % y === 0 && x\
    \ % z === 0){\n        return true;\n    }\n    if (y % x === 0 && y % z === 0){\n\
    \        return true;\n    }\n    if (z % x === 0 && z % y === 0){\n        return\
    \ true;\n    }\n    return false;\n}\n", "    return ((x + y + z) === (x + y)\
    \ + z);\n}\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n\
    }\n", "    return ((x + y + z) == (x + y + z));\n}\n", "    return ((x === y ||\
    \ x === z) && (x === 0 || x === Infinity || x === -Infinity)) || ((y === z ||\
    \ y === 0) && y === Infinity && y === -Infinity);\n}\n", "    return ((x === y)\
    \ && (x === z) && (x === Math.floor(x)));\n}\n", "    return ((x + y + z) == (x\
    \ + y) + z);\n}\n", "    return ((x + y + z) === (x + y + z));\n}\n", "    return\
    \ ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", "    return ((x ===\
    \ y) && (x === z) && (x === Math.floor(x)));\n}\n", "    return ((x === y || x\
    \ === z) && (x === 0 || x === 1) && x % 1 === 0);\n}\n", "    return ((x === y)\
    \ || \n            (x === z) || \n            (y === z)) && \n            ((x\
    \ % 1 === 0 && y % 1 === 0 && z % 1 === 0) || \n            (x % 1 !== 0 && y\
    \ % 1 !== 0 && z % 1 !== 0));\n}\n", "    return ((x === y || x === z) && (x ===\
    \ 0 || x === Infinity || x === -Infinity)) || ((y === x || y === z) && (y ===\
    \ 0 || y === Infinity || y === -Infinity)) || ((z === x || z === y) && (z ===\
    \ 0 || z === Infinity || z === -Infinity));\n}\n</cell>\n<cell>", "    return\
    \ ((x + y + z) == (x + y + z));\n}\n", "    return ((x === y || x === z) && x\
    \ % 1 === 0 && x % 2 === 0 && x % 3 === 0) || (x === z && x % 1 === 0 && x % 2\
    \ === 0 && x % 3 === 0);\n}\n", "    return ((x + y + z) === (x + y) + z);\n}\n\
    </cell>\n<cell>", "    return ((x + y + z) === (x + y + z));\n}\n", "\treturn\
    \ (x === y || x === z || y === z) && x % 1 === 0 && y % 1 === 0 && z % 1 === 0;\n\
    }\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", " \
    \   return ((x + y + z) == ((x + y) + z));\n}\n", "    return ((x + y + z) ==\
    \ (x + y) + z);\n}\n", "    return ((x === y || x === z) && (x === 0 || x ===\
    \ Infinity || x === -Infinity)) || ((y === z || y === 0 || y === Infinity || y\
    \ === -Infinity) && (y === 0 || y === Infinity || y === -Infinity));\n}\n", " \
    \   return ((x + y + z) == ((x + y) + z));\n}\n", "  return ((x === y || x ===\
    \ z) && x % 1 === 0 && y % 1 === 0 && z % 1 === 0);\n}\n", "\treturn (x === y\
    \ || x === z || y === z) && x % 1 === 0 && y % 1 === 0 && z % 1 === 0;\n}\n",
  "    if (x === y || x === z){\n        return true;\n    }\n    if (x !== x && y\
    \ !== y && z !== z){\n        return false;\n    }\n    if (x % 1 !== 0 || y %\
    \ 1 !== 0 || z % 1 !== 0){\n        return false;\n    }\n    if (x === 0 || y\
    \ === 0 || z === 0){\n        return false;\n    }\n    if (x === y && x === z){\n\
    \        return true;\n    }\n    if (x === y || x === z){\n        return true;\n\
    \    }\n    if (y === z){\n        return true;\n    }\n    return false;\n}\n",
  "    return ((x === y || x === z) && x % 1 === 0 && x % 2 === 0 && x % 3 === 0 &&\
    \ y % 1 === 0 && y % 2 === 0 && y % 3 === 0 && z % 1 === 0 && z % 2 === 0 && z\
    \ % 3 === 0);\n}\n", "    return ((x === y || x === z) && (x === 0 || x === Infinity\
    \ || x === -Infinity)) || ((y === z || y === 0) && y === Infinity && y === -Infinity);\n\
    }\n</cell>\n<cell>", "    return ((x === y || x === z) && x % 1 === 0 && x % 2\
    \ === 0 && x % 3 === 0) || ((y === x || y === z) && y % 1 === 0 && y % 2 === 0\
    \ && y % 3 === 0) || ((z === x || z === y) && z % 1 === 0 && z % 2 === 0 && z\
    \ % 3 === 0);\n}\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n\
    }\n", "    return ((x + y + z) == ((x + y) + z));\n}\n", "    return ((x + y +\
    \ z) == (x + y + z));\n}\n", "    return ((x === y || x === z) && (x === 0 ||\
    \ x === Infinity || x === -Infinity)) || ((y === x || y === z) && (y === 0 ||\
    \ y === Infinity || y === -Infinity)) || ((z === x || z === y) && (z === 0 ||\
    \ z === Infinity || z === -Infinity));\n}\n", "    return ((x + y + z) == ((x\
    \ + y) + z));\n}\n", "    return ((x === y && x === z) || (x === z && x === y))\
    \ && x % 1 === 0;\n}\n", "    return ((x === y || x === z) && x % 1 === 0 && x\
    \ % 2 === 0 && x % 3 === 0 && y % 1 === 0 && y % 2 === 0 && y % 3 === 0 && z %\
    \ 1 === 0 && z % 2 === 0 && z % 3 === 0);\n}\n", "  return any_int_helper(x, y,\
    \ z);\n}\n", "    return ((x === y && x === z) || (x === z && x === y)) && x %\
    \ 1 === 0;\n}\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n\
    }\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", " \
    \   return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", "  return\
    \ any_int_helper(x, y, z);\n}\n", "    return ((x === y || x === z) && (x ===\
    \ 0 || x === Infinity || x === -Infinity)) || ((y === z || y === 0 || y === Infinity\
    \ || y === -Infinity) && (y === 0 || y === Infinity || y === -Infinity));\n}\n",
  "  return ((x + y + z) === (x + y) + z);\n}\n", "    return ((x === y || x === z)\
    \ && (x === 0 || x === 1) && x % 1 === 0);\n}\n", "    return ((x === y) || \n\
    \            (x === z) || \n            (y === z));\n}\n", "    return ((x ===\
    \ y || x === z) && (x === 0 || x === Infinity || x === -Infinity)) || ((y ===\
    \ x || y === z) && (y === 0 || y === Infinity || y === -Infinity)) || ((z ===\
    \ x || z === y) && (z === 0 || z === Infinity || z === -Infinity));\n}\n", " \
    \   return ((x === y || x === z) && (x === parseInt(x) + parseInt(y) || x ===\
    \ parseInt(x) + parseInt(z) || y === parseInt(x) + parseInt(z) || z === parseInt(x)\
    \ + parseInt(y) || z === parseInt(x) + parseInt(z)));\n}\n</cell>\n<cell>", " \
    \ return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", "  return ((x\
    \ + y) == z) && (x % 1 == 0) && (y % 1 == 0);\n}\n", "  return any_int_helper(x,\
    \ y, z);\n}\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n\
    }\n", "    return ((x + y) == z);\n}\n", "    return ((x === y || x === z) &&\
    \ (x === 0 || x === Infinity || x === -Infinity)) || (x === Infinity || x ===\
    \ -Infinity);\n}\n", "    return ((x === y) && (x === z) && (y === z));\n}\n",
  "    return ((x === y && x === z) || (x !== y && x !== z && x !== 0));\n}\n", " \
    \   return ((x + y + z) === (x + y) + z);\n}\n", "    return ((x === y || x ===\
    \ z) && (x === 0 || x === Infinity || x === -Infinity)) || ((y === x || y ===\
    \ z) && (y === 0 || y === Infinity || y === -Infinity)) || ((z === x || z ===\
    \ y) && (z === 0 || z === Infinity || z === -Infinity));\n}\n</cell>\n<cell>",
  "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", "    return\
    \ ((x === y || x === z) && (y === z || y === x));\n}\n", "    return ((x === y)\
    \ && (x === z) && (x === Math.floor(x)));\n}\n", "    return ((x + y + z) == (x\
    \ + y) + z);\n}\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n\
    }\n</cell>\n<cell>\nany_int(1, 3, 4)\n</cell>\n<cell>\nany_int(1, 2, 3)\n</cell>\n\
    <cell>\nany_int(1, 2, 4)\n</cell>\n<cell>\nany_int(1, 2, 5)\n</cell>\n<cell>\n\
    any_int(1, 2, 6)\n</cell>\n<cell>\nany_int(1, 2, 7)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 8)\n</cell>\n<cell>\nany_int(1, 2, 9)\n</cell>\n<cell>\nany_int(1, 2, 10)\n\
    </cell>\n<cell>\nany_int(1, 2, 11)\n</cell>\n<cell>\nany_int(1, 2, 12)\n</cell>\n\
    <cell>\nany_int(1, 2, 13)\n</cell>\n<cell>\nany_int(1, 2, 14)\n</cell>\n<cell>\n\
    any_int(1, 2, 15)\n</cell>\n<cell>\nany_int(1, 2, 16)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 17)\n</cell>\n<cell>\nany_int(1, 2, 18)\n</cell>\n<cell>\nany_int(1, 2, 19)\n\
    </cell>\n<cell>\nany_int(1, 2, 20)\n</cell>\n<cell>\nany_int(1, 2, 21)\n</cell>\n\
    <cell>\nany_int(1, 2, 22)\n</cell>\n<cell>\nany_int(1, 2, 23)\n</cell>\n<cell>\n\
    any_int(1, 2, 24)\n</cell>\n<cell>\nany_int(1, 2, 25)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 26)\n</cell>\n<cell>\nany_int(1, 2, 27)\n</cell>\n<cell>\nany_int(1, 2, 28)\n\
    </cell>\n<cell>\nany_int(1, 2, 29)\n</cell>\n<cell>\nany_int(1, 2, 30)\n</cell>\n\
    <cell>\nany_int(1, 2, 31)\n</cell>\n<cell>\nany_int(1, 2, 32)\n</cell>\n<cell>\n\
    any_int(1, 2, 33)\n</cell>\n<cell>\nany_int(1, 2, 34)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 35)\n</cell>\n<cell>\nany_int(1, 2, 36)\n</cell>\n<cell>\nany_int(1, 2, 37)\n\
    </cell>\n<cell>\nany_int(1, 2, 38)", "    return ((x + y + z) === (x + y) + z);\n\
    }\n</cell>\n<cell>", "    return ((x === y || x === z) && (x === 0 || x === Infinity\
    \ || x === -Infinity)) || ((y === z || y === 0 || y === Infinity || y === -Infinity)\
    \ && (y === 0 || y === Infinity || y === -Infinity));\n}\n", "    return ((x ===\
    \ y) && (x === z) && (x === Math.floor(x)));\n}\n", "    return ((x + y + z) ==\
    \ ((x + y) + z));\n}\n</cell>\n<cell>\nany_int(1, 2, 3)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 4)\n</cell>\n<cell>\nany_int(1, 2, 5)\n</cell>\n<cell>\nany_int(1, 2, 6)\n\
    </cell>\n<cell>\nany_int(1, 2, 7)\n</cell>\n<cell>\nany_int(1, 2, 8)\n</cell>\n\
    <cell>\nany_int(1, 2, 9)\n</cell>\n<cell>\nany_int(1, 2, 10)\n</cell>\n<cell>\n\
    any_int(1, 2, 11)\n</cell>\n<cell>\nany_int(1, 2, 12)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 13)\n</cell>\n<cell>\nany_int(1, 2, 14)\n</cell>\n<cell>\nany_int(1, 2, 15)\n\
    </cell>\n<cell>\nany_int(1, 2, 16)\n</cell>\n<cell>\nany_int(1, 2, 17)\n</cell>\n\
    <cell>\nany_int(1, 2, 18)\n</cell>\n<cell>\nany_int(1, 2, 19)\n</cell>\n<cell>\n\
    any_int(1, 2, 20)\n</cell>\n<cell>\nany_int(1, 2, 21)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 22)\n</cell>\n<cell>\nany_int(1, 2, 23)\n</cell>\n<cell>\nany_int(1, 2, 24)\n\
    </cell>\n<cell>\nany_int(1, 2, 25)\n</cell>\n<cell>\nany_int(1, 2, 26)\n</cell>\n\
    <cell>\nany_int(1, 2, 27)\n</cell>\n<cell>\nany_int(1, 2, 28)\n</cell>\n<cell>\n\
    any_int(1, 2, 29)\n</cell>\n<cell>\nany_int(1, 2, 30)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 31)\n</cell>\n<cell>\nany_int(1, 2, 32)\n</cell>\n<cell>\nany_int(1, 2, 33)\n\
    </cell>\n<cell>\nany_int(1, 2, 34)\n</cell>\n<cell>\nany_int(1, 2, 35)\n</cell>\n\
    <cell>\nany_int(1, 2, 36)\n</cell>\n<cell>\nany_int(1, 2, 37)\n</cell>\n<cell>\n\
    any_int(1, 2, 38)\n</cell>\n<cell>\nany_int(1, 2, 39)\n</cell", "    return ((x\
    \ === y || x === z) && (y === z || y === x));\n}\n", "    return ((x === y ||\
    \ x === z) && (y === z || y === x));\n}\n", "    return ((x + y) == z) && (x %\
    \ 1 == 0) && (y % 1 == 0);\n}\n", "    return ((x === y) && (x === z) && (x ===\
    \ Math.floor(x)));\n}\n</cell>\n<cell>", "    return ((x === y || x === z) &&\
    \ x % 1 === 0 && x % 2 === 0 && x % 3 === 0 && y % 1 === 0 && y % 2 === 0 && y\
    \ % 3 === 0 && z % 1 === 0 && z % 2 === 0 && z % 3 === 0);\n}", "    return ((x\
    \ === y || x === z) && (y === z || y === x));\n}\n", "    return ((x === y) &&\
    \ (x === z) && (y === z));\n}\n", "    return ((x + y + z) == (x + y)) || ((x\
    \ + y + z) == (x)) || ((x + y + z) == (y)) || ((x + y + z) == (z));\n}\n", " \
    \   return ((x + y + z) == ((x + y) + z));\n}\n", "    return ((x === y || x ===\
    \ z) && (x === 1 || x === 2 || x === 3 || x === 4) && x % 1 === 0);\n}", "   \
    \ return ((x === y) || \n            (x === z) || \n            (y === z));\n\
    }\n", "    return ((x === y || x === z) && (x === 0 || x === Infinity || x ===\
    \ -Infinity)) || ((y === z || y === 0) && y === Infinity && z === -Infinity);\n\
    }\n", "    return ((x === y && x === z) || (x !== y && x !== z && x % 1 === 0\
    \ && y % 1 === 0 && z % 1 === 0));\n}\n</cell>\n<cell>", "    return ((x === y)\
    \ && (x === z) && (x === Math.floor(x)));\n}\n", "    return ((x + y) == z) &&\
    \ (x % 1 == 0) && (y % 1 == 0);\n}\n", "\treturn (x + y + z) == any_int(x,y,z);\n\
    }\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", " \
    \   return ((x === y) || \n            (x === z) || \n            (y === z));\n\
    }\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", " \
    \ return ((x === y || x === z) && x % 1 === 0 && y % 1 === 0 && z % 1 === 0);\n\
    }\n", "    return ((x === y || x === z) && x % 1 === 0 && y % 1 === 0 && z % 1\
    \ === 0);\n}\n", "    return ((x === y || x === z) && (x === 0 || x === 9 || x\
    \ === -9 || (y === 0 && z === 0)));\n}\n", "    return ((x === y || x === z) &&\
    \ (x === 0 || x === Infinity || x === -Infinity)) || ((y === x || y === z) &&\
    \ (y === 0 || y === Infinity || y === -Infinity)) || ((z === x || z === y) &&\
    \ (z === 0 || z === Infinity || z === -Infinity));\n}", "    return ((x + y +\
    \ z) === (x + y + z));\n}\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n\
    }\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", " \
    \   return ((x === y && x === z) || (x !== y && x !== z && x !== 0 && y !== 0\
    \ && z !== 0));\n}\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n\
    }\n</cell>\n<cell>\nany_int(4, 6, 8)\n</cell>\n<cell>\nany_int(4, 6, 10)\n</cell>\n\
    <cell>\nany_int(4, 6, 12)\n</cell>\n<cell>\nany_int(4, 6, 14)\n</cell>\n<cell>\n\
    any_int(4, 6, 16)\n</cell>\n<cell>\nany_int(4, 6, 18)\n</cell>\n<cell>\nany_int(4,\
    \ 6, 20)\n</cell>\n<cell>\nany_int(4, 6, 22)\n</cell>\n<cell>\nany_int(4, 6, 24)\n\
    </cell>\n<cell>\nany_int(4, 6, 26)\n</cell>\n<cell>\nany_int(4, 6, 28)\n</cell>\n\
    <cell>\nany_int(4, 6, 30)\n</cell>\n<cell>\nany_int(4, 6, 32)\n</cell>\n<cell>\n\
    any_int(4, 6, 34)\n</cell>\n<cell>\nany_int(4, 6, 36)\n</cell>\n<cell>\nany_int(4,\
    \ 6, 38)\n</cell>\n<cell>\nany_int(4, 6, 40)\n</cell>\n<cell>\nany_int(4, 6, 42)\n\
    </cell>\n<cell>\nany_int(4, 6, 44)\n</cell>\n<cell>\nany_int(4, 6, 46)\n</cell>\n\
    <cell>\nany_int(4, 6, 48)\n</cell>\n<cell>\nany_int(4, 6, 50)\n</cell>\n<cell>\n\
    any_int(4, 6, 52)\n</cell>\n<cell>\nany_int(4, 6, 54)\n</cell>\n<cell>\nany_int(4,\
    \ 6, 56)\n</cell>\n<cell>\nany_int(4, 6, 58)\n</cell>\n<cell>\nany_int(4, 6, 60)\n\
    </cell>\n<cell>\nany_int(4, 6, 62)\n</cell>\n<cell>\nany_int(4, 6, 64)\n</cell>\n\
    <cell>\nany_int(4, 6, 66)\n</cell>\n<cell>\nany_int(4, 6, 68)\n</cell>\n<cell>\n\
    any_int(4, 6, 70)\n</cell>\n<cell>\nany_int(4, 6, 72)\n</cell>\n<cell>\nany_int(4,\
    \ 6, 74)", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n",
  "    return ((x === y || x === z) && (y === z || y === x));\n}\n", "    return ((x\
    \ === y || x === z) && x % 1 === 0 && y % 1 === 0 && z % 1 === 0);\n}\n", "  \
    \  return ((x + y + z) == ((x + y) + z));\n}\n", "    return ((x === y || x ===\
    \ z) && (x === 0 || x === Infinity || x === -Infinity)) || (x === Infinity ||\
    \ x === -Infinity);\n}\n", "    return ((x === y) || \n            (x === z) ||\
    \ \n            (y === z));\n}\n", "    return ((x === y && x === z) || (x !==\
    \ y && x !== z && x !== 0));\n}\n</cell>\n<cell>", "    return ((x === y) && (x\
    \ === z) && (y === z));\n}\n", "    return ((x + y + z) == (x + y) + z);\n}\n",
  "\treturn (x === y || x === z || y === z) && x % 1 === 0 && y % 1 === 0 && z % 1\
    \ === 0;\n}\n", "    return ((x + y + z) === (x + y + z));\n}\n</cell>\n<cell>",
  "    return ((x + y + z) === (x + y) + z);\n}\n</cell>\n<cell>", "    return ((x\
    \ + y + z) == (x + y) + z);\n}\n", "    return ((x === y || x === z) && x % 1\
    \ === 0 && x % 2 === 0 && x % 3 === 0) || ((y === x || y === z) && y % 1 === 0\
    \ && y % 2 === 0 && y % 3 === 0) || ((z === x || z === y) && z % 1 === 0 && z\
    \ % 2 === 0 && z % 3 === 0);\n}\n", "    return ((x === y) && (x === z) && (y\
    \ === z));\n}\n", "    return ((x === y) && (x === z) && (y === z));\n}\n", " \
    \   return ((x === y && x === z) || (x === z && x === y)) && x % 1 === 0;\n}\n",
  "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", "    return\
    \ ((x === y) || x === z || y === z);\n}\n</cell>\n<cell>", "    return ((x ===\
    \ y || x === z) && (x === 0 || x === Infinity || x === -Infinity)) || ((y ===\
    \ z || y === 0 || y === Infinity || y === -Infinity) && (y === 0 || y === Infinity\
    \ || y === -Infinity));\n}\n", "    return ((x === y) && (x === z) && (x === Math.floor(x)));\n\
    }\n", "    return ((x + y + z) === (x + y + z));\n}\n", "    return ((x === y)\
    \ && (x === z) && (y === z));\n}\n", "    return ((x === y) && (x === z) && (x\
    \ === Math.floor(x)));\n}\n", "    return ((x === y || x === z) && (x === 0 ||\
    \ x === Infinity || x === -Infinity)) || ((y === z || y === 0) && y === Infinity\
    \ && y === -Infinity);\n}\n", "    return ((x === y || x === z) && (y === z ||\
    \ y === x));\n}\n", "    return ((x + y + z) === (x + y) + z);\n}\n</cell>\n<cell>\n\
    any_int(1, 2, 3);\n</cell>\n<cell>\nany_int(1, 2, \"3\");\n</cell>\n<cell>\nany_int(\"\
    1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n\
    <cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\",\
    \ \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"\
    1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n\
    <cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\",\
    \ \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"\
    1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n\
    <cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\",\
    \ \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"\
    1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n\
    <cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\",\
    \ \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"\
    1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n\
    <cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\",\
    \ \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"\
    1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n\
    <cell>\nany_int(\"1\", \"2\", \"3\");\n</cell>\n<cell>\nany_int(\"1\", \"2\",\
    \ \"3\");\n</cell>\n<", "    if (x == y || x == z){\n        return true;\n  \
    \  }\n    return false;\n}\n", "    return ((x === y || x === z) && (y === z ||\
    \ y === x));\n}\n", "    return ((x + y + z) == (x + y + z));\n}\n", "    return\
    \ ((x === y) && (x === z) && (x === Math.floor(x)));\n}\n", "    return ((x ===\
    \ y) && (x === z) && (x === Math.floor(x)));\n}\n</cell>\n<cell>", "    return\
    \ ((x + y + z) == ((x + y) + z));\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

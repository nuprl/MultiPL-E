name: HumanEval_49_modp
language: js
results:
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpspj_zr9i.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpspj_zr9i.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpy1i33492.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy1i33492.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqi9kp8tw.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpqi9kp8tw.js:3:13)\n\
    \    at test (/tmp/tmpqi9kp8tw.js:17:20)\n    at Object.<anonymous> (/tmp/tmpqi9kp8tw.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? p.c.slice(k, p.s.length).mod(p.c)\
    \ : new BigInteger();\n  var t = new BigInteger();\n  if(p.isEven()){\n    t.c\
    \ = k;\n    t.s = -p.s;\n  }\n  else{\n    t.c = p.c;\n    t.s = p.s;\n  }\n \
    \ return t.mod(r);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpm8besvpf.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpm8besvpf.js:3:15)\n    at test (/tmp/tmpm8besvpf.js:22:20)\n\
    \    at Object.<anonymous> (/tmp/tmpm8besvpf.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], m = 1;\n  for(k=1;k<i;k++) m = (m*r+p[k])%p;\n\
    \  return m>0 ? m : n<0 ? 0 : p;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpiazraakk.js:3\n  var i = p.bitLength(), k, r = n%p[0], m = 1;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpiazraakk.js:3:13)\n\
    \    at test (/tmp/tmpiazraakk.js:13:20)\n    at Object.<anonymous> (/tmp/tmpiazraakk.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2&0xff)>255){\n      k = (k-256) & 0xFF;\n    }\n\
    \    r = (r << 8) | (k & 0xff);\n    r2 = (r2 << 8) | (k>>8 & 0xff);\n  }\n  return\
    \ r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpoityg1g8.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpoityg1g8.js:3:13)\n\
    \    at test (/tmp/tmpoityg1g8.js:19:20)\n    at Object.<anonymous> (/tmp/tmpoityg1g8.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpgtjc0qot.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgtjc0qot.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*p[i] + r2) > 0){\n      r += ((k+p[i])%p[i])*p[i];\n  \
    \    r2 = (p[i]*p[i] + k)%p[i];\n    }\n  }\n  return r;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpx77nupje.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpx77nupje.js:3:13)\n\
    \    at test (/tmp/tmpx77nupje.js:18:20)\n    at Object.<anonymous> (/tmp/tmpx77nupje.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpjtb02nbs.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjtb02nbs.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n /= p;\n  }\n  return r;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpwhkiqkzj.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpwhkiqkzj.js:3:13)\n\
    \    at test (/tmp/tmpwhkiqkzj.js:17:20)\n    at Object.<anonymous> (/tmp/tmpwhkiqkzj.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%(k+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpwqpc59vz.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwqpc59vz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var front = p.c;\n  var back = p.c;\n  var\
    \ len = k.length;\n  while(len--){\n    front[len] = k[len];\n  }\n  front[len]\
    \ = 0x80000000;\n  p.c = front;\n  while(len--){\n    back[len] = k[len];\n  }\n\
    \  back[len] = 0x80000000;\n  p.c = back;\n  while(--zeros > 0){\n    p.c[0]++;\n\
    \    p.c[0]--;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2hnkohc1.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmp2hnkohc1.js:3:15)\n    at test (/tmp/tmp2hnkohc1.js:31:20)\n\
    \    at Object.<anonymous> (/tmp/tmp2hnkohc1.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp08xjrgtr.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp08xjrgtr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2&0xff)>255){\n      k = (k-256) & 0xFF;\n    }\n\
    \    r = (r << 8) | (k & 0xff);\n    r2 = (r2 << 8) | (k >>> 8);\n  }\n  return\
    \ r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2592seu6.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp2592seu6.js:3:13)\n\
    \    at test (/tmp/tmp2592seu6.js:19:20)\n    at Object.<anonymous> (/tmp/tmp2592seu6.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[i]>>(32-i)))>n)\n      return n;\n    r = (r*256\
    \ + p[i])%n;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp67i9p_0_.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp67i9p_0_.js:3:13)\n\
    \    at test (/tmp/tmp67i9p_0_.js:17:20)\n    at Object.<anonymous> (/tmp/tmp67i9p_0_.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[i]>>(32-i))) & 0xffffffff) r += ((k&0xffffffff)>>(32-i))*p[i];\n\
    \    else if(r) r += p[i];\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0mepbh51.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp0mepbh51.js:3:13)\n\
    \    at test (/tmp/tmp0mepbh51.js:16:20)\n    at Object.<anonymous> (/tmp/tmp0mepbh51.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpzzqkrt8k.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzzqkrt8k.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpj46xiq6v.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpj46xiq6v.js:3:13)\n\
    \    at test (/tmp/tmpj46xiq6v.js:17:20)\n    at Object.<anonymous> (/tmp/tmpj46xiq6v.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpjqo0zfc7.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjqo0zfc7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = nbv(1), z;\n  for(; i--;){\n    k = p.shiftRight(i);\n\
    \    if((k & 1) != 0) z = !z;\n    if(z) r = r.multiply(get2(n));\n    if(k >=\
    \ p.bitLength()) break;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4tv3zroi.js:3\n  var i = p.bitLength(), k, r = nbv(1), z;\n   \
    \         ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp4tv3zroi.js:3:13)\n\
    \    at test (/tmp/tmp4tv3zroi.js:18:20)\n    at Object.<anonymous> (/tmp/tmp4tv3zroi.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.bitLength();\n  if (k <= p)\n    return n;\n  else\n    return p.modPowInt(n\
    \ - k, p);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_bdcjdcu.js:3\n  var k = n.bitLength();\n            ^\n\nTypeError:\
    \ n.bitLength is not a function\n    at modp (/tmp/tmp_bdcjdcu.js:3:13)\n    at\
    \ test (/tmp/tmp_bdcjdcu.js:15:20)\n    at Object.<anonymous> (/tmp/tmp_bdcjdcu.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%(k+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpejyzs98c.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpejyzs98c.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var front = p.p.slice(0, p.c.length);\n\
    \  var back = p.p.slice(p.c.length);\n  var i = n.i;\n  var p = n.c;\n  var p\
    \ = p.c;\n  var odd = n.s ? (n.i < p.i ? n : p).i & 1 : 1;\n  var rr = 0, ri =\
    \ p.i;\n  for(; i !== 0; i = (i-r)&1){\n    rr += ri;\n    ri += p.i;\n  }\n \
    \ for(; i !== 0; i = (i-r)>>1){\n    rr += ((p.i + (p.s[p.s.length-1]>>1)) > i\
    \ ? p : n).i;\n    ri += p.i;\n  }\n  if(rr !== 0){\n    var rrbits = bits2int(rr,\
    \ p.prec);\n    var kk = kk.slice();\n    var kkbits = bits2int(kk, p.prec);\n\
    \    var off = p.len - k.length;\n    while(kkbits > 0){\n      kk.unshift(0);\n\
    \      kkbits -= 1;\n    }\n    if((off & 0x1) === 0){\n      kk.unshift(0);\n\
    \      off++;\n    }\n    kk.reverse();\n    kk = kk.concat(p.p.subarray(p.off,\
    \ off));\n    p.off = off;\n    p.len = off;\n    p.c = kk;\n    p.m = 1 << p.prec;\n\
    \    if((p.len & 0x1fff) === 0){\n      p.m <<= 8 - (p.len + 1);\n      p.s |=\
    \ q;\n    }\n    p.len += 1;\n    p.i -= 1;\n  }\n  if(p.len > 0){\n    p.len\
    \ -= 1;\n    p.i -= 1;\n    p.c[0] = p.c[0];\n    p.c[1] = p.c[1];\n    p.c[2]\
    \ = p.c[2];\n    p.c[3] = p.c[3];\n    p.c[4] = p.c[4];\n    p.c[5] = p.c[5];\n\
    \    p.c[6] = p.c[6];\n    p.c[7] = p.c[7];\n  }\n  p.m = (p.m << p.prec) & p.m;\n\
    \  p.s = p.s & p.m;\n  p.prec = p.prec + 1;\n  if((p.len & 0x1fff) === 0){\n \
    \   p.m <<= 8 - (p.len + 1);\n    p.s |= q;\n  }\n  if(p.len > 0){\n    p.len\
    \ -= 1;\n    p.i -= 1;\n    p.c\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpwi5txy8m.js:84\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[0]&((r<<3)|p[1])))>255){\n      r = k;\n  \
    \  }else{\n      r2 = (r&((1<<i)|p[1]))<<1;\n      r += (r&((1<<32)|p[0]))<<(32-i);\n\
    \    }\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbj92ke_j.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpbj92ke_j.js:3:13)\n\
    \    at test (/tmp/tmpbj92ke_j.js:20:20)\n    at Object.<anonymous> (/tmp/tmpbj92ke_j.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k+n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp2ttlsax_.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ttlsax_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqkjscb9x.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpqkjscb9x.js:3:13)\n\
    \    at test (/tmp/tmpqkjscb9x.js:17:20)\n    at Object.<anonymous> (/tmp/tmpqkjscb9x.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = 0;\n  for(var i = p.s.length -\
    \ 1; i >= 0; --i){\n    var a = p.s[i] - k;\n    if(a){\n      for(var j = 1;\
    \ (j < zeros) && a > BigInteger.Integer.ZERO[j]; ++j){\n        a = a % BigInteger.Integer.TWO_POW[j];\n\
    \      }\n      if(a > BigInteger.Integer.ZERO[j]){\n        a = a + (BigInteger.Integer.TWO_POW[j]\
    \ % BigInteger.Integer.TWO_POW[j]);\n      }\n      r = r.slice(i);\n      r[i\
    \ + p.s.length] = a < 0 ? 0 : a;\n      ++i;\n      wnd = wnd + a | 0;\n    }\n\
    \  }\n  return new BigInteger(r, wnd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpp897v0yi.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpp897v0yi.js:3:15)\n    at test (/tmp/tmpp897v0yi.js:30:20)\n\
    \    at Object.<anonymous> (/tmp/tmpp897v0yi.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = (k.length < p.c.length);\n  while (k.cmpn(0) !== 0){\n    k = k.redSqr();\n\
    \  }\n  r = r.redIAdd(r);\n  while (k.cmpn(0) !== 0){\n    k = k.redSqr();\n \
    \ }\n  var r = n;\n  while (r.cmp(p.md) === 0){\n    r = r.redSqr();\n  }\n  return\
    \ r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjl0uh1eq.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpjl0uh1eq.js:3:15)\n    at test (/tmp/tmpjl0uh1eq.js:25:20)\n\
    \    at Object.<anonymous> (/tmp/tmpjl0uh1eq.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n  for(;\
    \ i; i--){\n    if(p.testBit(i-1)){\n      dMultiply(d);\n      dAddOffset(BigInteger.ONE,\
    \ i);\n    }\n  }\n  if(d.compareTo(n) >= 0){\n    dMultiply(d);\n    dAddOffset(BigInteger.ONE,\
    \ i);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgrtgs_58.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpgrtgs_58.js:3:13)\n\
    \    at test (/tmp/tmpgrtgs_58.js:22:20)\n    at Object.<anonymous> (/tmp/tmpgrtgs_58.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+2*k-1) % p)|0;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpsur0cbmq.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsur0cbmq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p<p ? p : n%p);\n  }\n  return r;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz8wzzb37.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpz8wzzb37.js:3:13)\n\
    \    at test (/tmp/tmpz8wzzb37.js:16:20)\n    at Object.<anonymous> (/tmp/tmpz8wzzb37.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%p;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpjaeezczx.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjaeezczx.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpl_qivr04.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl_qivr04.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = 0;\n  for(var i = p.s.length -\
    \ 1; i >= 0; --i){\n    var a = p.s[i] - k;\n    if(a){\n      if(++wnd == 4){\n\
    \        r[i + 3] = r[i + 4] % p.s[i + 1];\n        wnd = 1;\n      }\n      r[i]\
    \ = r[i] % p.s[i];\n    }\n    else{\n      r[i - zeros + 3] = r[i - zeros + 4]\
    \ % p.s[i + 1];\n      wnd = 1;\n    }\n  }\n  return r;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppidb9zdw.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmppidb9zdw.js:3:15)\n    at test (/tmp/tmppidb9zdw.js:29:20)\n\
    \    at Object.<anonymous> (/tmp/tmppidb9zdw.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp6tpf83sd.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6tpf83sd.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[i]>>(32-i)))>n)\n      return n;\n    r = (r*256\
    \ + p[i])%n;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpomu1cm0o.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpomu1cm0o.js:3:13)\n\
    \    at test (/tmp/tmpomu1cm0o.js:17:20)\n    at Object.<anonymous> (/tmp/tmpomu1cm0o.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+2*k-1) % p)|0;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpssuipf44.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpssuipf44.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp0qz8lsop.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0qz8lsop.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpgsvxrz60.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgsvxrz60.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpcxxxav81.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcxxxav81.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp5orynnt2.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5orynnt2.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp55ff37u5.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp55ff37u5.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[0]&((r<<3)|p[1])))) r = k;\n    else return\
    \ r;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpsmyroyux.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpsmyroyux.js:3:13)\n\
    \    at test (/tmp/tmpsmyroyux.js:16:20)\n    at Object.<anonymous> (/tmp/tmpsmyroyux.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpqb9nh3js.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqb9nh3js.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n  for(;\
    \ i; i--){\n    if(p.testBit(i-1)){\n      dMultiply(d);\n      dAddOffset(BigInteger.ONE,\
    \ i);\n    }\n  }\n  if(d.compareTo(n) >= 0){\n    dMultiply(d);\n    dAddOffset(BigInteger.ONE,\
    \ i);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpr87ew4os.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpr87ew4os.js:3:13)\n\
    \    at test (/tmp/tmpr87ew4os.js:22:20)\n    at Object.<anonymous> (/tmp/tmpr87ew4os.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpg5jn9q2s.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpg5jn9q2s.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = nbv(1), z;\n  for(; i; r += p){\n    for(k =\
    \ i - 1; k; k--){ r = (r % p) + p; }\n    z = (r + p.bitLength()) % p;\n    z\
    \ = z >= p ? z - p : z;\n    r.s = z < 0 ? r.s : r; // Avoid \"-0\" propagation.\n\
    \  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbc1ak6gz.js:3\n  var i = p.bitLength(), k, r = nbv(1), z;\n   \
    \         ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpbc1ak6gz.js:3:13)\n\
    \    at test (/tmp/tmpbc1ak6gz.js:18:20)\n    at Object.<anonymous> (/tmp/tmpbc1ak6gz.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpgjurpvno.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgjurpvno.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp_9vc0b00.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_9vc0b00.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgetgny7s.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpgetgny7s.js:3:13)\n\
    \    at test (/tmp/tmpgetgny7s.js:17:20)\n    at Object.<anonymous> (/tmp/tmpgetgny7s.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = new Array(p.c.length);\n  for(var\
    \ i = 0; i < wnd.length; i++) wnd[i] = 0;\n  while(r != 0){\n    if(r.compareTo(p)\
    \ == -1) ++r;\n    else if(r.compareTo(p) == 0) return zeros;\n    ++r;\n  }\n\
    \  if(compareAbs(k, p.s) < 0 || compareAbs(k, p.c) < 0)\n    k = n.subn(1);\n\
    \  else if(!n.isEven()) k = p.subn(1);\n  return k.fromRed().subn(1 - s);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgybc5zfv.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpgybc5zfv.js:3:15)\n    at test (/tmp/tmpgybc5zfv.js:24:20)\n\
    \    at Object.<anonymous> (/tmp/tmpgybc5zfv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpppk04aga.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpppk04aga.js:3:13)\n\
    \    at test (/tmp/tmpppk04aga.js:17:20)\n    at Object.<anonymous> (/tmp/tmpppk04aga.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2&0xff)>255){\n      k = (k-256) & 0xFF;\n    }\n\
    \    r2 = (r2*256 + k)&0xff;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpyhsarknd.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpyhsarknd.js:3:13)\n\
    \    at test (/tmp/tmpyhsarknd.js:18:20)\n    at Object.<anonymous> (/tmp/tmpyhsarknd.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpp5_8ii1f.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp5_8ii1f.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpeeknizzz.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeeknizzz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[i]>>(32-i))) & 0xffffffff) r += ((k&0xffffffff)^p[i])&k;\n\
    \    else if(r) r += p[i];\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpu61e_res.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpu61e_res.js:3:13)\n\
    \    at test (/tmp/tmpu61e_res.js:16:20)\n    at Object.<anonymous> (/tmp/tmpu61e_res.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[0]&((r<<3)|p[1])))>255){\n      r = k;\n  \
    \  }else{\n      r += p[0]&((r<<3)|p[1]);\n    }\n    r2 = (r>>8)%256;\n  }\n\
    \  return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvibiwm8c.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpvibiwm8c.js:3:13)\n\
    \    at test (/tmp/tmpvibiwm8c.js:20:20)\n    at Object.<anonymous> (/tmp/tmpvibiwm8c.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpfoud3p7k.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfoud3p7k.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = new Array(p.c.length);\n  for(var\
    \ i = 0; i < p.c.length; i++){\n    wnd[i] = p.c[i] | 0;\n  }\n  for(;i < zeros;\
    \ i++){\n    wnd[i] = 0;\n  }\n  r.copy(wnd, 0, zeros);\n  while(!wnd[len]){\n\
    \    wnd[len] = 0;\n  }\n  return wnd;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpneatvcaj.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpneatvcaj.js:3:15)\n    at test (/tmp/tmpneatvcaj.js:25:20)\n\
    \    at Object.<anonymous> (/tmp/tmpneatvcaj.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n  for(;\
    \ i; i--){\n    if(p.testBit(i-1)){\n      dMultiply(d);\n      dAddOffset(k,\
    \ i-3);\n    }\n    k = rdMultiply(k, p);\n  }\n  return r;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpd2lndvf4.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpd2lndvf4.js:3:13)\n\
    \    at test (/tmp/tmpd2lndvf4.js:19:20)\n    at Object.<anonymous> (/tmp/tmpd2lndvf4.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpzc0ka13a.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzc0ka13a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/(p*Math.pow(2,k));\
    \ \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.55\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp_9grukon.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_9grukon.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.55,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[0]&((r<<3)|p[1])))>255){\n      r = k;\n  \
    \  }else{\n      r2 = (r&((1<<i)|p[1]))<<1;\n    }\n  }\n  return r;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp33iiwpz9.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp33iiwpz9.js:3:13)\n\
    \    at test (/tmp/tmp33iiwpz9.js:19:20)\n    at Object.<anonymous> (/tmp/tmp33iiwpz9.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp65gpd1zc.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp65gpd1zc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpbe6plqr1.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbe6plqr1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k+n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp56ajvh4z.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp56ajvh4z.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%(k+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpjho46yy9.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjho46yy9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz2gbb7c8.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpz2gbb7c8.js:3:13)\n\
    \    at test (/tmp/tmpz2gbb7c8.js:17:20)\n    at Object.<anonymous> (/tmp/tmpz2gbb7c8.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpbj72szct.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbj72szct.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp00i7srpp.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp00i7srpp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], m = 1;\n  for(k=1;k<i;k++) m = (m*r+p[k])%p[0];\n\
    \  return m>0 ? m : n<0 ? 0 : p;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz58mp9jy.js:3\n  var i = p.bitLength(), k, r = n%p[0], m = 1;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpz58mp9jy.js:3:13)\n\
    \    at test (/tmp/tmpz58mp9jy.js:13:20)\n    at Object.<anonymous> (/tmp/tmpz58mp9jy.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpb6_j6r9g.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb6_j6r9g.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp766cwpsc.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp766cwpsc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/(p*Math.pow(2,k));\
    \ \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.55\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpj3v0pba9.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj3v0pba9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.55,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = new Array(p.c.length);\n  for(var\
    \ i = 0; i < p.c.length; i++) wnd[i] = p.c[i] | 0;\n  while(r.cmpn(0) !== 0){\n\
    \    r.i--;\n    var t = r;\n    r = r.u;\n    if(t.cmpn(0) !== 0){\n      if(zeros\
    \ && t.u % 2){\n        r.rShiftTo(zeros, k);\n      }else if(t.compareTo(r) !==\
    \ 0){\n        t.subTo(w, r);\n      }\n      for(var j = 0; j <= i; j++){\n \
    \       wnd[j] = t.c[j] ^ r.c[j];\n      }\n      r.iAdd(w);\n    }\n  }\n  return\
    \ k;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpa1etbe77.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpa1etbe77.js:3:15)\n    at test (/tmp/tmpa1etbe77.js:32:20)\n\
    \    at Object.<anonymous> (/tmp/tmpa1etbe77.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpmi6_ctd1.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmi6_ctd1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp4jk12li4.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4jk12li4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpiov06_8_.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpiov06_8_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = new Array(p.c.length);\n  for(var\
    \ i = 0; i < p.c.length; i++) wnd[i] = p.c[i] | 0;\n  while(r.cmpn(0) !== 0){\n\
    \    r.iadd(p);\n    r.ineg();\n  }\n  var res = r.iadd(new BigBigInt(ONE));\n\
    \  if(p.subtract(res).c.length > BigInteger.ONE.bitLength()){\n    res = res.add(p);\n\
    \  }\n  return res._forceRed(zeros);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz7ktbjn0.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpz7ktbjn0.js:3:15)\n    at test (/tmp/tmpz7ktbjn0.js:24:20)\n\
    \    at Object.<anonymous> (/tmp/tmpz7ktbjn0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.bitLength();\n  var r = n; // remainder\n  if(k <= p) return r;\n\
    \  var p1 = BigInteger.ONE;\n  var i = 0;\n  for(;;){\n    if(p.bitLength() >\
    \ i){\n      r = r.multiply(p1);\n    }\n    if(!r.isEven()){\n      p1 = p1.multiply(p1);\n\
    \    }\n    if(++i >= k){\n      break;\n    }\n    r = r.shiftLeft(1);\n  }\n\
    \  return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7cf5oezb.js:3\n  var k = n.bitLength();\n            ^\n\nTypeError:\
    \ n.bitLength is not a function\n    at modp (/tmp/tmp7cf5oezb.js:3:13)\n    at\
    \ test (/tmp/tmp7cf5oezb.js:28:20)\n    at Object.<anonymous> (/tmp/tmp7cf5oezb.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp81fc9e50.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp81fc9e50.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpasxamvib.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpasxamvib.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmps46evc56.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps46evc56.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n  for(;\
    \ i; i--){\n    if(p.testBit(i-1)){\n      dMultiply(d);\n      dAddOffset(k,\
    \ i-4);\n    }\n    k = rdMultiply(k, p);\n  }\n  return r;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0mq954k9.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp0mq954k9.js:3:13)\n\
    \    at test (/tmp/tmp0mq954k9.js:19:20)\n    at Object.<anonymous> (/tmp/tmp0mq954k9.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n  for(;\
    \ i; i--){\n    if(p.testBit(i)){\n      dMultiply(d);\n      dAddOffset(k, i);\n\
    \    }\n  }\n  if(d.compareTo(n) < 0){\n    dMultiply(BigInteger.ONE);\n    dAddOffset(k,\
    \ p.bitLength());\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8n8mp8jb.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp8n8mp8jb.js:3:13)\n\
    \    at test (/tmp/tmp8n8mp8jb.js:22:20)\n    at Object.<anonymous> (/tmp/tmp8n8mp8jb.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqjcd8jlq.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpqjcd8jlq.js:3:13)\n\
    \    at test (/tmp/tmpqjcd8jlq.js:17:20)\n    at Object.<anonymous> (/tmp/tmpqjcd8jlq.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = nbv(1), z;\n  for(; i--;){\n    k = p.shiftRight(i);\n\
    \    if((k & 1) != 0) z = !z;\n    if(z) r = r.multiply(get2(n));\n  }\n  return\
    \ r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbubkpizr.js:3\n  var i = p.bitLength(), k, r = nbv(1), z;\n   \
    \         ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpbubkpizr.js:3:13)\n\
    \    at test (/tmp/tmpbubkpizr.js:17:20)\n    at Object.<anonymous> (/tmp/tmpbubkpizr.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k+n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp0dwuz3qm.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0dwuz3qm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%(k+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpso_bu0ji.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpso_bu0ji.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = (k.length < p.c.length);\n  while (zeros && k.length < p.c.length) k\
    \ = '0' + k;\n  return {\n    ctor: 'Mod',\n    modulus: n,\n    k: k,\n    rem:\
    \ r,\n    s: n.s - n.c % p.s\n  };\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpa_yz4yus.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpa_yz4yus.js:3:15)\n    at test (/tmp/tmpa_yz4yus.js:21:20)\n\
    \    at Object.<anonymous> (/tmp/tmpa_yz4yus.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ r;\n    r = (r*r) % p;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphml0wta9.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmphml0wta9.js:3:13)\n\
    \    at test (/tmp/tmphml0wta9.js:16:20)\n    at Object.<anonymous> (/tmp/tmphml0wta9.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmppqgdb978.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppqgdb978.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpdofu9yul.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdofu9yul.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpekei0nc5.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpekei0nc5.js:3:13)\n\
    \    at test (/tmp/tmpekei0nc5.js:17:20)\n    at Object.<anonymous> (/tmp/tmpekei0nc5.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[0]&((r<<3)|p[1])))>255){\n      r = k;\n  \
    \  }else{\n      r2 = (r&((1<<i)|p[1]))<<1;\n      r += ((i&1)?1:0)<<(k>>7);\n\
    \      r2 = (r2&((1<<i)|p[1]))<<1;\n      r += ((i&1)?1:0)<<(k>>7);\n      r2\
    \ = (r2&((1<<i)|p[1]))<<1;\n      r += ((i&1)?1:0)<<(k>>7);\n      r2 = (r2&((1<<i)|p[1]))<<1;\n\
    \      r += ((i&1)?1:0)<<(k>>7);\n      r2 = (r2&((1<<i)|p[1]))<<1;\n      r +=\
    \ ((i&1)?1:0)<<(k>>7);\n      r2 = (r2&((1<<i)|p[1]))<<1;\n      r += ((i&1)?1:0)<<(k>>7);\n\
    \      r2 = (r2&((1<<i)|p[1]))<<1;\n      r += ((i&1)?1:0)<<(k>>7);\n      r2\
    \ = (r2&((1<<i)|p[1]))<<1;\n      r += ((i&1)?1:0)<<(k>>7);\n      r2 = (r2&((1<<i)|p[1]))<<1;\n\
    \      r += ((i&1)?1:0)<<(k>>7);\n      r2 = (r2&((1<<i)|p[1]))<<1;\n      r +=\
    \ ((i&1)?1:0)<<(k>>7);\n      r2 = (r2&((1<<i)|p[1]))<<1;\n      r += ((i&1)?1:0)<<(k>>7);\n\
    \      r2 = (r2&((1<<i)|p[1]))<<1;\n      r += ((i&1)?1:0)<<(k>>7);\n      r2\
    \ = (r2&((1<<i)|p[1]))<<1;\n      r += ((i&1)?1:0)<<(k>>7);\n      r2 = (r2&((1<<i)|p[1]))<<1;\n\
    \      r += ((i&1)?1:0)<<(k>>7);\n      r2 = (r2&((1<<i)|p[1]))<<1;\n      r +=\
    \ ((i&1)?1:0)<<(k>>7);\n      r\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5s3wspvc.js:53\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp78n2acj_.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp78n2acj_.js:3:13)\n\
    \    at test (/tmp/tmp78n2acj_.js:17:20)\n    at Object.<anonymous> (/tmp/tmp78n2acj_.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%p;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpssvxyf8t.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpssvxyf8t.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = nbv(1), z;\n  for(; i; r += p){\n    for(k =\
    \ i - 1; k; k--){ r = (r % p) + p; }\n    z = (r + p.bitLength()) % p;\n    z\
    \ = z >= p ? z - p : z;\n    r.rShiftTo(i, z);\n  }\n  return r;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxbzewpiv.js:3\n  var i = p.bitLength(), k, r = nbv(1), z;\n   \
    \         ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpxbzewpiv.js:3:13)\n\
    \    at test (/tmp/tmpxbzewpiv.js:18:20)\n    at Object.<anonymous> (/tmp/tmpxbzewpiv.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpoug62hbc.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoug62hbc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpf00vdam8.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf00vdam8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = new Array(p.c.length);\n  for(var\
    \ i = 0; i < p.c.length; i++){\n    var a = r[i] % p.c[i];\n    var wndIndex =\
    \ i + a.length - 1;\n    if(wndIndex >= 0){\n      if(zeros[wndIndex])\n     \
    \   wnd[wndIndex] = 0;\n      else\n        wnd[wndIndex] = a.length + wnd[wndIndex\
    \ - a.length];\n    }\n    else\n      wnd[wndIndex] = a.length;\n  }\n  return\
    \ wnd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmps77mbe22.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmps77mbe22.js:3:15)\n    at test (/tmp/tmps77mbe22.js:27:20)\n\
    \    at Object.<anonymous> (/tmp/tmps77mbe22.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n  for(;\
    \ i; i--){\n    if(p.testBit(i-1)){\n      dMultiply(d);\n      dAddOffset(k,\
    \ i-4);\n    }\n    k = rdMultiply(k, p);\n  }\n  return r;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpasbqgy1m.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpasbqgy1m.js:3:13)\n\
    \    at test (/tmp/tmpasbqgy1m.js:19:20)\n    at Object.<anonymous> (/tmp/tmpasbqgy1m.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+2*k-1) % p)|0;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmprbmgm_ir.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprbmgm_ir.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*p[i] + r2) > 0){\n      r += ((k+p[i])%p)[i];\n      r2\
    \ = (p[i]>>(32-(i+1)))%32;\n    }\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5o9mlky1.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp5o9mlky1.js:3:13)\n\
    \    at test (/tmp/tmp5o9mlky1.js:18:20)\n    at Object.<anonymous> (/tmp/tmp5o9mlky1.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = (k.length < p.c.length);\n  while (k.cmpn(0) !== 0){\n    zeros = false;\n\
    \    k.i--;\n  }\n  if (zeros)\n    k = p.s.subn(1);\n  else\n    k = p.s.subn(k.digits);\n\
    \  return new bn(k, p.z);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpx1pmhapk.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpx1pmhapk.js:3:15)\n    at test (/tmp/tmpx1pmhapk.js:22:20)\n\
    \    at Object.<anonymous> (/tmp/tmpx1pmhapk.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[i]>>(32-i))) & 0xffffffff) r += ((k&0xffffffff)^p[i])&k;\n\
    \    else if(r) r += p[i];\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpilp6qdbj.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpilp6qdbj.js:3:13)\n\
    \    at test (/tmp/tmpilp6qdbj.js:16:20)\n    at Object.<anonymous> (/tmp/tmpilp6qdbj.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[0]&((r<<3)|p[1])))>255){\n      r = k;\n  \
    \  }else{\n      r2 = (r&((1<<i)|p[1]))<<1;\n      r += ((i&1)?1:0)<<(k>>6);\n\
    \      r += k&63;\n    }\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxi_b6z1x.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpxi_b6z1x.js:3:13)\n\
    \    at test (/tmp/tmpxi_b6z1x.js:21:20)\n    at Object.<anonymous> (/tmp/tmpxi_b6z1x.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var front = p.p.c;\n  var back = p.c;\n\
    \  var len = k.length + r.length - zeros - 1;\n  while(front < back){\n    var\
    \ mid = (front + back) >> 1;\n    r.push(zeros & mid ? \"1\" : \"0\");\n    front\
    \ = back;\n    back = mid;\n  }\n  while(front < len){\n    r.push(\"1\");\n \
    \   front++;\n  }\n  return k.concat(r);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprg5yc2gd.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmprg5yc2gd.js:3:15)\n    at test (/tmp/tmprg5yc2gd.js:27:20)\n\
    \    at Object.<anonymous> (/tmp/tmprg5yc2gd.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpsfqnygkq.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsfqnygkq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k+n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmprabd5enr.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprabd5enr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmphdy1ok7b.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphdy1ok7b.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = 0;\n  for(var i = p.s.length -\
    \ 1; i >= 0; --i){\n    var a = p.s[i] + k;\n    if(a-- > n){ a = n; }\n    if(a\
    \ < 0){ a = -a }\n    for(var j = (p.s.length - 1) - i; j >= 0; --j){\n      if(p.s[j]\
    \ + a < p.s[j]){ a = p.s[j] + a; }\n      if(p.s[j] - a > p.s[j]){ a = p.s[j]\
    \ - a; }\n    }\n    if(a >= n){ a = n - a; }\n    wnd += a;\n  }\n  return wnd;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvd061yms.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpvd061yms.js:3:15)\n    at test (/tmp/tmpvd061yms.js:26:20)\n\
    \    at Object.<anonymous> (/tmp/tmpvd061yms.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvb54yn3p.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpvb54yn3p.js:3:13)\n\
    \    at test (/tmp/tmpvb54yn3p.js:17:20)\n    at Object.<anonymous> (/tmp/tmpvb54yn3p.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3dk2hgye.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp3dk2hgye.js:3:13)\n\
    \    at test (/tmp/tmp3dk2hgye.js:17:20)\n    at Object.<anonymous> (/tmp/tmp3dk2hgye.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpqyou0rid.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqyou0rid.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k+n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpmfqftxkt.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmfqftxkt.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%p;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpcc_68dy4.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcc_68dy4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*p[i] + r2) > 0) r = k % p;\n    else if(r) r = 0; else\
    \ return 0;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8tapxujh.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp8tapxujh.js:3:13)\n\
    \    at test (/tmp/tmp8tapxujh.js:16:20)\n    at Object.<anonymous> (/tmp/tmp8tapxujh.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[i]>>(32-i))) & 0x4000){\n      r = (r&0x3FF)^k\
    \ & 0x00FF;\n      r2 = (r2&0x3FF)^k >>> 8;\n    }else{\n      break; // got a\
    \ carry => abort\n    }\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn4tcy68j.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpn4tcy68j.js:3:13)\n\
    \    at test (/tmp/tmpn4tcy68j.js:20:20)\n    at Object.<anonymous> (/tmp/tmpn4tcy68j.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = p[0]<<(i-32))>r) r = (k-r)%r;\n    if((k = p[1]<<(i-32))>r2)\
    \ r2 = (k-r2)%r2;\n  }\n  return [r, r2];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8in9kmuw.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp8in9kmuw.js:3:13)\n\
    \    at test (/tmp/tmp8in9kmuw.js:16:20)\n    at Object.<anonymous> (/tmp/tmp8in9kmuw.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.bitLength();\n  var r = n<0 ? 0 : n%p;\n  if(k <= p) return r;\n\
    \  return r+(p-r)%p;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpg2npvr8f.js:3\n  var k = n.bitLength();\n            ^\n\nTypeError:\
    \ n.bitLength is not a function\n    at modp (/tmp/tmpg2npvr8f.js:3:13)\n    at\
    \ test (/tmp/tmpg2npvr8f.js:14:20)\n    at Object.<anonymous> (/tmp/tmpg2npvr8f.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpalbb97zr.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpalbb97zr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%(k+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpgir44joe.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgir44joe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpokcn8_hd.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpokcn8_hd.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpxw_pl39l.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxw_pl39l.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.bitLength();\n  if (k <= p)\n    return n;\n  else\n    return p.pow(k).mod(n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6k6rzb1k.js:3\n  var k = n.bitLength();\n            ^\n\nTypeError:\
    \ n.bitLength is not a function\n    at modp (/tmp/tmp6k6rzb1k.js:3:13)\n    at\
    \ test (/tmp/tmp6k6rzb1k.js:15:20)\n    at Object.<anonymous> (/tmp/tmp6k6rzb1k.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? p.c.slice(0, k.length)\
    \ : n.s;\n  var zs = multLeft(k, p.z);\n  var zh = multLeft(k, p.zh, p.zs);\n\
    \  return new Ctor(p.c[0].concat(zr).concat(p.c[1]).concat(zr).concat(p.c[2]).concat(zr).concat(p.c[3]).concat(zr).concat(p.c[4]).concat(zr).concat(p.c[5]).concat(zr).concat(p.c[6]).concat(zr).concat(p.c[7]).concat(zr).concat(p.c[8]).concat(zr).concat(p.c[9]).concat(zr).concat(p.c[10]).concat(zr).concat(p.c[11]).concat(zr).concat(p.c[12]).concat(zr).concat(p.c[13]).concat(zr).concat(p.c[14]).concat(zr).concat(p.c[15]).concat(zr).concat(p.z).concat(p.zh).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(p.zs).concat(p.zz).concat(p.zw).concat(p.zd).concat(p.zc).concat(\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkgbivlim.js:8\nconst assert = require('node:assert');\n^^^^^\n\n\
    SyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpa89tv0ub.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa89tv0ub.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = nbv(1), z;\n  for(; i--;){\n    k = p.shiftRight(i);\n\
    \    if((k & 1) != 0) z = !z;\n    if(z) r = r.multiply(get2(n));\n  }\n  return\
    \ r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjqmd0pcg.js:3\n  var i = p.bitLength(), k, r = nbv(1), z;\n   \
    \         ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpjqmd0pcg.js:3:13)\n\
    \    at test (/tmp/tmpjqmd0pcg.js:17:20)\n    at Object.<anonymous> (/tmp/tmpjqmd0pcg.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = 0;\n  for(var i = p.s.length -\
    \ 1; i >= 0; --i){\n    var a = p.s[i] - k;\n    if(a){\n      for(var j = 1;\
    \ (j < zeros) && wnd != 0; ++j){\n        wnd = wnd * 256 + (p.s[i+j] & 0xFF);\n\
    \      }\n      a %= wnd;\n      if(a < 0){\n        a = wnd + a;\n      }\n \
    \   }\n    r = r*256 + r_in_place[(a & 0xFF) >> 0];\n  }\n  return r;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpiaf_itpx.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpiaf_itpx.js:3:15)\n    at test (/tmp/tmpiaf_itpx.js:28:20)\n\
    \    at Object.<anonymous> (/tmp/tmpiaf_itpx.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpc9vjtihe.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc9vjtihe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%(k+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmphoipntt9.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphoipntt9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[0]&((r<<3)|p[1])))>255){\n      r = k;\n  \
    \  }else{\n      r2 = (r&((1<<i)|p[1]))<<1;\n      r += ((i&1)?1:0)<<(k>>6);\n\
    \      r += ((k&63)>31?1:0)<<(k&63);\n      r = r>>>1;\n    }\n  }\n  return r;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3954ua1e.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp3954ua1e.js:3:13)\n\
    \    at test (/tmp/tmp3954ua1e.js:22:20)\n    at Object.<anonymous> (/tmp/tmp3954ua1e.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = (k.length < p.c.length);\n  while (k.cmpn(0) !== 0){\n    zeros = false;\n\
    \    k.ishrn(1);\n  }\n  return zeros ? null : new BigInteger(\"1\", 10);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfy09e1lx.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpfy09e1lx.js:3:15)\n    at test (/tmp/tmpfy09e1lx.js:18:20)\n\
    \    at Object.<anonymous> (/tmp/tmpfy09e1lx.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n  for(;\
    \ i; i--){\n    if(p.testBit(i-1)){\n      dMultiply(d);\n      dAddOffset(k,i);\n\
    \      k += r;\n    }\n    r = r*d+p[i];\n  }\n  if(k>0) dMultiply(BigInteger.ONE);\n\
    \  return new BigInteger([k,r]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpulgje0q3.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpulgje0q3.js:3:13)\n\
    \    at test (/tmp/tmpulgje0q3.js:21:20)\n    at Object.<anonymous> (/tmp/tmpulgje0q3.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp9qt41wyz.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9qt41wyz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n  for(;\
    \ i; i--){\n    if(p.testBit(i-1)){\n      dMultiply(d);\n      dAddOffset(BigInteger.ONE,\
    \ i);\n    }\n  }\n  if(d.compareTo(n) >= 0){\n    dMultiply(d);\n    dAddOffset(BigInteger.ONE,\
    \ i);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprd_bn1kl.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmprd_bn1kl.js:3:13)\n\
    \    at test (/tmp/tmprd_bn1kl.js:22:20)\n    at Object.<anonymous> (/tmp/tmprd_bn1kl.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[i]>>(32-i)))>n)\n      return n;\n    r = (r*256\
    \ + p[i])%n;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjdwnn1gw.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpjdwnn1gw.js:3:13)\n\
    \    at test (/tmp/tmpjdwnn1gw.js:17:20)\n    at Object.<anonymous> (/tmp/tmpjdwnn1gw.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpp97jwnpc.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp97jwnpc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.absSub(r);\n  if(d<0){ while(i--){\n\
    \      k = (n-r)%p[i];\n      if(k<0){\n        k += p[i];\n      }\n      r -=\
    \ k;\n    }\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfoopx725.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.absSub(r);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpfoopx725.js:3:13)\n\
    \    at test (/tmp/tmpfoopx725.js:20:20)\n    at Object.<anonymous> (/tmp/tmpfoopx725.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k+n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp1pcod8lp.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1pcod8lp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2&0xff)>255){\n      r = (k-256) & 0xFF;\n     \
    \ r2 = (r>>8)&0xff;\n    }else{\n      r2 = (r>>8)&0xff;\n    }\n  }\n  return\
    \ r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9oft7h9h.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmp9oft7h9h.js:3:13)\n\
    \    at test (/tmp/tmp9oft7h9h.js:20:20)\n    at Object.<anonymous> (/tmp/tmp9oft7h9h.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%(k+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpsi1ah61c.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsi1ah61c.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpbslp2kh8.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbslp2kh8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? p.c.slice(k, p.s.length).mod(p.c)\
    \ : new BigInteger();\n  if(n.s) r.s = n.s;\n  return r;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprdwxbtft.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmprdwxbtft.js:3:15)\n    at test (/tmp/tmprdwxbtft.js:14:20)\n\
    \    at Object.<anonymous> (/tmp/tmprdwxbtft.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = new Array(p.c.length);\n  for(var\
    \ i = 0; i < p.c.length; i++) wnd[i] = p.c[i] | 0;\n  while(r.cmpn(0) !== 0){\n\
    \    r.iadd(p);\n    r.ineg();\n  }\n  var res = r.imod(p);\n  if(res.cmpn(0)\
    \ !== 0){\n    if(zeros === 0) return res._forceRed(this);\n    else return res._forceRed(this);\n\
    \  }\n  if(p.sign)return d3_zero();\n  res = res._forceRed(this);\n  if(res.cmpn(0)\
    \ === 0)return res._forceRed(this);\n  return res;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbrfiut61.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpbrfiut61.js:3:15)\n    at test (/tmp/tmpbrfiut61.js:28:20)\n\
    \    at Object.<anonymous> (/tmp/tmpbrfiut61.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ r;\n    r = (r*r) % p;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjx8ua_7e.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpjx8ua_7e.js:3:13)\n\
    \    at test (/tmp/tmpjx8ua_7e.js:16:20)\n    at Object.<anonymous> (/tmp/tmpjx8ua_7e.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[0]&((r<<3)|p[1])))>255){\n      r = k;\n  \
    \  }else{\n      r += ((k&(((p[1]&31)<<5)|p[2]))>>>(32-i));\n      r2 = (p[1]&((31)<<5)|p[2])<<(32-i);\n\
    \    }\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n\
    \  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjzmtgwna.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpjzmtgwna.js:3:13)\n\
    \    at test (/tmp/tmpjzmtgwna.js:20:20)\n    at Object.<anonymous> (/tmp/tmpjzmtgwna.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpu55lq9ey.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu55lq9ey.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n  for(;\
    \ i; i--){\n    if(p.testBit(i-1)){\n      dMultiply(d);\n      dAddOffset(k,i);\n\
    \      k += r;\n    }\n    r = r*d+((n%r)>(p[i]&&n%p[i])?1:0);\n  }\n  return\
    \ r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz34ga6mu.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpz34ga6mu.js:3:13)\n\
    \    at test (/tmp/tmpz34ga6mu.js:20:20)\n    at Object.<anonymous> (/tmp/tmpz34ga6mu.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2&0xff)>255){\n      k = (k-256) & 0xFF;\n    }\n\
    \    r = (r << 8) | (k & 0xff);\n    r2 = (r2 << 8) | (k >>> 8);\n  }\n  return\
    \ r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpft9dj_m5.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpft9dj_m5.js:3:13)\n\
    \    at test (/tmp/tmpft9dj_m5.js:19:20)\n    at Object.<anonymous> (/tmp/tmpft9dj_m5.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpofdkdlkz.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpofdkdlkz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp_9sjo3dg.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_9sjo3dg.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpf8myk4qc.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf8myk4qc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/(p*Math.pow(2,k));\
    \ \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.55\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpifygva43.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpifygva43.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.55,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpcc4fa240.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcc4fa240.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp54wlk8cu.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp54wlk8cu.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp_5cr5apu.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_5cr5apu.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpwdvngat6.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpwdvngat6.js:3:13)\n\
    \    at test (/tmp/tmpwdvngat6.js:17:20)\n    at Object.<anonymous> (/tmp/tmpwdvngat6.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var r = new BigInteger();\n  for(var i =\
    \ 0; i < zeros; i++){\n    r = r.multiply(new BigInteger(p.c.slice(Math.max(zeros\
    \ - i, 0), p.c.length)));\n  }\n  if(n.s.equals(p.s)){\n    r = r.multiply(new\
    \ BigInteger([(k[0] & 0x01) == 1 ? 1 : 0]));\n  }\n  else{\n    r = r.multiply(new\
    \ BigInteger([(k[0] & 0x01)  == 1 ? 1 : 0]));\n    r = r.multiply(new BigInteger([(k[1]\
    \ & 0x01) == 1 ? 1 : 0]));\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp72bcdbg1.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmp72bcdbg1.js:3:15)\n    at test (/tmp/tmp72bcdbg1.js:25:20)\n\
    \    at Object.<anonymous> (/tmp/tmp72bcdbg1.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+2*k-1) % p)|0;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpuwnsctqx.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuwnsctqx.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[0]&((r^r2)<<i))) > n) r2 = (r&((~r)<<32))|((~r2)<<32),\
    \ r = 0; else r = k + nMod32[i];\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdeelzr9o.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpdeelzr9o.js:3:13)\n\
    \    at test (/tmp/tmpdeelzr9o.js:15:20)\n    at Object.<anonymous> (/tmp/tmpdeelzr9o.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpkdglo_4z.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkdglo_4z.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpj473oarr.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj473oarr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = nbv(1), z;\n  for(; i--;){\n    k = p.shiftRight(i);\n\
    \    if((k & 1) != 0) z = !z;\n    if(z) r = r.multiply(get2(n));\n  }\n  return\
    \ r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpsjhlnfgc.js:3\n  var i = p.bitLength(), k, r = nbv(1), z;\n   \
    \         ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpsjhlnfgc.js:3:13)\n\
    \    at test (/tmp/tmpsjhlnfgc.js:17:20)\n    at Object.<anonymous> (/tmp/tmpsjhlnfgc.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp8dfhvcck.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8dfhvcck.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp6yykadrk.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6yykadrk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+2*k-1) % p)|0;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpmkz8j0my.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmkz8j0my.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+1)/p;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4.2\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp32fwyjyx.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp32fwyjyx.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4.2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%(k+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp7m8n_agi.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7m8n_agi.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k+n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp5vf467am.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5vf467am.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k+n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpf3vsqboo.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf3vsqboo.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpquuno_fx.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpquuno_fx.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpcmzpqvnb.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcmzpqvnb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k+n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpji197dal.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpji197dal.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp70z7ixm5.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp70z7ixm5.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = new Array(p.c.length);\n  for(var\
    \ i = 0; i < p.c.length; i++){\n    var a = r[i] % p.c[i];\n    var wndIndex =\
    \ i + a.length - 1;\n    if(wndIndex >= 0){\n      if(zeros[wndIndex])\n     \
    \   wnd[wndIndex] = 0;\n      else\n        wnd[wndIndex] = a.length + wnd[wndIndex\
    \ - a.length];\n    }\n    else\n      wnd[wndIndex] = a.length;\n  }\n  return\
    \ new Array(p.s.length + 1).join(\"0\") + wnd.join(p.s);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpl7i469d9.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpl7i469d9.js:3:15)\n    at test (/tmp/tmpl7i469d9.js:27:20)\n\
    \    at Object.<anonymous> (/tmp/tmpl7i469d9.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpybdcb2po.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpybdcb2po.js:3:13)\n\
    \    at test (/tmp/tmpybdcb2po.js:17:20)\n    at Object.<anonymous> (/tmp/tmpybdcb2po.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpk2af3rhy.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk2af3rhy.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n  for(;\
    \ i; i--){\n    if(p.testBit(i-1)){\n      dMultiply(d);\n      dAddOffset(k,i);\n\
    \      k += r;\n    }\n    r = r*d+((n%r)>p?1:0);\n  }\n  return r;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpp97ncw8l.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpp97ncw8l.js:3:13)\n\
    \    at test (/tmp/tmpp97ncw8l.js:20:20)\n    at Object.<anonymous> (/tmp/tmpp97ncw8l.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+2*k-1) % p)|0;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpfv9rnuh7.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfv9rnuh7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n /= p;\n  }\n  return r;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvicok1_0.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpvicok1_0.js:3:13)\n\
    \    at test (/tmp/tmpvicok1_0.js:17:20)\n    at Object.<anonymous> (/tmp/tmpvicok1_0.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpn284htzw.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn284htzw.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+k)%p)|0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp7i2hj2g5.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7i2hj2g5.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)**k) % (p*k+n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpj0r_aiu4.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj0r_aiu4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp2it3ago0.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2it3ago0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%(k+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpkv6acbao.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkv6acbao.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n  for(;\
    \ i; i--){\n    if(p.testBit(i)){\n      dr = d.modPowInt(BigInteger.valueOf(k),\
    \ p);\n      d0 = d0.multiply(dr);\n      if(d0.compareTo(n) >= 0) return BigInteger.ONE;\n\
    \      d0 = d0.mod(p);\n    }\n    k = Math.floor(k / 2);\n  }\n  return d0;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzofnmlgb.js:3\n  var i = p.bitLength(), k, r = n%p[0], d = p.subtract(BigInteger.ONE);\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpzofnmlgb.js:3:13)\n\
    \    at test (/tmp/tmpzofnmlgb.js:21:20)\n    at Object.<anonymous> (/tmp/tmpzofnmlgb.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp_sgh_oel.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_sgh_oel.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? n.c : p.c;\n  var\
    \ zeros = n.c.length - p.c.length;\n  var wnd = 0;\n  for(var i = p.s.length -\
    \ 1; i >= 0; --i){\n    var a = p.s[i] - k;\n    if(a){\n      if(++wnd == 4){\n\
    \        r[i + 3] = r[i + 4] % p.s[i + 1];\n        wnd = 1;\n      }\n      r[i]\
    \ = r[i] % p.s[i];\n    }\n    else{\n      r[i - zeros + 3] = r[i - zeros + 4]\
    \ % p.s[i + 1];\n      wnd = 1;\n    }\n  }\n  return r;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdema4bpl.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpdema4bpl.js:3:15)\n    at test (/tmp/tmpdema4bpl.js:29:20)\n\
    \    at Object.<anonymous> (/tmp/tmpdema4bpl.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpim7uqan1.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpim7uqan1.js:3:13)\n\
    \    at test (/tmp/tmpim7uqan1.js:17:20)\n    at Object.<anonymous> (/tmp/tmpim7uqan1.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = n.c.slice(0, p.c.length);\n  var r = n.s < p.s ? p.c.slice(k, p.s.length).mod(p.c)\
    \ : new BigInteger();\n  return p.subtract(new BigInteger(k, r));\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = modp;\n\
    \  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n\
    \  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n\
    \  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpd2z7r7rx.js:3\n  var k = n.c.slice(0, p.c.length);\n          \
    \    ^\n\nTypeError: Cannot read properties of undefined (reading 'slice')\n \
    \   at modp (/tmp/tmpd2z7r7rx.js:3:15)\n    at test (/tmp/tmpd2z7r7rx.js:13:20)\n\
    \    at Object.<anonymous> (/tmp/tmpd2z7r7rx.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(2,\
    \ k);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpfmtty3uc.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfmtty3uc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = r*256 + r2^(p[i]>>(32-i))) & 0x4000){\n      r = (r&0x3FF)^k\
    \ & 0x00FF;\n      r2 = (r2&0x3FF)^k >>> 8;\n    }else{\n      break; // got a\
    \ carry => abort\n    }\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpsqm12onq.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpsqm12onq.js:3:13)\n\
    \    at test (/tmp/tmpsqm12onq.js:20:20)\n    at Object.<anonymous> (/tmp/tmpsqm12onq.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+p)*k+p) % p;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp2nm996o9.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2nm996o9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p;\n  for(; i; k-=p){\n    if(k <= 0) return\
    \ 0;\n    r = r*p + (n%p)*k;\n    n = Math.floor(n/p);\n  }\n  return r;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptm0z6qch.js:3\n  var i = p.bitLength(), k, r = n%p;\n         \
    \   ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmptm0z6qch.js:3:13)\n\
    \    at test (/tmp/tmptm0z6qch.js:17:20)\n    at Object.<anonymous> (/tmp/tmptm0z6qch.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n  for(; i < 32;\
    \ ++i){\n    if((k = p[0]<<(i-32)) > 0) r = r || k;\n    if((k = p[1]<<(i-32))\
    \ > 0) r2 = r2 || k;\n  }\n  return [r, r2];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = modp;\n  assert.deepEqual(candidate(3,\
    \ 5),3);\n  assert.deepEqual(candidate(1101, 101),2);\n  assert.deepEqual(candidate(0,\
    \ 101),1);\n  assert.deepEqual(candidate(3, 11),8);\n  assert.deepEqual(candidate(100,\
    \ 101),1);\n  assert.deepEqual(candidate(30, 5),4);\n  assert.deepEqual(candidate(31,\
    \ 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpire68o3w.js:3\n  var i = p.bitLength(), k, r = n%p[0], r2 = p[0]>>(32-i)%32;\n\
    \            ^\n\nTypeError: p.bitLength is not a function\n    at modp (/tmp/tmpire68o3w.js:3:13)\n\
    \    at test (/tmp/tmpire68o3w.js:16:20)\n    at Object.<anonymous> (/tmp/tmpire68o3w.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%(k+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp6wzr_lnb.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6wzr_lnb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))%(k+1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp1d2limu0.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1d2limu0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n\
    \  var k = Math.ceil(Math.log(n)/Math.log(p));\n  return ((n*p+0.5))/Math.pow(p,k)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
    \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
    \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
    \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpvbiy__o1.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvbiy__o1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
